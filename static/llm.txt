Below is all the contents of our docs: 



 This is the content for the doc README.md 

 # JigsawStack Documentation

### Development

Install the [Mintlify CLI](https://www.npmjs.com/package/mintlify) to preview the documentation changes locally. To install, use the following command

```
npm i -g mintlify
```

Run the following command at the root of your documentation (where mint.json is)

```
mintlify dev
```

#### Troubleshooting

- Mintlify dev isn't running - Run `mintlify install` it'll re-install dependencies.
- Page loads as a 404 - Make sure you are running in a folder with `mint.json`

### Contribution

JigsawStack documentation is open-source and welcomes contributions. Please open an issue or submit a pull request with your changes. Make sure to be as descriptive as possible with your submissions.

## Community

Join JigsawStack community on [Discord](https://discord.gg/dj8fMBpnqd) to connect with other developers, share ideas, and get help with the SDK.


 This is the content for the doc docs/additional-resources/ai-dev-tools.mdx 

 ---
title: From Prompt to Production
---

### What is JigsawStack? üß©

**Purpose-built AI models for your tech stack.**

JigsawStack provides custom small models trained for specialized use cases. Whether you‚Äôre building with speech, text, vision, or workflow automation, JigsawStack gives you the APIs to move fast and stay in control.

## Build a JigsawStack-Powered App

This guide will walk you through integrating JigsawStack with your favorite AI tools.

### Initial requirements

- Setup a JigsawStack account 
- Create your [JigsawStack API key](https://jigsawstack.com/dashboard/)

### Supported Tools Overview

- **v0.dev** ‚Äì UI prototyping with ShadCN-style components and Figma integration
- **Lovable.dev** ‚Äì AI-assisted full-stack app builder with database and email support
- **Bolt.new** ‚Äì Transforms Figma designs into working frontends rapidly
- **Windsurf** ‚Äì AI-enhanced IDE for intuitive dev workflows
- **Cursor** ‚Äì VS Code-based AI code editor with advanced multi-file editing

## Using the OpenAPI 3.0 Spec for Development

To improve accuracy and reduce hallucinations when generating code or API integrations in tools like Lovable.dev, v0.dev, Bolt.new, Cursor, or Windsurf, upload or reference the [JigsawStack OpenAPI 3.0 spec](https://github.com/JigsawStack/OpenAPI-spec/blob/main/jigsawstack-openai-spec.json) directly in your editor. 

This provides the AI with a structured source of truth for endpoints, parameters, and request/response formats. Enabling smarter autocompletions, fewer integration errors, and more predictable results.

This allows the AI assistant to:
- Autocomplete accurate endpoint paths and request formats
- Avoid guessing parameter names or response structures
- Align with required field validation and security headers

> Tip: Many AI IDEs support uploading OpenAPI files or linking to hosted API specs. Use this to enhance autocomplete and schema-aware generation.

## Step-by-Step Integration Guide

### 1. Define Your Application
Before starting, define the core features:
- Do you need transcription, translation, OCR, or sentiment analysis?
- Will you generate UIs or workflows from text?
- Do you need user uploads or file storage?

### 2. Choose Your Low-Code Tool
| Tool        | Best For                 |
|-------------|---------------------------|
| v0.dev      | UI-first apps & prototypes |
| Lovable.dev | Full-stack web apps       |
| Bolt.new    | Quick frontend dev        |
| Windsurf    | Beginner-friendly code    |
| Cursor      | Power-user code editing   |

### 3. Set Up Your Backend
Make API requests to `https://api.jigsawstack.com/v1` with your `x-api-key` header.

Here's an example for **vOCR**:

```javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.vision.vocr({
  "prompt": [
        "total_price",
        "tax"
  ],
  "url": "https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg"
})
```

### 4. Build the Frontend
Use your chosen low-code tool to:
- Design UI components 
- Configure user flows and backend calls 
- Code advanced logic or custom workflows 

### 5. Connect to JigsawStack
- Use HTTP `POST` calls with your API key
- You can also wrap calls in custom SDK logic if your low-code tool supports serverless functions or API integrations

### 6. Test and Deploy
- Test endpoints using mock data or production URLs
- Deploy to platforms like Vercel, Netlify, Railway, or Render
- Tools like Luvable, Bolt and v0 have streamlined the deployment process

## Tool Comparison

| Tool        | Strengths                                | Limitations                        |
|-------------|--------------------------------------------|-------------------------------------|
| v0.dev      | Beautiful UI generation, fast prototyping | Only supports React                |
| Lovable.dev | End-to-end stack, intuitive AI builder    | Less control for custom logic      |
| Bolt.new    | Fastest Figma-to-code translation         | Struggles with complex projects    |
| Windsurf    | Beginner-friendly coding with AI          | Less powerful than full IDEs       |
| Cursor      | Multi-file, AI-rich context               | Higher barrier for new developers  |



Ready to build? Pick your tool, plug into JigsawStack, and go from prototype to product fast.


 This is the content for the doc docs/additional-resources/jigsawstack-badge.mdx 

 ---
title: "JigsawStack Badge"
description: ""
---

In return for the free plan, all we ask is that you put our `Powered by JigsawStack` badge in the footer of your website.

<Frame>
  <img
    src="https://jigsawstack.com/badge.svg"
    alt="Powered by JigsawStack. The One API for your next big thing."
  />
</Frame>

## Installation

To integrate it into your website, paste the below code snippet into the HTML of your footer.

```html
<a href="https://jigsawstack.com/?ref=powered-by" rel="follow">
  <img
    src="https://jigsawstack.com/badge.svg"
    alt="Powered by JigsawStack. The One API for your next big thing."
  />
</a>
```

<Info>
  You are free to pick a size that works with your design, however, the badge
  must not go below a minimum width of `150px`.
</Info>


 This is the content for the doc docs/additional-resources/languages.mdx 

 ---
title: "Supported Languages"
description: "Complete list of languages supported across JigsawStack APIs"
---

## Overview

Our APIs currently support **162 languages** from around the world, including right-to-left (RTL) languages. Each language is identified by a unique ISO 639-1 two-letter code.

## Using Language Codes in API Requests

When making requests to JigsawStack APIs that support language specification, use the two-letter language code in your request parameters:

```javascript Example
// Translating Engligh to Spanish
const result = await jigsawstack.translate({
  current_language: "en", // language code for English
  target_language: "es", //  language code for Spanish
  text: "Hello, world!",
});
```

## Language Table Reference

| code | name               | native                          | rtl |
| ---- | ------------------ | ------------------------------- | --- |
| af   | Afrikaans          | Afrikaans                       |     |
| am   | Amharic            | ·ä†·àõ·à≠·äõ                            |     |
| ar   | Arabic             | ÿßŸÑÿπÿ±ÿ®Ÿäÿ©                         | ‚úì   |
| as   | Assamese           | ‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ                         |     |
| az   | Azerbaijani        | Az…ôrbaycanca / ÿ¢ÿ∞ÿ±ÿ®ÿßŸäÿ¨ÿßŸÜ        |     |
| ba   | Bashkir            | –ë–∞—à“°–æ—Ä—Ç                         |     |
| be   | Belarusian         | –ë–µ–ª–∞—Ä—É—Å–∫–∞—è                      |     |
| bg   | Bulgarian          | –ë—ä–ª–≥–∞—Ä—Å–∫–∏                       |     |
| bn   | Bengali            | ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ                           |     |
| bo   | Tibetan            | ‡Ωñ‡Ωº‡Ωë‡ºã‡Ω°‡Ω≤‡ΩÇ / Bod skad              |     |
| br   | Breton             | Brezhoneg                       |     |
| bs   | Bosnian            | Bosanski                        |     |
| ca   | Catalan            | Catal√†                          |     |
| ch   | Chamorro           | Chamoru                         |     |
| co   | Corsican           | Corsu                           |     |
| cs   | Czech              | ƒåesky                           |     |
| cy   | Welsh              | Cymraeg                         |     |
| da   | Danish             | Dansk                           |     |
| de   | German             | Deutsch                         |     |
| dv   | Divehi             | ﬁãﬁ®ﬁàﬁ¨ﬁÄﬁ®ﬁÑﬁ¶ﬁêﬁ∞                      | ‚úì   |
| dz   | Dzongkha           | ‡Ωá‡Ωº‡ΩÑ‡ºã‡ΩÅ                           |     |
| el   | Greek              | ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨                        |     |
| en   | English            | English                         |     |
| eo   | Esperanto          | Esperanto                       |     |
| es   | Spanish            | Espa√±ol                         |     |
| et   | Estonian           | Eesti                           |     |
| eu   | Basque             | Euskara                         |     |
| fa   | Persian            | ŸÅÿßÿ±ÿ≥€å                           | ‚úì   |
| ff   | Peul               | Fulfulde                        |     |
| fi   | Finnish            | Suomi                           |     |
| fj   | Fijian             | Na Vosa Vakaviti                |     |
| fo   | Faroese            | F√∏royskt                        |     |
| fr   | French             | Fran√ßais                        |     |
| fy   | West Frisian       | Frysk                           |     |
| ga   | Irish              | Gaeilge                         |     |
| gd   | Scottish Gaelic    | G√†idhlig                        |     |
| gl   | Galician           | Galego                          |     |
| gn   | Guarani            | Ava√±e'·∫Ω                         |     |
| gu   | Gujarati           | ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä                         |     |
| gv   | Manx               | Gaelg                           |     |
| ha   | Hausa              | ŸáŸéŸàŸèÿ≥Ÿé                          | ‚úì   |
| he   | Hebrew             | ◊¢◊ë◊®◊ô◊™                           | ‚úì   |
| hi   | Hindi              | ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä                          |     |
| hr   | Croatian           | Hrvatski                        |     |
| ht   | Haitian            | Kr√®yol ayisyen                  |     |
| hu   | Hungarian          | Magyar                          |     |
| hy   | Armenian           | ’Ä’°’µ’•÷Ä’•’∂                         |     |
| id   | Indonesian         | Bahasa Indonesia                |     |
| ig   | Igbo               | Igbo                            |     |
| is   | Icelandic          | √çslenska                        |     |
| it   | Italian            | Italiano                        |     |
| iu   | Inuktitut          | ·êÉ·ìÑ·íÉ·ëé·ëê·ë¶                          |     |
| ja   | Japanese           | Êó•Êú¨Ë™û                          |     |
| jv   | Javanese           | Basa Jawa                       |     |
| ka   | Georgian           | ·É•·Éê·É†·Éó·É£·Éö·Éò                         |     |
| kg   | Kongo              | KiKongo                         |     |
| ki   | Kikuyu             | Gƒ©k≈©y≈©                          |     |
| kj   | Kuanyama           | Kuanyama                        |     |
| kk   | Kazakh             | “ö–∞–∑–∞“õ—à–∞                         |     |
| kl   | Greenlandic        | Kalaallisut                     |     |
| km   | Cambodian          | ·ûó·û∂·ûü·û∂·ûÅ·üí·ûò·üÇ·ûö                       |     |
| kn   | Kannada            | ‡≤ï‡≤®‡≥ç‡≤®‡≤°                           |     |
| ko   | Korean             | ÌïúÍµ≠Ïñ¥                          |     |
| kr   | Kanuri             | Kanuri                          |     |
| ks   | Kashmiri           | ‡§ï‡§∂‡•ç‡§Æ‡•Ä‡§∞‡•Ä / ŸÉÿ¥ŸÖŸäÿ±Ÿä                | ‚úì   |
| ku   | Kurdish            | Kurd√Æ / ŸÉŸàÿ±ÿØ€å                   | ‚úì   |
| kv   | Komi               | –ö–æ–º–∏                            |     |
| kw   | Cornish            | Kernewek                        |     |
| ky   | Kirghiz            | Kƒ±rgƒ±zca / –ö—ã—Ä–≥—ã–∑—á–∞             |     |
| la   | Latin              | Latina                          |     |
| lb   | Luxembourgish      | L√´tzebuergesch                  |     |
| lg   | Ganda              | Luganda                         |     |
| li   | Limburgian         | Limburgs                        |     |
| ln   | Lingala            | Ling√°la                         |     |
| lo   | Laotian            | ‡∫•‡∫≤‡∫ß / Pha xa lao                |     |
| lt   | Lithuanian         | Lietuvi≈≥                        |     |
| lu   | Luba-Katanga       | Tshiluba                        |     |
| lv   | Latvian            | Latvie≈°u                        |     |
| mg   | Malagasy           | Malagasy                        |     |
| mh   | Marshallese        | Kajin Majel / Ebon              |     |
| mi   | Maori              | MƒÅori                           |     |
| mk   | Macedonian         | –ú–∞–∫–µ–¥–æ–Ω—Å–∫–∏                      |     |
| ml   | Malayalam          | ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç                          |     |
| mn   | Mongolian          | –ú–æ–Ω–≥–æ–ª                          |     |
| mo   | Moldovan           | MoldoveneascƒÉ                   |     |
| mr   | Marathi            | ‡§Æ‡§∞‡§æ‡§†‡•Ä                           |     |
| ms   | Malay              | Bahasa Melayu                   |     |
| mt   | Maltese            | bil-Malti                       |     |
| my   | Burmese            | ·Äô·Äº·Äî·Ä∫·Äô·Ä¨·ÄÖ·Ä¨                        |     |
| na   | Nauruan            | Dorerin Naoero                  |     |
| nb   | Norwegian Bokm√•l   | Norsk bokm√•l                    |     |
| nd   | North Ndebele      | Sindebele                       |     |
| ne   | Nepali             | ‡§®‡•á‡§™‡§æ‡§≤‡•Ä                          |     |
| ng   | Ndonga             | Oshiwambo                       |     |
| nl   | Dutch              | Nederlands                      |     |
| nn   | Norwegian Nynorsk  | Norsk nynorsk                   |     |
| no   | Norwegian          | Norsk                           |     |
| nr   | South Ndebele      | isiNdebele                      |     |
| nv   | Navajo             | Din√© bizaad                     |     |
| ny   | Chichewa           | Chi-Chewa                       |     |
| oc   | Occitan            | Occitan                         |     |
| oj   | Ojibwa             | ·êä·ìÇ·îë·ìà·êØ·íß·êé·ìê / Anishinaabemowin     |     |
| om   | Oromo              | Oromoo                          |     |
| or   | Oriya              | ‡¨ì‡¨°‡¨º‡¨ø‡¨Ü                           |     |
| os   | Ossetian / Ossetic | –ò—Ä–æ–Ω–∞—É                          |     |
| pa   | Panjabi / Punjabi  | ‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä / ‡§™‡§Ç‡§ú‡§æ‡§¨‡•Ä / ŸæŸÜÿ¨ÿßÿ®Ÿä        |     |
| pi   | Pali               | PƒÅli / ‡§™‡§æ‡§¥‡§ø                     |     |
| pl   | Polish             | Polski                          |     |
| ps   | Pashto             | Ÿæ⁄öÿ™Ÿà                            | ‚úì   |
| pt   | Portuguese         | Portugu√™s                       |     |
| qu   | Quechua            | Runa Simi                       |     |
| rm   | Raeto Romance      | Rumantsch                       |     |
| rn   | Kirundi            | Kirundi                         |     |
| ro   | Romanian           | Rom√¢nƒÉ                          |     |
| ru   | Russian            | –†—É—Å—Å–∫–∏–π                         |     |
| rw   | Rwandi             | Kinyarwandi                     |     |
| sa   | Sanskrit           | ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§Æ‡•ç                       |     |
| sc   | Sardinian          | Sardu                           |     |
| sd   | Sindhi             | ‡§∏‡§ø‡§®‡§ß‡§ø                           |     |
| se   | Northern Sami      | S√°megiella                      |     |
| sg   | Sango              | S√§ng√∂                           |     |
| sh   | Serbo-Croatian     | Srpskohrvatski / –°—Ä–ø—Å–∫–æ—Ö—Ä–≤–∞—Ç—Å–∫–∏ |     |
| si   | Sinhalese          | ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω                           |     |
| sk   | Slovak             | Slovenƒçina                      |     |
| sl   | Slovenian          | Sloven≈°ƒçina                     |     |
| sm   | Samoan             | Gagana Samoa                    |     |
| sn   | Shona              | chiShona                        |     |
| so   | Somalia            | Soomaaliga                      |     |
| sq   | Albanian           | Shqip                           |     |
| sr   | Serbian            | –°—Ä–ø—Å–∫–∏                          |     |
| ss   | Swati              | SiSwati                         |     |
| st   | Southern Sotho     | Sesotho                         |     |
| su   | Sundanese          | Basa Sunda                      |     |
| sv   | Swedish            | Svenska                         |     |
| sw   | Swahili            | Kiswahili                       |     |
| ta   | Tamil              | ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç                           |     |
| te   | Telugu             | ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å                          |     |
| tg   | Tajik              | –¢–æ“∑–∏–∫”£                          |     |
| th   | Thai               | ‡πÑ‡∏ó‡∏¢ / Phasa Thai                |     |
| ti   | Tigrinya           | ·âµ·åç·à≠·äõ                            |     |
| tk   | Turkmen            | –¢—É—Ä–∫–º–µ–Ω / ÿ™ÿ±ŸÉŸÖŸÜ                 |     |
| tl   | Tagalog / Filipino | Tagalog                         |     |
| tn   | Tswana             | Setswana                        |     |
| to   | Tonga              | Lea Faka-Tonga                  |     |
| tr   | Turkish            | T√ºrk√ße                          |     |
| ts   | Tsonga             | Xitsonga                        |     |
| tt   | Tatar              | Tatar√ßa                         |     |
| tw   | Twi                | Twi                             |     |
| ty   | Tahitian           | Reo MƒÅ`ohi                      |     |
| ug   | Uyghur             | Uy∆£urq…ô / ÿ¶€áŸäÿ∫€áÿ±⁄Ü€ï              |     |
| uk   | Ukrainian          | –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞                      |     |
| ur   | Urdu               | ÿßÿ±ÿØŸà                            | ‚úì   |
| uz   | Uzbek              | –é–∑–±–µ–∫                           |     |
| ve   | Venda              | Tshiven·∏ìa                       |     |
| vi   | Vietnamese         | Ti·∫øng Vi·ªát                      |     |
| vo   | Volap√ºk            | Volap√ºk                         |     |
| wo   | Wolof              | Wollof                          |     |
| xh   | Xhosa              | isiXhosa                        |     |
| yi   | Yiddish            | ◊ô◊ô÷¥◊ì◊ô◊©                          | ‚úì   |
| yo   | Yoruba             | Yor√πb√°                          |     |
| zh   | Chinese            | ‰∏≠Êñá                            |     |
| zu   | Zulu               | isiZulu                         |     |


 This is the content for the doc docs/additional-resources/security.mdx 

 ---
title: "Security"
description: "An overview of JigsawStack security features and practices."
---

## Data protection

#### 1. Data at rest

All sensitive data are encrypted at rest. Sensitive collections and tables also use row-level encryption.

#### 2. Data in transit

JigsawStack uses TLS 1.3 or higher everywhere data is transmitted over potentially insecure networks.

#### 3. Data backup

JigsawStack backs-up all production data using a point-in-time approach. Backups are persisted for 30 days, and are globally replicated for resiliency against regional disasters.

## Prevent logging API requests

By default, our servers logged every request payload. Attach the header parameter `x-jigsaw-no-request-log` to control how requests payload are handled. If set to `true`, request payload will not be logged (stored).

### Javascript SDK

To disable request logging in the JavaScript SDK, you can pass the `disableRequestLogging` option during initialization:

```javascript setup.ts
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({
  apiKey: "your-api-key",
  disableRequestLogging: true, // disable request logging
});
```

### Python SDK

In the Python SDK, you can similarly disable request logging by passing the `disable_request_logging` argument when creating a JigsawStack instance:

```python setup.py

from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key", disable_request_logging=True)
```

### API

When using the raw API, include the `x-jigsaw-no-request-log` header in your request to control logging behavior

```javascript
const headers = {
  "x-api-key": "<your-api-key-here>",
  "x-jigsaw-no-request-log": "true",
};

const baseUrl = "https://api.jigsawstack.com";

const result = await fetch(`${baseUrl}/v1/ai/summary`, {
  method: "POST",
  body: {
    text: "The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral",
  },
  headers,
});
```


 This is the content for the doc docs/additional-resources/selector.mdx 

 ---
title: "CSS Selectors"
description: "Example guide to CSS selectors for Web scraping"
---

## What are CSS Selectors

CSS selectors are used to define a pattern of the elements that you want to select for applying a set of CSS rules on the selected elements.

> See usage in [Scrape API](http://jigsawstack.com/docs/api-reference/web/scrape)

| Selector                           | Example                    | Use Case Scenario                                                                                                                                                                                                                                                                          |
| ---------------------------------- | -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| \*                                 | `*`                        | This selector picks all elements within a page.                                                                                                                                                                                                                                            |
| .class                             | `.card-title`              | The simplest CSS selector is targeting the class attribute. If only your target element is using it, then it might be sufficient.                                                                                                                                                          |
| .class1.class2                     | `.card-heading.card-title` | There are elements with a class like class=‚Äúcard-heading card-title‚Äù. When we see a space, it is because the element is using several classes. However, there‚Äôs no one fixed way of selecting the element. Try keeping the space, if that doesn‚Äôt work, then replace the space with a dot. |
| #id                                | `#card-description`        | What if the class is used in too many elements or if the element doesn‚Äôt have a class? Picking the ID can be the next best thing. The only problem is that IDs are unique per element. So won‚Äôt cut to scrape several elements at once.                                                    |
| element                            | `h4`                       | To pick an element, all we need to add to our parser is the HTML tag name.                                                                                                                                                                                                                 |
| element.class                      | `h4.card-title`            | This is the most common.                                                                                                                                                                                                                                                                   |
| parentElement > childElement       | `div > h4`                 | We can tell our scraper to extract an element inside another. In this example, we want it to find the h4 element whose parent element is a div.                                                                                                                                            |
| parentElement.class > childElement | `div.card-body > h4`       | We can combine the previous logic to specify a parent element and extract a specific CSS child element. This is super useful when the data we want doesn‚Äôt have any class or ID but is inside a parent element with a unique class/ID.                                                     |
| [attribute]                        | `[href]`                   | Another great way to target an element with no clear class to choose from. Your scraper will extract all elements containing the specific attribute.                                                                                                                                       |
| [attribute=value]                  | `[target=_blank]`          | We can tell our scraper to extract only the elements with a specific value inside its attribute.                                                                                                                                                                                           |
| [attribute~=value]                 | `[title~=rating]`          | This selector will pick all the elements containing the word ‚Äòrating‚Äô inside its title attribute.                                                                                                                                                                                          |
| element,element                    | `div, p`                   | Selects all `<div>` elements and all `<p>` elements.                                                                                                                                                                                                                                       |
| element+element                    | `div + p`                  | Selects the first `<p>` element that is placed immediately after `<div>` elements.                                                                                                                                                                                                         |
| [attribute^=value]                 | `a[href^="https"]`         | Selects every `<a>` element whose href attribute value begins with "https"                                                                                                                                                                                                                 |
| [attribute*=value]                 | `a[href*="jigsawstack"]`   | Selects every `<a>` element whose href attribute value contains the substring "jigsawstack"                                                                                                                                                                                                |
| :active                            | `a:active`                 | Selects the active link                                                                                                                                                                                                                                                                    |
| :link                              | `a:link`                   | Selects all unvisited links                                                                                                                                                                                                                                                                |

<Info>
  For more resources on CSS selectors, visit
  [W3schools](https://www.w3schools.com/cssref/css_selectors.php#gsc.tab=0) and
  [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_selectors/Selectors_and_combinators)
</Info>

<Info>
  For resources on using CSS selectors for Scraping, visit
  [Scrapingbee](https://www.scrapingbee.com/blog/using-css-selectors-for-web-scraping/#what-is-a-css-selector)
</Info>


 This is the content for the doc docs/additional-resources/size-preset.mdx 

 ---
title: "Screen Size Preset"
description: "The supported screen size presets on JigsawStack APIs."
---

```json
[
  {
    name: "QVGA",
    width: 320,
    height: 240,
  },
  {
    name: "VGA",
    width: 640,
    height: 480,
  },
  {
    name: "SVGA",
    width: 800,
    height: 600,
  },
  {
    name: "HD",
    width: 1280,
    height: 720,
  },
  {
    name: "SXGA",
    width: 1280,
    height: 1024,
  },
  {
    name: "HD+",
    width: 1600,
    height: 900,
  },
  {
    name: "FHD",
    width: 1920,
    height: 1080,
  },
  {
    name: "2K",
    width: 2048,
    height: 1080,
  },
  {
    name: "2K QHD",
    width: 2560,
    height: 1440,
  },
  {
    name: "5K",
    width: 5120,
    height: 2880,
  },
  {
    name: "4K UHD",
    width: 3840,
    height: 2160,
  },
  {
    name: "8K UHD",
    width: 7680,
    height: 4320,
  },
  {
    name: "iPhone 13 Pro",
    width: 1170,
    height: 2532,
  },
  {
    name: "iPhone XR",
    width: 828,
    height: 1792,
  },
  {
    name: "iPhone XS",
    width: 1125,
    height: 2436,
  },
  {
    name: "iPhone XS Max",
    width: 1242,
    height: 2688,
  },
  {
    name: "iPhone X",
    width: 1125,
    height: 2436,
  },
  {
    name: "iPhone 8 Plus",
    width: 1080,
    height: 1920,
  },
  {
    name: "iPhone 8",
    width: 750,
    height: 1334,
  },
  {
    name: "iPhone 7 Plus",
    width: 1080,
    height: 1920,
  },
  {
    name: "iPhone 7",
    width: 750,
    height: 1334,
  },
  {
    name: "iPhone 6 Plus/6S Plus",
    width: 1080,
    height: 1920,
  },
  {
    name: "iPhone 6/6S",
    width: 750,
    height: 1334,
  },
  {
    name: "iPhone 5",
    width: 640,
    height: 1136,
  },
  {
    name: "iPod Touch",
    width: 640,
    height: 1136,
  },
  {
    name: "iPad Pro",
    width: 2048,
    height: 2732,
  },
  {
    name: "iPad Third & Fourth Generation",
    width: 1536,
    height: 2048,
  },
  {
    name: "iPad Air 1 & 2",
    width: 1536,
    height: 2048,
  },
  {
    name: "iPad Mini 2 & 3",
    width: 1536,
    height: 2048,
  },
  {
    name: "iPad Mini",
    width: 768,
    height: 1024,
  },
  {
    name: "Nexus 6P",
    width: 1440,
    height: 2560,
  },
  {
    name: "Nexus 5X",
    width: 1080,
    height: 1920,
  },
  {
    name: "Google Pixel 7 Pro",
    width: 1440,
    height: 3120,
  },
  {
    name: "Google Pixel 4 XL",
    width: 1440,
    height: 869,
  },
  {
    name: "Google Pixel 4",
    width: 1080,
    height: 2280,
  },
  {
    name: "Google Pixel 3a XL",
    width: 1080,
    height: 2160,
  },
  {
    name: "Google Pixel 3a",
    width: 1080,
    height: 2220,
  },
  {
    name: "Google Pixel 3 XL",
    width: 1440,
    height: 2960,
  },
  {
    name: "Google Pixel 3",
    width: 1080,
    height: 2160,
  },
  {
    name: "Google Pixel 2 XL",
    width: 1440,
    height: 2560,
  },
  {
    name: "Google Pixel XL",
    width: 1440,
    height: 2560,
  },
  {
    name: "Google Pixel",
    width: 1080,
    height: 1920,
  },
  {
    name: "Samsung Galaxy Note 10+",
    width: 1440,
    height: 3040,
  },
  {
    name: "Samsung Galaxy Note 10",
    width: 1080,
    height: 2280,
  },
  {
    name: "Samsung Galaxy Note 9",
    width: 1440,
    height: 2960,
  },
  {
    name: "Samsung Galaxy Note 5",
    width: 1440,
    height: 2560,
  },
  {
    name: "LG G5",
    width: 1440,
    height: 2560,
  },
  {
    name: "One Plus 3",
    width: 1080,
    height: 1920,
  },
  {
    name: "Samsung Galaxy S9+",
    width: 1440,
    height: 2960,
  },
  {
    name: "Samsung Galaxy S9",
    width: 1440,
    height: 2960,
  },
  {
    name: "Samsung Galaxy S8+",
    width: 1440,
    height: 2960,
  },
  {
    name: "Samsung Galaxy S8",
    width: 1440,
    height: 2960,
  },
  {
    name: "Samsung Galaxy S7 Edge",
    width: 1440,
    height: 2560,
  },
  {
    name: "Samsung Galaxy S7",
    width: 1440,
    height: 2560,
  },
  {
    name: "Nexus 9",
    width: 1536,
    height: 2048,
  },
  {
    name: "Nexus 7 (2013)",
    width: 1200,
    height: 1920,
  },
  {
    name: "Pixel C",
    width: 1800,
    height: 2560,
  },
  {
    name: "Samsung Galaxy Tab 10",
    width: 800,
    height: 1280,
  },
  {
    name: "Chromebook Pixel",
    width: 2560,
    height: 1700,
  },
];
```


 This is the content for the doc docs/additional-resources/speaker-voices.mdx 

 ---
title: "Speaker Voice Accents"
description: "The supported speaker voice accents for the Text to Speech API."
---

<Info>
  See [Speaker Voice
  Accents](https://gist.github.com/iamNarcisse/f2a8c9a42b8334566f85a3ab3344c5a1)
  for the complete list of supported speaker voice accents.
</Info>


 This is the content for the doc docs/api-reference/ai/embedding.mdx 

 ---
title: "Embedding"
api: "POST https://api.jigsawstack.com/v1/embedding"
description: "Generate vector embeddings from various content types including text, images, audio, and PDF files."
playground: 'hidden'
---
import EmbeddingSnippet from "/snippets/code-req-examples/embedding.mdx";


## Request Parameters

### Body

<ParamField body="text" type="string">
  The text content to generate embeddings for. Optional if providing content through another method.
</ParamField>

<ParamField body="url" type="string">
  A URL pointing to the resource to generate embeddings for. Optional if providing content through another method.
</ParamField>

<ParamField body="file_store_key" type="string">
  A key referencing a previously uploaded file in storage. Optional if providing content through another method.
</ParamField>

<ParamField body="file_content" type="any">
  The direct content of a file to generate embeddings for. Optional if providing content through another method.
</ParamField>

<ParamField body="type" type="string" required>
  The type of content being processed. Must be one of the following values:
  - `text`: Plain text input
  - `text-other`: Other text format
  - `image`: Image content
  - `audio`: Audio content
  - `pdf`: PDF document
</ParamField>

<ParamField body="token_overflow_mode" type="string" default="error">
  Determines behavior when input exceeds token limits:
  - `error`: Return an error (default)
  - `truncate`: Truncate the input to fit within token limits
</ParamField>

<Snippet file="header.mdx" />

## Response Structure

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="embedding" type="number[]">
  The vector embedding representation of the input content. This is an array of floating-point numbers.
</ResponseField>

<EmbeddingSnippet />

 This is the content for the doc docs/api-reference/ai/image-generation.mdx 

 ---
title: "Image Generation"
api: "POST https://api.jigsawstack.com/v1/ai/image_generation"
description: "Generate an image based on the given text by employing AI models like Flux, Stable Diffusion, and other top models."
---

import ImageGenerationSnippet from "/snippets/code-req-examples/image-generation.mdx";

## Request Parameters

### Body

<ParamField body="prompt" type="string" required>
  The text prompt to generate the image from. Must be between 1-5000 characters.
</ParamField>

<ParamField body="aspect_ratio" type="string" default="1:1">
  The aspect ratio of the generated image.
  <ul>
    <li>`1:1`</li>
    <li>`16:9`</li>
    <li>`21:9`</li>
    <li>`3:2`</li>
    <li>`2:3`</li>
    <li>`4:5`</li>
    <li>`5:4`</li>
    <li>`3:4`</li>
    <li>`4:3`</li>
    <li>`9:16`</li>
    <li>`9:21`</li>
  </ul>
</ParamField>

<ParamField body="width" type="number">
  The width of the image. Must be between 256-1920 pixels.
</ParamField>

<ParamField body="height" type="number">
  The height of the image. Must be between 256-1920 pixels.
</ParamField>

<ParamField body="steps" type="number" default="4">
  The number of denoising steps. Must be between 1-90. Higher values produce better quality images but take more time to generate.
</ParamField>

<ParamField body="output_format" type="string" default="png">
  The output format of the generated image. Must be one of the following values:
  - `png`
  - `svg`
</ParamField>

<ParamField body="url" type="string">
  A valid URL where the generated image will be sent.
</ParamField>

<ParamField body="file_store_key" type="string">
  Key to store the generated image in file storage.
</ParamField>

<ParamField body="advance_config" type="object">
  <Expandable title="advance_config" defaultOpen="false">
    <ParamField body="negative_prompt" type="string">
      Text describing what you don't want in the image.
    </ParamField>
    <ParamField body="guidance" type="number">
      Higher guidance forces the model to better follow the prompt, but may result in lower quality output. Must be between 1-28.
    </ParamField>
    <ParamField body="seed" type="number">
      Makes generation deterministic. Using the same seed and set of parameters will produce identical image each time.
    </ParamField>
  </Expandable>
</ParamField>

<Snippet file="header.mdx" />

## Response

The API returns the generated image directly in the response body as binary data.

<ImageGenerationSnippet />

 This is the content for the doc docs/api-reference/ai/object-detection.mdx 

 ---
title: "Object Detection"
api: "POST https://api.jigsawstack.com/v1/ai/object_detection"
description: "Recognise objects within an image with great accuracy."
---

import ObjectDetectionSnippet from "/snippets/code-req-examples/object-detection.mdx";

### Body

<ParamField body="url" type="string">
  The image url. Not required if `file_store_key` is specified.
</ParamField>

<ParamField body="file_store_key" type="string">
  The key used to store the image on Jigsawstack file
  [Storage](/docs/api-reference/store/file/add). Not required if `url` is
  specified.
</ParamField>

<Info>Either `file_store_key` or `url` can be provided not both.</Info>

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>



<ObjectDetectionSnippet />


 This is the content for the doc docs/api-reference/ai/prediction.mdx 

 ---
title: "Prediction"
api: "POST https://api.jigsawstack.com/v1/ai/prediction"
description: "Forecast a wide range of time series data in seconds with one simple API and no data training."
---

import PredictionSnippet from "/snippets/code-req-examples/prediction.mdx";

## Request Parameters

### Body

<ParamField body="dataset" type="Array<object>" required>
  The dataset to make predictions on. This is an array of objects with keys
  `date` and `value`. See example below for more information.
  - Minimum: 5 data points
  - Maximum: 1000 data points

Note: The larger the dataset provided, the more accurate the predictions become.
For best results, provide at least 20-30 data points with consistent intervals.

</ParamField>

<ParamField body="steps" type="number" default="5">
  The number of predictions to make. - Minimum: 1 - Maximum: 500
</ParamField>

### Sample Dataset

> A dataset must be an array of object containing keys `date` and `value`.

```javascript
type Dataset = {
  date: string,
  value: number | string,
};

const dataset: Array<Dataset> = [
  { date: "2023-01-01", value: 353459 },
  { date: "2023-01-02", value: 313734 },
  { date: "2023-01-03", value: 333774 },
  { date: "2023-01-04", value: 348636 },
  { date: "2023-01-05", value: 278903 },
];
```

<Snippet file="header.mdx" />

## Response Structure

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="prediction" type="Array<object>">
  Array of predicted data points. Each object contains: - `date`: Timestamp for
  the predicted point - `value`: Predicted value
</ResponseField>

<ResponseField name="steps" type="number">
  The number of predictions that were made.
</ResponseField>

<PredictionSnippet />


 This is the content for the doc docs/api-reference/ai/scrape.mdx 

 ---
title: "AI Scraper"
api: "POST https://api.jigsawstack.com/v1/ai/scrape"
description: "Scrape any website instantly and get consistent structured data in seconds without writing any css selector code"
---

import AIScrapeSnippet from "/snippets/code-req-examples/ai-scrape.mdx";

## Request Parameters

### Body

<ParamField body="url" type="string">
  URL of the page to scrape. Either `url` or `html` is required, but not both.
</ParamField>

<ParamField body="html" type="string">
  HTML content to scrape. Either `url` or `html` is required, but not both.
</ParamField>

<ParamField body="element_prompts" type="array<string>" required>
  Items on the page to scrape (maximum 5). E.g. "Plan price", "Plan title"
</ParamField>

<ParamField body="root_element_selector" type="string" default="main">
  CSS selector to limit the scope of scraping to a specific element and its children
</ParamField>

<ParamField body="page_position" type="number" default="1">
  For pagination, the current page number (minimum: 1)
</ParamField>

<ParamField body="advance_config" type="object">
  Advanced configurations
  <Expandable title="Properties">
    <ParamField body="console" type="boolean">
      Tracks console messages emitted when JavaScript within the page calls console API methods
    </ParamField>
    <ParamField body="network" type="boolean">
      Tracks network response information such as URL, method, status, headers, and body
    </ParamField>
    <ParamField body="cookies" type="boolean">
      Tracks cookie information
    </ParamField>
  </Expandable>
</ParamField>

<ParamField body="http_headers" type="object">
  Custom HTTP headers to send with requests (key-value pairs)
</ParamField>

<ParamField body="reject_request_pattern" type="array<string>">
  Array of patterns to intercept and block requests (e.g., ["jpg", "png"])
</ParamField>

<ParamField body="goto_options" type="object">
  Custom page-load behavior settings
  <Expandable title="Properties">
    <ParamField body="timeout" type="number" default="60000">
      Custom timeout in milliseconds (maximum: 120000, or 2 minutes)
    </ParamField>
    <ParamField body="wait_until" type="string" default="networkidle2">
      Page load event to wait for:
      <ul>
        <li>`load` - Wait until the load event is fired</li>
        <li>`domcontentloaded` - Wait until the DOMContentLoaded event is fired</li>
        <li>`networkidle0` - Wait until there are no network connections for at least 500ms</li>
        <li>`networkidle2` - Wait until there are no more than 2 network connections for at least 500ms</li>
      </ul>
    </ParamField>
  </Expandable>
</ParamField>

<ParamField body="wait_for" type="object">
  Wait condition before scraping
  <Expandable title="Properties">
    <ParamField body="mode" type="string" required>
      Type of waiting condition:
      <ul>
        <li>`timeout` - Wait for a specified time</li>
        <li>`selector` - Wait for a specified CSS selector to appear</li>
        <li>`function` - Wait for a specified function to return true</li>
      </ul>
    </ParamField>
    <ParamField body="value" type="string|number" required>
      The value corresponding to the selected mode:
      <ul>
        <li>For `timeout`: Number of milliseconds to wait (maximum: 60000)</li>
        <li>For `selector`: CSS selector to wait for (e.g., "h2.title")</li>
        <li>For `function`: JavaScript function as a string (e.g., "() => document.querySelector('h2')")</li>
      </ul>
    </ParamField>
  </Expandable>
</ParamField>

<ParamField body="cookies" type="array<object>">
  Cookies to set for the page request
  <Expandable title="Cookie Object Properties">
    <ParamField body="name" type="string" required>
      Cookie name
    </ParamField>
    <ParamField body="value" type="string" required>
      Cookie value
    </ParamField>
    <ParamField body="url" type="string">
      The URL to associate with the cookie (either `url` or `domain` is required)
    </ParamField>
    <ParamField body="domain" type="string">
      Cookie domain (either `url` or `domain` is required)
    </ParamField>
    <ParamField body="secure" type="boolean">
      Whether the cookie is secure (HTTPS only)
    </ParamField>
    <ParamField body="httpOnly" type="boolean">
      Whether the cookie is HTTP-only
    </ParamField>
    <ParamField body="sameParty" type="boolean">
      Whether the cookie is same-party
    </ParamField>
    <ParamField body="expires" type="number">
      Cookie expiration timestamp
    </ParamField>
    <ParamField body="priority" type="string">
      Cookie priority: "Low", "Medium", or "High"
    </ParamField>
  </Expandable>
</ParamField>

<ParamField body="size_preset" type="string">
  Predefined screen size preset (e.g., "HD", "FHD", "4K UHD")
</ParamField>

<ParamField body="is_mobile" type="boolean" default="false">
  Whether to emulate a mobile device viewport
</ParamField>

<ParamField body="scale" type="number" default="1">
  Device scale factor (minimum: 1)
</ParamField>

<ParamField body="width" type="number" default="1920">
  Viewport width in pixels
</ParamField>

<ParamField body="height" type="number" default="1080">
  Viewport height in pixels
</ParamField>

<ParamField body="force_rotate_proxy" type="boolean">
  Whether to force proxy rotation for each request (incurs additional costs)
</ParamField>

<ParamField body="byo_proxy" type="object">
  Bring-your-own-proxy configuration
  <Expandable title="Properties">
    <ParamField body="server" type="string" required>
      Proxy server URL (e.g., "https://username:password@proxy.example.com:8080")
    </ParamField>
    <ParamField body="auth" type="object">
      Authentication credentials (optional if included in server URL)
      <Expandable title="Properties">
        <ParamField body="username" type="string" required>
          Proxy username
        </ParamField>
        <ParamField body="password" type="string" required>
          Proxy password
        </ParamField>
      </Expandable>
    </ParamField>
  </Expandable>
</ParamField>

<Snippet file="header.mdx" />

## Response Structure

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful
</ResponseField>

<ResponseField name="page_position" type="number">
  The current page position when paginating through results
</ResponseField>

<ResponseField name="page_position_length" type="number">
  The total number of pages available
</ResponseField>

<ResponseField name="context" type="record<string, array<string>>">
  A map of element prompt keys to arrays of extracted text content from matched elements
</ResponseField>

<ResponseField name="selectors" type="record<string, array<string>>">
  A map of element prompt keys to arrays of CSS selectors that were used to find matching elements
</ResponseField>

<ResponseField name="data" type="array<object>">
  Detailed scrape data from the page
  <Expandable title="Data Object Structure">
    <ResponseField name="key" type="string">
      The element prompt this data relates to
    </ResponseField>
    <ResponseField name="selector" type="string">
      The CSS selector used to find this element
    </ResponseField>
    <ResponseField name="results" type="array<object>">
      Array of matched elements with their details
      <Expandable title="Result Object">
        <ResponseField name="html" type="string">
          The HTML content of the matched element
        </ResponseField>
        <ResponseField name="text" type="string">
          The text content of the matched element
        </ResponseField>
        <ResponseField name="attributes" type="array<object>">
          Array of HTML attributes on the matched element
          <Expandable title="Attribute Object">
            <ResponseField name="name" type="string">
              The attribute name
            </ResponseField>
            <ResponseField name="value" type="string">
              The attribute value
            </ResponseField>
          </Expandable>
        </ResponseField>
      </Expandable>
    </ResponseField>
  </Expandable>
</ResponseField>

<ResponseField name="link" type="array<object>">
  Links detected on the page
  <Expandable title="Link Object">
    <ResponseField name="href" type="string">
      The URL of the link
    </ResponseField>
    <ResponseField name="text" type="string">
      The text description of the link
    </ResponseField>
    <ResponseField name="type" type="string">
      The type of link, e.g., "a" for anchor links or "img" for image links
    </ResponseField>
  </Expandable>
</ResponseField>

<ResponseField name="advance_config" type="object">
  Captured browser data if enabled in advance_config
  <Expandable title="Properties">
    <ResponseField name="console" type="array">
      Console logs captured during scraping
    </ResponseField>
    <ResponseField name="network" type="array">
      Network requests captured during scraping
    </ResponseField>
    <ResponseField name="cookies" type="array">
      Cookies captured during scraping
    </ResponseField>
  </Expandable>
</ResponseField>

<AIScrapeSnippet />


 This is the content for the doc docs/api-reference/ai/sentiment.mdx 

 ---
title: "Sentiment"
api: "POST https://api.jigsawstack.com/v1/ai/sentiment"
description: "Perform line by line sentiment analysis on any text with detailed emotion detection."
---

import SentimentSnippet from "/snippets/code-req-examples/sentiment.mdx";

## Request Parameters

### Body

<ParamField body="text" type="string" required>
  The text content to analyze for sentiment and emotion.
</ParamField>

<Snippet file="header.mdx" />

## Response Structure

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="sentiment" type="object">
  Contains the sentiment analysis results.
  <Expandable title="Sentiment Object Structure" defaultOpen>
    <ResponseField name="emotion" type="string">
      The overall emotional tone of the text. Supported emotions include: `anger` `fear` `sadness` `happiness` `anxiety` `disgust` `embarrassment` `love` `surprise` `shame` `envy` `satisfaction` `self-confidence` `annoyance` `boredom` `hatred` `compassion` `guilt` `loneliness` `depression` `pride` `neutral`
    </ResponseField>

    <ResponseField name="sentiment" type="string">
      The overall sentiment classification, typically "positive", "negative", or
      "neutral".
    </ResponseField>

    <ResponseField name="score" type="number">
      Numerical score representing the sentiment intensity, typically on a scale
      from 0 to 1, where higher values indicate more positive sentiment.
    </ResponseField>

    <ResponseField name="sentences" type="array">
      Detailed sentiment analysis broken down by individual sentences.
      <Expandable title="Sentence Object">
        <ResponseField name="text" type="string">
          The sentence text.
        </ResponseField>

        <ResponseField name="emotion" type="string">
          The emotional tone detected in this specific sentence (same supported
          emotions as above).
        </ResponseField>

        <ResponseField name="sentiment" type="string">
          The sentiment classification for this specific sentence.
        </ResponseField>

        <ResponseField name="score" type="number">
          Numerical sentiment score for this specific sentence.
        </ResponseField>
      </Expandable>
    </ResponseField>

  </Expandable>
</ResponseField>

<SentimentSnippet />


 This is the content for the doc docs/api-reference/ai/spam-check.mdx 

 ---
title: "Spam Check"
api: "POST https://api.jigsawstack.com/v1/validate/spam_check"
description: "Perform spam check analysis on a given text in seconds."
---

import SpamCheckSnippet from "/snippets/code-req-examples/spam-check.mdx";

### Body

<ParamField body="text" type="string" required>
  The text to check for spam.

The `text` parameter supports two types:

  <ul>
    <li>`string` - `{"text":"Your text here"}`</li>
    <li>`Array<string>` - `{"text":["Text 1", "Text 2"]}`</li>
  </ul>

</ParamField>

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="check" type="object">

<Expandable title="Toggle object" defaultOpen="true">

<ResponseField name="is_spam" type="boolean" default="true">
  Indicates whether the text is spam. If the text is not spam, this will be
  false. Default is true.
</ResponseField>

<ResponseField name="score" type="number">
  The spam score of the text. Default is 0. The lower the score, the less likely
  it will be spam
</ResponseField>

</Expandable>

</ResponseField>

<SpamCheckSnippet />


 This is the content for the doc docs/api-reference/ai/speech-to-text.mdx 

 ---
title: "Speech to Text"
api: "POST https://api.jigsawstack.com/v1/ai/transcribe"
description: "Transcribe video and audio files with ease leveraging Whisper large V3 AI model."
---

import SpeechToTextSnippet from "/snippets/code-req-examples/speech-to-text.mdx";

## Supported Formats and Limitations

- **Supported formats:** MP3, WAV, M4A, FLAC, AAC, OGG, WEBM
- **Maximum file size:** 100MB
- **Maximum audio duration:** 4 hours

## Request Parameters

### Body

<ParamField body="url" type="string">
  The video/audio url. Not required if `file_store_key` is specified.
</ParamField>

<ParamField body="file_store_key" type="string">
  The key used to store the video/audio file on Jigsawstack File [Storage](/docs/api-reference/store/file/add). Not required if `url` is specified.
</ParamField>

<Info>Either `url` or `file_store_key` should be provided, not both.</Info>

<ParamField body="language" type="string">
  The language to transcribe or translate the file into. If not specified, the model will automatically detect the language and transcribe
  accordingly. All supported language codes can be found [here](https://jigsawstack.com/docs/additional-resources/languages).
</ParamField>

<ParamField body="translate" type="boolean" default="false">
  When set to true, translates the content into English (or the specified language if `language` parameter is provided). All supported language codes
  can be found [here](https://jigsawstack.com/docs/additional-resources/languages).
</ParamField>

<ParamField body="by_speaker" type="boolean" default="false">
  Identifies and separates different speakers in the audio file. When enabled, the response will include a `speakers` array with speaker-segmented
  transcripts.
</ParamField>

<ParamField body="webhook_url" type="string">
  Webhook URL to send result to. When provided, the API will process asynchronously and send results to this URL when completed.
</ParamField>

<ParamField body="batch_size" type="number" default="30">
  The batch size to return. Maximum value is 40. This controls how the audio is chunked for processing.
</ParamField>

<Snippet file="header.mdx" />

## Response Structure

### Direct Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="text" type="string">
  The complete transcribed text from the audio/video file.
</ResponseField>

<ResponseField name="chunks" type="array">
  An array of transcript chunks with timestamps.
  <Expandable title="Chunk Object">
    <ResponseField name="timestamp" type="array[number]">
      Array containing start and end time in seconds for the chunk.
    </ResponseField>
    <ResponseField name="text" type="string">
      The transcribed text for this time segment.
    </ResponseField>
  </Expandable>
</ResponseField>

<ResponseField name="speakers" type="array">
  Only present when `by_speaker` is set to true. Contains speaker-segmented transcripts.
  <Expandable title="Speaker Object">
    <ResponseField name="speaker" type="string">
      The speaker identifier (e.g., "Speaker 1").
    </ResponseField>
    <ResponseField name="timestamp" type="array[number]">
      Array containing start and end time in seconds for this segment.
    </ResponseField>
    <ResponseField name="text" type="string">
      The transcribed text spoken by this speaker.
    </ResponseField>
  </Expandable>
</ResponseField>

### Webhook Response

When using `webhook_url`, the initial response will be different:

<ResponseField name="success" type="boolean">
  Indicates whether the request was successfully queued.
</ResponseField>

<ResponseField name="status" type="string">
  Will be "processing" when the transcription job is queued successfully.
</ResponseField>

<ResponseField name="id" type="string">
  A unique identifier for the transcription job.
</ResponseField>

The complete transcription result will later be sent to your webhook URL with the same structure as the direct response.

## Advanced Features

### Speaker Diarization

Speaker diarization is the process of separating an audio stream into segments according to the identity of each speaker. When you enable the `by_speaker` parameter, the API will:

1. Transcribe the audio as usual
2. Identify distinct speakers in the recording
3. Label each segment with a speaker identifier (e.g., "SPEAKER_1", "SPEAKER_2")
4. Return both the standard chunks and a separate `speakers` array with speaker-separated transcriptions

This is particularly useful for:

- Meeting transcriptions
- Interview transcriptions
- Podcast transcriptions
- Any multi-speaker audio content

### Webhook Usage

For long audio files, processing might take some time. Instead of keeping the connection open and waiting for the result, you can provide a `webhook_url` parameter. The API will:

1. Return immediately with a job ID
2. Process the audio asynchronously
3. Send the complete transcription results to your webhook URL when finished

Make sure your webhook endpoint is set up to:

- Accept POST requests
- Parse JSON content
- Handle the same response format as the standard API response

<SpeechToTextSnippet />


 This is the content for the doc docs/api-reference/ai/summary.mdx 

 ---
title: "Summary"
api: "POST https://api.jigsawstack.com/v1/ai/summary"
description: "Generate concise, intelligent summaries of text or documents with AI"
---

import SummarySnippet from "/snippets/code-req-examples/summary.mdx";

## Request Parameters

### Body

<ParamField body="text" type="string | string[]">
  The text content to summarize. Maximum 300,000 characters.
  Not required if `url` or `file_store_key` is specified.
  The `text` parameter supports two formats:
  - Single string: `{"text":"Your long text here"}`
  - Array of strings: `{"text":["Long text 1", "Long text 2"]}`
</ParamField>

<ParamField body="url" type="string">
  URL of a PDF document to summarize. Not required if `text` or `file_store_key`
  is provided.
</ParamField>

<ParamField body="file_store_key" type="string">
  The key of a stored PDF document to summarize from Jigsawstack File
  [Storage](/docs/api-reference/store/file/add). Not required if `text` or `url`
  is provided.
</ParamField>

<ParamField body="type" type="string" default="text">
  The format of the summary: - `text`: Returns a continuous paragraph summary -
  `points`: Returns bullet points as an array of strings
</ParamField>

<ParamField body="max_points" type="number" default="2">
  The maximum number of bullet points to generate when `type` is set to
  `points`. Maximum value is 100.
</ParamField>

<ParamField body="max_characters" type="number">
  The maximum number of characters in the generated summary.
</ParamField>

<Snippet file="header.mdx" />

## Response Structure

The response structure varies based on the `type` parameter:

### When `type` is "text" (default)

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="summary" type="string">
  The generated summary as a continuous paragraph.
</ResponseField>

### When `type` is "points"

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="summary" type="string[]">
  An array of strings, where each string represents a bullet point in the
  summary.
</ResponseField>

<SummarySnippet />


 This is the content for the doc docs/api-reference/ai/text-to-sql.mdx 

 ---
title: "Text to SQL"
api: "POST https://api.jigsawstack.com/v1/ai/sql"
description: "Convert natural language to SQL queries for various database types."
---

import SqlSnippet from "/snippets/code-req-examples/sql.mdx";

## Request Parameters

### Body

<ParamField body="prompt" type="string" required>
  The natural language prompt that will be translated to an SQL query. Minimum
  length: 10 characters
</ParamField>

<ParamField body="sql_schema" type="string">
  The database schema where the query will be run. Not required if
  `file_store_key` is specified.
</ParamField>

<ParamField body="database" type="string">
  The database type to generate SQL for. Supported values are `postgresql`,
  `mysql`, or `sqlite`. Specifying this parameter improves SQL generation
  accuracy by applying database-specific syntax and optimizations.
</ParamField>

<ParamField body="file_store_key" type="string">
  The key used to store the database schema on Jigsawstack file
  [Storage](/docs/api-reference/store/file/add). Not required if `sql_schema` is
  specified.
</ParamField>

<Info>Either `file_store_key` or `sql_schema` can be provided not both.</Info>

<Snippet file="header.mdx" />

## Response Structure

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="sql" type="string">
  The generated SQL query based on the natural language prompt and provided
  schema.
</ResponseField>

<SqlSnippet />


 This is the content for the doc docs/api-reference/ai/translate/image-translate.mdx 

 ---
title: "Image Translate"
api: "POST https://api.jigsawstack.com/v1/ai/translate/image"
description: "Extract and translate text from images into multiple languages."
---

import ImageTranslateSnippet from "/snippets/code-req-examples/image-translate.mdx";

## Request Parameters

### Body

<ParamField body="url" type="string">
  The URL of the image containing text to translate. If provided, the image will be downloaded from this URL. Must be a valid URL. Either `url` or
  `file_store_key` must be provided.
</ParamField>

<ParamField body="file_store_key" type="string">
  The file store key of a previously uploaded image. Either `url` or `file_store_key` must be provided.
</ParamField>

<ParamField body="target_language" type="string" required>
  The language code of the target language to translate to. All supported language codes can be found
  [here](https://jigsawstack.com/docs/additional-resources/languages).
</ParamField>

## Response Structure

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="translated_text" type="string">
  The translated text content extracted from the image.
</ResponseField>

<ImageTranslateSnippet />


 This is the content for the doc docs/api-reference/ai/translate/translate.mdx 

 ---
title: "Text Translate"
api: "POST https://api.jigsawstack.com/v1/ai/translate"
description: "Translate text from one language to another with support for multiple text formats."
---

import TranslateSnippet from "/snippets/code-req-examples/translate.mdx";

## Request Parameters

### Body

<ParamField body="current_language" type="string">
  The language code of the source text. If not provided, the API will attempt to
  auto-detect the language. All supported language codes can be found
  [here](https://jigsawstack.com/docs/additional-resources/languages).
</ParamField>

<ParamField body="target_language" type="string" required>
  The language code of the target language to translate to. All supported
  language codes can be found
  [here](https://jigsawstack.com/docs/additional-resources/languages).
</ParamField>

<ParamField body="text" type="string[]" required>
  The text to translate. Supports two formats:
  - Single string: `{"text": "Hello, how are you doing"}`
  - Array of strings: `{"text": ["Hello", "How are you doing"]}`
  
  Maximum text length is 5000 characters per string.
</ParamField>

<Snippet file="header.mdx" />

## Response Structure

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="translated_text" type="string | string[]">
  The translated text. The format matches your input: - If you sent a single
  string, you'll receive a single translated string - If you sent an array of
  strings, you'll receive an array of translated strings
</ResponseField>

<TranslateSnippet />


 This is the content for the doc docs/api-reference/ai/vocr.mdx 

 ---
title: "vOCR"
api: "POST https://api.jigsawstack.com/v1/vocr"
description: "Recognise, describe and retrieve data within an image with great accuracy."
---

import VocrSnippet from "/snippets/code-req-examples/vocr.mdx";

### Body

<ParamField body="prompt" type="string | Array<string>">
  The prompt used to describe the image. Default prompt is `Describe the image in detail.`
</ParamField>

<ParamField body="url" type="string">
  The image url. Not required if `file_store_key` is specified.
</ParamField>

<ParamField body="file_store_key" type="string">
  The key used to store the image on Jigsawstack File [Storage](/docs/api-reference/store/file/add). Not required if `url` is specified.
</ParamField>

<ParamField body="page_range" type="Array<number>">
  Specifies a range of pages to process with vOCR, provided as a two-element array: \[startPage, endPage]. For example, `[1,10]` processes pages 1
  through 10. The range must span 10 or fewer pages. If the specified endPage exceeds the document's total pages, the last available page will be used
  instead. Both startPage and endPage are inclusive and must be positive integers where startPage ‚â§ endPage.
</ParamField>

<Info>Either `url` or `file_store_key` should be provided not both.</Info>

## Prompt Example

- **`String`**

```javascript
{
  prompt: "Describe the image in detail.";
}
```

- **`Array<String>`**

> Use this approach to retrieve specific data from the image file.

```javascript
{
  prompt: ["first name", "last name"];
}
```

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<Info>Supported file types: - **Images**: JPEG, JPG, PNG - **Documents**: Multi-page PDFs (up to 10 pages per API request)</Info>

<VocrSnippet />


 This is the content for the doc docs/api-reference/all-models.mdx 

 ---
title: "All Models & APIs"
description: "Complete reference guide to all models and APIs"
---

## Core AI

| API                                                         | Description                                          |
| ----------------------------------------------------------- | ---------------------------------------------------- |
| [Sentiment Analysis](/docs/api-reference/ai/sentiment)      | Analyze text sentiment (positive, negative, neutral) |
| [Translation](/docs/api-reference/ai/translate)             | Translate text between languages                     |
| [Summary](/docs/api-reference/ai/summary)                   | Generate concise text summaries                      |
| [Time Series Prediction](/docs/api-reference/ai/prediction) | Forecast future values based on historical data      |
| [Text to SQL](/docs/api-reference/ai/text-to-sql)           | Convert natural language to SQL queries              |
| [Image Generation](/docs/api-reference/ai/image-generation) | Create images from text prompts                      |

## Web & Search

| API                                                | Description                                 |
| -------------------------------------------------- | ------------------------------------------- |
| [AI Web Scraper](/docs/api-reference/ai/scrape)    | Intelligent web scraping with AI extraction |
| [HTML to Any](/docs/api-reference/web/html-to-any) | Convert HTML to various formats             |
| [Web Search](/docs/api-reference/web/ai-search)    | AI-powered web search functionality         |

## Language Models

| API                                                | Description                                |
| -------------------------------------------------- | ------------------------------------------ |
| [Prompt Engine](/docs/api-reference/prompt-engine) | Build and optimize LLM prompts efficiently |

## Computer Vision

| API                                                         | Description                           |
| ----------------------------------------------------------- | ------------------------------------- |
| [vOCR](/docs/api-reference/ai/vocr)                         | Extract text from images              |
| [Object Detection](/docs/api-reference/ai/object-detection) | Identify and locate objects in images |

## Audio Processing

| API                                                     | Description                             |
| ------------------------------------------------------- | --------------------------------------- |
| [Speech to Text](/docs/api-reference/ai/speech-to-text) | Convert spoken language to written text |
| [Text to Speech](/docs/api-reference/ai/text-to-speech) | Convert text to natural-sounding speech |

## Content Validation

| API                                                       | Description                        |
| --------------------------------------------------------- | ---------------------------------- |
| [NSFW Detection](/docs/api-reference/validate/nsfw)       | Detect not safe for work content   |
| [Profanity Check](/docs/api-reference/validate/profanity) | Filter inappropriate language      |
| [Spell Check](/docs/api-reference/validate/spellcheck)    | Detect and correct spelling errors |
| [Spam Check](/docs/api-reference/ai/spam-check)           | Identify spam content              |

## File Management

| API                                            | Description                         |
| ---------------------------------------------- | ----------------------------------- |
| [File Storage](/docs/api-reference/store/file) | Store and manage files in the cloud |

## Getting Started

```javascript
// Example: Using the Sentiment Analysis API
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.sentiment({
  text: "I love this product!",
});

console.log(result);
// Output: { sentiment: "positive", score: 0.92 }
```

For detailed usage instructions, code examples, and response formats, click on any API link above.

## Need Help?

- Check our [quickstart guide](/docs/quick-start/node/introduction)
- View an [example project](https://github.com/JigsawStack/prediction-api-example)
- Join our [Discord](https://discord.gg/GnvmdZ7z)


 This is the content for the doc docs/api-reference/audio/speaker-voice-accents.mdx 

 ---
title: "Speaker Voice Accents"
api: "GET https://api.jigsawstack.com/v1/ai/tts"
description: "Get the list of supported speaker voice accents."
---

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<RequestExample>

```javascript Node.js
import { JigsawStack } from "jigsawstack";

const jigsawstack = JigsawStack({
  apiKey: "your-api-key",
});

const result = await jigsawstack.audio.speaker_voice_accents();
```

```python Python
from jigsawstack import JigsawStack

jigsawstack = JigsawStack(api_key="your-api-key")

result = jigsawstack.audio.speaker_voice_accents()
```

```bash cURL
curl --location --request GET 'https://api.jigsawstack.com/v1/ai/tts' \
--header 'x-api-key: <your-api-key>'
```

</RequestExample>

<ResponseExample>

```json Response
{
  "success": true,
  "accents": [
    {
      "accent": "af-ZA-female-1",
      "locale_name": "Afrikaans (South Africa)",
      "gender": "female"
    },
    {
      "accent": "af-ZA-male-1",
      "locale_name": "Afrikaans (South Africa)",
      "gender": "male"
    },
    {
      "accent": "am-ET-female-1",
      "locale_name": "Amharic (Ethiopia)",
      "gender": "female"
    },
    {
      "accent": "am-ET-male-1",
      "locale_name": "Amharic (Ethiopia)",
      "gender": "male"
    },
    {
      "accent": "ar-AE-female-1",
      "locale_name": "Arabic (United Arab Emirates)",
      "gender": "female"
    },
    {
      "accent": "ar-AE-male-1",
      "locale_name": "Arabic (United Arab Emirates)",
      "gender": "male"
    },
    {
      "accent": "ar-BH-female-1",
      "locale_name": "Arabic (Bahrain)",
      "gender": "female"
    },
    {
      "accent": "ar-BH-male-1",
      "locale_name": "Arabic (Bahrain)",
      "gender": "male"
    },
    {
      "accent": "ar-DZ-female-1",
      "locale_name": "Arabic (Algeria)",
      "gender": "female"
    },
    {
      "accent": "ar-DZ-male-1",
      "locale_name": "Arabic (Algeria)",
      "gender": "male"
    }
  ]
}
```

</ResponseExample>


 This is the content for the doc docs/api-reference/audio/tts/create-clone.mdx 

 ---
title: "Create Voice Clone"
api: "POST https://api.jigsawstack.com/v1/ai/tts/clone"
description: "Create a voice clone from an audio sample for use with the Text-to-Speech API."
---

import TextToSpeechCreateCloneSnippet from "/snippets/code-req-examples/text-to-speech-create-clone.mdx";

### Body

<ParamField body="name" type="string" required>
  A descriptive name for the voice clone. This helps you identify the voice in your account.
</ParamField>

<ParamField body="url" type="string" required>
  A public URL to an audio file that will be used as the source for creating the voice clone.
</ParamField>

<ParamField body="file_store_key" type="string">
  The unique identifier of an audio file in Jigsawstack file storage that contains a sample of the voice you want to clone.
</ParamField>

<Info>You must provide either a `url` or a `file_store_key`, but at least one is required. You cannot provide both at the same time.</Info>

<Snippet file="header.mdx" />

<TextToSpeechCreateCloneSnippet />


 This is the content for the doc docs/api-reference/audio/tts/delete-clone.mdx 

 ---
title: "Delete Voice Clone"
api: "DELETE https://api.jigsawstack.com/v1/ai/tts/clone/${voice_id}"
description: "Delete a voice clone from the list of clones"
---

import TextToSpeechDeleteCloneSnippet from "/snippets/code-req-examples/text-to-speech-delete-clone.mdx";

### Query

<ParamField query="voice_id" type="string">
  The voice id of the clone you want to delete.
</ParamField>

<Snippet file="header.mdx" />

<TextToSpeechDeleteCloneSnippet />


 This is the content for the doc docs/api-reference/audio/tts/list-clones.mdx 

 ---
title: "List Voice Clones"
api: "GET https://api.jigsawstack.com/v1/ai/tts/clone/"
description: "Get a list of voice clones"
---

import TextToSpeechListClonesSnippet from "/snippets/code-req-examples/text-to-speech-list-clones.mdx";

### Body

<ParamField body="limit" type="number">
  The maximum number of voice clones to return in a single request.
</ParamField>

<ParamField body="page" type="number">
  The page number for pagination. Use this to retrieve additional voice clones when the total count exceeds the limit. Starts from 1.
</ParamField>

<Snippet file="header.mdx" />

<TextToSpeechListClonesSnippet />


 This is the content for the doc docs/api-reference/audio/tts/text-to-speech.mdx 

 ---
title: "Text to Speech"
api: "POST https://api.jigsawstack.com/v1/ai/tts"
description: "Transform text into natural-sounding human-like AI voices with low latency and exceptional quality."
---

import TextToSpeechSnippet from "/snippets/code-req-examples/text-to-speech.mdx";

## Overview

The Text to Speech API converts written text into lifelike speech with options for:

- Multiple languages and accents (700+ different voices)
- Voice cloning from audio samples
- High-quality, natural-sounding output

## Request Parameters

### Body

<ParamField body="text" type="string" required>
  The text to generate speech from. Character Limits: - Standard TTS: 5-1,500 characters - Voice Cloning TTS: 5-500 characters
</ParamField>

<ParamField body="accent" type="string" default="en-US-female-27">
  Speaker voice accent. Not required if using voice cloning. Over 700 different voices across multiple languages are available. See the [Speaker Voice
  Accents documentation](https://docs.jigsawstack.com/additional-resources/speaker-voices) for the complete list.
</ParamField>

<ParamField body="voice_clone_id" type="string">
  The unique identifier for a previously cloned voice. When provided, the API will generate speech using this pre-cloned voice profile instead of
  creating a new one.
</ParamField>

<Info>
  For best results, the `accent` should match the language of the text for accurate pronunciation, even when using a cloned voice. You can use either a built-in voice by specifying just the `accent`, or provide both an `accent` and a `voice_clone_id` to use a previously cloned voice.
</Info>

<Snippet file="header.mdx" />

## Response

The API returns the generated audio file directly in the response body as binary data, typically in MP3 format.

## Popular Voice Accents

Here's a selection of commonly used voice accents:

### English Voices

- `en-US-female-27` (Default) - American English, Female 27
- `en-US-male-24` - American English, Male 24
- `en-GB-female-2` - British English, Female 2
- `en-GB-male-2` - British English, Male 2
- `en-AU-female-2` - Australian English, Female 2
- `en-IN-female-3` - Indian English, Female 3

### Other Languages

- `fr-FR-female-12` - French, Female 12
- `de-DE-female-1` - German, Female 1
- `es-ES-female-9` - Spanish (Spain), Female 9
- `es-MX-female-12` - Spanish (Mexico), Female 12
- `ja-JP-female-14` - Japanese, Female 14
- `zh-CN-female-15` - Chinese (Mandarin), Female 15

## Voice Cloning

Voice cloning allows you to generate speech that mimics a specific voice from an audio sample. This is useful for creating custom voices for applications, personalized assistants, or consistent brand voices.

### Using Voice Cloning

1. Provide a clear audio sample using either:

   - `speaker_clone_url` - Direct URL to an audio file
   - `speaker_clone_file_store_key` - Key to a file in Jigsawstack storage

2. Provide the text you want to convert to speech (maximum 500 characters)

3. The API will analyze the sample and generate speech with similar voice characteristics

### Best Practices for Voice Cloning

- Use high-quality audio samples with minimal background noise
- Samples should be clear speech without music or other voices
- Longer samples (30+ seconds) provide better voice modeling
- For best results, the sample should contain speech similar in tone and style to your desired output

## Getting Available Voices

To retrieve the complete list of available voices programmatically:

```javascript
const voices = await jigsawstack.audio.speaker_voice_accents();
console.log(voices);
```

```python
voices = jigsawstack.audio.speaker_voice_accents()
print(voices)
```

## Common Use Cases

- **Content Creation**: Generate voiceovers for videos, podcasts, and presentations
- **Accessibility**: Convert written content to audio for visually impaired users
- **Interactive Applications**: Build voice assistants, language learning apps, and interactive experiences
- **Customer Service**: Create automated voice responses for customer service systems
- **Localization**: Translate and vocalize content in multiple languages
- **Personalization**: Clone a specific voice for consistent brand messaging

<TextToSpeechSnippet />


 This is the content for the doc docs/api-reference/authentication.mdx 

 ---
title: "Authentication"
description: "Secure Access to JigsawStack API & SDK."
---

## Retrieve your API key

- Log in to your JigsawStack [dashboard](https://jigsawstack.com/dashboard)
- Navigate to Keys tab.
- Click on `+ Create new key` button to create a new API key.
- Copy the API key and securely store it in your environment variables.

## Secret and Public keys

The JigsawStack API has two types of API keys: `secret` and `public`.

### Secret keys

- Secret API keys are great for backend services. A secret key can access all APIs without any restrictions.

<img className="block" src="/images/secret_key.png" alt="Secret Key Setup" />

<Tip>
  Your `secret` API key should never be public, shared or exposed in a github
  repository.
</Tip>

### Public API keys

- Public API keys are ideal for frontend applications, allowing direct API calls from the client side. However, it's important to set public key restrictions for added security.

#### Public Key Restrictions

1. **API access** - Limits public key access to the specified APIs.
2. **Whitelist domains(routes)** - Restrict public key access to the specified domains.

<img className="block" src="/images/public_key.png" alt="Public Key Setup" />

<Tip>Domain whitelisting is recommended when creating `public` api keys.</Tip>

## Base URL

The JigsawStack base URL is built on REST principles. We enforce HTTPS in every request to improve data security, integrity, and privacy. The base URL does not support HTTP.

<Info>Base URL `https://api.jigsawstack.com`</Info>

The JigsawStack API uses API keys to authenticate requests. You can view and manage your API keys in the JigsawStack Dashboard.

## SDK authentication

- Configure API key as an environment variable

```bash .env
JIGSAWSTACK_API_KEY='your-api-key'
```

- Authenticate

<CodeGroup>
```javascript Javascript/Typescript
const jigsawstack = JigsawStack({ apiKey: process.env.JIGSAWSTACK_API_KEY });
```

```python Python
jigsawstack = JigsawStack(api_key=os.environ["JIGSAWSTACK_API_KEY"])
```

</CodeGroup>

## API request

- Attach the header parameter `x-api-key` with the API key obtained from your dashboard.

```js
const headers = {
  "x-api-key": "<your-api-key-here>",
};

const baseUrl = "https://api.jigsawstack.com";

const result = await fetch(`${baseUrl}/v1/ai/summary`, {
  method: "POST",
  body: {
    text: "The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral",
  },
  headers,
});
```

- You can also add `x-api-key` as query parameter.

```js
const baseUrl = "https://api.jigsawstack.com";
await fetch(`${baseUrl}/v1/ai/summary?x-api-key=<your-api-key-here>`);
```

<Info> `x-api-key` as query parameter only works for public API keys. </Info>

## Protecting against key leakage.

- Avoid storing keys in source code repositories (e.g., GitHub). Bad actors often scan public repositories for leaked keys. Even if the repository is private, it can still be accessed by team members in their development environments.

- Never embed secret keys directly in applications. Instead, read them from environment variables to keep them secure.

- Use only public keys in client-side applications. Ensure that you whitelist specific domains that can access this public key to prevent unauthorized use.

- Store secret keys in secure key management systems (KMS). When creating a key (e.g., from the JigsawStack Dashboard), it will only be revealed once. Immediately copy the key to a KMS, which is designed to handle sensitive information with encryption and access controls. Ensure that you don't leave a copy of the key in any local files.


 This is the content for the doc docs/api-reference/error.mdx 

 ---
title: "Errors"
description: "JigsawStack uses standard HTTP response codes to indicate the success or failure of an API request."
---

## Error Codes

- 2xx codes indicate success. For example, a 200 OK code indicates that the request was successful.
- 4xx codes indicate an error that was caused by the client. For example, a 400 Bad Request code indicates that the request was malformed.
- 5xx codes indicate an error that was caused by the server. For example, a 500 Internal Server Error code indicates that the server encountered an unexpected error.

| Code                       | Description                                                  |
| -------------------------- | ------------------------------------------------------------ |
| **200** - OK               | The request was successful.                                  |
| **400** - Bad Request      | The request was malformed.                                   |
| **401** - Unauthorized     | No valid API key provided.                                   |
| **403** - Forbidden        | The API key doesn't have permissions to perform the request. |
| **404** - Not Found        | The requested resource doesn't exist.                        |
| **405** - Method not found | The requested resource doesn't exist.                        |
| **500** - Server Error     | The server encountered an unexpected error.                  |


 This is the content for the doc docs/api-reference/prompt-engine/create.mdx 

 ---
title: "Create Prompt"
api: "POST https://api.jigsawstack.com/v1/prompt_engine"
description: "Create a prompt for easy reuse."
---

import PromptEngineCreateSnippet from "/snippets/code-req-examples/prompt-engine-create.mdx";

### Body

<ParamField body="prompt" type="string" required>
  The prompt. Maximum character limit is `500000`. Prompt supports dynamic
  inputs. See example below.
</ParamField>

<ParamField body="inputs" type="array<object>">
  The prompt inputs. See example below. &#x20;
</ParamField>

<ParamField body="return_prompt" type="string | array | object">
  How the prompt result should be returned or formatted. See examples below
</ParamField>

<ParamField body="prompt_guard" type="array<string>">
  Include this to guard against unsafe inputs from users. Supported values:

  <ul>
    <li>`defamation`</li>
    <li>`privacy`</li>
    <li>`hate`</li>
    <li>`sexual_content`</li>
    <li>`elections`</li>
    <li>`code_interpreter_abuse`</li>
    <li>`indiscrimate_weapons`</li>
    <li>`specialized_advice`</li>
  </ul>
</ParamField>

<ParamField body="optimize_prompt" type="boolean">
  Include this to optimize the prompt for best results. True by default.
</ParamField>

<ParamField body="use_internet" type="boolean">
  Include this to allow prompt engine to use the internet.
</ParamField>

## Sample Prompt Payload

- String `return_prompt`

```javascript
{
    prompt: "Tell me a story about {about}",
    inputs: [
      {
        key: "about",
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: "Return the result in a markdown format",
    "prompt_guard": ["sexual_content", "defamation"]
  }
```

- `Array<object>` `return_prompt`

```javascript

{
    prompt: "Tell me a story about {about}",
    inputs: [
      {
        key: "about",
        optional: "false",
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: [{ excerpt: "short story text", summary: "summary of story" }],
    "prompt_guard": ["sexual_content", "defamation"]
  }
```

- Object `return_prompt`

```javascript
{
    prompt: "Tell me a story about {about}",
    inputs: [
      {
        key: "about",
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: { excerpt: "short story text", summary: "summary of story" },
    "prompt_guard": ["sexual_content", "defamation"]
  }
```

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<PromptEngineCreateSnippet />


 This is the content for the doc docs/api-reference/prompt-engine/delete.mdx 

 ---
title: "Delete a Prompt"
api: "DELETE https://api.jigsawstack.com/v1/prompt_engine/{id}"
description: "Deletes a prompt engine."
---

import PromptEngineDeleteSnippet from "/snippets/code-req-examples/prompt-engine-delete.mdx";

### Path Params

<ParamField path="id" type="string" required>
  The prompt ID.
</ParamField>

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<PromptEngineDeleteSnippet />


 This is the content for the doc docs/api-reference/prompt-engine/list.mdx 

 ---
title: "List Prompts"
api: "GET https://api.jigsawstack.com/v1/prompt_engine"
description: "List all prompts in your project."
---

import PromptEngineListSnippet from "/snippets/code-req-examples/prompt-engine-list.mdx";

### Query

<ParamField query="limit" default="30" type="string">
  The maximum number of prompts to be returned.
</ParamField>

<ParamField query="page" default="1" type="string">
  The page to return.
</ParamField>

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<PromptEngineListSnippet />


 This is the content for the doc docs/api-reference/prompt-engine/retrieve.mdx 

 ---
title: "Get Prompt"
api: "GET https://api.jigsawstack.com/v1/prompt_engine/{id}"
description: "Retrieve details of a prompt."
---

import PromptEngineRetrieveSnippet from "/snippets/code-req-examples/prompt-engine-retrieve.mdx";

<Snippet file="header.mdx" />

### Query

<ParamField query="id" type="string">
  The prompt id.
</ParamField>

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<PromptEngineRetrieveSnippet />


 This is the content for the doc docs/api-reference/prompt-engine/run-direct.mdx 

 ---
title: "Run Prompt Direct"
api: "POST https://api.jigsawstack.com/v1/prompt_engine/run"
description: "Run a prompt directly."
---

import PromptEngineRunDirectSnippet from "/snippets/code-req-examples/prompt-engine-run-direct.mdx";

<Info>**Run Prompt Direct** is ideal for one-time prompt usage.</Info>

<Info>
  For prompts that will be used multiple times, it is recommended to first
  [Create a Prompt](/docs/api-reference/prompt-engine/create) and then [Run the
  Prompt](/docs/api-reference/prompt-engine/run) for better reliability.
</Info>

<Snippet file="header.mdx" />

### Body

<ParamField body="prompt" type="string" required>
  The prompt. Maximum character limit is `500000`. Prompt supports dynamic
  inputs. See example below.
</ParamField>

<ParamField body="inputs" type="array<object>">
  The prompt inputs. See example below.
</ParamField>

<ParamField body="return_prompt" type="string | array | object">
  How the prompt result should be returned or formatted. See examples below
</ParamField>

<ParamField body="prompt_guard" type="array<string>">
  Include this to guard against unsafe inputs from users. Supported values:

  <ul>
    <li>`defamation`</li>
    <li>`privacy`</li>
    <li>`hate`</li>
    <li>`sexual_content`</li>
    <li>`elections`</li>
    <li>`code_interpreter_abuse`</li>
    <li>`indiscrimate_weapons`</li>
    <li>`specialized_advice`</li>
  </ul>
</ParamField>

<ParamField body="input_values" type="object">
  Key-value pair for dynamic prompt variables. Each input value has a `500000`
  character limit
</ParamField>

<ParamField body="stream" type="boolean" defaultValue="false">
  If set, partial message chunk will be sent.
</ParamField>

<ParamField body="use_internet" type="boolean" defaultValue="false">
  Include this to allow prompt engine to use the internet.
</ParamField>

## Sample Prompt Payload

- String `return_prompt`

```javascript
{
    prompt: "Tell me a story about {about}",
    inputs: [
      {
        key: "about",
        optional: false,
      },
    ],
    return_prompt: "Return the result in a markdown format",
    "prompt_guard": ["sexual_content", "defamation"]
    "input_values": {
      "about": "Santorini",
    }
  }
```

- `Array<object>` `return_prompt`

```javascript

{
    prompt: "Tell me a story about {about}",
    inputs: [
      {
        key: "about",
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: [{ excerpt: "short story text", summary: "summary of story" }],
    "prompt_guard": ["sexual_content", "defamation"],
    "input_values": {
      "about": "Santorini",
    }
  }
```

- Object `return_prompt`

```javascript
{
    prompt: "Tell me a story about {about}",
    inputs: [
      {
        key: "about",
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: { excerpt: "short story text", summary: "summary of story" },
    "prompt_guard": ["sexual_content", "defamation"],
    "input_values": {
      "about": "Santorini",
    }
  }
```

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<PromptEngineRunDirectSnippet />


 This is the content for the doc docs/api-reference/prompt-engine/run.mdx 

 ---
title: "Run Prompt"
api: "POST https://api.jigsawstack.com/v1/prompt_engine/{id}"
description: "Execute a prompt using the prompt id."
---

import PromptEngineRunSnippet from "/snippets/code-req-examples/prompt-engine-run.mdx";

<Snippet file="header.mdx" />

### Body

<ParamField body="input_values" type="object">
  The input values. This is required if the `inputs` parameter was specified
  when creating a prompt. Each input value has a `500000` character limit
</ParamField>

<ParamField body="stream" type="boolean" defaultValue="false">
  If set, partial message chunk will be sent.
</ParamField>

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<PromptEngineRunSnippet />


 This is the content for the doc docs/api-reference/store/file/add.mdx 

 ---
title: "Upload"
api: "POST https://api.jigsawstack.com/v1/store/file"
description: "Upload images, videos and documents effortlessly."
---

<Info>Maximum file size is 100MB.</Info>

<Snippet file="header.mdx" />

<ParamField header="Content-Type" type="string">
  File content type e.g image/png, image/jpeg, video/mov, video/mp4
</ParamField>

### Body

<ParamField body="blob" type="Blob" required>
  The blob file to upload.
</ParamField>

### Query

<ParamField query="key" type="string" required>
  The key to store the file. We recommend you include the file extension in the
  key. E.g `image-key.png`
</ParamField>

<ParamField query="overwrite" type="string" default="false">
  Overwrite the file if key already exists.
</ParamField>

<Info>
  See complete guide on File Storage [here](/docs/examples/file-upload)
</Info>

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="key" type="string">
  Key used in storing the file.
</ResponseField>

<ResponseField name="url" type="string">
  Url used in accessing the file.
</ResponseField>

<RequestExample>

```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const file = await fetch("https://jigsawstack.com/preview/vocr-example.jpg");
const blob = await file.blob();

const response = await jigsaw.store.upload(blob, {
  key: "new-image.jpg",
  overwrite: true,
});
 ```

```python Python
from jigsawstack import JigsawStack
import requests

jigsaw = JigsawStack(api_key="your-api-key")

response = requests.get("https://jigsawstack.com/preview/vocr-example.jpg")
blob = response.content

upload_response = jigsaw.store.upload(blob, {"key": "new-image.jpg", "overwrite": True})
```

```bash Curl 
curl --location 'https://api.jigsawstack.com/v1/store/file?key=filename.txt&overwrite=true' \
--header 'x-api-key: your-api-key' \
--data-binary '@path/to/your/file'
```
</RequestExample>

<ResponseExample>
```json Response
{
  "key": "new-image.jpg",
  "url": "https://api.jigsawstack.com/v1/store/file/read/new-image.jpg",
  "size": 75078
}
```
</ResponseExample>

 This is the content for the doc docs/api-reference/store/file/delete.mdx 

 ---
title: "Delete"
api: "DELETE https://api.jigsawstack.com/v1/store/file/read/{key}"
description: "Delete a file."
---

import FileDeleteSnippet from "/snippets/code-req-examples/file-delete.mdx";

### Path

<ParamField path="key" type="string" required>
  The key of the file to be deleted.
</ParamField>

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<FileDeleteSnippet />


 This is the content for the doc docs/api-reference/store/file/get.mdx 

 ---
title: "Retrieve"
api: "GET https://api.jigsawstack.com/v1/store/file/read/{key}"
description: "Retrieve a file."
---

import FileGetSnippet from "/snippets/code-req-examples/file-get.mdx";

### Path

<ParamField path="key" type="string" required>
  The key of the file to be retrieved.
</ParamField>

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="message" type="string">
  The message returned by the API.
</ResponseField>

<ResponseField name="url" type="string">
  The accessible URL of the file.
</ResponseField>

<ResponseField name="key" type="string">
  The key of the file.
</ResponseField>

<FileGetSnippet />


 This is the content for the doc docs/api-reference/validate/nsfw.mdx 

 ---
title: "NSFW"
api: "POST https://api.jigsawstack.com/v1/validate/nsfw"
description: "Quickly detect nudity, violence, hentai, porn and more NSFW content in images."
---

import NsfwSnippet from "/snippets/code-req-examples/nsfw.mdx";

### Params

<ParamField query="url" type="string" required>
  The image URL to validate.
</ParamField>

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="message" type="string">
  The message returned by the API.
</ResponseField>

<NsfwSnippet />


 This is the content for the doc docs/api-reference/validate/profanity.mdx 

 ---
title: "Profanity"
api: "POST https://api.jigsawstack.com/v1/validate/profanity"
description: "Check any text for profanity."
---

import ProfanitySnippet from "/snippets/code-req-examples/profanity.mdx";

### Params

<ParamField query="text" type="string" required>
  The text to validate.
</ParamField>

<ParamField query="censor_replacement" type="string" default="*" required>
  The character to replace profanity with.
</ParamField>

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="message" type="string">
  The message returned by the API.
</ResponseField>

<ResponseField name="clean_text" type="string">
  The text with profanity replaced by the censor_replacement character.
</ResponseField>

<ResponseField name="profanities" type="array">
  An array of profanities found in the text.
</ResponseField>

<ResponseField name="profanities_found" type="boolean">
  Returns True if profanity is found in the sentence
</ResponseField>

<ProfanitySnippet />


 This is the content for the doc docs/api-reference/validate/spellcheck.mdx 

 ---
title: "Spell Check"
api: "POST https://api.jigsawstack.com/v1/validate/spell_check"
description: "Check and correct spelling errors in a text."
---

import SpellcheckSnippet from "/snippets/code-req-examples/spellcheck.mdx";

### Params

<ParamField query="text" type="string" required>
  The text to check.
</ParamField>

<ParamField query="language_code" type="string" default="en" required>
  The language code of the text. Default is "en".
</ParamField>

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<ResponseField name="message" type="string">
  The message returned by the API.
</ResponseField>

<ResponseField name="misspellings_found" type="number">
  The number of misspellings found in the text.
</ResponseField>

<ResponseField name="auto_correct_text" type="string">
  The auto corrected text.

If no misspellings were found, the original text is returned.

</ResponseField>


<SpellcheckSnippet />


 This is the content for the doc docs/api-reference/web/ai-search.mdx 

 ---
title: "AI Search"
api: "POST https://api.jigsawstack.com/v1/web/search"
description: "Effortlessly search the Web and get access to high-quality results powered with AI."
---

import SearchSnippet from "/snippets/code-req-examples/ai-search.mdx";

### Body

<ParamField body="query" type="string" required>
  The search value. The maximum query character length is 400.
</ParamField>

<ParamField body="ai_overview" type="boolean" default="true">
  Include AI powered overview in the search results
</ParamField>

<ParamField body="safe_search" type="string" default="moderate">
  Include offensive results in the search results
  <ul>
    <li>`moderate`</li>
    <li>`strict`</li>
    <li>`off`</li>
  </ul>
</ParamField>

<ParamField body="spell_check" type="boolean" default="true">
  Spell check the search query.
</ParamField>

<ParamField body="byo_urls" type="string[]">
  Return results from the specified URLs.
</ParamField>

<ParamField body="deep_research" type="boolean">
  Toggle deep research mode.
</ParamField>

<ResponseField name="deep_research_config" type="object">
  The deep research configuration.
  <Expandable title="Deep Research Config Object Structure" defaultOpen>
    <ResponseField name="max_depth" type="number" default="3">
      Specifies the depth of research by controlling the number of recursive iterations the framework performs. A higher value enables more thorough but longer searches.
    </ResponseField>

    <ResponseField name="max_breadth" type="number" default="3">
      Determines the breadth of research by limiting the number of parallel subqueries generated at each depth level. A higher value provides wider coverage of related topics.
    </ResponseField>

    <ResponseField name="max_output_tokens" type="number" default="32000">
      The maximum number of tokens in the generated output report.
    </ResponseField>

    <ResponseField name="target_output_tokens" type="number">
      The target number of tokens for the generated output report.
    </ResponseField>

  </Expandable>
</ResponseField>

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<SearchSnippet />

 This is the content for the doc docs/api-reference/web/html-to-any.mdx 

 ---
title: "HTML To Any"
api: "POST https://api.jigsawstack.com/v1/web/html_to_any"
description: "Capture screenshots of a website, convert HTML to both image and PDF formats."
---

import HtmlToAnySnippet from "/snippets/code-req-examples/html-to-any.mdx";

## Request Parameters

### Body

<ParamField body="html" type="string">
  The HTML content to convert to image or PDF. Either `html` or `url` is required, but not both.
</ParamField>

<ParamField body="url" type="string">
  The URL of the webpage to capture. Either `html` or `url` is required, but not both.
</ParamField>

<ParamField body="type" type="string" default="png">
  The output file format. Supported formats:
  <ul>
    <li>`png` - PNG image format</li>
    <li>`jpeg` - JPEG image format</li>
    <li>`webp` - WebP image format</li>
    <li>`pdf` - PDF document</li>
  </ul>
</ParamField>

<ParamField body="quality" type="number" default="75">
  The quality of the output image (1-100). Higher values produce better quality but larger file sizes. Only applies to jpeg and webp formats.
</ParamField>

<ParamField body="full_page" type="boolean" default="false">
  When set to true, captures the entire scrollable area of the page instead of just the viewport.
</ParamField>

<ParamField body="omit_background" type="boolean" default="false">
  When set to true, makes the background transparent for PNG format images.
</ParamField>

<ParamField body="width" type="number" default="1920">
  The width of the viewport in pixels.
</ParamField>

<ParamField body="height" type="number" default="1080">
  The height of the viewport in pixels.
</ParamField>

<ParamField body="scale" type="number" default="1">
  Device scale factor (minimum: 1). Controls the resolution of the screenshot.
</ParamField>

<ParamField body="size_preset" type="string">
  Predefined screen size preset to use instead of specifying width and height manually. Supported values include:
  <ul>
    <li>`QVGA` - 320√ó240</li>
    <li>`VGA` - 640√ó480</li>
    <li>`SVGA` - 800√ó600</li>
    <li>`HD` - 1280√ó720</li>
    <li>`HD+` - 1600√ó900</li>
    <li>`SXGA` - 1280√ó1024</li>
    <li>`FHD` - 1920√ó1080</li>
    <li>`2K` - 2048√ó1080</li>
    <li>`2K QHD` - 2560√ó1440</li>
    <li>`5K` - 5120√ó2880</li>
    <li>`4K UHD` - 3840√ó2160</li>
  </ul>
  See the full list of screen size presets [here](/docs/additional-resources/size-preset)
</ParamField>

<ParamField body="is_mobile" type="boolean" default="false">
  When set to true, emulates a mobile device viewport and takes the meta viewport tag into account.
</ParamField>

<ParamField body="dark_mode" type="boolean" default="false">
  When set to true, forces the page to render in dark mode using the CSS prefers-color-scheme media feature.
</ParamField>

<ParamField body="use_graphic_renderer" type="boolean" default="false">
  Enables WebGL, GPU acceleration, and other 3D APIs. Note: This option may impact performance and increase API latency.
</ParamField>

<ParamField body="goto_options" type="object">
  Custom page-load behavior settings.
  <Expandable title="Properties">
    <ParamField body="timeout" type="number" default="15000">
      Maximum time to wait for the page to load, in milliseconds (max: 15000ms).
    </ParamField>
    <ParamField body="wait_until" type="string" default="load">
      Event to wait for before considering navigation complete:
      <ul>
        <li>`load` - Wait for the window.load event</li>
        <li>`domcontentloaded` - Wait for the DOMContentLoaded event</li>
        <li>`networkidle0` - Wait until there are no network connections for at least 500ms</li>
        <li>`networkidle2` - Wait until there are no more than 2 network connections for at least 500ms</li>
      </ul>
    </ParamField>
  </Expandable>
</ParamField>

<ParamField body="pdf_display_header_footer" type="boolean" default="false">
  When set to true, displays header and footer in PDF output. Only applies when `type` is set to `pdf`.
</ParamField>

<ParamField body="pdf_print_background" type="boolean" default="false">
  When set to true, prints background graphics in PDF output. Only applies when `type` is set to `pdf`.
</ParamField>

<ParamField body="pdf_page_range" type="string">
  Page ranges to print in PDF format (e.g., '1-5, 8, 11-13'). Only applies when `type` is set to `pdf`.
</ParamField>

<Snippet file="header.mdx" />

## Response

The API returns the generated file (image or PDF) directly in the response body as binary data.

## Common Use Cases

### Website Screenshots

Capture screenshots of websites for:

- Monitoring and testing
- Generating previews or thumbnails
- Creating social media images
- Archiving webpage states

### HTML to Image Conversion

Convert HTML snippets to images for:

- Email templates
- Social media posts
- Dynamic image generation
- Creating graphics from templates

### PDF Generation

Create PDFs from webpages for:

- Generating reports
- Creating downloadable content
- Archiving articles or documentation
- Creating printable versions of web content

### Responsive Design Testing

Test how websites appear on different screen sizes:

- Mobile vs. desktop views
- Various device dimensions
- Light vs. dark mode

## Best Practices

1. **Optimal Quality Settings**:

   - For lossless quality, use PNG format with `quality: 100`
   - For smaller file sizes with good quality, use WebP format with `quality: 80-90`
   - For the smallest file sizes (where quality is less critical), use JPEG format with `quality: 70-80`

2. **Page Loading**:

   - Use `wait_until: "networkidle0"` for dynamic websites that load content via JavaScript
   - Set appropriate `timeout` values for websites that take longer to load
   - Consider using explicit `width` and `height` to match the content dimensions

3. **PDF Configuration**:
   - Enable `pdf_print_background` when capturing colorful websites as PDFs
   - Use `pdf_page_range` to capture only specific pages for large websites
   - Set appropriate page dimensions with `width` and `height` for better PDF layout

<HtmlToAnySnippet />


 This is the content for the doc docs/api-reference/web/search-suggestion.mdx 

 ---
title: "Search Suggestion"
api: "GET https://api.jigsawstack.com/v1/web/search/suggest"
description: "Get suggestions for a given query in real time."
---

import SearchSuggestionSnippet from "/snippets/code-req-examples/search-suggestions.mdx";

### Query

<ParamField query="query" type="string" required>
  The search value. The maximum query character length is 200.
</ParamField>

<Snippet file="header.mdx" />

### Response

<ResponseField name="success" type="boolean">
  Indicates whether the call was successful.
</ResponseField>

<SearchSuggestionSnippet />



 This is the content for the doc docs/examples/audio-processing/speech-to-text.mdx 

 ---
title: "Speech to Text"
description: "Learn how to use JigsawStack's Speech to Text API to transcribe audio and video files"
---

## Overview

The Speech to Text API converts audio and video files containing speech into accurate text transcriptions. Powered by the Whisper large V3 AI model, it provides high-quality transcriptions for various applications. The API supports multiple audio formats and offers features like speaker diarization and language translation.

- High-accuracy transcription with advanced AI model
- Multiple audio format support (MP3, WAV, FLAC, etc.)
- Speaker diarization capability (identifying different speakers)
- Translation to English from other languages
- Support for asynchronous processing via webhooks
- Timestamps for each segment of transcription

## API Endpoint

```
POST /v1/ai/transcribe
```

## Quick Start

```javascript JavaScript
import { JigsawStack } from 'jigsawstack';

const jigsaw = new JigsawStack('your-api-key');

// Basic transcription from URL
const response = await jigsaw.audio.speech_to_text({
  url: "https://example.com/path/to/audio.mp3"
});

console.log(response.text);

// With speaker diarization
const responseWithSpeakers = await jigsaw.audio.speech_to_text({
  url: "https://example.com/path/to/audio.mp3",
  by_speaker: true
});

// Display speakers and their text
responseWithSpeakers.speakers.forEach(segment => {
  console.log(`${segment.speaker}: ${segment.text}`);
});
```

## Response

```json
{
  "success": true,
  "text": "Welcome to JigsawStack's Speech to Text API demo. This powerful tool converts spoken language into written text with high accuracy.",
  "chunks": [
    {
      "timestamp": [0.0, 2.2],
      "text": "Welcome to JigsawStack's Speech to Text API demo."
    },
    {
      "timestamp": [2.3, 5.24],
      "text": "This powerful tool converts spoken language into written text with high accuracy."
    }
  ],
  "speakers": [
    {
      "speaker": "Speaker 1",
      "timestamp": [0.0, 2.2],
      "text": "Welcome to JigsawStack's Speech to Text API demo."
    },
    {
      "speaker": "Speaker 1",
      "timestamp": [2.3, 5.24],
      "text": "This powerful tool converts spoken language into written text with high accuracy."
    }
  ]
}
```

## Examples

If you've already uploaded files to JigsawStack's storage:

```javascript Processing Files from Storage
// Using a file from JigsawStack storage
const result = await jigsaw.audio.speech_to_text({
  file_store_key: "uploads/meeting_recording.mp3",
  by_speaker: true
});
```

To transcribe audio in one language and translate to English:

```javascript Translation Example
// Transcribe and translate to English
const result = await jigsaw.audio.speech_to_text({
  url: "https://example.com/path/to/french_audio.mp3",
  translate: true
});

console.log("Translated text:", result.text);
```


 This is the content for the doc docs/examples/audio-processing/text-to-speech.mdx 

 ---
title: "Text to Speech"
description: "Learn how to use the JigsawStack Text to Speech API to convert text into natural speech"
---

## Overview

The Text to Speech API converts written text into natural-sounding speech output. You can use predefined speaker accents or clone a voice from an audio sample to create personalized speech output.

- Support for multiple languages and accents
- Voice cloning from audio samples
- High-quality, natural-sounding output
- Simple integration options

## API Endpoint

```
POST /v1/ai/tts
```

## Quick Start
```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({
  apiKey: "your-api-key",
});

const response = await jigsaw.audio.text_to_speech({
  text: "Hello, how are you doing?",
  accent: "en-US-female-27",
});

const data = await response.blob();
```

See [Speaker Voice Accents](https://jigsawstack.com/docs/additional-resources/speaker-voices) for the complete list of supported speaker voice accents.

## Response

The API returns the generated audio file directly in the response body as binary data, typically in MP3 format.


## Using Text to Speech Effectively

- **Keep text natural**: Write text that sounds natural when spoken aloud
- **Consider punctuation**: Use commas and periods to create natural pauses
- **Test different accents**: Try different voice options to find the best fit for your use case
- **For voice cloning**: Use high-quality audio samples with minimal background noise

## Examples

```javascript Using Speaker Clone URL
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({
  apiKey: "your-api-key",
});

const response = await jigsaw.audio.text_to_speech({
  text: "Hello, how are you doing?",
  speaker_clone_url: "https://example.com/path/to/voice-sample.mp3",
});

const data = await response.blob();
```

```javascript Using File Store Key
import { JigsawStack } from "jigsawstack";
import fs from "fs";

const jigsaw = JigsawStack({
  apiKey: "your-api-key",
});

// Read the audio file
const audioFile = fs.readFileSync("./speaker.wav");

// Upload the file
const uploadResult = await jigsaw.store.upload(audioFile, {
  filename: "speaker",
});

// Retrieve the file key
const fileKey = uploadResult.key;

// Use the file key for Text to Speech
const response = await jigsaw.audio.text_to_speech({
  text: "Hello, how are you doing?",
  speaker_clone_file_store_key: fileKey,
});

const data = await response.blob();
```

 This is the content for the doc docs/examples/audio/speech-to-text.mdx 

 ---
title: "Speech to Text"
description: "Learn how to use JigsawStack's Speech to Text API to transcribe audio and video files"
---

## Overview

The Speech to Text API converts audio and video files containing speech into accurate text transcriptions. Powered by the Whisper large V3 AI model, it provides high-quality transcriptions for various applications. The API supports multiple audio formats and offers features like speaker diarization and language translation.

- High-accuracy transcription with advanced AI model
- Multiple audio format support (MP3, WAV, FLAC, etc.)
- Speaker diarization capability (identifying different speakers)
- Translation to English from other languages
- Support for asynchronous processing via webhooks
- Timestamps for each segment of transcription

## API Endpoint

```
POST /v1/ai/transcribe
```

## Quick Start

```javascript JavaScript
import { JigsawStack } from 'jigsawstack';

const jigsaw = new JigsawStack('your-api-key');

// Basic transcription from URL
const response = await jigsaw.audio.speech_to_text({
  url: "https://example.com/path/to/audio.mp3"
});

console.log(response.text);

// With speaker diarization
const responseWithSpeakers = await jigsaw.audio.speech_to_text({
  url: "https://example.com/path/to/audio.mp3",
  by_speaker: true
});

// Display speakers and their text
responseWithSpeakers.speakers.forEach(segment => {
  console.log(`${segment.speaker}: ${segment.text}`);
});
```

## Response

```json
{
  "success": true,
  "text": "Welcome to JigsawStack's Speech to Text API demo. This powerful tool converts spoken language into written text with high accuracy.",
  "chunks": [
    {
      "timestamp": [0.0, 2.2],
      "text": "Welcome to JigsawStack's Speech to Text API demo."
    },
    {
      "timestamp": [2.3, 5.24],
      "text": "This powerful tool converts spoken language into written text with high accuracy."
    }
  ],
  "speakers": [
    {
      "speaker": "Speaker 1",
      "timestamp": [0.0, 2.2],
      "text": "Welcome to JigsawStack's Speech to Text API demo."
    },
    {
      "speaker": "Speaker 1",
      "timestamp": [2.3, 5.24],
      "text": "This powerful tool converts spoken language into written text with high accuracy."
    }
  ]
}
```

## Examples

If you've already uploaded files to JigsawStack's storage:

```javascript Processing Files from Storage
// Using a file from JigsawStack storage
const result = await jigsaw.audio.speech_to_text({
  file_store_key: "uploads/meeting_recording.mp3",
  by_speaker: true
});
```

To transcribe audio in one language and translate to English:

```javascript Translation Example
// Transcribe and translate to English
const result = await jigsaw.audio.speech_to_text({
  url: "https://example.com/path/to/french_audio.mp3",
  translate: true
});

console.log("Translated text:", result.text);
```


 This is the content for the doc docs/examples/audio/text-to-speech.mdx 

 ---
title: "Text to Speech"
description: "Learn how to use the JigsawStack Text to Speech API to convert text into natural speech"
---

## Overview

The Text to Speech API converts written text into natural-sounding speech output. You can use predefined speaker accents or clone a voice from an audio sample to create personalized speech output.

- Support for multiple languages and accents
- Voice cloning from audio samples
- High-quality, natural-sounding output
- Simple integration options

## API Endpoint

```
POST /v1/ai/tts
```

## Quick Start

```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({
  apiKey: "your-api-key",
});

const response = await jigsaw.audio.text_to_speech({
  text: "Hello, how are you doing?",
  accent: "en-US-female-27",
});

const data = await response.blob();
```

See [Speaker Voice Accents](https://jigsawstack.com/docs/additional-resources/speaker-voices) for the complete list of supported speaker voice accents.

## Response

The API returns the generated audio file directly in the response body as binary data, typically in MP3 format.

## Using Text to Speech Effectively

- **Keep text natural**: Write text that sounds natural when spoken aloud
- **Consider punctuation**: Use commas and periods to create natural pauses
- **Test different accents**: Try different voice options to find the best fit for your use case
- **For voice cloning**: Use high-quality audio samples with minimal background noise

## Examples

```javascript Using Speaker Clone URL
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({
  apiKey: "your-api-key",
});

const response = await jigsaw.audio.text_to_speech({
  text: "Hello, how are you doing?",
  speaker_clone_url: "https://example.com/path/to/voice-sample.mp3",
});

const data = await response.blob();
```

```javascript Using File Store Key
import { JigsawStack } from "jigsawstack";
import fs from "fs";

const jigsaw = JigsawStack({
  apiKey: "your-api-key",
});

// Read the audio file
const audioFile = fs.readFileSync("./speaker.wav");

// Upload the file
const uploadResult = await jigsaw.store.upload(audioFile, {
  filename: "speaker",
});

// Retrieve the file key
const fileKey = uploadResult.key;

// Use the file key for Text to Speech
const response = await jigsaw.audio.text_to_speech({
  text: "Hello, how are you doing?",
  voice_clone_id: fileKey,
});

const data = await response.blob();
```

## Voice Clone Management

JigsawStack provides functionalities to create, list, and delete voice clones for Text to Speech. These voice clones can be reused across multiple text-to-speech requests.

### Create Voice Clone

Create a new voice clone from an audio sample.

```javascript Creating a Voice Clone
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({
  apiKey: "your-api-key",
});

// Using a URL
const response = await jigsaw.audio.create_clone({
  url: "https://example.com/path/to/voice-sample.mp3",
  name: "My Custom Voice",
});

// OR using a file store key
const response = await jigsaw.audio.create_clone({
  file_store_key: "your-file-store-key",
  name: "My Custom Voice",
});

console.log(response);
// Sample response:
// {
//   "voice_id": "2c57465d-1ffb-42f7-909a-d587bc9f977e",
//   "name": "My Custom Voice",
//   "created_at": "2025-05-22T20:49:05.03065+00:00"
// }
```

### List Voice Clones

Retrieve a list of all your voice clones.

```javascript Listing Voice Clones
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({
  apiKey: "your-api-key",
});

// Get all voice clones (default pagination)
const response = await jigsaw.audio.list_clones();

// With pagination
const response = await jigsaw.audio.list_clones({
  limit: 10, // Number of items per page
  page: 1, // Page number (starting from 1)
});

console.log(response);
// Sample response:
// {
//   "voice_clones": [
//     {
//       "id": "2c57465d-1ffb-42f7-909a-d587bc9f977e",
//       "name": "My Custom Voice",
//       "created_at": "2025-05-22T20:49:05.03065+00:00"
//     },
//     // ... more clones
//   ],
//   "page": 1,
//   "limit": 10,
//   "has_more": false
// }
```

### Delete Voice Clone

Delete a voice clone when you no longer need it.

```javascript Deleting a Voice Clone
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({
  apiKey: "your-api-key",
});

// Delete a voice clone using its ID
const response = await jigsaw.audio.delete_clone("2c57465d-1ffb-42f7-909a-d587bc9f977e");

console.log(response);
// Sample response:
// {
//   "status": "success",
//   "message": "Voice clone deleted successfully"
// }
```

### Using Voice Clones for Text to Speech

Once you've created a voice clone, you can use it for text-to-speech by referencing its ID.

```javascript Using a Voice Clone
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({
  apiKey: "your-api-key",
});

const response = await jigsaw.audio.text_to_speech({
  text: "Hello, this is my cloned voice speaking.",
  voice_clone_id: "2c57465d-1ffb-42f7-909a-d587bc9f977e",
});

const data = await response.blob();
```


 This is the content for the doc docs/examples/computer-vision/screenshot.mdx 

 ---
title: "HTML To Any"
description: "Learn how to capture website screenshots and generate images or PDFs using JigsawStack's HTML To Any API"
---

## Overview

The HTML To Any API allows you to capture high-quality screenshots of any webpage or HTML content. This powerful tool enables you to generate images in various formats (PNG, JPEG, WebP) or PDF documents with extensive customization options for different use cases.

- High-quality website captures with customizable resolution
- Support for multiple output formats (PNG, JPEG, WebP, PDF)
- Full-page screenshots that capture entire scrollable content
- Dark mode rendering support
- Advanced options for PDF generation

## API Endpoint

```
POST /v1/web/html_to_any
```

## Quick Start

```javascript JavaScript
import { JigsawStack } from 'jigsawstack';
import fs from 'fs';
import path from 'path';

const jigsaw = new JigsawStack('your-api-key');

const params = {
  url: "https://jigsawstack.com",
  quality: 80,
  full_page: true,
  type: "jpeg",
  dark_mode: true
};

const result = await jigsaw.web.html_to_any(params);
const buffer = await result.arrayBuffer();

fs.writeFileSync(
  path.join(__dirname, 'screenshot.jpeg'),
  Buffer.from(buffer)
);
```

## Optimizing Performance

For faster screenshot generation:

```javascript
// Optimize load time by only waiting for essential elements
const result = await jigsaw.web.html_to_any({
  url: "https://example.com",
  goto_options: {
    wait_until: "domcontentloaded", // Faster than waiting for full load
    timeout: 5000 // Shorter timeout for quicker response
  },
  quality: 70, // Lower quality for faster processing
  type: "jpeg" // Usually processes faster than PNG
});
```

### Capturing Single-Page Applications

For SPAs or dynamic content that requires extra time to load:

```javascript
// Give more time for JavaScript-heavy pages to render
const result = await jigsaw.web.html_to_any({
  url: "https://dynamic-spa-example.com",
  goto_options: {
    wait_until: "networkidle0", // Wait until network is idle
    timeout: 15000 // Extended timeout for dynamic content
  },
  full_page: true
});
```

## Common Questions

### What's the difference between capturing by URL vs. HTML?

When you provide a URL, the API loads the complete webpage including all external resources like JavaScript, CSS, and images. When you provide HTML directly, you need to ensure all resources are either embedded or accessible via absolute URLs.

### How long does the API wait for a page to load?

By default, the API waits for the window.load event with a timeout of 15 seconds. You can customize this behavior using the goto_options parameter to wait for different events like domcontentloaded or networkidle0.



 This is the content for the doc docs/examples/computer-vision/vocr.mdx 

 ---
title: "vOCR"
description: "Extract data from any document type in a consistent structure with fine-tuned vLLMs for the highest accuracy."
---

## Introduction

The vOCR is a robust Object Character Recognition (OCR) API, enhanced with fine-tuned vLLMs, designed to efficiently extract data from various document types in a consistent structure.

**vOCR** shines at the following:

- KYC Automation: Streamlines the verification process by extracting Personally Identifiable Information (PII) from documents to verify customer identity.
- Financial Data Extraction: Automates the extraction of financial data from statements, reports, and other financial documents for analysis and reporting.
- Healthcare Records Management: Extracts patient information, medical history, and treatment details from healthcare records for efficient data management and analysis.
- Classification Engines: Facilitates accurate categorization and organization of extracted data.

Let's see the vOCR in action by building a data extractor.

## Initial requirements

- Setup a JigsawStack account (if you don't have an account already)
- Get your JigsawStack API key from [here](https://jigsawstack.com/dashboard).

### Request 

```javascript JavaScript
import { JigsawStack } from "jigsawstack";

const jigsawstack = JigsawStack({
apiKey: "your-api-key",
});

const result = await jigsawstack.vision.vocr({
  prompt: ["Title", "Description"],
  url: "https://res.cloudinary.com/dev-ninja/image/upload/v1712567895/webhooks_qaaslj.png"
});
```

### Response

```json
{
"success": true,
"context": {
  "Title": [
    "Webhook Trigger"
  ],
  "Description": [
    "Select events that will trigger the webhook will listen to. At least one event must be selected.",
    "Success logs",
    "Error logs",
    "Endpoint",
    "Create"
  ]
},
"width": 2880,
"height": 1800,
"tags": [
  "text",
  "screenshot",
  "software",
  "multimedia software",
  "graphics software"
],
"has_text": true,
"sections": [
  {
    "text": "",
    "lines": []
  }
]
}
```


<Info>Find more information on vOCR API [here](/docs/api-reference/ai/vocr)</Info>


 This is the content for the doc docs/examples/content-validation/nsfw.mdx 

 ---
title: "NSFW Detection"
description: "Learn how to use the JigsawStack NSFW Detection API to identify inappropriate images"
---

## Overview

The NSFW (Not Safe For Work) Detection API helps you identify potentially inappropriate images, including nudity, violence, and explicit content. This API is essential for applications that need to maintain content standards, protect users from offensive material, or comply with platform guidelines.

- High-accuracy detection of explicit visual content
- Multiple content categories detection (nudity, gore, etc.)
- Fast analysis response times
- Simple integration with any image source
- Confidence scores for detailed risk assessment

## API Endpoint

```
POST /v1/validate/nsfw
```

## Initial requirements

- Setup a JigsawStack account (if you don't have an account already)
- Get your API key from here.
- Install the Node.js SDK

## Check a file


```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsawstack = JigsawStack({
  apiKey: "your-api-key",
});

const url = "<the-image-url>";
const result = await jigsawstack.validate.nsfw(url);

console.log(result);
```


## Sample result

```json
{
  "success": true,
  "nsfw": false,
  "nudity": false,
  "gore": false,
  "nudity_score": 0.005777647718787193,
  "nsfw_score": 0.004729619482532144,
  "gore_score": 0.003681591246277094
}
```

 This is the content for the doc docs/examples/content-validation/profanity.mdx 

 ---
title: "Profanity Detection"
description: "Learn how to use JigsawStack's Profanity Detection API to identify and filter inappropriate content"
---

# Profanity Detection

## Overview

The Profanity Detection API helps you identify and filter inappropriate language, slurs, and offensive content in text. Designed for content moderation across various platforms, our API goes beyond simple keyword matching to understand context and detect obfuscated profanity.

**Key Benefits:**
- High-accuracy detection of explicit and implicit profanity
- Context-aware analysis that understands intent
- Detection of obfuscated profanity and character substitutions
- Multiple language support
- Customizable sensitivity levels
- Optional content masking

## Use Cases

### Content Moderation
Filter user-generated content on social platforms, forums, and comments sections.

### Child Safety
Create safe environments for child-friendly applications and educational platforms.

### Brand Protection
Ensure marketing content and customer interactions maintain brand-appropriate language.

## API Endpoint

```
POST /v1/validate/profanity
```

## Quick Start

<RequestExample>
```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.profanity({
  text: "This is a clean message."
});

console.log(response);
```

```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.validate.profanity({
  "text": "This is a clean message."
})

print(response)
```

```bash cURL
curl -X POST https://api.jigsawstack.com/v1/validate/profanity \
  -H "Content-Type: application/json" \
  -H "x-api-key: your-api-key" \
  -d '{
    "text": "This is a clean message."
  }'
```
</RequestExample>

## Response Example

```json
{
  "success": true,
  "message": "Validated successfully",
  "clean_text": "This product is absolutely terrible. What the **** were they thinking?",
  "profanities": ["f***"],
  "profanities_found": 1
}
```

## Request Parameters

### Body Parameters

**text** (string, required)
- The text content to analyze for profanity.
- **Constraints:** Maximum 10,000 characters

**censor_replacement** (string, default: "*")
- The character to replace profane words with.
- Example: If set to "*", "bad word" would become "*** ****"

### Headers

**x-api-key** (string, required)
- Your JigsawStack API key

## Response Structure

**success** (boolean)
- Indicates whether the API call was successful.

**message** (string)
- A message indicating the result of the operation.

**clean_text** (string)
- The original text with profanity replaced by the censor_replacement character.

**profanities** (array)
- An array of profane words found in the text.

**profanities_found** (integer)
- The number of profanities found in the text.

## Best Practices

### Content Moderation Pipeline

Implement a complete content moderation workflow:

```javascript
// Example: Complete content moderation pipeline
async function moderateContent(userContent) {
  // Step 1: Check for profanity
  const profanityResult = await jigsaw.validate.profanity({
    text: userContent,
    censor_replacement: "*"
  });
  
  // Step 2: If content has profanity, use the censored version
  let processedContent = profanityResult.profanities_found > 0 
    ? profanityResult.clean_text 
    : userContent;
  
  // Step 3: Add flags for content that may need manual review
  const needsReview = profanityResult.profanities_found > 3;
  
  // Step 4: Analyze sentiment on clean content
  const sentimentResult = await jigsaw.ai.sentiment({
    text: processedContent
  });
  
  return {
    original: userContent,
    processed: processedContent,
    contains_profanity: profanityResult.profanities_found > 0,
    profanity_count: profanityResult.profanities_found,
    sentiment: sentimentResult.sentiment,
    needs_review: needsReview
  };
}
```

### Handling User-Generated Content at Scale

For platforms with high volume of user content:

```javascript
// Example: Batch processing user-generated content
async function processUserSubmissions(submissions) {
  // Process in batches to avoid rate limiting
  const batchSize = 10;
  const results = [];
  
  for (let i = 0; i < submissions.length; i += batchSize) {
    const batch = submissions.slice(i, i + batchSize);
    const promises = batch.map(async submission => {
      try {
        const profanityCheck = await jigsaw.validate.profanity({
          text: submission.content,
          censor_replacement: "*"
        });
        
        return {
          id: submission.id,
          result: profanityCheck,
          action: determineAction(profanityCheck)
        };
      } catch (error) {
        console.error(`Error processing submission ${submission.id}:`, error);
        return {
          id: submission.id,
          error,
          action: "manual_review"
        };
      }
    });
    
    const batchResults = await Promise.all(promises);
    results.push(...batchResults);
    
    // Avoid rate limiting with a small delay between batches
    if (i + batchSize < submissions.length) {
      await new Promise(resolve => setTimeout(resolve, 1000));
    }
  }
  
  return results;
}

function determineAction(profanityCheck) {
  if (profanityCheck.profanities_found > 5) {
    return "reject";
  } else if (profanityCheck.profanities_found > 2) {
    return "flag_for_review";
  } else if (profanityCheck.profanities_found > 0) {
    return "use_censored_version";
  }
  return "approve";
}
```

## Example Applications

### Chat Application Filter

```javascript
// Example: Real-time chat message filter
function ChatApp() {
  const [message, setMessage] = useState("");
  const [isSending, setIsSending] = useState(false);
  
  const handleSendMessage = async () => {
    if (!message.trim()) return;
    
    setIsSending(true);
    
    try {
      // Check message for profanity before sending
      const profanityCheck = await jigsaw.validate.profanity({
        text: message,
        censor_replacement: "*"
      });
      
      if (profanityCheck.profanities_found > 3) {
        // High profanity count - don't send and alert user
        alert("Your message contains inappropriate language and cannot be sent.");
        return;
      } else if (profanityCheck.profanities_found > 0) {
        // Contains some profanity - confirm with user to send censored version
        const willSendCensored = confirm(
          "Your message contains some inappropriate language. " +
          "Would you like to send a filtered version instead?"
        );
        
        if (willSendCensored) {
          await sendMessageToChat(profanityCheck.clean_text);
        } else {
          return;
        }
      } else {
        // No profanity - send as is
        await sendMessageToChat(message);
      }
      
      // Clear input after sending
      setMessage("");
    } catch (error) {
      console.error("Error sending message:", error);
      alert("Failed to send message. Please try again.");
    } finally {
      setIsSending(false);
    }
  };
  
  return (
    // Chat UI components...
  );
}
```

### Content Moderation Dashboard

```javascript
// Example: Admin dashboard for content moderation
async function ContentModerationDashboard() {
  // Get content that needs moderation
  const pendingContent = await fetchPendingContent();
  
  // Process each content item
  const processedItems = await Promise.all(
    pendingContent.map(async item => {
      // Run profanity check
      const profanityCheck = await jigsaw.validate.profanity({
        text: item.content,
        censor_replacement: "*"
      });
      
      // Run sentiment analysis
      const sentimentCheck = await jigsaw.ai.sentiment({
        text: item.content
      });
      
      // Determine recommended action
      let recommendedAction = "approve";
      
      if (profanityCheck.profanities_found > 5) {
        recommendedAction = "reject";
      } else if (profanityCheck.profanities_found > 2) {
        recommendedAction = "review";
      } else if (sentimentCheck.sentiment.label === "negative" && sentimentCheck.sentiment.score > 0.8) {
        recommendedAction = "review";
      }
      
      return {
        ...item,
        profanityCheck,
        sentimentCheck,
        recommendedAction
      };
    })
  );
  
  // Group content by recommended action
  const groupedContent = {
    approve: processedItems.filter(item => item.recommendedAction === "approve"),
    reject: processedItems.filter(item => item.recommendedAction === "reject"),
    review: processedItems.filter(item => item.recommendedAction === "review")
  };
  
  // Render dashboard with content groups
  return groupedContent;
}
```

### Implementing Multi-Layer Content Filtering

```javascript
// Example: Multi-layer content filtering system
async function multiLayerContentFilter(content) {
  // Layer 1: Basic profanity filter
  const profanityResult = await jigsaw.validate.profanity({
    text: content,
    censor_replacement: "*"
  });
  
  // If no profanity detected, check for subtle inappropriate content
  if (profanityResult.profanities_found === 0) {
    // Layer 2: Check for more subtle inappropriate content using AI
    try {
      // This could be a custom AI-based content moderation API
      const aiModeration = await jigsaw.ai.sentiment({
        text: content
      });
      
      // Example detection of potentially harmful content
      const harmfulEmotions = ['anger', 'hatred', 'disgust'];
      const hasHarmfulEmotion = harmfulEmotions.some(
        emotion => aiModeration.sentiment.emotions && 
                  aiModeration.sentiment.emotions[emotion] > 0.7
      );
      
      if (hasHarmfulEmotion) {
        return {
          status: "flagged",
          reason: "potentially_harmful_sentiment",
          content: content,
          needs_review: true
        };
      }
    } catch (error) {
      console.error("AI moderation failed:", error);
      // Fall back to basic filtering if AI check fails
    }
  }
  
  // Apply appropriate action based on profanity detection
  if (profanityResult.profanities_found > 5) {
    return {
      status: "rejected",
      reason: "excessive_profanity",
      content: null,
      needs_review: false
    };
  } else if (profanityResult.profanities_found > 0) {
    return {
      status: "modified",
      reason: "profanity_detected",
      content: profanityResult.clean_text,
      needs_review: profanityResult.profanities_found > 3
    };
  }
  
  // Content passed all checks
  return {
    status: "approved",
    reason: "passed_all_filters",
    content: content,
    needs_review: false
  };
}
```

## Frequently Asked Questions

### How effective is the profanity detection for non-English content?

The profanity detection API is most effective for English content, but also provides good coverage for major languages including Spanish, French, German, Italian, and Portuguese. For other languages, basic profanity detection is available but may not catch language-specific slang or culturally specific offensive terms.

### Can the API detect deliberately obfuscated profanity?

Yes, the API is designed to detect common obfuscation techniques such as:
- Character substitution (e.g., "sh!t", "f**k")
- Letter omission (e.g., "sh-t", "fck")
- Deliberate misspellings (e.g., "phuck")
- Zero-width space insertion

However, very creative or unusual obfuscation methods might occasionally bypass detection.

### How can I reduce false positives?

If you're experiencing false positives (benign words incorrectly flagged as profanity), consider these approaches:
1. Post-process the results to whitelist certain terms specific to your domain
2. Implement a user feedback system to identify false positives
3. Add a human review step for edge cases


 This is the content for the doc docs/examples/content-validation/spam-check.mdx 

 ---
title: "Spam Detection"
description: "Learn how to use JigsawStack's Spam Detection API to identify and filter unwanted messages and content"
---

# Spam Detection

## Overview

The Spam Detection API helps you identify unwanted or unsolicited content across various channels, including emails, comments, reviews, and form submissions. Using advanced machine learning algorithms, it analyzes content to distinguish between legitimate messages and spam with high accuracy.

**Key Benefits:**
- High-accuracy spam detection across multiple content types
- Detailed confidence scores with granular classification
- Specialized detection for different spam categories
- Low false positive rates for minimal legitimate content filtering
- Adaptable to domain-specific contexts

## Use Cases

### Comment Protection
Filter spam from blog comments, forum posts, and user-generated content.

### Contact Form Validation
Identify spam submissions in website contact forms and lead generation pages.

### Email Filtering
Add an additional layer of spam protection to email communications.

## API Endpoint

```
POST /v1/validate/spam_check
```

## Quick Start

### Python

```python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.validate.spamcheck({
  "text": "CONGRATULATIONS! You've been selected to receive a FREE iPhone 13 Pro Max! Click here to claim now: http://bit.ly/claim-free-iphone"
})

print(response)
```

### JavaScript

```javascript
import { JigsawStack } from 'jigsawstack';

const jigsaw = new JigsawStack('your-api-key');

const response = await jigsaw.validate.spamcheck({
  text: "CONGRATULATIONS! You've been selected to receive a FREE iPhone 13 Pro Max! Click here to claim now: http://bit.ly/claim-free-iphone"
});

console.log(response);
```

### cURL

```bash
curl -X POST https://api.jigsawstack.com/v1/validate/spam_check \
  -H "Content-Type: application/json" \
  -H "x-api-key: your-api-key" \
  -d '{
    "text": "CONGRATULATIONS! You've been selected to receive a FREE iPhone 13 Pro Max! Click here to claim now: http://bit.ly/claim-free-iphone"
  }'
```

## Response Example

```json
{
  "success": true,
  "check": {
    "is_spam": true,
    "score": 0.92
  }
}
```

## Request Parameters

### Body Parameters

**text** (string | string[], required)
- The text to check for spam.
- The `text` parameter supports two types:
  - `string` - `{"text":"Your text here"}`
  - `Array<string>` - `{"text":["Text 1", "Text 2"]}`
- **Constraints:** Maximum 50,000 characters

### Headers

**x-api-key** (string, required)
- Your JigsawStack API key

## Response Structure

**success** (boolean)
- Indicates whether the API call was successful.

**check** (object)
- Contains the spam check results.

**check.is_spam** (boolean)
- Indicates whether the text is spam. If the text is not spam, this will be false.

**check.score** (number)
- The spam score of the text. The lower the score, the less likely it will be spam.

## Best Practices

### Handling Edge Cases

When implementing spam detection, consider these edge cases and best practices:

1. **Short Messages**: Very brief messages may not provide enough context for accurate detection. Consider implementing length thresholds before sending content for analysis.

2. **False Positives**: Some legitimate messages may occasionally be flagged as spam. Consider implementing a scoring threshold appropriate to your use case rather than relying solely on the binary `is_spam` value.

3. **Bulk Processing**: When processing large volumes of content, use the array input format to improve efficiency.

```javascript
// Example: Processing multiple messages efficiently
async function bulkSpamCheck(messages) {
  // Group messages in batches of 100
  const results = [];
  for (let i = 0; i < messages.length; i += 100) {
    const batch = messages.slice(i, Math.min(i + 100, messages.length));
    const response = await jigsaw.validate.spamcheck({
      text: batch
    });
    
    if (response.success) {
      // Handle batch results
      const batchResults = Array.isArray(response.check) 
        ? response.check 
        : [response.check];
      
      results.push(...batchResults.map((check, index) => ({
        message: batch[index],
        isSpam: check.is_spam,
        score: check.score
      })));
    }
  }
  return results;
}
```

### Customizing Thresholds

Different applications may require different spam sensitivity levels. Customize your implementation based on your specific needs:

```javascript
// Example: Customizing spam detection thresholds
function classifyMessage(spamCheckResult) {
  const { is_spam, score } = spamCheckResult.check;
  
  // Custom classification logic
  if (score > 0.8) {
    return "definitely_spam"; // Block or hide this content
  } else if (score > 0.5) {
    return "likely_spam"; // Flag for moderation
  } else if (score > 0.2) {
    return "possible_spam"; // Show but with warning
  } else {
    return "not_spam"; // Show normally
  }
}

// Usage
const response = await jigsaw.validate.spamcheck({
  text: "Check out this amazing offer! Limited time only!"
});

const classification = classifyMessage(response);
// Handle message based on classification
```

## Example Applications

### Comment Moderation System

```javascript
// Example: Comment moderation system with spam detection
class CommentModerator {
  constructor(apiKey) {
    this.jigsaw = new JigsawStack(apiKey);
    this.pendingComments = [];
    this.approvedComments = [];
    this.rejectedComments = [];
  }
  
  async processNewComment(comment) {
    try {
      // Check for spam
      const spamCheckResult = await this.jigsaw.validate.spamcheck({
        text: comment.content
      });
      
      if (!spamCheckResult.success) {
        // API call failed, add to pending for manual review
        comment.status = 'pending';
        comment.moderationNote = 'Spam check failed, needs manual review';
        this.pendingComments.push(comment);
        return { status: 'pending', reason: 'api_error' };
      }
      
      const { is_spam, score } = spamCheckResult.check;
      
      // Determine action based on spam score
      if (score > 0.8) {
        // High confidence spam
        comment.status = 'rejected';
        comment.moderationNote = `Rejected automatically: spam score ${score}`;
        this.rejectedComments.push(comment);
        return { status: 'rejected', reason: 'high_spam_score', score };
      } else if (score > 0.5) {
        // Likely spam, queue for review
        comment.status = 'pending';
        comment.moderationNote = `Flagged for review: spam score ${score}`;
        this.pendingComments.push(comment);
        return { status: 'pending', reason: 'moderate_spam_score', score };
      } else {
        // Approved
        comment.status = 'approved';
        this.approvedComments.push(comment);
        return { status: 'approved', score };
      }
    } catch (error) {
      console.error('Error in comment moderation:', error);
      comment.status = 'pending';
      comment.moderationNote = 'System error, needs manual review';
      this.pendingComments.push(comment);
      return { status: 'pending', reason: 'system_error' };
    }
  }
  
  getCommentsAwaitingModeration() {
    return this.pendingComments;
  }
  
  getApprovedComments() {
    return this.approvedComments;
  }
  
  // Manual moderation methods
  approveComment(commentId) {
    // Implementation for manual approval
  }
  
  rejectComment(commentId) {
    // Implementation for manual rejection
  }
}

// Usage
const moderator = new CommentModerator('your-api-key');

// When a new comment is submitted
app.post('/comments', async (req, res) => {
  const newComment = {
    id: generateUniqueId(),
    author: req.body.author,
    content: req.body.content,
    timestamp: new Date().toISOString()
  };
  
  const moderationResult = await moderator.processNewComment(newComment);
  
  if (moderationResult.status === 'approved') {
    res.status(201).json({ 
      message: 'Comment posted successfully',
      comment: newComment
    });
  } else if (moderationResult.status === 'pending') {
    res.status(202).json({ 
      message: 'Comment submitted and awaiting moderation'
    });
  } else {
    res.status(403).json({ 
      message: 'Comment rejected due to policy violation'
    });
  }
});
```

### Contact Form Spam Filter

```javascript
// Example: Contact form submission with spam filtering
async function handleContactFormSubmission(formData) {
  // Combine form fields for spam analysis
  const textToCheck = [
    `Name: ${formData.name}`,
    `Email: ${formData.email}`,
    `Subject: ${formData.subject}`,
    `Message: ${formData.message}`
  ].join('\n');
  
  try {
    // Check for spam
    const result = await jigsaw.validate.spamcheck({
      text: textToCheck
    });
    
    if (!result.success) {
      return { success: false, error: 'Unable to process submission' };
    }
    
    const { is_spam, score } = result.check;
    
    // Handle based on spam status
    if (is_spam) {
      // Log spam attempt but don't tell the user
      logSpamAttempt(formData, score);
      
      if (score > 0.9) {
        // High confidence spam, silently drop
        return { success: true, message: 'Thank you for your submission!' };
      } else {
        // Lower confidence, flag for review
        saveToReviewQueue(formData, score);
        return { success: true, message: 'Thank you for your submission! Our team will review it shortly.' };
      }
    } else {
      // Not spam, process normally
      const notificationSent = await sendContactNotification(formData);
      saveToDatabase(formData);
      
      if (notificationSent) {
        return { success: true, message: 'Thank you for your message! We will respond shortly.' };
      } else {
        return { success: true, message: 'Thank you for your message! It has been saved to our system.' };
      }
    }
  } catch (error) {
    console.error('Contact form processing error:', error);
    return { success: false, error: 'An error occurred processing your submission' };
  }
}
```


 This is the content for the doc docs/examples/content-validation/spell-check.mdx 

 ---
title: "Spell Check"
description: "Learn how to use JigsawStack's Spell Check API to detect and correct spelling errors in text content"
---

# Spell Check

## Overview

The Spell Check API provides intelligent detection and correction of spelling errors in text content. Designed to be both accurate and context-aware, this API can improve content quality for various text-based applications without requiring complex NLP knowledge or infrastructure.

**Key Benefits:**
- High-accuracy spelling error detection and correction
- Context-aware corrections that understand meaning
- Support for multiple languages
- Flexible output options with correction suggestions
- Real-time error detection for interactive applications

## Use Cases

### Content Quality Assurance
Automatically check spelling in articles, blogs, and other written content.

### Educational Tools
Create learning applications that help students improve their spelling.

### Form Validation
Enhance user experience by detecting spelling errors before form submission.

## API Endpoint

```
POST /v1/validate/spell_check
```

## Quick Start

### Python

```python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.validate.spellcheck({
  "text": "This sentense has some speling errors that need to be corected.",
  "language_code": "en"
})

print(response)
```

### JavaScript

```javascript
import { JigsawStack } from 'jigsawstack';

const jigsaw = new JigsawStack('your-api-key');

const response = await jigsaw.validate.spellcheck({
  text: "This sentense has some speling errors that need to be corected.",
  language_code: "en"
});

console.log(response);
```

### cURL

```bash
curl -X POST https://api.jigsawstack.com/v1/validate/spell_check \
  -H "Content-Type: application/json" \
  -H "x-api-key: your-api-key" \
  -d '{
    "text": "This sentense has some speling errors that need to be corected.",
    "language_code": "en"
  }'
```

## Response Example

```json
{
  "success": true,
  "message": "Validated successfully",
  "misspellings_found": 3,
  "auto_correct_text": "This sentence has some spelling errors that need to be corrected."
}
```

## Request Parameters

### Body Parameters

**text** (string, required)
- The text content to check for spelling errors.
- **Constraints:** Maximum 10,000 characters per request

**language_code** (string, optional)
- The language code of the text being checked
- Default: "en" (English)
- Supported languages: "en" (English), "es" (Spanish), "fr" (French), "de" (German), "it" (Italian), "pt" (Portuguese)

### Headers

**x-api-key** (string, required)
- Your JigsawStack API key

## Response Structure

**success** (boolean)
- Indicates whether the API call was successful.

**message** (string)
- A message describing the result of the operation.

**misspellings_found** (number)
- The number of spelling errors found in the text.

**auto_correct_text** (string)
- The text with spelling errors automatically corrected.
- If no misspellings were found, returns the original text.

## Best Practices

### Handling Long Documents

When checking lengthy documents, split them into smaller chunks to stay within API limits:

```javascript
function checkSpellingInLongDocument(document) {
  // Split document into chunks of 10,000 characters or less
  const chunks = [];
  for (let i = 0; i < document.length; i += 9000) {
    chunks.push(document.substring(i, i + 9000));
  }
  
  // Process each chunk
  const checkAllChunks = async () => {
    const promises = chunks.map(chunk => 
      jigsaw.validate.spellcheck({
        text: chunk,
        language_code: "en"
      })
    );
    
    const responses = await Promise.all(promises);
    
    // Count total misspellings
    const totalMisspellings = responses.reduce(
      (sum, response) => sum + response.misspellings_found, 
      0
    );
    
    // Combine corrected text
    const correctedDocument = responses.map(r => r.auto_correct_text).join("");
    
    return {
      correctedDocument,
      totalMisspellings,
      accuracy: 1 - (totalMisspellings / document.split(/\s+/).length)
    };
  };
  
  return checkAllChunks();
}
```

### Real-time Spell Checking

For text editors or input fields with real-time spell checking:

```javascript
import { JigsawStack } from 'jigsawstack';
import { useState, useEffect } from 'react';
import debounce from 'lodash.debounce';

const jigsaw = new JigsawStack('your-api-key');

function SpellCheckEditor() {
  const [text, setText] = useState('');
  const [correctedText, setCorrectedText] = useState('');
  const [isChecking, setIsChecking] = useState(false);
  const [errors, setErrors] = useState(0);
  
  // Example of real-time spell checking with debounce
  useEffect(() => {
    if (!text) return;
    
    // Debounced spell check function (runs 500ms after user stops typing)
    const checkSpelling = debounce(async (content) => {
      if (!content || content.length < 5) return;
      
      setIsChecking(true);
      try {
        const response = await jigsaw.validate.spellcheck({
          text: content,
          language_code: "en"
        });
        
        if (response.misspellings_found > 0) {
          setCorrectedText(response.auto_correct_text);
          setErrors(response.misspellings_found);
        } else {
          setCorrectedText('');
          setErrors(0);
        }
      } catch (error) {
        console.error("Spell check error:", error);
      } finally {
        setIsChecking(false);
      }
    }, 500);
    
    // Call spell check whenever text changes
    setText(text);
    checkSpelling(text);
    
    return () => {
      checkSpelling.cancel();
    };
  }, [text]);
  
  return (
    <div>
      <textarea 
        value={text}
        onChange={(e) => setText(e.target.value)}
        placeholder="Type here to check spelling in real-time"
        rows={10}
      />
      {isChecking && <div>Checking spelling...</div>}
      {errors > 0 && (
        <div>
          <p>{errors} spelling errors found</p>
          <div>
            <strong>Suggested correction:</strong>
            <p>{correctedText}</p>
          </div>
        </div>
      )}
    </div>
  );
}
```

## Example Applications

### CMS Integration

```javascript
// Example: Add spell check to a CMS before publishing
async function validateArticleBeforePublish(article) {
  const warnings = [];
  
  // Check title and body separately
  const titleCheck = await jigsaw.validate.spellcheck({
    text: article.title,
    language_code: "en"
  });
  
  const bodyCheck = await jigsaw.validate.spellcheck({
    text: article.body,
    language_code: "en"
  });
  
  // Prepare warnings if spelling errors were found
  
  if (titleCheck.misspellings_found > 0) {
    warnings.push({
      type: "title_spelling",
      message: `${titleCheck.misspellings_found} spelling errors found in title`,
      suggestion: titleCheck.auto_correct_text
    });
  }
  
  if (bodyCheck.misspellings_found > 0) {
    warnings.push({
      type: "body_spelling",
      message: `${bodyCheck.misspellings_found} spelling errors found in content`,
      suggestion: "Review the content editor for spelling suggestions"
    });
  }
  
  return {
    canPublish: true, // Still allow publishing with warnings
    warnings,
    suggestedTitle: titleCheck.auto_correct_text,
    suggestedBody: bodyCheck.auto_correct_text
  };
}
```

### Social Media Post Enhancer

```javascript
// Example: Pre-process social media posts to fix spelling
async function enhanceSocialMediaPost(post) {
  try {
    // Check for spelling errors
    const spellCheck = await jigsaw.validate.spellcheck({
      text: post.content,
      language_code: post.language || "en"
    });
    
    // Apply corrections if needed
    return {
      ...post,
      text: spellCheck.misspellings_found > 0
        ? spellCheck.auto_correct_text
        : post.content,
      tags: post.tags,
      media: post.media,
      schedule: post.schedule,
      platforms: post.platforms,
      enhancements: {
        ...post.enhancements,
        spelling_corrected: spellCheck.misspellings_found > 0,
        original_text: spellCheck.misspellings_found > 0
          ? post.content
          : null,
        auto_correct: spellCheck.misspellings_found > 0
          ? spellCheck.auto_correct_text
          : null
      },
      metadata: {
        ...post.metadata,
        spellErrors: spellCheck.misspellings_found,
        quality_score: calculateQualityScore(post, spellCheck)
      }
    };
  } catch (error) {
    console.error("Error enhancing post:", error);
    return post; // Return original post if enhancement fails
  }
}
```

### SEO Meta Content Checker

```javascript
// Example: SEO tool that checks spelling in meta content
async function checkMetaContentSpelling(website) {
  const metaContent = {
    title: website.seoTitle,
    description: website.metaDescription,
    keywords: website.metaKeywords,
    og_title: website.ogTitle,
    og_description: website.ogDescription
  };
  
  const results = {};
  
  // Check each meta element
  for (const [key, content] of Object.entries(metaContent)) {
    if (!content) continue;
    
    const spellCheck = await jigsaw.validate.spellcheck({
      text: content,
      language_code: "en"
    });
    
    results[key] = {
      hasErrors: spellCheck.misspellings_found > 0,
      errorCount: spellCheck.misspellings_found,
      correction: spellCheck.auto_correct_text
    };
  }
  
  // Calculate overall score (0-100)
  const totalErrors = Object.values(results).reduce(
    (sum, result) => sum + result.errorCount, 
    0
  );
  
  const totalItems = Object.keys(results).length;
  const seoSpellingScore = Math.max(0, 100 - (totalErrors * 10));
  
  return {
    metaSpellingResults: results,
    seoSpellingScore,
    recommendation: seoSpellingScore < 80 
      ? "Correct spelling errors in meta content for better SEO performance"
      : "Meta content spelling looks good"
  };
}
```

## FAQ

### How does the spell checker handle proper nouns?

The spell checker is designed to recognize common proper nouns like names, brands, and places. However, very new, uncommon, or industry-specific proper nouns might be flagged as misspellings. If your content contains many specialized terms, consider building a custom dictionary for your specific use case.

### Does the spell checker recognize technical terminology?

The spell checker includes common terminology from various fields including technology, medicine, law, and science. For highly specialized content, it's recommended to review corrections rather than applying them automatically.

### Can I use the spell checker for languages other than English?

Yes, the spell checker supports multiple languages including Spanish, French, German, Italian, and Portuguese. Make sure to specify the correct language_code parameter for the language of your text to get accurate results.


 This is the content for the doc docs/examples/core-ai/image-generation.mdx 

 ---
title: "Image Generation"
description: "Learn how use JigsawStack SDK to generate a images"
---

Generate an image based on the given text by automatically employing AI models like Flux, Stable Diffusion, DALL¬∑E, and other top models.

## Quick Start

```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.image_generation({
  prompt: "A serene mountain landscape at sunset",
  aspect_ratio: "16:9",
  width: 1280,
  height: 720,
  steps: 30,
  output_format: "png",
});

console.log(response);
```

### Specify the image aspect ratio

You can specify different aspect ratios for your generated images. Here are the supported ratios and their common use cases:

| Aspect Ratio | Common Use Cases |
|-------------|------------------|
| `1:1`       | Social media posts, profile pictures |
| `16:9`      | YouTube thumbnails, presentations |
| `21:9`      | Ultrawide displays, cinematic shots |
| `3:2`       | Digital photography, postcards |
| `2:3`       | Mobile phone wallpapers, book covers |
| `4:5`       | Instagram portraits |
| `5:4`       | Photo prints, desktop wallpapers |
| `3:4`       | Digital displays, e-reader content |
| `4:3`       | Traditional computer displays |
| `9:16`      | Mobile-first content, stories |
| `9:21`      | Vertical ultrawide displays |


## Writing Effective Prompts

- **Be Specific**: Instead of "a cat", try "a fluffy orange tabby cat sleeping on a windowsill in soft morning light"
- **Include Details**: Mention style, lighting, perspective, and mood
- **Use Artistic References**: Include terms like "digital art", "oil painting", or "photography"
- **Avoid Negatives**: Instead of saying what you don't want, focus on what you do want


## Example

```javascript Generate an Artistic Portrait
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.image_generation({
  prompt: "Create an image of a vast, futuristic cathedral-like interior with towering stained glass windows casting vibrant blue and orange light. In the center, a majestic, ethereal whale floats gracefully, its body shimmering with a mosaic of colors reflecting the stained glass. Surrounding the whale are several large, translucent, glowing crystals suspended in mid-air, each reflecting the ambient light. On the ground, a few small human figures stand in awe, emphasizing the scale and grandeur of the scene. The atmosphere is mystical and otherworldly, blending elements of fantasy and science fiction",
  aspect_ratio: "16:9",
  steps: 30,
  advance_config: {
    negative_prompt: "blurry, distorted, low quality, cartoon, anime"
  }
});

console.log(response);
```

 This is the content for the doc docs/examples/core-ai/prompt-engine.mdx 

 ---
title: "Prompt Engine"
description: "Run any prompt and get the optimal model to execute it without worrying about GPUs, tokens, or rate limits‚Äîit just works effortlessly."
---

## Overview

JigsawStack Prompt Engine is a powerfult API built from the ground up to execute any prompt or instruction seamlessly. It intelligently selects the best model from a cluster of state-of-the-art models, allowing you to focus on results without worrying about GPUs, tokens, or rate limits.

<img
  className="block"
  src="https://res.cloudinary.com/dev-ninja/image/upload/v1725295285/prompt_engine_o3ly4j.png"
  alt="prompt engine"
/>

The **Prompt Engine** takes in three things: the prompt, dynamic variables, and the output structure you expect every single time you run the prompt. The last two are optional. The **Prompt Engine** automatically enhances the initial prompt to improve accuracy, reduce token usage, and prevent output structure breakage.

The **Prompt Engine** is great for a variety of task which include:

- Intelligent AI agents or Chatbots.
- Automations and workflows.
- Data extraction and analysis.
- Complex natural language processing

### The Prompt Engine can be utilized in two ways:

1. Creating and running a reusable prompt (recommended)
2. Executing a prompt directly

Let‚Äôs explore these approaches by evaluating job application entries to determine if candidates meet the necessary job requirements.

## Initial requirements

- Setup a JigsawStack account (if you don't have an account already)
- Get your JigsawStack API key from [here](https://jigsawstack.com/dashboard).
- Install the [Node.js SDK](/docs/quick-start/node/introduction)

### Approach 1 - Creating and executing a reusable prompt (recommended)

#### - Create the prompt

```javascript prompt.ts
import { JigsawStack } from "jigsawstack";

// initialize the JigsawStack SDK
const jigsawstack = JigsawStack({
  apiKey: "your-api-key",
});

// Create a reusable prompt
const params = {
  prompt:
    "Given this candidate's experience:{experience}, determine if she should be considered for the Senior Fullstack Mobile Engineer Role with React Native, Node.js, AWS, Next.js, Typescript",
  inputs: [
    {
      key: "experience",
      optional: false,
    },
  ],
  return_prompt: {
    experienceWithNodejs:
      "Return true, if candidate has 4 years and above experience with Node.js. Else return false",
    seniorInReactNative:
      "Return true if candidate has 6 years and above experience building apps with React Native",
    sectorExperience:
      "Return sector the candidate has the most experience in. Example of sector include: Fintech, Edtech, blockchain, Ecommerce, etc.",
  },
};
const result = await jigsawstack.prompt_engine.create(params);
const prompt_id = result.prompt_engine_id;

console.log(prompt_id);
```

#### - Run the prompt

```javascript
// Execute the prompt using the prompt id
const result = await jigsawstack.prompt_engine.run({
  id: prompt_id,
  input_values: {
    experience:
      "As a seasoned React Native Developer with 4 years of experience, I have a proven track record in building high-quality mobile applications. Over the past 2 years, I have also gained substantial expertise in Node.js, enhancing my ability to develop robust backend services. My proficiency in TypeScript, acquired over the last year, further strengthens my development skills. In my most recent role in the Fintech sector, I successfully contributed to creating secure and efficient financial applications, demonstrating my ability to thrive in dynamic and challenging environments. My comprehensive skill set ensures seamless integration and functionality across diverse platforms.",
  },
});

// Here is the sample result
{
  "success": true,
  "result": {
    "experienceWithNodejs": true,
    "seniorInReactNative": false,
    "sectorExperience": "Fintech"
  }
}
```

### Approach 2 - Executing the prompt directly

```javascript run_prompt_direct.ts
import { JigsawStack } from "jigsawstack";

// initialize the JigsawStack SDK
const jigsawstack = JigsawStack({
  apiKey: "your-api-key",
});


const params = {
  prompt:
    "Given this candidate's experience:{experience}, determine if she should be considered for the Senior Fullstack Mobile Engineer Role with React Native, Node.js, AWS, Next.js, Typescript",
  inputs: [
    {
      key: "experience",
      optional: false,
    },
  ],
  return_prompt: {
    experienceWithNodejs:
      "Return true, if candidate has 4 years and above experience with Node.js. Else return false",
    seniorInReactNative:
      "Return true if candidate has 6 years and above experience building apps with React Native",
    sectorExperience:
      "Return sector the candidate has the most experience in. Example of sector include: Fintech, Edtech, blockchain, Ecommerce, etc.",
  },
};


// Execute prompt outrightly
const result = await jigsawstack.prompt_engine.run_prompt_direct(params);

// Here is the sample result
{
  "success": true,
  "result": {
    "experienceWithNodejs": true,
    "seniorInReactNative": false,
    "sectorExperience": "Fintech"
  }
}
```

That's it! We've used the Prompt Engine API to automatically evaluate job applications.

### Recommendations

- For prompts that will be used multiple times, it is recommended to first [Create](/docs/api-reference/prompt-engine/create) the prompt and then [Run](/docs/api-reference/prompt-engine/run) it using the prompt ID for better reliability.
- [Run Prompt Direct](/docs/api-reference/prompt-engine/run-direct) is ideal for one-time use.

<Info>
  Find more information on Prompt Engine API
  [here](/docs/api-reference/prompt-engine/create)
</Info>


 This is the content for the doc docs/examples/core-ai/sentiment.mdx 

 ---
title: "Sentiment Analysis"
description: "Learn how to use the JigsawStack Sentiment Analysis API to analyze text sentiment and emotions"
---

## Overview

The Sentiment Analysis API analyzes text to determine the emotional tone, providing detailed sentiment scoring and classification. This powerful tool detects positive, negative, and neutral sentiment along with specific emotions like joy, sadness, anger, and more.

- Instant sentiment scoring and classification
- Detailed emotion detection with sentence-level analysis
- Contextual understanding of language
- Support for multiple languages
- High accuracy with natural language

## API Endpoint

```
POST /v1/ai/sentiment
```

## Quick Start

```javascript Javascript
import { JigsawStack } from 'jigsawstack';

const jigsaw = new JigsawStack('your-api-key');

const response = await jigsaw.ai.sentiment({
  text: "The customer service was excellent, and I really enjoyed the product!"
});

console.log(response);
```

## Response

```json
{
  "success": true,
  "sentiment": {
    "emotion": "happiness",
    "sentiment": "positive",
    "score": 0.92,
    "sentences": [
      {
        "text": "The customer service was excellent,",
        "emotion": "satisfaction",
        "sentiment": "positive",
        "score": 0.90
      },
      {
        "text": "and I really enjoyed the product!",
        "emotion": "happiness",
        "sentiment": "positive",
        "score": 0.94
      }
    ]
  }
}
```

## Optimizing Sentiment Analysis

For best results with the Sentiment Analysis API:

1. **Provide sufficient context**: Longer text with complete context generally produces more accurate sentiment analysis than short, fragmented content
2. **Consider language nuances**: The API handles various languages and cultural expressions, but providing clear, well-structured text improves accuracy
3. **Use sentence-level analysis**: The API automatically breaks down text into sentences, allowing you to identify sentiment shifts within a single piece of content
4. **Optimal length**: Aim for 10-100 words for best results (maximum 5000 characters per request)

## Example

```javascript Customer Feedback Analyzer
// Example: Analyze customer feedback
async function analyzeCustomerFeedback(feedbackText) {
  const response = await jigsaw.ai.sentiment({
    text: feedbackText
  });
  
  // Find the most negative sentence
  const mostNegativeSentence = response.sentiment.sentences.reduce(
    (mostNegative, current) => {
      if (current.sentiment === "negative" && 
          (mostNegative === null || current.score < mostNegative.score)) {
        return current;
      }
      return mostNegative;
    }, 
    null
  );
  
  return {
    overallSentiment: response.sentiment.sentiment,
    overallScore: response.sentiment.score,
    mostNegativeAspect: mostNegativeSentence ? mostNegativeSentence.text : null
  };
}

// Usage
const feedback = "Overall I liked the product. However, the shipping was delayed by two weeks. The customer service was helpful in resolving the issue.";
const analysis = await analyzeCustomerFeedback(feedback);
console.log(analysis);
```


 This is the content for the doc docs/examples/core-ai/summary.mdx 

 ---
title: "Text Summarization"
description: "Learn how to use JigsawStack's Summarization API to create concise summaries of long-form content"
---

## Overview

The Summarization API allows you to generate concise, accurate summaries of longer text content. Whether you're working with articles, documents, reports, or any long-form content, our API helps extract the essential information while maintaining context and meaning.

- Transform long content into clear, concise summaries
- Maintain key points and semantic meaning
- Support for text, URL, and file inputs
- Flexible output formats (paragraph or bullet points)
- Process PDF documents directly from URLs or storage

## API Endpoint

```
POST /v1/ai/summary
```

## Quick Start

```javascript JavaScript
import { JigsawStack } from 'jigsawstack';

const jigsaw = new JigsawStack('your-api-key');

// Text summary example
const response = await jigsaw.ai.summary({
  text: "The renewable energy sector saw unprecedented growth in 2022, with solar and wind installation rates exceeding forecasts by 25%. Despite supply chain challenges related to the pandemic, global clean energy investment topped $500 billion for the first time. Notably, several major oil companies increased their renewable investments, with commitments to achieve carbon neutrality by 2050. However, challenges remain, including grid integration issues, regulatory hurdles in developing markets, and the need for advanced energy storage solutions. Experts project continued acceleration through 2023, particularly in utility-scale solar and offshore wind development."
});

console.log(response);

// Bullet point summary example
const bulletResponse = await jigsaw.ai.summary({
  text: "The renewable energy sector saw unprecedented growth in 2022...",
  type: "points",
  max_points: 5
});

console.log(bulletResponse);
```

## Response

```json Text Summary Response
{
  "success": true,
  "summary": "Renewable energy had record growth in 2022 with solar and wind exceeding forecasts, despite pandemic-related supply chain issues. Global clean energy investment surpassed $500 billion for the first time, with major oil companies investing in renewables to reach carbon neutrality by 2050. Challenges include grid integration, regulatory barriers, and energy storage needs. Growth is expected to continue in 2023, especially in utility-scale solar and offshore wind."
}
```

```json Bullet Points Response
{
  "success": true,
  "summary": [
    "Renewable energy growth exceeded forecasts by 25% in 2022",
    "Global clean energy investment topped $500 billion",
    "Major oil companies committed to carbon neutrality by 2050",
    "Challenges include grid integration, regulations, and energy storage",
    "Growth expected to continue in utility-scale solar and offshore wind"
  ]
}
```

## Optimizing Summary Quality

For best results with the Summarization API:

1. **Provide sufficient context**: Longer text with complete context generally produces better summaries than short, fragmented content
2. **Choose the right format**: Use `type: "text"` for narrative content and `type: "points"` for factual or structured information
3. **Adjust max_points**: When using bullet points, adjust the `max_points` parameter based on content complexity (more complex content may need more points)
4. **Consider the source**: For PDFs, ensure they're text-based rather than image-based for best results

## Example

```javascript Research Paper Assistant
// Example: Process research papers from PDFs
async function createResearchSummaries(paperUrl) {
  // Generate a text summary from the PDF URL
  const textSummary = await jigsaw.ai.summary({
    url: paperUrl,
    type: "text",
    max_characters: 1000
  });
  
  // Generate key points from the same PDF
  const keyPoints = await jigsaw.ai.summary({
    url: paperUrl,
    type: "points",
    max_points: 10
  });
  
  return {
    fullSummary: textSummary.summary,
    keyPoints: keyPoints.summary
  };
}
```


 This is the content for the doc docs/examples/data/prediction.mdx 

 ---
title: "Prediction"
description: "Learn how to use JigsawStack's Prediction API to forecast time series data"
---

## Overview

The Prediction API allows you to forecast time series data with minimal effort. Unlike traditional machine learning approaches that require model training and parameter tuning, our API automatically analyzes your data patterns and generates accurate predictions in seconds.

- No model training required
- Single API call for instant predictions
- Works with any time-based numerical data
- Automatically detects seasonality and trends
- Supports business forecasting, IoT analytics, and market analysis
- Ideal for resource planning and demand forecasting

## API Endpoint

```
POST /v1/ai/prediction
```

## Quick Start

```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.prediction({
  dataset: [
    { date: "2023-01-01", value: 353459 },
    { date: "2023-01-02", value: 313734 },
    { date: "2023-01-03", value: 333774 },
    { date: "2023-01-04", value: 348636 },
    { date: "2023-01-05", value: 278903 }
  ],
  steps: 3
});

console.log(response);
```

## Response 

```json
{
  "success": true,
  "prediction": [
    {
      "date": "2023-01-06 00:00:00",
      "value": 316329.9375
    },
    {
      "date": "2023-01-07 00:00:00",
      "value": 320094.71875
    },
    {
      "date": "2023-01-08 00:00:00",
      "value": 315214.5625
    }
  ],
  "steps": 3
}
```


## Data Requirements

For optimal prediction accuracy, follow these guidelines:

- **Consistent intervals**: Data points should follow a regular pattern (daily, hourly, etc.)
- **Clean data**: Remove outliers or abnormal values that could skew predictions
- **Sufficient history**: More historical data generally leads to better predictions
- **Complete series**: Avoid gaps in your time series when possible


## Best Practices

- **Start small and iterate**: Begin with a small dataset to test your integration before scaling up
- **Validate predictions**: Compare API predictions with actual outcomes to calibrate expectations
- **Combine with domain knowledge**: Enhance predictions by incorporating business context and external factors
- **Update regularly**: Periodically refresh your models with new data to maintain accuracy

## Limitations

- The prediction model works best with time series data that exhibits patterns or seasonality
- Extreme events or disruptions in patterns may reduce prediction accuracy
- Maximum forecast is limited to 500 steps ahead

## Sample Dataset

A dataset must be an array of objects containing keys `date` and `value`.

```javascript
type Dataset = {
  date: string,
  value: number | string,
};

const dataset: Array<Dataset> = [
  { date: "2023-01-01", value: 353459 },
  { date: "2023-01-02", value: 313734 },
  { date: "2023-01-03", value: 333774 },
  { date: "2023-01-04", value: 348636 },
  { date: "2023-01-05", value: 278903 },
];
```

For personalized assistance, contact our support team at support@jigsawstack.com.

 This is the content for the doc docs/examples/data/text-to-sql.mdx 

 ---
title: "Text To SQL"
description: "JigsawStack Text to SQL example."
---

## Overview

In this example, we will use the Text to SQL API to query transactions records stored in an SQL database on [Dzero](https://dzero.dev/dashboard) using prompts.

## Initial Steps

- Setup a JigsawStack account (if you don't have an account already)
- Get your JigsawStack API key from [here](https://jigsawstack.com/dashboard).
- [Optional] Obtain your Dzero token from [here](https://dzero.dev/dashboard).

### SQL Schema

> A valid schema is passed to the `sql_schema` parameter as a string. The model uses this schema to generate an accurate SQL statement based on the given prompt. Below is an example of valid schema:

```sql
CREATE TABLE transactions (
  id TEXT UNIQUE NOT NULL DEFAULT (
    lower(hex(randomblob(4))) || '-' || lower(hex(randomblob(2))) || '-4' || substr(lower(hex(randomblob(2))), 2) || '-' || substr('89ab', abs(random()) % 4 + 1, 1) || substr(lower(hex(randomblob(2))), 2) || '-' || lower(hex(randomblob(6)))
  ),
  created_at DATETIME NOT NULL DEFAULT (datetime('now', 'subsec')),
  amount NUMERIC NOT NULL,
  user_id TEXT NOT NULL,
  PRIMARY KEY (id));
```

This schema was copied from the Dzero dashboard after the table was created.

## How to retrieve schema

#### SQLite

> Run this query to retrieve a schema for your SQLite database.

```SQL
SELECT sql,name FROM sqlite_schema WHERE type='table' AND sql NOT NULL
```

#### MySQL

```SQL
SELECT CONCAT('SHOW CREATE TABLE ', table_name, ';')
FROM information_schema.tables
WHERE table_schema = 'your_database_name';
```

#### PostgreSQL

```SQL
SELECT
    'CREATE TABLE ' || table_name || ' (' ||
    string_agg(
        column_name || ' ' || data_type ||
        CASE
            WHEN character_maximum_length IS NOT NULL THEN '(' || character_maximum_length || ')'
            ELSE ''
        END ||
        CASE
            WHEN is_nullable = 'NO' THEN ' NOT NULL'
            ELSE ''
        END,
        ', '
    ) || ');' AS create_table_statement
FROM
    information_schema.columns
WHERE
    table_schema = 'your_database_name'
GROUP BY
    table_schema, table_name;
```

### After getting schema (optional)

> If you are performing the operation above in node.js, you can consider the following below:

```javascript
const fullSchema = schemas.map((s) => s.sql).join("\n\n");

// Then use the full schema on guide below.
```

### Usage

```javascript sql.ts
type TextToSQLParams = {
  prompt: string,
  sql_schema: string,
};

type TextToSQLResult = {
  success: boolean,
  sql: string,
};

type BodyParams = {
  prompt: string,
};

import { JigsawStack } from "jigsawstack";

const jigsawstack = JigsawStack({
  apiKey: "your-api-key",
});

export const POST = async (request: Request) => {
  try {
    const params: BodyParams = await request.json();

    // SQL schema
    const schema = `CREATE TABLE transactions (
  id TEXT UNIQUE NOT NULL DEFAULT (
    lower(hex(randomblob(4))) || '-' || lower(hex(randomblob(2))) || '-4' || substr(lower(hex(randomblob(2))), 2) || '-' || substr('89ab', abs(random()) % 4 + 1, 1) || substr(lower(hex(randomblob(2))), 2) || '-' || lower(hex(randomblob(6)))
  ),
  created_at DATETIME NOT NULL DEFAULT (datetime('now', 'subsec')),
  amount NUMERIC NOT NULL,
  user_id TEXT NOT NULL,
  PRIMARY KEY (id))`;

    const payload: TextToSQLParams = {
      prompt: params.prompt,
      sql_schema: schema,
    };

    const data: TextToSQLResult = await jigsawstack.text_to_sql(payload);

    // Makes DB call with translated query
    // Instead of using Dzero, you can use any SQL DB service of your choice.

    const dbResponse = await fetch("https://db.dzero.dev", {
      method: "POST",
      headers: {
        token: "<your-dzero-token>",
        "content-type": "application/json",
      },
      body: JSON.stringify({
        sql: data.sql,
      }),
    });
    const resp = await dbResponse.json();

    return Response.json(
      {
        results: resp.results,
      },
      {
        status: 200,
      }
    );
  } catch (error) {
    handleError(error);
  }
};
```

<Info>
  Find more information on Text to SQL API
  [here](/docs/api-reference/ai/text-to-sql)
</Info>


 This is the content for the doc docs/examples/file-management/file-upload.mdx 

 ---
title: "File Upload"
description: "Learn how to upload files to JigsawStack File Storage and use them across different APIs"
---

## Overview

The JigsawStack File Storage API allows you to easily upload, manage, and serve files for your applications. Files are stored securely and can be accessed via URL, making it an ideal solution for image uploads, document storage, or any file-handling needs in your applications.

> **Note**: The file upload method is ideal for files up to 100MB in size.

- Secure file storage with fine-grained access control
- Simple integration with other JigsawStack APIs
- Automatic content-type detection
- Support for overwriting existing files
- Customizable file accessibility

## API Endpoint

The File Storage API is accessed through the SDK's `store.upload` method.

## Quick Start

```javascript  JavaScript
import { JigsawStack } from 'jigsawstack';
import fs from 'fs';

const jigsaw = new JigsawStack('your-api-key');

// Your public key for making files accessible
const publicKey = "your-public-key";

// Read file data
const imageFile = fs.readFileSync("./beach_house.png");

// Upload the file
const result = await jigsaw.store.upload(imageFile, {
  filename: "beach_house.png",
});

// Create a publicly accessible URL
const publicFileUrl = `${result.url}?x-api-key=${publicKey}`;

console.log("Upload result:", result);
console.log("Public URL:", publicFileUrl);
```

## Advanced Usage

By default, trying to upload a file with a name that already exists will return an error. To replace an existing file, use the `overwrite` parameter:

```javascript Overwriting Existing Files
const result = await jigsaw.store.upload(imageFile, {
  filename: "beach_house.png",
  overwrite: true
});
```

While the API automatically detects the content type of uploaded files, you can explicitly set it with the `content_type` parameter:

```javascript Specifying Content Type
const result = await jigsaw.store.upload(imageFile, {
  filename: "beach_house.png",
  content_type: "image/png"
});
```

Uploaded files are private by default. To make a file accessible without authentication, append your public key to the URL:

```javascript Making Files Publicly Accessible
const publicFileUrl = `${result.url}?x-api-key=${publicKey}`;
```

You can use an uploaded file with other JigsawStack APIs by referencing its `key` in the `file_store_key` parameter:

```javascript Using Uploaded Files with Other JigsawStack APIs
// JavaScript example: Upload an image and use it with Vision OCR
const uploadResult = await jigsaw.store.upload(imageFile, {
  filename: "receipt.jpg"
});

// Use the uploaded image with the Vision OCR API
const ocrResult = await jigsaw.vision.vocr({
  prompt: "Extract all text from this receipt",
  file_store_key: uploadResult.key
});
```


 This is the content for the doc docs/examples/geolocation/geo-search.mdx 

 ---
title: "Geo Search"
description: "Learn how use the Geo Search API"
---

## Initial requirements

- Setup a JigsawStack account (if you don't have an account already)
- Get your API key from [here](https://jigsawstack.com/dashboard).
- Install the [Node.js SDK](/docs/quick-start/node/introduction)

### Search by a search value

<CodeGroup>

```javascript node.js
import { JigsawStack } from "jigsawstack";

const jigsawstack = JigsawStack({
  apiKey: "your-api-key",
});

const result = await jigsawstack.geo.search({
  search_value: "Times square",
});
```

</CodeGroup>

### Narrow search to a specific country

<CodeGroup>

```javascript node.js
import { JigsawStack } from "jigsawstack";

const jigsawstack = JigsawStack({
  apiKey: "your-api-key",
});

const result = await jigsawstack.geo.search({
  search_value: "Times square",
  country_code: "USA",
});
```

</CodeGroup>

### Improve search result accuracy by providing latitude and longitude

<CodeGroup>

```javascript node.js
import { JigsawStack } from "jigsawstack";

const jigsawstack = JigsawStack({
  apiKey: "your-api-key",
});

const result = await jigsawstack.geo.search({
  search_value: "Times square",
  proximity_lat: "-73.9851204",
  proximity_lng: "40.75889",
});
```

</CodeGroup>

### Sample result

```javascript
{
  "success": true,
  "data": [
    {
      "type": "poi",
      "full_address": "New York, New York, New York 10036, United States",
      "name": "Times Square",
      "place_formatted": "New York, New York 10036, United States",
      "postcode": "10036",
      "place": "New York City",
      "region": {
        "name": "New York",
        "region_code": "NY",
        "region_code_full": "US-NY"
      },
      "country": {
        "name": "United States",
        "country_code": "US",
        "country_code_alpha_3": "USA"
      },
      "language": "en",
      "geoloc": {
        "type": "Point",
        "coordinates": [-73.9851204, 40.75889]
      },
      "poi_category": ["historic site", "monument", "tourist attraction"],
      "addtional_properties": {
        "phone": "(212) 768-1560",
        "website": "https://www.timessquarenyc.org",
        "open_hours": {}
      }
    }
  ]
}

```


 This is the content for the doc docs/examples/language-models/sentiment.mdx 

 ## Quick Start

<RequestExample>
```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.sentiment({
  text: "I absolutely love this product! It's amazing."
});

console.log(response);
```

```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.sentiment({
  "text": "I absolutely love this product! It's amazing."
})

print(response)
```

```bash cURL
curl -X POST https://api.jigsawstack.com/v1/ai/sentiment \
  -H "Content-Type: application/json" \
  -H "x-api-key: your-api-key" \
  -d '{
    "text": "I absolutely love this product! It'\''s amazing."
  }'
```
</RequestExample> 

 This is the content for the doc docs/examples/language-models/spam-check.mdx 

 ## Quick Start

<RequestExample>
```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.spamcheck({
  text: "I am happy!"
});

console.log(response);
```

```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.validate.spamcheck({
  "text": "I am happy!"
})

print(response)
```

```bash cURL
curl -X POST https://api.jigsawstack.com/v1/validate/spam_check \
  -H "Content-Type: application/json" \
  -H "x-api-key: your-api-key" \
  -d '{
    "text": "I am happy!"
  }'
```
</RequestExample> 

 This is the content for the doc docs/examples/language-models/spell-check.mdx 

 ## Quick Start

<RequestExample>
```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.spellcheck({
  text: "Ths is a test mesage with sum speling erors."
});

console.log(response);
```

```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.validate.spellcheck({
  "text": "Ths is a test mesage with sum speling erors."
})

print(response)
```

```bash cURL
curl -X POST https://api.jigsawstack.com/v1/validate/spell_check \
  -H "Content-Type: application/json" \
  -H "x-api-key: your-api-key" \
  -d '{
    "text": "Ths is a test mesage with sum speling erors."
  }'
```
</RequestExample> 

 This is the content for the doc docs/examples/language-models/summary.mdx 

 ## Quick Start

<RequestExample>
```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.summary({
  text: "The quick brown fox jumps over the lazy dog. The lazy dog, being lazy, did not move. The fox, being quick, easily cleared the obstacle."
});

console.log(response);
```

```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.summary({
  "text": "The quick brown fox jumps over the lazy dog. The lazy dog, being lazy, did not move. The fox, being quick, easily cleared the obstacle."
})

print(response)
```

```bash cURL
curl -X POST https://api.jigsawstack.com/v1/ai/summary \
  -H "Content-Type: application/json" \
  -H "x-api-key: your-api-key" \
  -d '{
    "text": "The quick brown fox jumps over the lazy dog. The lazy dog, being lazy, did not move. The fox, being quick, easily cleared the obstacle."
  }'
```
</RequestExample> 

 This is the content for the doc docs/examples/language-models/translate.mdx 

 ## Quick Start

<RequestExample>
```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.translate({
  text: "Hello, how are you?",
  target_language: "es"
});

console.log(response);
```

```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.translate({
  "text": "Hello, how are you?",
  "target_language": "es"
})

print(response)
```

```bash cURL
curl -X POST https://api.jigsawstack.com/v1/ai/translate \
  -H "Content-Type: application/json" \
  -H "x-api-key: your-api-key" \
  -d '{
    "text": "Hello, how are you?",
    "target_language": "es"
  }'
```
</RequestExample> 

 This is the content for the doc docs/examples/translate/text-translation.mdx 

 ---
title: "Text Translation"
description: "Learn how to use the JigsawStack Translation API to translate text between 100+ languages"
---

## Overview

The Translation API provides fast, accurate translation between more than 100 languages. Designed for developers looking to build multilingual applications without complex setup, our translation service allows you to integrate language capabilities with just a few lines of code.

- Support for 100+ languages
- High-quality translations with context awareness
- Automatic language detection
- Batch translation support (translate multiple strings at once)
- Specialized vocabulary handling

## API Endpoint

```
POST /v1/ai/translate
```

## Quick Start

```javascript JavaScript
import { JigsawStack } from 'jigsawstack';

const jigsaw = new JigsawStack('your-api-key');

const response = await jigsaw.ai.translate({
  text: "Hello, how are you today?",
  target_language: "es"
});

console.log(response);
```

## Response Example

```json
{
  "success": true,
  "translated_text": "Hola, ¬øc√≥mo est√°s hoy?",
  "detected_language": "en"
}
```

## Supported Languages

The Translation API supports over 100 languages. Here are some of the most commonly used:

| Code | Language   | Code | Language   | Code | Language  |
|------|------------|------|------------|------|-----------|
| ar   | Arabic     | fr   | French     | pt   | Portuguese|
| bn   | Bengali    | de   | German     | ru   | Russian   |
| zh   | Chinese    | hi   | Hindi      | es   | Spanish   |
| en   | English    | ja   | Japanese   | sw   | Swahili   |
| fi   | Finnish    | ko   | Korean     | tr   | Turkish   |

For a complete list of supported languages, please visit our [Language Codes Reference](https://jigsawstack.com/docs/additional-resources/languages).

## Example

You can translate multiple strings at once by passing an array:

```javascript Batch Translation Example
const response = await jigsaw.ai.translate({
  text: [
    "Hello, how are you?",
    "What is your name?",
    "Welcome to our service!"
  ],
  target_language: "fr"
});

console.log(response);
// {
//   success: true,
//   translated_text: [
//     "Bonjour, comment allez-vous ?",
//     "Comment vous appelez-vous ?",
//     "Bienvenue dans notre service !"
//   ],
//   detected_language: "en"
// }
```

 This is the content for the doc docs/examples/web/introduction.mdx 

 ---
title: "Webhook Intro"
description: "Webhooks on JigsawStack."
---

## Overview

Webhooks are used to push real-time data to you about changes(updates) to certain API requests. All webhooks use HTTPS and deliver a JSON payload that can be used by your application. You can use webhook feeds to do things like:

- Create alerts in your messaging or incident tools based on event types
- Store all payload events in your own database for custom reporting/retention
- Update the status of an async request in your application.

## Getting Started

Create a webhook endpoint to receive requests on your server. E.g `https://your-domain.com/api/webhook`

Attach your webhook endpoint to the body parameters of an API that supports webhooks. See example below:

```javascript
const endpoint = "https://api.jigsawstack.com/v1/ai/transcribe";
const options = {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    "x-api-key": "<your-api-key>", // Replace with your actual API key.
  },
  body: JSON.stringify({
    url: "https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Video%201737458382653833217.mp4?t=2024-03-22T09%3A50%3A49.894Z",
    webhook_url: "https://your-domain.com/api/webhook", // Replace with your actual webhook URL.
  }),
};
const result = await fetch(endpoint, options);
const data = await result.json();
```

#### Response

```json
{
  "success": false,
  "status": "success",
  "id": "35643965633a84534a396dcc11252cd1",
  "text": "Hey guys, I'm pretty excited to talk about a new API that we're going to be releasing in Jigsaw Stack. It's our AI Scrape API, which can basically scrape any website by just prompting and giving you back structured data consistently, no matter the site."
  "chunks":[
    {
     "timestamp": [
        0.96,
        7.2
      ],
      "text": " Hey guys, I'm pretty excited to talk about a new API that we're going to be releasing in Jigsaw"
    },
    ...
  ]
}
```

### Webhook logs

To enable webhook for the Logs, follow the steps below:

- Under the Settings tab in your dashboard, select Webhook
- Enable the type of logs to receive i.e `Success logs` or `Error logs`
- Add webhook URL in the endpoint field.
- Click `Create` button to save.

<Frame>
  <img
    src="https://res.cloudinary.com/dev-ninja/image/upload/v1722611004/add_Webhook_moiw4e.png"
    alt="Add Webhook URL"
  />
</Frame>

Hurray! You can now receive log events.

<Info>
  To secure your webhook, follow this guide [Secure
  Webhook](/docs/learn/webhook/secure)
</Info>


 This is the content for the doc docs/examples/web/secure.mdx 

 ---
title: "Secure Webhook"
description: "Securing your webhook."
---
## Overview

Webhooks are not secured by default. To secure your webhook involve the steps below:

- Generate a webhook key
- Attach it as a parameter in the webhook URL
- Verify webhook key on your server.

## Example

Generate a random secured webhook key.

```javascript
function generateHmacKey(secret, payload) {
  return crypto.createHmac("sha256", secret).update(payload).digest("hex");
}
const webhookKey = generateHmacKey(secretKey, "leaning tower of pisa");
```

Add the key as a query parameter to your webhook URL

```javascript
const webhookUrl = "https://your-domain.com/webhook?webhookKey=${webhookKey}";
```

Attach webhook to request payload.

```javascript
const endpoint = "https://api.jigsawstack.com/v1/ai/transcribe";
const options = {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    "x-api-key": "<your-api-key>", // Replace with your actual API key.
  },
  body: JSON.stringify({
    url: "https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Video%201737458382653833217.mp4?t=2024-03-22T09%3A50%3A49.894Z",
    webhook_url: webhookUrl, // Replace with your actual webhook URL.
  }),
};
const result = await fetch(endpoint, options);
const data = await result.json();
```

Verify webhook key on your server.

```javascript
app.post("/webhook", (req, res) => {
  const receivedHmac = req.query["webhookKey"];

  // Generate HMAC
  const generatedHmac = generateHmacKey(secretKey, "learning tower of pisa");

  // Verify the HMAC
  if (receivedHmac === generatedHmac) {
    console.log("Webhook verified and processed:", req.body);
    res.status(200).send("Webhook verified and processed");
  } else {
    console.log("Webhook verification failed");
    res.status(401).send("Webhook verification failed");
  }
});
```


 This is the content for the doc docs/examples/web/web-scraper.mdx 

 ---
title: "AI Web Scraper"
description: "Learn how to use JigsawStack's AI Web Scraper to intelligently extract specific information from any website"
---

## Overview

The AI Web Scraper API allows you to extract specific information from any website using natural language prompts. Unlike traditional web scrapers that require complex CSS selectors or XPath expressions, our AI-powered scraper lets you describe what data you want in plain English, then intelligently extracts it from the page.

- Extract data using simple natural language prompts
- No need for complex selectors, XPath, or DOM knowledge
- Works with dynamic websites and JavaScript-rendered content
- Handles various data structures (text, lists, tables)
- Adapts to changing website layouts

## API Endpoint

```
POST /v1/ai/scrape
```

## Quick Start

```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.scrape({
  url: "https://example.com",
  element_prompts: [
    {
      name: "title",
      selector: "h1"
    },
    {
      name: "description",
      selector: "meta[name='description']",
      attribute: "content"
    }
  ]
});

console.log(response);
```

## Response 

```json
{
  "success": true,
  "data": {
    "product name": "UltraPhone Pro X5",
    "current price": "$899.99",
    "average rating": "4.7/5",
    "available colors": ["Midnight Black", "Ocean Blue", "Silver", "Rose Gold"],
    "key specifications": {
      "processor": "OctoCore X3 4.5GHz",
      "memory": "12GB RAM",
      "storage": "256GB",
      "display": "6.7-inch AMOLED",
      "camera": "108MP quad camera system",
      "battery": "5000mAh"
    }
  },
  "page_position": 1,
  "status_code": 200
}
```

## Writing Effective Prompts

The quality of your element prompts significantly affects extraction accuracy. Follow these guidelines:

1. **Be specific**: Instead of "price", use "current sale price" or "subscription price per month"
2. **Provide context**: Use "number of rooms available" instead of just "number"
3. **Specify format when needed**: "Release date in YYYY-MM-DD format" or "price in USD"
4. **Clarify structure**: "List of ingredients" indicates you expect an array return


## Example

```javascript Handling Dynamic Content
// Example: Scraping a page that loads content dynamically
const response = await jigsaw.ai.scrape({
  url: "https://example.com/dynamic-content",
  // Wait for a specific element that indicates content is loaded
  wait_for: {
    mode: "selector",
    value: ".content-loaded"
  },
  element_prompts: [
    "main article title",
    "article publication date",
    "author name",
    "full article text"
  ]
});
```



 This is the content for the doc docs/examples/web/web-search.mdx 

 ---
title: "Web Search"
description: "Learn how to use JigsawStack's Web Search API to access high-quality search results with built-in geo search capabilities"
---

## Overview

The Web Search API provides access to high-quality search results with built-in AI overviews, comprehensive metadata, and geo-spatial search capabilities. This API makes it easy to integrate powerful search functionality into your applications while also providing location-based context for search queries.

- Get comprehensive search results with rich metadata
- AI-generated overviews for quick content digestion
- Built-in geo search capabilities for location-aware applications
- Safe search filtering options
- Customizable search parameters

## API Endpoint

```
POST /v1/web/search
```

## Quick Start

```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.web.search({
  query: "capital of France",
  ai_overview: true,
  safe_search: "moderate"
});

console.log(response);
console.log(response.geo_results[0].geoloc);
```

## Response 

```json
{
  "success": true,
  "query": "capital of France",
  "ai_overview": "The capital of France is Paris. It has been the capital since its liberation in 1944.",
  "is_safe": true,
  "results": [
    {
      "title": "List of capitals of France - Wikipedia",
      "url": "https://en.wikipedia.org/wiki/List_of_capitals_of_France",
      "description": "This is a chronological list of capitals of France. The capital of France has been Paris since its liberation in 1944...",
      "content": "List of capitals of France\nContents\nChronology\nReferences\nThis is a chronological list of capitals of France. The capital of France has been Paris since its liberation in 1944...",
      "site_name": "Wikipedia",
      "site_long_name": "en.wikipedia.org",
      "age": "2023-12-02T17:44:00.000Z",
      "language": "en",
      "image_urls": [],
      "is_safe": true,
      "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://en.wikipedia.org&size=96",
      "snippets": [...]
    },
    // Additional results...
  ],
  "geo_results": [
    {
      "type": "place",
      "name": "Paris",
      "place_formatted": "France",
      "country": {...},
      "language": "need_request_lang",
      "geoloc": {
        "type": "Point", 
        "coordinates": [42.947813, 1.957948]
      },
      "additional_properties": {}
    },
    // Additional geo results...
  ],
  "image_urls": [...]
}
```

## Search Parameters

| Parameter | Type | Description |
|-----------|------|-------------|
| `query` | string | The search query (1-400 characters) |
| `spell_check` | boolean | Enable or disable spell check (default: true) |
| `safe_search` | string | Safe search level: "strict", "moderate", or "off" (default: "moderate") |
| `ai_overview` | boolean | Include AI-generated overview of results (default: true) |
| `byo_urls` | array | Optional array of up to 3 URLs to include in search results |
| `country_code` | string | ISO-3 country code to localize search results |
| `auto_scrape` | boolean | Automatically scrape and extract content from results (default: true) |
| `deep_research` | boolean | Enable deep research mode for comprehensive results |
| `deep_research_config` | object | Configuration options for deep research mode |

The `deep_research_config` object has the following properties:

| Property | Type | Description |
|----------|------|-------------|
| `max_depth` | number | Number of recursive search iterations (default: 3) |
| `max_breadth` | number | Number of parallel subqueries per depth level (default: 3) |
| `max_output_tokens` | number | Maximum tokens in generated output (default: 32000) |
| `target_output_tokens` | number | Target number of tokens for output report |


## Working with Geo Results

The API automatically includes geolocation data when relevant to your search query. The `geo_results` array contains location information with the following structure:

- `type`: Type of location (place, street, etc.)
- `name`: Name of the location
- `place_formatted`: Formatted place name
- `country`: Country information
- `geoloc`: GeoJSON object with coordinates
- Additional fields depending on the location type

## Examples

### Basic Search

```javascript
const basicSearch = await jigsaw.web.search({
  query: "best restaurants in New York",
});

console.log(basicSearch.ai_overview);
console.log(basicSearch.results.length);
```

### Location-Based Search

```javascript
const locationSearch = await jigsaw.web.search({
  query: "nearest national parks",
  country_code: "USA", 
});

// Access geo results
locationSearch.geo_results.forEach(location => {
  console.log(`${location.name}: ${location.geoloc.coordinates}`);
});
```

### Custom URL Inclusion

```javascript
const customSearch = await jigsaw.web.search({
  query: "climate change solutions",
  byo_urls: [
    "https://www.un.org/en/climatechange/",
    "https://climate.nasa.gov/solutions/resources/"
  ],
  ai_overview: true
});
```

### Deep Research

```javascript
const deepResearch = await jigsaw.web.search({
  query: "What is diffusion?",
  ai_overview: true,
  deep_research: true,
  deep_research_config: {
    max_depth: 5,
    max_breadth: 2,
    max_output_tokens: 12000
  }
});
```

## Tips for Effective Searches

1. **Be specific**: More detailed queries yield more precise results
2. **Use location context**: For geo-aware searches, include location names in your query
3. **Leverage AI overviews**: Enable `ai_overview` to get concise summaries of search results
4. **Filter appropriately**: Use `safe_search` levels based on your application needs
5. **Consider rate limits**: Be mindful of your API usage limits, especially for high-volume applications

 This is the content for the doc docs/integration/aries.mdx 

 ---
title: "ARES"
description: "JigsawStack AI Search powers ARES for enhanced AI capabilities"
---

<img
  className="mx-auto mb-8"
  src="/images/ares_logo.png"
  alt="Powered by ARES"
  height="300"
  width="300"
/>

We're excited to announce our strategic partnership with [ARES](https://www.getares.ai/), bringing JigsawStack's powerful AI Search capabilities to their cutting-edge platform. With the ARES 3.20 update, users now have access to enhanced AI models powered by JigsawStack Search technology.

## Enhanced AI Models

### GPT-4o + JigsawStack Search

GPT-4o, OpenAI's most advanced model, now leverages JigsawStack Search to access the latest information from across the web, providing accurate, up-to-date responses for your research, content creation, and information needs.

- Latest data for informed decision-making
- Comprehensive research capabilities
- Factual grounding for better outputs

### Claude 3.5 Sonnet + JigsawStack Search

Anthropic's Claude 3.5 Sonnet, known for exceptional reasoning and creative output, now incorporates real-time data through JigsawStack Search, enhancing its problem-solving capabilities and creative potential.

- Current context for creative projects
- Enhanced coding assistance with latest documentation
- Improved analysis with real-world data

## Technical Integration Benefits

### Advanced Search Algorithm
JigsawStack's proprietary search algorithm delivers precisely relevant information by understanding context and intent, not just keywords.

### Seamless Experience
The integration provides a unified experience where AI models can access external information without disrupting your workflow.

### Performance Optimization
Our search capabilities are optimized for speed and efficiency, reducing latency and improving the overall user experience on the ARES platform.

## Real-World Applications

<div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
  <div className="p-4 border rounded-lg">
    <h4 className="font-bold">Research & Analysis</h4>
    <p>Access current market data, research papers, and industry trends to inform strategic decisions.</p>
  </div>
  <div className="p-4 border rounded-lg">
    <h4 className="font-bold">Content Creation</h4>
    <p>Generate factually accurate content with references to current events and verified information.</p>
  </div>
  <div className="p-4 border rounded-lg">
    <h4 className="font-bold">Software Development</h4>
    <p>Get up-to-date coding examples, documentation, and best practices while building applications.</p>
  </div>
  <div className="p-4 border rounded-lg">
    <h4 className="font-bold">Business Intelligence</h4>
    <p>Analyze latest industry developments and competitive information for strategic planning.</p>
  </div>
</div>

## Getting Started

To experience the enhanced capabilities of JigsawStack Search on ARES:

1. **Visit [ARES website](https://www.getares.ai/)** to create an account or log in
2. **Update to version 3.20 or later** to access the latest features
3. **Select either GPT-4o or Claude 3.5 Sonnet** with JigsawStack Search enabled
4. **Start exploring** the enhanced capabilities with real-time information access

<Info>
  ARES offers a free trial period for new users. [Start your free trial today](https://www.getares.ai/) to experience how JigsawStack Search transforms your AI interactions.
</Info>

## Developer Resources

For developers interested in incorporating similar capabilities into their own applications:

- [JigsawStack AI Search API documentation](/docs/api-reference/web/ai-search)

## Partnership Inquiries

If you're interested in integrating JigsawStack's capabilities into your platform or product, please get in touch with support@jigsawstack.com to discuss potential collaboration opportunities.

 This is the content for the doc docs/integration/groq.mdx 

 ---
title: "Groq"
description: "Learn how to use Prompt Engine powered by Groq to automate tasks in your application."
---

<img
  className="mx-auto"
  src="/images/powered_groq.png"
  alt="Powered by Groq"
  height="300"
  width="300"
/>

JigsawStack Prompt Engine is a powerful AI SDK designed to integrate into any backend, automating tasks such as web scraping, optical character recognition (OCR), translation, and more, using custom fine-tuned models. By plugging JigsawStack into your existing application infrastructure, you can offload the heavy lifting and focus on building.

The JigsawStack Prompt Engine is powered by the [Groq](https://groq.com/) LPU Inference Engine to deliver an exceptionally efficient workflow optimized for real-time performance. By leveraging Groq in the backend for fast inference and low latency, the JigsawStack Prompt Engine provides rapid results for your AI applications.

Packed with a range of built-in features, Prompt Engine makes working with LLMs effortless and efficient:

- üåê Prompt caching for repeated prompt runs
- üí¨ Automatic prompt optimization for improved performance
- üìÑ Response schema validation for accuracy and consistency
- üîÅ Reusable prompts to streamline your workflow
- üß† Multi-agent LLM from 50+ models for flexibility depending on your apps
- üö´ No virtual rate limits, tokens, and GPU management

## How does it work?

<img
  className="block"
  src="https://res.cloudinary.com/dev-ninja/image/upload/v1725312772/run_prompt_ik1g6e.png"
  alt="JigsawStack Prompt Engine workflow"
/>

The JigsawStack Prompt Engine is based on a Mixture-of-Agents (MoA) approach. Each time a prompt is executed, it is run across 5 LLMs under the hood, including LLMs powered by Groq for lightning-fast inference speed and performance, such as:

- `llama-3.1-70b-versatile`
- `llama-3.1-8b-instant`
- `mixtral-8x7b-32768`

The output of each LLM is then ranked by a smaller model based on similarity and quality before being merged into a single output.

The JigsawStack Prompt Engine especially works well if you run the same base prompt repeatedly to allow the engine to self-tune for running the best model every single time with the built-in prompt caching feature.

Optionally each prompt execution is first ran through `llama-guard-3-8b` to detect and filter for common abuse such as prompt injection, crimes, sexual content and more. Prompt guard is a feature that‚Äôs built into every step of the Prompt Engine and is configurable to allow or block specific content types.

<Info>
  Learn more about [how prompt engine works
  here](https://jigsawstack.com/blog/jigsawstack-mixture-of-agents-moa-outperform-any-single-llm-and-reduce-cost-with-prompt-engine)
</Info>

## Getting Started

### Prerequisite

- Create a [free JigsawStack account](https://jigsawstack.com/auth)
- Generate a secret key from the dashboard and securely store it

### Installation

<CodeGroup>

```bash JavaScript
npm i jigsawstack
```

```bash Python
pip install jigsawstack
```

</CodeGroup>

### Usage

You can get a JigsawStack API key by creating an account [here](https://jigsawstack.com/auth). Store the key in a secure environment like a `.env` file.

#### Creating a prompt engine:

<CodeGroup>

```javascript JavaScript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const result = await jigsaw.prompt_engine.create({
  prompt: "How to cook {dish}",
  inputs: [{ key: "dish" }],
  return_prompt: [
    {
      step: "step counter",
      instructions: "details of this step",
    },
  ],
});
```

```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

params = {
    "prompt": "How to cook {dish}",
    "inputs": [{ "key": "dish" }],
    "return_prompt": "Return the result in a markdown format",
}

result = jigsaw.prompt_engine.create(params)
```

</CodeGroup>

<Note>
  All prompts are stored allowing you to rerun them with just the prompt ID
</Note>

#### Running the prompt:

<CodeGroup>

```javascript JavaScript
const resp = await jigsaw.prompt_engine.run({
  id: result.prompt_engine_id,
  input_values: {
    dish: "Singaporean chicken rice",
  },
});
```

```python Python
resp = jigsaw.prompt_engine.run(
    {
        "id": result.prompt_engine_id,
        "input_values": {
            "about": "Singaporean chicken rice",
        },
    }
)
```

</CodeGroup>

#### Running a prompt directly:

<CodeGroup>

```javascript JavaScript
const result = await jigsaw.prompt_engine.run_prompt_direct({
  prompt: "Tell me a story about {about}",
  inputs: [
    {
      key: "about",
      optional: false,
      initial_value: "Leaning Tower of Pisa",
    },
  ],
  return_prompt: "Return the result in a markdown format",
});
```

```python Python
params = {
    "prompt": "Tell me a story about {about}",
    "inputs": [
        {
            "key": "about",
            "optional": False,
            "initial_value": "Leaning Tower of Pisa",
        },
    ],
    "return_prompt": "Return the result in a markdown format",
}

result = jigsaw.prompt_engine.run_prompt_direct(params)
```

</CodeGroup>

<Info>
  You can learn more about the [Prompt Engine in the
  docs](/docs/api-reference/prompt-engine/create)
</Info>

## Llama Guard 3 by Groq

The prompt engine comes with prompt guards to prevent prompt injection from user inputs and a wide range of unsafe use cases. This can be turned on automatically using the `prompt_guard` field.

<CodeGroup>

```javascript JavaScript
const result = await jigsaw.prompt_engine.run_prompt_direct({
  prompt: "Tell me a story about {about}",
  inputs: [
    {
      key: "about",
      optional: false,
      initial_value: "Leaning Tower of Pisa",
    },
  ],
  return_prompt: "Return the result in a markdown format",
  prompt_guard: ["sexual_content", "defamation"],
});
```

```python Python
params = {
    "prompt": "Tell me a story about {about}",
    "inputs": [
        {
            "key": "about",
            "optional": False,
            "initial_value": "Leaning Tower of Pisa",
        },
    ],
    "return_prompt": "Return the result in a markdown format",
    "prompt_guard": ["sexual_content", "defamation"]
}

result = jigsaw.prompt_engine.run_prompt_direct(params)
```

</CodeGroup>
### Prompt Guard Categories

- `defamation`: Guards against potentially libelous content
- `privacy`: Protects personal information
- `hate`: Filters out discriminatory content
- `sexual_content`: Blocks explicit material
- `elections`: Prevents election misinformation
- `code_interpreter_abuse`: Guards against code exploitation
- `indiscriminate_weapons`: Blocks content about mass destruction weapons
- `specialized_advice`: Prevents unauthorized professional advice

By implementing prompt guard, you can create more secure, reliable, and user-friendly AI-powered applications. It's an invaluable tool for developers looking to harness the power of AI while maintaining control over the content generated and processed by their applications.

<Info>
  For the most up-to-date list of prompt guard options and detailed usage, refer
  to the [full documentation](/docs/api-reference/prompt-engine/create).
</Info>


 This is the content for the doc docs/integration/langchain.mdx 

 ---
title: "LangChain"
description: "Unlock the Power of the JigsawStack on LangChain!"
---

<img
  className="mx-auto"
  src="/images/langchain.png"
  alt="Powered by LangChain"
  height="300"
  width="300"
/>

LangChain.js now supports calling [JigsawStack Prompt Engine](/docs/examples/ai/prompt-engine) and more through the JigsawStack Tool.

The JigsawStack Tool provides your agent with several capabilities:

- **JigsawStack Prompt Engine**: Use JigsawStack's advanced prompt engine to interact with large language models.
- **JigsawStackAIScrape**: Scrape web content with AI-powered precision.
- **JigsawStackAISearch**: Perform AI-powered web searches for high-quality results.
- **JigsawStackSpeechToText**: Transcribe audio or video using the powerful large V3 Whisper model.
- **JigsawStackVOCR**: Recognize and extract data from images via AI prompts.
- **JigsawStackTextToSQL**: Generate SQL queries from natural language text.

## Setup

1. **Set up an [account](https://jigsawstack.com/)**: Get started for free
2. **Create and retrieve your API key**:

```bash
export JIGSAWSTACK_API_KEY="your-api-key"
```

## Installation

Install the JigsawStack integration package for your project:

```bash
# npm
npm install @langchain/jigsawstack

# Yarn
yarn add @langchain/jigsawstack

# pnpm
pnpm add @langchain/jigsawstack
```

## Usage: Standalone

### Example 1: Using the JigsawStack Prompt Engine

```javascript
import { JigsawStackPromptEngine } from "@langchain/jigsawstack";

export const run = async () => {
  const model = new JigsawStackPromptEngine();
  const res = await model.invoke(
    "Tell me about the leaning tower of pisa?\nAnswer:",
  );
  console.log({ res });
};
```

### Example 2: Using Other JigsawStack Tools

```javascript
import {
  JigsawStackAIScrape,
  JigsawStackAISearch,
  JigsawStackSpeechToText,
  JigsawStackVOCR,
  JigsawStackTextToSQL,
} from "@langchain/jigsawstack";

// Example of AI Scrape Tool
const aiScrapeTool = new JigsawStackAIScrape({
  params: {
    element_prompts: ["Pro plan"],
  },
});
const scrapeResult = await aiScrapeTool.invoke(
  "https://jigsawstack.com/pricing",
);
console.log({ scrapeResult });

// Example of AI Search Tool
const aiSearchTool = new JigsawStackAISearch();
const searchResult = await aiSearchTool.invoke("The leaning tower of Pisa");
console.log({ searchResult });

// Example of VOCR Tool
const vocrTool = new JigsawStackVOCR({
  params: {
    prompt: "Describe the image in detail",
  },
});
const vocrResult = await vocrTool.invoke("https://link-to-image.jpg");
console.log({ vocrResult });

// Example of Speech-to-Text Tool
const sttTool = new JigsawStackSpeechToText();
await sttTool.invoke("https://link-to-video.mp4");

// Example of Text-to-SQL Tool
const sqlTool = new JigsawStackTextToSQL({
  params: {
    sql_schema:
      "CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT NOT NULL, ... )",
  },
});
const sqlResult = await sqlTool.invoke(
  "Generate a query to get transactions exceeding $10,000.",
);
console.log({ sqlResult });
```

## Usage: In an Agent

```javascript
import { ChatOpenAI } from "@langchain/openai";
import { initializeAgentExecutorWithOptions } from "langchain/agents";
import {
  JigsawStackAIScrape,
  JigsawStackAISearch,
  JigsawStackVOCR,
  JigsawStackSpeechToText,
  JigsawStackTextToSQL,
} from "@langchain/jigsawstack";

const model = new ChatOpenAI({ temperature: 0 });

// Add the necessary tools
const tools = [
  new JigsawStackAIScrape(),
  new JigsawStackAISearch(),
  new JigsawStackVOCR(),
  new JigsawStackSpeechToText(),
  new JigsawStackTextToSQL(),
];

const executor = await initializeAgentExecutorWithOptions(tools, model, {
  agentType: "zero-shot-react-description",
  verbose: true,
});

const res = await executor.invoke({
  input: "Kokkalo Restaurant Santorini",
});

console.log(res.output);
```

<Info>
  For more details, visit the [LangChain
  documentation](https://js.langchain.com/docs/integrations/llms/jigsawstack/).
</Info>


 This is the content for the doc docs/integration/postman.mdx 

 ---
title: "Postman"
description: "Explore and test JigsawStack APIs directly in Postman with our official collection"
---

<img 
  className="mx-auto" 
  src="/images/postman.png" 
  alt="Postman Logo" 
  height="150" 
  width="300"
/>

## Access JigsawStack APIs in Postman

Postman is a popular API platform that makes working with APIs faster and easier. With our official JigsawStack Postman collection, you can:

- **Explore** our complete API suite in an interactive environment
- **Test** API calls with pre-configured requests
- **Integrate** JigsawStack into your projects with generated code snippets
- **Collaborate** with your team on API development
- **Build workflows** using Postman's powerful features

## Getting Started

<div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
  <a 
    href="https://www.postman.com/jigsawstack-devrel?view=collections" 
    className="border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow p-6 block no-underline text-inherit"
  >
    <h3 className="text-lg font-bold mb-2">Fork Our Collection</h3>
    <p className="mb-4">The quickest way to get started with JigsawStack in Postman.</p>
  </a>
  
  <a 
    href="https://www.postman.com/jigsawstack-devrel" 
    className="border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow p-6 block no-underline text-inherit"
  >
    <h3 className="text-lg font-bold mb-2">Vote for JigsawStack</h3>
    <p className="mb-4">Support JigsawStack in the 2025 Postman Developers' Choice Awards.</p>
  </a>
</div>

## Setup Instructions

1. **Create a Postman account** if you don't already have one
2. **Fork the JigsawStack collection** from our [official workspace](https://www.postman.com/jigsawstack/workspace/jigsawstack/)
3. **Set up your environment variables**:
   - Create a new environment in Postman
   - Add the variable `JIGSAWSTACK_API_KEY` with your API key
   - Set the `BASE_URL` to `https://api.jigsawstack.com/v1`

## Available API Categories

Our Postman collection is organized by API category, making it easy to find and test the specific functionality you need:

<div className="overflow-hidden rounded-lg border border-gray-200 shadow-sm my-8">
  <table className="min-w-full divide-y divide-gray-200">
    <thead className="bg-gray-50 dark:bg-gray-800">
      <tr>
        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Category</th>
        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Description</th>
        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Example Endpoints</th>
      </tr>
    </thead>
    <tbody className="bg-white dark:bg-gray-700 divide-y divide-gray-200 dark:divide-gray-600">
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Core AI</td>
        <td className="px-6 py-4">Essential AI capabilities for text and data analysis</td>
        <td className="px-6 py-4">Sentiment Analysis, Translation, Summary</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Web & Search</td>
        <td className="px-6 py-4">Web scraping and search capabilities</td>
        <td className="px-6 py-4">AI Web Scraper, Web Search, HTML to Any</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Computer Vision</td>
        <td className="px-6 py-4">Image analysis and processing</td>
        <td className="px-6 py-4">vOCR, Object Detection</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Audio</td>
        <td className="px-6 py-4">Speech processing and voice capabilities</td>
        <td className="px-6 py-4">Speech to Text, Text to Speech</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Geolocation</td>
        <td className="px-6 py-4">Location-based services and data</td>
        <td className="px-6 py-4">Geo Search, Geocode</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Validation</td>
        <td className="px-6 py-4">Content validation and verification</td>
        <td className="px-6 py-4">NSFW Detection, Profanity Check, Spell Check</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">File Management</td>
        <td className="px-6 py-4">Cloud-based file storage and retrieval</td>
        <td className="px-6 py-4">File Storage</td>
      </tr>
    </tbody>
  </table>
</div>

## Workflow Examples

### Example 1: Sentiment Analysis Workflow

1. Send a request to the Sentiment Analysis endpoint
2. Visualize the sentiment score in Postman's visualization tab
3. Use the response to trigger conditional follow-up requests

### Example 2: Content Generation Pipeline

1. Generate text summaries with the Summary API
2. Translate the summary to different languages
3. Convert the translated text to speech
4. Store the audio file for later use

## Postman Features for JigsawStack

### Code Generation

Easily generate code snippets for any API request in your preferred programming language:

1. Send a request in Postman
2. Click the "Code" button (<></>) in the right sidebar
3. Select your programming language (JavaScript, Python, PHP, etc.)
4. Copy the generated code to your project

### Environment Variables

Set up environment variables to easily switch between development and production:

```json
{
  "development": {
    "JIGSAWSTACK_API_KEY": "your-development-api-key",
    "BASE_URL": "https://api.jigsawstack.com/v1"
  },
  "production": {
    "JIGSAWSTACK_API_KEY": "your-production-api-key",
    "BASE_URL": "https://api.jigsawstack.com/v1"
  }
}
```

### Response Examples

Each request in our collection includes example responses, helping you understand what to expect before making an API call.

## Community & Support

- **Join our [Discord community](https://discord.gg/GnvmdZ7z)** for questions and collaboration
- **Contribute to our collection** by suggesting improvements
- **Vote for JigsawStack** in the [2025 Postman Developers' Choice Awards](https://www.postman.com/jigsawstack)

<div className="border border-gray-200 rounded-lg shadow-sm p-6 my-8">
  <h3 className="text-lg font-bold mb-2">Need Help?</h3>
  <p>If you have questions or need assistance with the JigsawStack Postman collection, please contact <a href="mailto:support@jigsawstack.com" className="text-blue-600 hover:text-blue-800 transition-colors">support@jigsawstack.com</a>.</p>
</div>

## Additional Resources

- [JigsawStack API Documentation](/docs/api-reference/authentication)
- [Postman Learning Center](https://learning.postman.com/)


 This is the content for the doc docs/integration/zapier.mdx 

 ---
title: "Zapier"
description: "Automate your workflow by connecting JigsawStack's AI capabilities with thousands of apps through Zapier"
---

<img
  className="mx-auto"
  src="/images/zapier.svg"
  alt="JigsawStack + Zapier Integration"
  height="200" 
  width="250"
/>

## Automate Your AI Workflows

Zapier lets you connect JigsawStack with 7,000+ popular apps to automate your work and create powerful AI-enhanced workflows without writing code. Build time-saving automations by connecting JigsawStack's AI capabilities to the tools you already use.

<div className="flex flex-col md:flex-row gap-8 my-8">
  <div className="flex-1 p-6 border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow">
    <h3 className="text-xl font-bold mb-4">Why Use JigsawStack with Zapier?</h3>
    <ul className="space-y-2">
      <li> Connect JigsawStack to thousands of apps</li>
      <li> Automate repetitive AI tasks</li>
      <li> Process data through AI models automatically</li>
      <li> No coding required</li>
      <li> Free forever for core features</li>
    </ul>
  </div>
  <div className="flex-1 p-6 border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow">
    <h3 className="text-xl font-bold mb-4">Get Started</h3>
    <p className="mb-4">Create a Zapier account and connect JigsawStack to start building automated workflows.</p>
    <a 
      href="https://zapier.com/apps/jigsawstack/integrations" 
      className="inline-block px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded font-medium transition-colors"
      target="_blank"
    >
      Connect JigsawStack to Zapier
    </a>
  </div>
</div>

## Supported JigsawStack Actions in Zapier

JigsawStack provides the following actions that you can use in your Zaps:

<div className="overflow-hidden rounded-lg border border-gray-200 shadow-sm my-8">
  <table className="min-w-full divide-y divide-gray-200">
    <thead className="bg-gray-50 dark:bg-gray-800">
      <tr>
        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Action</th>
        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Description</th>
        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Use Case</th>
      </tr>
    </thead>
    <tbody className="bg-white dark:bg-gray-700 divide-y divide-gray-200 dark:divide-gray-600">
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Sentiment Analysis</td>
        <td className="px-6 py-4">Analyze text sentiment (positive, negative, neutral)</td>
        <td className="px-6 py-4">Categorize customer feedback automatically</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Speech to Text</td>
        <td className="px-6 py-4">Transcribe audio files using Whisper large V3</td>
        <td className="px-6 py-4">Convert meeting recordings to searchable text</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Text Summary</td>
        <td className="px-6 py-4">Generate concise summaries of longer text</td>
        <td className="px-6 py-4">Create article summaries for newsletters</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Translation</td>
        <td className="px-6 py-4">Translate text between languages</td>
        <td className="px-6 py-4">Automatically translate customer communications</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">vOCR</td>
        <td className="px-6 py-4">Extract text from images with high accuracy</td>
        <td className="px-6 py-4">Process receipts and invoices automatically</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Object Detection</td>
        <td className="px-6 py-4">Recognize objects within images</td>
        <td className="px-6 py-4">Catalog product images by detected items</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">NSFW Detection</td>
        <td className="px-6 py-4">Detect inappropriate content in images</td>
        <td className="px-6 py-4">Filter user-uploaded content automatically</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Profanity Check</td>
        <td className="px-6 py-4">Check text for inappropriate language</td>
        <td className="px-6 py-4">Moderate comments before publishing</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Spam Check</td>
        <td className="px-6 py-4">Analyze text for spam indicators</td>
        <td className="px-6 py-4">Filter form submissions for quality</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Spell Check</td>
        <td className="px-6 py-4">Detect and correct spelling errors</td>
        <td className="px-6 py-4">Automatically proofread content</td>
      </tr>
      <tr>
        <td className="px-6 py-4 whitespace-nowrap font-medium">Email Verification</td>
        <td className="px-6 py-4">Verify email deliverability and status</td>
        <td className="px-6 py-4">Clean contact lists before campaigns</td>
      </tr>
    </tbody>
  </table>
</div>

## Example Zap Workflows

### Sentiment Analysis for Customer Support

1. **Trigger**: New support ticket in Zendesk
2. **Action**: Analyze sentiment with JigsawStack
3. **Action**: Tag ticket based on sentiment analysis
4. **Action**: Route high-priority negative tickets to senior support staff

### Automated Content Moderation

1. **Trigger**: New forum post in Discourse
2. **Action**: Check text for profanity with JigsawStack
3. **Action**: Hold posts with flagged content for review
4. **Action**: Notify moderators of potential issues

### Multilingual Customer Communication

1. **Trigger**: New email in Gmail from international domain
2. **Action**: Detect language with JigsawStack
3. **Action**: Translate content to your team's language
4. **Action**: Send translated response back to customer

## Setup Instructions

1. **Create or log in** to your [Zapier account](https://zapier.com)
2. **Visit the [JigsawStack integration page](https://zapier.com/apps/jigsawstack/integrations)**
3. **Click "Connect JigsawStack to..."** and select an app to pair with
4. **Follow the prompts** to authorize JigsawStack and the other app
5. **Create your Zap** by selecting triggers and actions
6. **Test and activate** your automated workflow

<div className="border border-gray-200 rounded-lg shadow-sm p-6 my-8">
  <h3 className="text-lg font-bold mb-2">Need Help?</h3>
  <p>Some JigsawStack APIs may not be available in the Zapier actions. If there's a specific capability you need, please contact <a href="mailto:support@jigsawstack.com" className="text-blue-600 hover:text-blue-800 transition-colors">support@jigsawstack.com</a> for assistance.</p>
</div>

## Resources

- [JigsawStack Zapier App Directory](https://zapier.com/apps/jigsawstack/integrations)
- [Zapier Getting Started Guide](https://zapier.com/learn/getting-started-guide)
- [JigsawStack API Documentation](/docs/api-reference/authentication)

 This is the content for the doc docs/introduction.mdx 

 ---
title: Introduction
description: "Welcome to the JigsawStack docs! Learn about how to use and integrate small models in your application."
---

<Card title="Models" href="/docs/api-reference/authentication">
  Explore our complete list of models and API references here.
</Card>

<img className="block dark:hidden" src="/images/banner.png" alt="Hero Light" />
<img className="hidden dark:block" src="/images/banner.png" alt="Hero Dark" />

JigsawStack is provides a suite of custom small models plugged into the right infrastructure to power your AI applications

## Prerequisites

To get the most out of this guide, you‚Äôll need to:

- **Set up an** [account](https://jigsawstack.com/dashboard)
- **Create and retrieve your** [API key](https://jigsawstack.com/dashboard)

## Get started

Get started using the JigsawStack SDK in your project.

### Installation

<CodeGroup>

```bash node.js
npm install jigsawstack
# or
yarn add jigsawstack
# or
pnpm add jigsawstack
# or
bun add jigsawstack
```

```bash python
pip install jigsawstack
```

</CodeGroup>

### Usage

<CodeGroup>

```javascript node.js
import { JigsawStack } from "jigsawstack";

const jigsawstack = JigsawStack({
  apiKey: "your-api-key",
});

const result = await jigsawstack.web.ai_scrape({
  url: "https://www.amazon.com/Cadbury-Mini-Caramel-Eggs-Bulk/dp/B0CWM99G5W",
  element_prompts: ["prices"],
});
```

```py python
from jigsawstack import JigsawStack

jigsawstack = JigsawStack(api_key="your-api-key")

params = {
 "url": "https://www.amazon.com/Cadbury-Mini-Caramel-Eggs-Bulk/dp/B0CWM99G5W",
 "element_prompts": ["prices"]
}

result = jigsawstack.web.ai_scrape(params)
```

</CodeGroup>

## Quickstart

Learn more on how to get JigsawStack set up in your project.

<CardGroup cols={2}>
  <Card
    title="Node.js Quickstart"
    icon="js"
    href="/docs/quick-start/node/introduction"
  >
    Learn how to use the JigsawStack Node.js SDK to build AI powered
    applications.
  </Card>
  <Card
    title="Python Quickstart"
    icon="python"
    href="/docs/quick-start/python/introduction"
  >
    Learn how to use the Python SDK to build AI powered applications.
  </Card>
</CardGroup>


 This is the content for the doc docs/learn/prompt/how-prompt-engine-works.mdx 

 ---
title: "How Prompt Engine Works"
description: "Learn how to use Prompt Engine to automate tasks in your application."
---

<img
  className="mx-auto"
  src="/images/powered_groq.png"
  alt="Powered by Groq"
  height="300"
  width="300"
/>

JigsawStack Prompt Engine is a powerful AI SDK designed to integrate into any backend, automating tasks such as web scraping, optical character recognition (OCR), translation, and more, using custom fine-tuned models. By plugging JigsawStack into your existing application infrastructure, you can offload the heavy lifting and focus on building.

The JigsawStack Prompt Engine is powered by the [Groq](https://groq.com/) LPU Inference Engine to deliver an exceptionally efficient workflow optimized for real-time performance. By leveraging Groq in the backend for fast inference and low latency, the JigsawStack Prompt Engine provides rapid results for your AI applications.

Packed with a range of built-in features, Prompt Engine makes working with LLMs effortless and efficient:

- üåê Prompt caching for repeated prompt runs
- üí¨ Automatic prompt optimization for improved performance
- üìÑ Response schema validation for accuracy and consistency
- üîÅ Reusable prompts to streamline your workflow
- üß† Multi-agent LLM from 50+ models for flexibility depending on your apps
- üö´ No virtual rate limits, tokens, and GPU management

## How does it work?

<img
  className="block"
  src="https://res.cloudinary.com/dev-ninja/image/upload/v1725312772/run_prompt_ik1g6e.png"
  alt="JigsawStack Prompt Engine workflow"
/>

The JigsawStack Prompt Engine is based on a Mixture-of-Agents (MoA) approach. Each time a prompt is executed, it is run across 5 LLMs under the hood, including LLMs powered by Groq for lightning-fast inference speed and performance, such as:

- `llama-3.1-70b-versatile`
- `llama-3.1-8b-instant`
- `mixtral-8x7b-32768`

The output of each LLM is then ranked by a smaller model based on similarity and quality before being merged into a single output.

The JigsawStack Prompt Engine especially works well if you run the same base prompt repeatedly to allow the engine to self-tune for running the best model every single time with the built-in prompt caching feature.

Optionally each prompt execution is first ran through `llama-guard-3-8b` to detect and filter for common abuse such as prompt injection, crimes, sexual content and more. Prompt guard is a feature that‚Äôs built into every step of the Prompt Engine and is configurable to allow or block specific content types.

<Info>
  Learn more about [how prompt engine works
  here](https://jigsawstack.com/blog/jigsawstack-mixture-of-agents-moa-outperform-any-single-llm-and-reduce-cost-with-prompt-engine)
</Info>

## Getting Started

### Prerequisite

- Create a [free JigsawStack account](https://jigsawstack.com/auth)
- Generate a secret key from the dashboard and securely store it

### Installation

<CodeGroup>

```bash JavaScript
npm i jigsawstack
```

```bash Python
pip install jigsawstack
```

</CodeGroup>

### Usage

You can get a JigsawStack API key by creating an account [here](https://jigsawstack.com/auth). Store the key in a secure environment like a `.env` file.

#### Creating a prompt engine:

<CodeGroup>

```javascript JavaScript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const result = await jigsaw.prompt_engine.create({
  prompt: "How to cook {dish}",
  inputs: [{ key: "dish" }],
  return_prompt: [
    {
      step: "step counter",
      instructions: "details of this step",
    },
  ],
});
```

```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

params = {
    "prompt": "How to cook {dish}",
    "inputs": [{ "key": "dish" }],
    "return_prompt": "Return the result in a markdown format",
}

result = jigsaw.prompt_engine.create(params)
```

</CodeGroup>

<Note>
  All prompts are stored allowing you to rerun them with just the prompt ID
</Note>

#### Running the prompt:

<CodeGroup>

```javascript JavaScript
const resp = await jigsaw.prompt_engine.run({
  id: result.prompt_engine_id,
  input_values: {
    dish: "Singaporean chicken rice",
  },
});
```

```python Python
resp = jigsaw.prompt_engine.run(
    {
        "id": result.prompt_engine_id,
        "input_values": {
            "about": "Singaporean chicken rice",
        },
    }
)
```

</CodeGroup>

#### Running a prompt directly:

<CodeGroup>

```javascript JavaScript
const result = await jigsaw.prompt_engine.run_prompt_direct({
  prompt: "Tell me a story about {about}",
  inputs: [
    {
      key: "about",
      optional: false,
      initial_value: "Leaning Tower of Pisa",
    },
  ],
  return_prompt: "Return the result in a markdown format",
});
```

```python Python
params = {
    "prompt": "Tell me a story about {about}",
    "inputs": [
        {
            "key": "about",
            "optional": False,
            "initial_value": "Leaning Tower of Pisa",
        },
    ],
    "return_prompt": "Return the result in a markdown format",
}

result = jigsaw.prompt_engine.run_prompt_direct(params)
```

</CodeGroup>

<Info>
  You can learn more about the [Prompt Engine in the
  docs](/docs/api-reference/prompt-engine/create)
</Info>

## Llama Guard 3 by Groq

The prompt engine comes with prompt guards to prevent prompt injection from user inputs and a wide range of unsafe use cases. This can be turned on automatically using the `prompt_guard` field.

<CodeGroup>

```javascript JavaScript
const result = await jigsaw.prompt_engine.run_prompt_direct({
  prompt: "Tell me a story about {about}",
  inputs: [
    {
      key: "about",
      optional: false,
      initial_value: "Leaning Tower of Pisa",
    },
  ],
  return_prompt: "Return the result in a markdown format",
  prompt_guard: ["sexual_content", "defamation"],
});
```

```python Python
params = {
    "prompt": "Tell me a story about {about}",
    "inputs": [
        {
            "key": "about",
            "optional": False,
            "initial_value": "Leaning Tower of Pisa",
        },
    ],
    "return_prompt": "Return the result in a markdown format",
    "prompt_guard": ["sexual_content", "defamation"]
}

result = jigsaw.prompt_engine.run_prompt_direct(params)
```

</CodeGroup>
### Prompt Guard Categories

- `defamation`: Guards against potentially libelous content
- `privacy`: Protects personal information
- `hate`: Filters out discriminatory content
- `sexual_content`: Blocks explicit material
- `elections`: Prevents election misinformation
- `code_interpreter_abuse`: Guards against code exploitation
- `indiscriminate_weapons`: Blocks content about mass destruction weapons
- `specialized_advice`: Prevents unauthorized professional advice

By implementing prompt guard, you can create more secure, reliable, and user-friendly AI-powered applications. It's an invaluable tool for developers looking to harness the power of AI while maintaining control over the content generated and processed by their applications.

<Info>
  For the most up-to-date list of prompt guard options and detailed usage, refer
  to the [full documentation](/docs/api-reference/prompt-engine/create).
</Info>


 This is the content for the doc docs/learn/prompt/introduction.mdx 

 ---
title: "Prompt Engine Overview"
description: "Run any prompt and get the optimal model to execute it without worrying about GPUs, tokens, or rate limits‚Äîit just works effortlessly."
---

## Introduction

JigsawStack Prompt Engine is a powerfult API built from the ground up to execute any prompt or instruction seamlessly. It intelligently selects the best model from a cluster of state-of-the-art models, allowing you to focus on results without worrying about GPUs, tokens, or rate limits.

<img
  className="block"
  src="https://res.cloudinary.com/dev-ninja/image/upload/v1725295285/prompt_engine_o3ly4j.png"
  alt="prompt engine"
/>

The Prompt Engine takes in three things: **the prompt**, **dynamic variables**, and **the output structure** you expect every single time you run the prompt. The last two are optional. The Prompt Engine automatically enhances the initial prompt to improve accuracy, reduce token usage, and prevent output structure breakage.

### The Prompt Engine can be utilized in two ways:

1. Creating and running a [reusable prompt](/docs/examples/ai/prompt-engine#1-create-and-execute-a-reusable-prompt-recommended) (recommended)
2. Executing a [prompt directly](/docs/examples/ai/prompt-engine#2-executing-the-prompt-directly)

<img
  className="block"
  src="https://res.cloudinary.com/dev-ninja/image/upload/v1725312772/run_prompt_ik1g6e.png"
  alt="prompt engine"
/>

<Info>
  For better reliability and prompt optimization, it is recommended to first
  [Create a Prompt](/docs/api-reference/prompt-engine/create) and then [Run the
  Prompt](/docs/api-reference/prompt-engine/run)
</Info>

### The Prompt

This is the instruction that should be executed. It can be of two forms:

1. Basic prompt: Has no dynamic variables. i.e Tell me about the leaning tower of Pisa!
2. Dynamic prompt: Has dynamic variables. i.e Tell me about `{ item }`

### Prompt return type

The Prompt Engine supports 3 types of return types:

1. `String`

```javascript
{
    prompt: "Tell me about {item}",
    inputs: [
      {
        key: "item",
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: "Return the result in a markdown format",
  }
```

2. `Array<object>`

```javascript

{
    prompt: "Tell me a story about {item}",
    inputs: [
      {
        key: "item",
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: [{ excerpt: "short story text", summary: "summary of story" }],
  }
```

3. `Object`

```javascript
{
    prompt: "Tell me a story about {item}",
    inputs: [
      {
        key: "item",
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: { excerpt: "short story text", summary: "summary of story" },
  }
```

### Dynamic Inputs

These are variables that can be used within the prompt to add data dynamically.

Here is an example:

```javascript
{
    prompt: "Tell me a story about {item}",
    inputs: [
      {
        key: "item", // dynamic prompt
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: { excerpt: "short story text", summary: "summary of story" },
  }
```

- `key`: This is the name of the variable.
- `optional`: Controls whether the variable is optional.
- `initial_value`: This is the initial value of the variable.

How to use inject an input while running the prompt:

```javascript
const result = await jigsawstack.prompt_engine.run({
  id: "e58d762a-9a00-4907-8cab-5ce6221bb6df",
  input_values: {
    item: "Leaning Tower of Pisa",
  },
});
```


 This is the content for the doc docs/learn/prompt/overview.mdx 

 ---
title: "Prompt Engine Overview"
description: "Run any prompt and get the optimal model to execute it without worrying about GPUs, tokens, or rate limits‚Äîit just works effortlessly."
---

## Introduction

JigsawStack Prompt Engine is a powerfult API built from the ground up to execute any prompt or instruction seamlessly. It intelligently selects the best model from a cluster of state-of-the-art models, allowing you to focus on results without worrying about GPUs, tokens, or rate limits.

<img
  className="block"
  src="https://res.cloudinary.com/dev-ninja/image/upload/v1725295285/prompt_engine_o3ly4j.png"
  alt="prompt engine"
/>

The Prompt Engine takes in three things: **the prompt**, **dynamic variables**, and **the output structure** you expect every single time you run the prompt. The last two are optional. The Prompt Engine automatically enhances the initial prompt to improve accuracy, reduce token usage, and prevent output structure breakage.

### The Prompt Engine can be utilized in two ways:

1. Creating and running a [reusable prompt](/docs/examples/ai/prompt-engine#1-create-and-execute-a-reusable-prompt-recommended) (recommended)
2. Executing a [prompt directly](/docs/examples/ai/prompt-engine#2-executing-the-prompt-directly)

<img
  className="block"
  src="https://res.cloudinary.com/dev-ninja/image/upload/v1725312772/run_prompt_ik1g6e.png"
  alt="prompt engine"
/>

<Info>
  For better reliability and prompt optimization, it is recommended to first
  [Create a Prompt](/docs/api-reference/prompt-engine/create) and then [Run the
  Prompt](/docs/api-reference/prompt-engine/run)
</Info>

### The Prompt

This is the instruction that should be executed. It can be of two forms:

1. Basic prompt: Has no dynamic variables. i.e Tell me about the leaning tower of Pisa!
2. Dynamic prompt: Has dynamic variables. i.e Tell me about `{ item }`

### Prompt return type

The Prompt Engine supports 3 types of return types:

1. `String`

```javascript
{
    prompt: "Tell me about {item}",
    inputs: [
      {
        key: "item",
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: "Return the result in a markdown format",
  }
```

2. `Array<object>`

```javascript

{
    prompt: "Tell me a story about {item}",
    inputs: [
      {
        key: "item",
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: [{ excerpt: "short story text", summary: "summary of story" }],
  }
```

3. `Object`

```javascript
{
    prompt: "Tell me a story about {item}",
    inputs: [
      {
        key: "item",
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: { excerpt: "short story text", summary: "summary of story" },
  }
```

### Dynamic Inputs

These are variables that can be used within the prompt to add data dynamically.

Here is an example:

```javascript
{
    prompt: "Tell me a story about {item}",
    inputs: [
      {
        key: "item", // dynamic prompt
        optional: false,
        initial_value: "Leaning Tower of Pisa",
      },
    ],
    return_prompt: { excerpt: "short story text", summary: "summary of story" },
  }
```

- `key`: This is the name of the variable.
- `optional`: Controls whether the variable is optional.
- `initial_value`: This is the initial value of the variable.

How to use inject an input while running the prompt:

```javascript
const result = await jigsawstack.prompt_engine.run({
  id: "e58d762a-9a00-4907-8cab-5ce6221bb6df",
  input_values: {
    item: "Leaning Tower of Pisa",
  },
});
```


 This is the content for the doc docs/learn/webhook/event-types.mdx 

 ---
title: "Event Types"
description: "The supported email event types on JigsawStack."
---

- `email.sent`

The API request was successful and we will attempt to deliver the message to the recipient‚Äôs mail server.

- `email.delivered`

We have successfully delivered the email to the recipient‚Äôs mail server.

- `email.delivery_delayed`

The email couldn‚Äôt be delivered to the recipient‚Äôs mail server because a temporary issue occurred. Delivery delays can occur, for example, when the recipient‚Äôs inbox is full, or when the receiving email server experiences a transient issue.

- `email.complained`

The email was successfully delivered to the recipient‚Äôs mail server, but the recipient marked it as spam

- `email.bounced`

The recipient‚Äôs mail server permanently rejected the email.

- `email.opened`

The recipient‚Äôs opened the email.

- `email.clicked`

The recipient‚Äôs clicked on an email link.


 This is the content for the doc docs/quick-start/node/introduction.mdx 

 ---
title: "Introduction"
description: "Getting started with JigsawStack Node.js SDK to build AI-powered applications"
---

<Card title="Models" href="/docs/api-reference/authentication">
  Explore our complete list of models and API references here.
</Card>

## Prerequisites

Before you begin, make sure you have:

- Created a [JigsawStack account](https://jigsawstack.com/dashboard)
- Retrieved your [API key](https://jigsawstack.com/dashboard)
- Installed Node.js (version 18.10.0 or higher)

## Installation

Choose your preferred package manager to install the JigsawStack SDK:

<CodeGroup>

```bash npm
npm install jigsawstack
```

```bash yarn
yarn add jigsawstack
```

```bash pnpm
pnpm add jigsawstack
```

```bash bun
bun add jigsawstack
```

</CodeGroup>

## Configuration

There are two ways to configure your JigsawStack SDK:

### Option 1: Using environment variables (recommended)

Create a `.env` file in your project root:

```bash .env
JIGSAWSTACK_API_KEY=your-api-key
```

### Option 2: Direct configuration

Initialize the SDK with your API key:

```javascript
import { JigsawStack } from "jigsawstack";

const jigsawstack = JigsawStack({
  apiKey: "your-api-key",
});
```

## Quick Example

Here's how to use JigsawStack's AI Web Scraper to extract product information:

```javascript
import { JigsawStack } from "jigsawstack";

// Initialize the SDK (API key from environment variables)
const jigsawstack = JigsawStack();

// Basic usage - extract pricing information
const result = await jigsawstack.web.ai_scrape({
  url: "https://supabase.com/pricing",
  element_prompts: ["Plan title", "Plan price"],
});
```

## Response Format

The AI scraper returns structured data based on your prompts:

```json
{
  "page_position": 1,
  "page_position_length": 3,
  "context": {
    "Plan title": ["Free", "Pro", "Team", "Enterprise"],
    "Plan price": ["$0", "$25", "$599", "Custom"]
  },
  "selectors": {
    "Plan title": [
      "h3.text-foreground.text-2xl.font-normal.uppercase.flex.items-center.gap-4.font-mono"
    ],
    "Plan price": [
      "div.text-foreground.flex.items-baseline.text-5xl.font-normal.lg\\:text-4xl.xl\\:text-4xl.border-b.border-default.lg\\:min-h-\\[175px\\].py-8.lg\\:pb-0.lg\\:pt-10 p.mt-2.pb-1.font-mono.text-5xl",
      "div.text-foreground.flex.items-baseline.text-5xl.font-normal.lg\\:text-4xl.xl\\:text-4xl.border-b.border-default.lg\\:min-h-\\[175px\\].py-6.lg\\:pb-0.pt-6 p.mt-2.pb-1.font-mono.text-5xl",
      "div.text-foreground.flex.items-baseline.text-5xl.font-normal.lg\\:text-4xl.xl\\:text-4xl.border-b.border-default.lg\\:min-h-\\[175px\\].py-8.lg\\:pb-0.lg\\:pt-10 p.mt-2.pb-1.font-mono.text-4xl"
    ]
 },
 ...
}
```

## What's Next?

Now that you've set up JigsawStack, you can:

- Explore our [API reference](/docs/api-reference/authentication) for all available models
- Check out our [examples](https://jigsawstack.com/docs/examples/ai/vocr) for common use cases
- Join our [Discord](https://discord.gg/GnvmdZ7z) for support

Kuddos! You're ready to build powerful AI applications with JigsawStack.

 This is the content for the doc docs/quick-start/node/next.mdx 

 ---
title: "Next.js"
description: "Learn how to integrate JigsawStack with Next.js to build AI-powered applications"
---

<Card title="Models" href="/docs/api-reference/authentication">
  Explore our complete list of models and API references here.
</Card>

## Prerequisites

Before you begin, make sure you have:

- Created a [JigsawStack account](https://jigsawstack.com/dashboard)
- Retrieved your [API key](https://jigsawstack.com/dashboard)
- Installed Node.js (version 18.10.0 or higher)
- Set up a Next.js project

## Installation

Add the JigsawStack SDK to your Next.js project:

<CodeGroup>

```bash npm
npm install jigsawstack
```

```bash yarn
yarn add jigsawstack
```

```bash pnpm
pnpm add jigsawstack
```

</CodeGroup>

## Configuration

### Setting up environment variables

1. Create or modify your `.env.local` file in the root of your Next.js project:

```bash .env.local
JIGSAWSTACK_API_KEY='your-api-key'
```

2. For production, make sure to add the environment variable to your deployment platform (Vercel, Netlify, etc.)

## API Route Implementation

JigsawStack can be easily integrated into Next.js API routes. Here's an example of a text-to-speech API endpoint:

```javascript pages/api/tts.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { JigsawStack } from "jigsawstack";

const jigsawstack = JigsawStack(); // API key will be read from environment

export default async (req: NextApiRequest, res: NextApiResponse) => {
  try {
    const result = await jigsawstack.audio.text_to_speech({
      text: "Hello, how are you doing?",
    });

    const data = result.blob();

    res.status(200).json({
      success: true,
    });
  } catch (error) {
    return res.status(400).json(error);
  }
};
```

## Client-Side Implementation

For client components that need to use JigsawStack, you should make requests through your API routes rather than directly from the client to protect your API key.

```javascript components/TextToSpeechButton.jsx
"use client";
import { useState } from "react";

export default function TextToSpeechButton() {
  const [loading, setLoading] = useState(false);

  const handleTextToSpeech = async () => {
    setLoading(true);
    try {
      const response = await fetch("/api/tts");
      const data = await response.json();
      
      if (data.success) {
        // Handle successful response
        console.log("Text-to-speech generated successfully");
      }
    } catch (error) {
      console.error("Error generating speech:", error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <button 
      onClick={handleTextToSpeech}
      disabled={loading}
      className="px-4 py-2 bg-blue-500 text-white rounded"
    >
      {loading ? "Generating..." : "Convert to Speech"}
    </button>
  );
}
```

## App Router Support

If you're using Next.js App Router, you can create a route handler:

```javascript app/api/tts/route.ts
import { NextResponse } from "next/server";
import { JigsawStack } from "jigsawstack";

const jigsawstack = JigsawStack();

export async function POST(request) {
  try {
    const { text } = await request.json();
    
    const result = await jigsawstack.audio.text_to_speech({
      text: text || "Hello, how are you doing?",
    });

    const data = result.blob();

    return NextResponse.json({ success: true });
  } catch (error) {
    return NextResponse.json({ error: error.message }, { status: 400 });
  }
}
```

JigsawStack seamlessly integrates with Next.js to provide powerful AI capabilities while maintaining best practices for security and performance.


 This is the content for the doc docs/quick-start/node/window-ai.mdx 

 ---
title: "Window.ai"
description: "How to integrate JigsawStack with the window.ai API for browser-based AI capabilities"
---

<Card title="Models" href="/docs/api-reference/authentication">
  Explore our complete list of models and API references here.
</Card>

## Overview

The `window.ai` Chrome API introduces native AI capabilities that run locally within the browser environment. While Chrome's native implementation is still in its early stages (available in Chrome Canary) with limited capabilities, **JigsawStack extends this concept** by providing a comprehensive suite of powerful AI utilities through the same familiar interface.

By integrating JigsawStack with the `window.ai` object, you can:

- Provide consistent AI capabilities across all browsers
- Access advanced AI features beyond what's natively available
- Create seamless browser-based AI experiences for your users

## Prerequisites

Before integrating JigsawStack with window.ai, you'll need:

- A [JigsawStack account](https://jigsawstack.com/dashboard)
- Your JigsawStack [Public API key](https://jigsawstack.com/dashboard)

<Info>
  For client-side browser integration, always use your `public key` instead of your secret key. 
  You can enhance security by restricting the `public key` to specific APIs or domains.
  Learn more about [public vs. secret API keys](/docs/api-reference/authentication#public-and-secret-api-keys).
</Info>

## Integration

### Basic Setup

Add JigsawStack to your browser application and assign it to the window.ai object:

```javascript
// Import JigsawStack in a module environment
import { JigsawStack } from "jigsawstack";

// Initialize with your public key
const jigsawstack = JigsawStack({ 
  apiKey: "pk_fecc....92je9"  // Use your public key here
});

// Assign to window.ai
window.ai = jigsawstack;
```

For script tag inclusion:

```html
<script src="https://cdn.jigsawstack.com/jigsawstack.min.js"></script>
<script>
  // Initialize JigsawStack
  const jigsawstack = JigsawStack({ 
    apiKey: "pk_fecc....92je9"  // Your public key
  });
  
  // Assign to window.ai
  window.ai = jigsawstack;
</script>
```

### TypeScript Support

For TypeScript projects, add proper typing for the window.ai object:

```typescript
// index.d.ts or types.d.ts
import type { JigsawStack } from "jigsawstack";

declare global {
  interface Window {
    ai: ReturnType<typeof JigsawStack>;
  }
}

export {};
```

## Using window.ai

Once integrated, you can access all JigsawStack capabilities through the window.ai object:

### Sentiment Analysis

```javascript
// Analyze sentiment with a simple call
const sentiment = await window.ai.sentiment("I love how easy it is to get started");
console.log(sentiment); // { sentiment: "positive", score: 0.92 }
```

### Text Translation

```javascript
// Translate text between languages
const translation = await window.ai.translate({
  text: "Hello, world!",
  targetLang: "es"
});
console.log(translation); // "¬°Hola, mundo!"
```

### Text Summarization

```javascript
// Generate a summary of longer text
const summary = await window.ai.summary({
  text: "Long article or document content here...",
  maxLength: 100
});
console.log(summary); // Concise summary of the text
```

### Image Generation

```javascript
// Generate an image from a text prompt
const image = await window.ai.image_generation({
  prompt: "A serene mountain landscape with a lake"
});
document.getElementById('generatedImage').src = image.url;
```

## Complete Example

Here's a complete example showing how to integrate JigsawStack with window.ai in a web application:

```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>JigsawStack window.ai Demo</title>
  <script src="https://cdn.jigsawstack.com/jigsawstack.min.js"></script>
</head>
<body>
  <h1>JigsawStack window.ai Demo</h1>
  
  <div>
    <h2>Sentiment Analysis</h2>
    <input type="text" id="sentimentText" placeholder="Enter text for sentiment analysis">
    <button id="analyzeSentiment">Analyze</button>
    <div id="sentimentResult"></div>
  </div>
  
  <script>
    // Initialize JigsawStack and assign to window.ai
    const jigsawstack = JigsawStack({ 
      apiKey: "pk_fecc....92je9" // Your public key
    });
    window.ai = jigsawstack;
    
    // Set up event listeners
    document.getElementById('analyzeSentiment').addEventListener('click', async () => {
      const text = document.getElementById('sentimentText').value;
      const result = await window.ai.sentiment(text);
      
      document.getElementById('sentimentResult').textContent = 
        `Sentiment: ${result.sentiment} (Score: ${result.score})`;
    });
  </script>
</body>
</html>
```

## Fallback Strategy

To create a resilient application that works with both native window.ai (when available) and JigsawStack:

```javascript
// Check if native window.ai exists, otherwise use JigsawStack
if (!window.ai) {
  const jigsawstack = JigsawStack({ apiKey: "pk_fecc....92je9" });
  window.ai = jigsawstack;
}

// Now you can use window.ai safely
const result = await window.ai.sentiment("Your text here");
```

## Browser Compatibility

JigsawStack's window.ai integration works across all major browsers:

- Chrome
- Firefox
- Safari
- Edge
- Opera

This provides consistent AI capabilities regardless of native browser AI support.



 This is the content for the doc docs/quick-start/python/introduction.mdx 

 ---
title: "Introduction"
description: "Get started with the JigsawStack Python SDK to build powerful AI applications"
---

<Card title="Models" href="/docs/api-reference/authentication">
  Explore our complete list of models and API references here.
</Card>

## Prerequisites

Before you begin, you'll need:

- A [JigsawStack account](https://jigsawstack.com/dashboard)
- Your [API key](https://jigsawstack.com/dashboard) from the JigsawStack dashboard
- Python 3.7 or higher installed on your system

<Info>
  The SDK is compatible with Python 3.7+ and works on all major operating systems (Windows, macOS, and Linux).
</Info>

## Installation

Install the JigsawStack Python SDK using pip:

<CodeGroup>

```bash pip
pip install jigsawstack
```

```bash pipenv
pipenv install jigsawstack
```

```bash poetry
poetry add jigsawstack
```

</CodeGroup>

## Authentication

There are two ways to authenticate with the JigsawStack API:

### Option 1: Environment Variable (Recommended)

Set your API key as an environment variable:

```bash
# Linux/macOS
export JIGSAWSTACK_API_KEY='your-api-key'

# Windows (Command Prompt)
set JIGSAWSTACK_API_KEY=your-api-key

# Windows (PowerShell)
$env:JIGSAWSTACK_API_KEY = 'your-api-key'
```

Or in your project's `.env` file:

```bash .env
JIGSAWSTACK_API_KEY='your-api-key'
```

Then initialize the SDK without explicitly providing the API key:

```python
from jigsawstack import JigsawStack

jigsawstack = JigsawStack()  # API key will be read from environment
```

### Option 2: Direct Initialization

Provide your API key directly when initializing the SDK:

```python
from jigsawstack import JigsawStack

jigsawstack = JigsawStack(api_key="your-api-key")
```

## Basic Usage

Here's a quick example of using the AI web scraper to extract information from an Amazon product page:

```python
from jigsawstack import JigsawStack

# Initialize the SDK
jigsawstack = JigsawStack()  # API key from environment variables

# Define parameters for web scraping
params = {
    "url": "https://www.amazon.com/Cadbury-Mini-Caramel-Eggs-Bulk/dp/B0CWM99G5W",
    "element_prompts": ["prices", "title", "ratings", "product_details"]
}

# Make the API call
result = jigsawstack.web.ai_scrape(params)

# Print the results
print(f"Product Title: {result.get('title')}")
print(f"Price Information: {result.get('prices')}")
```

## Response Handling

JigsawStack returns structured data as Python dictionaries. Here's how to handle the response:

```python
# Example response handling
try:
    result = jigsawstack.web.ai_scrape(params)
    
    # Access nested data
    if "prices" in result:
        current_price = result["prices"].get("current_price")
        print(f"Current Price: ${current_price}")
    
    # Iterate through multiple results
    if "product_details" in result:
        print("Product Details:")
        for key, value in result["product_details"].items():
            print(f"- {key}: {value}")
            
except Exception as e:
    print(f"Error: {e}")
```

## More Examples

### Sentiment Analysis

```python
sentiment_result = jigsawstack.ai.sentiment({
    "text": "I absolutely love this product! It's amazing!"
})
print(f"Sentiment: {sentiment_result.get('sentiment')}")
print(f"Score: {sentiment_result.get('score')}")
```

### Text Translation

```python
translation = jigsawstack.ai.translate({
    "text": "Hello, world!",
    "target_language": "es"  # Spanish
})
print(f"Translated text: {translation.get('translated_text')}")
```

### Text to Speech

```python
speech = jigsawstack.audio.text_to_speech({
    "text": "Welcome to JigsawStack Python SDK!",
    "voice": "en-US-female"
})

# Save the audio to a file
with open("welcome_message.mp3", "wb") as audio_file:
    audio_file.write(speech.content)
```

## Next Steps

Now that you've set up the JigsawStack Python SDK, you can:

- Explore the [complete API reference](/docs/api-reference/authentication) to discover all available models
- Try out different AI capabilities like [image generation](https://jigsawstack.com/docs/api-reference/ai/image-generation), [OCR](https://jigsawstack.com/docs/api-reference/ai/vocr), and more
- Join our [Discord](https://discord.gg/GnvmdZ7z) for help and to share your projects

Start building powerful AI applications with JigsawStack today!


 This is the content for the doc error.mdx 

 ---
title: "Errors"
description: "JigsawStack uses standard HTTP response codes to indicate the success or failure of an API request."
---

## Error Codes

- 2xx codes indicate success. For example, a 200 OK code indicates that the request was successful.
- 4xx codes indicate an error that was caused by the client. For example, a 400 Bad Request code indicates that the request was malformed.
- 5xx codes indicate an error that was caused by the server. For example, a 500 Internal Server Error code indicates that the server encountered an unexpected error.

| Code                   | Description                                                  |
| ---------------------- | ------------------------------------------------------------ |
| **200** - OK           | The request was successful.                                  |
| **400** - Bad Request  | The request was malformed.                                   |
| **401** - Unauthorized | No valid API key provided.                                   |
| **403** - Forbidden    | The API key doesn't have permissions to perform the request. |
| **404** - Not Found    | The requested resource doesn't exist.                        |
| **500** - Server Error | The server encountered an unexpected error.                  |


 This is the content for the doc snippets/code-req-examples/ai-scrape.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.web.ai_scrape({
      "url": "https://news.ycombinator.com/news",
      "element_prompts": [
            "titles",
            "points"
      ]
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.web.ai_scrape({
      "url": "https://news.ycombinator.com/news",
      "element_prompts": [
            "titles",
            "points"
      ]
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/scrape \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"url":"https://news.ycombinator.com/news","element_prompts":["titles","points"]}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/scrape');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"url":"https://news.ycombinator.com/news","element_prompts":["titles","points"]}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/ai/scrape')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'url' => 'https://news.ycombinator.com/news',
  'element_prompts' => [
    'titles',
    'points'
  ]
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"url":"https://news.ycombinator.com/news","element_prompts":["titles","points"]}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/scrape", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/scrape"))
    .POST(BodyPublishers.ofString("{\"url\":\"https://news.ycombinator.com/news\",\"element_prompts\":[\"titles\",\"points\"]}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "url": "https://news.ycombinator.com/news",
    "element_prompts": [
        "titles",
        "points"
    ]
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/ai/scrape")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"url":"https://news.ycombinator.com/news","element_prompts":["titles","points"]}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/scrape');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"url\":\"https://news.ycombinator.com/news\",\"element_prompts\":[\"titles\",\"points\"]}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/scrape")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/scrape");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"url\":\"https://news.ycombinator.com/news\",\"element_prompts\":[\"titles\",\"points\"]}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "page_position": 1,
      "page_position_length": 1,
      "context": {
            "titles": [
                  "Tell HN: Help restore the tax deduction for software dev in the US (Section 174)",
                  "Containerization is a Swift package for running Linux containers on macOS",
                  "github.com/apple",
                  "Apple announces Foundation Models and Containerization frameworks, etc",
                  "apple.com",
                  "Sly Stone has died",
                  "go.com",
                  "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing",
                  "github.com/askannz",
                  "Apple introduces a universal design across platforms",
                  "What methylene blue can (and can‚Äôt) do for the brain",
                  "neurofrontiers.blog",
                  "Domains I Love",
                  "ahmedsaoudi.com",
                  "The Xerox Alto, Smalltalk, and Rewriting a Running GUI",
                  "righto.com",
                  "Show HN: Somo ‚Äì a human friendly alternative to netstat",
                  "github.com/theopfr",
                  "Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking",
                  "Go is a good fit for agents",
                  "hatchet.run",
                  "Doctors could hack the nervous system with ultrasound",
                  "ieee.org",
                  "Bruteforcing the phone number of any Google user",
                  "brutecat.com",
                  "Hokusai Moyo Gafu: an album of dyeing patterns",
                  "ndl.go.jp",
                  "Pi in Pascal's Triangle (2014)",
                  "cut-the-knot.org",
                  "Myanmar's chinlone ball sport threatened by conflict and rattan shortages",
                  "aljazeera.com",
                  "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square",
                  "thisiscolossal.com",
                  "Algovivo an energy-based formulation for soft-bodied virtual creatures",
                  "juniorrojas.com",
                  "The new G√∂del Prize winner tastes great and is less filling",
                  "computationalcomplexity.org",
                  "Why quadratic funding is not optimal",
                  "jonathanwarden.com",
                  "Show HN: Most users won't report bugs unless you make it stupidly easy",
                  "A bit more on Twitter/X's new encrypted messaging",
                  "cryptographyengineering.com",
                  "RFK Jr. ousts entire CDC vaccine advisory committee",
                  "apnews.com",
                  "A man rebuilding the last Inca rope bridge",
                  "atlasobscura.com",
                  "Finding Shawn Mendes (2019)",
                  "ericneyman.wordpress.com",
                  "How do you prototype a nice language?",
                  "kevinlynagh.com",
                  "Astronomers have discovered a mysterious object flashing signals from deep space",
                  "livescience.com",
                  "Show HN: Glowstick ‚Äì type level tensor shapes in stable rust",
                  "github.com/nicksenger",
                  "LLMs are cheap",
                  "snellman.net",
                  "Containerization is a Swift package for running Linux containers on macOS (github.com/apple)",
                  "Apple announces Foundation Models and Containerization frameworks, etc (apple.com)",
                  "Sly Stone has died (go.com)",
                  "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing (github.com/askannz)",
                  "Apple introduces a universal design across platforms (apple.com)",
                  "What methylene blue can (and can‚Äôt) do for the brain (neurofrontiers.blog)",
                  "Domains I Love (ahmedsaoudi.com)",
                  "The Xerox Alto, Smalltalk, and Rewriting a Running GUI (righto.com)",
                  "Show HN: Somo ‚Äì a human friendly alternative to netstat (github.com/theopfr)",
                  "Go is a good fit for agents (hatchet.run)",
                  "Doctors could hack the nervous system with ultrasound (ieee.org)",
                  "Bruteforcing the phone number of any Google user (brutecat.com)",
                  "Hokusai Moyo Gafu: an album of dyeing patterns (ndl.go.jp)",
                  "Pi in Pascal's Triangle (2014) (cut-the-knot.org)",
                  "Myanmar's chinlone ball sport threatened by conflict and rattan shortages (aljazeera.com)",
                  "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square (thisiscolossal.com)",
                  "Algovivo an energy-based formulation for soft-bodied virtual creatures (juniorrojas.com)",
                  "The new G√∂del Prize winner tastes great and is less filling (computationalcomplexity.org)",
                  "Why quadratic funding is not optimal (jonathanwarden.com)",
                  "A bit more on Twitter/X's new encrypted messaging (cryptographyengineering.com)",
                  "RFK Jr. ousts entire CDC vaccine advisory committee (apnews.com)",
                  "A man rebuilding the last Inca rope bridge (atlasobscura.com)",
                  "Finding Shawn Mendes (2019) (ericneyman.wordpress.com)",
                  "How do you prototype a nice language? (kevinlynagh.com)",
                  "Astronomers have discovered a mysterious object flashing signals from deep space (livescience.com)",
                  "Show HN: Glowstick ‚Äì type level tensor shapes in stable rust (github.com/nicksenger)",
                  "LLMs are cheap (snellman.net)",
                  "1.",
                  "2.",
                  "3.",
                  "4.",
                  "5.",
                  "6.",
                  "7.",
                  "8.",
                  "9.",
                  "10.",
                  "11.",
                  "12.",
                  "13.",
                  "14.",
                  "15.",
                  "16.",
                  "17.",
                  "18.",
                  "19.",
                  "20.",
                  "21.",
                  "22.",
                  "23.",
                  "24.",
                  "25.",
                  "26.",
                  "27.",
                  "28.",
                  "29.",
                  "30."
            ],
            "points": [
                  "1243 points",
                  "175 points",
                  "432 points",
                  "54 points",
                  "145 points",
                  "377 points",
                  "73 points",
                  "46 points",
                  "13 points",
                  "71 points",
                  "88 points",
                  "94 points",
                  "110 points",
                  "415 points",
                  "121 points",
                  "41 points",
                  "17 points",
                  "24 points",
                  "52 points",
                  "86 points",
                  "97 points",
                  "141 points",
                  "58 points",
                  "328 points",
                  "10 points",
                  "59 points",
                  "31 points",
                  "285 points"
            ]
      },
      "selectors": {
            "titles": [
                  "tr.athing .titleline a",
                  "tr.athing .titleline",
                  "tr.athing .title",
                  "span.titleline a",
                  "td.title .titleline a"
            ],
            "points": [
                  "td.subtext .score",
                  "span.score",
                  "tr + tr td.subtext .score",
                  "td.subtext span.score",
                  "span.subline .score"
            ]
      },
      "link": [
            {
                  "href": "https://news.ycombinator.com",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/news",
                  "text": "Hacker News",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/newest",
                  "text": "new",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/front",
                  "text": "past",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/newcomments",
                  "text": "comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/ask",
                  "text": "ask",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/show",
                  "text": "show",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/jobs",
                  "text": "jobs",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/submit",
                  "text": "submit",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/login?goto=news",
                  "text": "login",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44226145&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44226145",
                  "text": "Tell HN: Help restore the tax deduction for software dev in the US (Section 174)",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=dang",
                  "text": "dang",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44226145",
                  "text": "6 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44226145&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44226145",
                  "text": "486¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44229348&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://github.com/apple/containerization",
                  "text": "Containerization is a Swift package for running Linux containers on macOS",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=github.com/apple",
                  "text": "github.com/apple",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=gok",
                  "text": "gok",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44229348",
                  "text": "2 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44229348&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44229348",
                  "text": "53¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44226978&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://www.apple.com/newsroom/2025/06/apple-supercharges-its-tools-and-technologies-for-developers/",
                  "text": "Apple announces Foundation Models and Containerization frameworks, etc",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=apple.com",
                  "text": "apple.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=thm",
                  "text": "thm",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44226978",
                  "text": "5 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44226978&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44226978",
                  "text": "280¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44229841&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://abcnews.go.com/US/sly-stone-pioneering-leader-funk-band-sly-family/story?id=122666345",
                  "text": "Sly Stone has died",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=go.com",
                  "text": "go.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=brudgers",
                  "text": "brudgers",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44229841",
                  "text": "1 hour ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44229841&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44229841",
                  "text": "2¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44226879&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://github.com/Askannz/munal-os",
                  "text": "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=github.com/askannz",
                  "text": "github.com/askannz",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=Gazoche",
                  "text": "Gazoche",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44226879",
                  "text": "4 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44226879&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44226879",
                  "text": "59¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44226612&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://www.apple.com/newsroom/2025/06/apple-introduces-a-delightful-and-elegant-new-software-design/",
                  "text": "Apple introduces a universal design across platforms",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=apple.com",
                  "text": "apple.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=meetpateltech",
                  "text": "meetpateltech",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44226612",
                  "text": "5 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44226612&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44226612",
                  "text": "582¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44201143&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://neurofrontiers.blog/what-methylene-blue-can-and-cant-do-for-the-brain/",
                  "text": "What methylene blue can (and can‚Äôt) do for the brain",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=neurofrontiers.blog",
                  "text": "neurofrontiers.blog",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=wiry",
                  "text": "wiry",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44201143",
                  "text": "4 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44201143&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44201143",
                  "text": "39¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44229150&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://www.ahmedsaoudi.com/blog/domains-i-love/",
                  "text": "Domains I Love",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=ahmedsaoudi.com",
                  "text": "ahmedsaoudi.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=ahmedfromtunis",
                  "text": "ahmedfromtunis",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44229150",
                  "text": "2 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44229150&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44229150",
                  "text": "31¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44229694&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://www.righto.com/2017/10/the-xerox-alto-smalltalk-and-rewriting.html",
                  "text": "The Xerox Alto, Smalltalk, and Rewriting a Running GUI",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=righto.com",
                  "text": "righto.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=rbanffy",
                  "text": "rbanffy",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44229694",
                  "text": "1 hour ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44229694&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44229694",
                  "text": "2¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44227207&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://github.com/theopfr/somo",
                  "text": "Show HN: Somo ‚Äì a human friendly alternative to netstat",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=github.com/theopfr",
                  "text": "github.com/theopfr",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=hollow64",
                  "text": "hollow64",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44227207",
                  "text": "4 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44227207&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44227207",
                  "text": "19¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44225930&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44225930",
                  "text": "Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=snyy",
                  "text": "snyy",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44225930",
                  "text": "6 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44225930&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44225930",
                  "text": "30¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44179889&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://docs.hatchet.run/blog/go-agents",
                  "text": "Go is a good fit for agents",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=hatchet.run",
                  "text": "hatchet.run",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=abelanger",
                  "text": "abelanger",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44179889",
                  "text": "6 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44179889&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44179889",
                  "text": "74¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44224874&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://spectrum.ieee.org/focused-ultrasound-stimulation-inflammation-diabetes",
                  "text": "Doctors could hack the nervous system with ultrasound",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=ieee.org",
                  "text": "ieee.org",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=purpleko",
                  "text": "purpleko",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44224874",
                  "text": "8 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44224874&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44224874",
                  "text": "12¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44224684&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://brutecat.com/articles/leaking-google-phones",
                  "text": "Bruteforcing the phone number of any Google user",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=brutecat.com",
                  "text": "brutecat.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=brutecat",
                  "text": "brutecat",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44224684",
                  "text": "8 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44224684&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44224684",
                  "text": "134¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44224992&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://ndlsearch.ndl.go.jp/en/imagebank/theme/hokusaimoyo",
                  "text": "Hokusai Moyo Gafu: an album of dyeing patterns",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=ndl.go.jp",
                  "text": "ndl.go.jp",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=fanf2",
                  "text": "fanf2",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44224992",
                  "text": "8 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44224992&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44224992",
                  "text": "13¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44200240&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://www.cut-the-knot.org/arithmetic/algebra/PiInPascal.shtml",
                  "text": "Pi in Pascal's Triangle (2014)",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=cut-the-knot.org",
                  "text": "cut-the-knot.org",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=senfiaj",
                  "text": "senfiaj",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44200240",
                  "text": "5 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44200240&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44200240",
                  "text": "5¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44195768&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://www.aljazeera.com/gallery/2025/6/5/myanmars-chinlone-ball-sport-threatened-by-conflict-and-rattan-shortages",
                  "text": "Myanmar's chinlone ball sport threatened by conflict and rattan shortages",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=aljazeera.com",
                  "text": "aljazeera.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=YeGoblynQueenne",
                  "text": "YeGoblynQueenne",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44195768",
                  "text": "3 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44195768&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44195768",
                  "text": "discuss",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44203870&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://www.thisiscolossal.com/2025/05/alex-chinneck-a-week-at-the-knees/",
                  "text": "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=thisiscolossal.com",
                  "text": "thisiscolossal.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=surprisetalk",
                  "text": "surprisetalk",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44203870",
                  "text": "4 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44203870&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44203870",
                  "text": "20¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44225761&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://juniorrojas.com/algovivo/",
                  "text": "Algovivo an energy-based formulation for soft-bodied virtual creatures",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=juniorrojas.com",
                  "text": "juniorrojas.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=tzury",
                  "text": "tzury",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44225761",
                  "text": "7 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44225761&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44225761",
                  "text": "3¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44224996&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://blog.computationalcomplexity.org/2025/06/the-new-godel-prize-winner-tastes-great.html",
                  "text": "The new G√∂del Prize winner tastes great and is less filling",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=computationalcomplexity.org",
                  "text": "computationalcomplexity.org",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=baruchel",
                  "text": "baruchel",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44224996",
                  "text": "8 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44224996&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44224996",
                  "text": "26¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44224915&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://jonathanwarden.com/quadratic-funding-is-not-optimal/",
                  "text": "Why quadratic funding is not optimal",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=jonathanwarden.com",
                  "text": "jonathanwarden.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=jwarden",
                  "text": "jwarden",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44224915",
                  "text": "8 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44224915&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44224915",
                  "text": "69¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44225352&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44225352",
                  "text": "Show HN: Most users won't report bugs unless you make it stupidly easy",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=lakshikag",
                  "text": "lakshikag",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44225352",
                  "text": "7 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44225352&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44225352",
                  "text": "80¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44227689&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://blog.cryptographyengineering.com/2025/06/09/a-bit-more-on-twitter-xs-new-encrypted-messaging/",
                  "text": "A bit more on Twitter/X's new encrypted messaging",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=cryptographyengineering.com",
                  "text": "cryptographyengineering.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=vishnuharidas",
                  "text": "vishnuharidas",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44227689",
                  "text": "4 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44227689&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44227689",
                  "text": "61¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44229778&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://apnews.com/article/kennedy-cdc-acip-vaccines-3790c89f45b6314c5c7b686db0e3a8f9",
                  "text": "RFK Jr. ousts entire CDC vaccine advisory committee",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=apnews.com",
                  "text": "apnews.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=doener",
                  "text": "doener",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44229778",
                  "text": "1 hour ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44229778&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44229778",
                  "text": "34¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44206150&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://www.atlasobscura.com/articles/last-inca-rope-bridge-qeswachaka-tradition",
                  "text": "A man rebuilding the last Inca rope bridge",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=atlasobscura.com",
                  "text": "atlasobscura.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=kaonwarb",
                  "text": "kaonwarb",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44206150",
                  "text": "8 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44206150&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44206150",
                  "text": "16¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44222119&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://ericneyman.wordpress.com/2019/11/26/finding-shawn-mendes/",
                  "text": "Finding Shawn Mendes (2019)",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=ericneyman.wordpress.com",
                  "text": "ericneyman.wordpress.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=jzwinck",
                  "text": "jzwinck",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44222119",
                  "text": "15 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44222119&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44222119",
                  "text": "51¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44197007&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://kevinlynagh.com/newsletter/2025_06_03_prototyping_a_language/",
                  "text": "How do you prototype a nice language?",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=kevinlynagh.com",
                  "text": "kevinlynagh.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=surprisetalk",
                  "text": "surprisetalk",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44197007",
                  "text": "2 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44197007&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44197007",
                  "text": "1¬†comment",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44228550&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://www.livescience.com/space/unlike-anything-we-have-seen-before-astronomers-discover-mysterious-object-firing-strange-signals-at-earth-every-44-minutes",
                  "text": "Astronomers have discovered a mysterious object flashing signals from deep space",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=livescience.com",
                  "text": "livescience.com",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=gmays",
                  "text": "gmays",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44228550",
                  "text": "3 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44228550&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44228550",
                  "text": "31¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44225922&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://github.com/nicksenger/glowstick",
                  "text": "Show HN: Glowstick ‚Äì type level tensor shapes in stable rust",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=github.com/nicksenger",
                  "text": "github.com/nicksenger",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=bietroi",
                  "text": "bietroi",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44225922",
                  "text": "6 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44225922&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44225922",
                  "text": "3¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/vote?id=44223448&how=up&goto=news",
                  "text": "",
                  "type": "a"
            },
            {
                  "href": "https://www.snellman.net/blog/archive/2025-06-02-llms-are-cheap/",
                  "text": "LLMs are cheap",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/from?site=snellman.net",
                  "text": "snellman.net",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/user?id=Bogdanp",
                  "text": "Bogdanp",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44223448",
                  "text": "11 hours ago",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/hide?id=44223448&goto=news",
                  "text": "hide",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/item?id=44223448",
                  "text": "260¬†comments",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/?p=2",
                  "text": "More",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/newsguidelines.html",
                  "text": "Guidelines",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/newsfaq.html",
                  "text": "FAQ",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/lists",
                  "text": "Lists",
                  "type": "a"
            },
            {
                  "href": "https://github.com/HackerNews/API",
                  "text": "API",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/security.html",
                  "text": "Security",
                  "type": "a"
            },
            {
                  "href": "https://www.ycombinator.com/legal/",
                  "text": "Legal",
                  "type": "a"
            },
            {
                  "href": "https://www.ycombinator.com/apply/",
                  "text": "Apply to YC",
                  "type": "a"
            },
            {
                  "href": "mailto:hn@ycombinator.com",
                  "text": "Contact",
                  "type": "a"
            },
            {
                  "href": "https://news.ycombinator.com/y18.svg",
                  "text": null,
                  "type": "img"
            },
            {
                  "href": "https://news.ycombinator.com/s.gif",
                  "text": null,
                  "type": "img"
            }
      ],
      "data": [
            {
                  "selector": "tr.athing .titleline a",
                  "results": [
                        {
                              "html": "Tell HN: Help restore the tax deduction for software dev in the US (Section 174)",
                              "text": "Tell HN: Help restore the tax deduction for software dev in the US (Section 174)",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "item?id=44226145"
                                    }
                              ]
                        },
                        {
                              "html": "Containerization is a Swift package for running Linux containers on macOS",
                              "text": "Containerization is a Swift package for running Linux containers on macOS",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/apple/containerization"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/apple</span>",
                              "text": "github.com/apple",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/apple"
                                    }
                              ]
                        },
                        {
                              "html": "Apple announces Foundation Models and Containerization frameworks, etc",
                              "text": "Apple announces Foundation Models and Containerization frameworks, etc",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.apple.com/newsroom/2025/06/apple-supercharges-its-tools-and-technologies-for-developers/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">apple.com</span>",
                              "text": "apple.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=apple.com"
                                    }
                              ]
                        },
                        {
                              "html": "Sly Stone has died",
                              "text": "Sly Stone has died",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://abcnews.go.com/US/sly-stone-pioneering-leader-funk-band-sly-family/story?id=122666345"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">go.com</span>",
                              "text": "go.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=go.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing",
                              "text": "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/Askannz/munal-os"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/askannz</span>",
                              "text": "github.com/askannz",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/askannz"
                                    }
                              ]
                        },
                        {
                              "html": "Apple introduces a universal design across platforms",
                              "text": "Apple introduces a universal design across platforms",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.apple.com/newsroom/2025/06/apple-introduces-a-delightful-and-elegant-new-software-design/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">apple.com</span>",
                              "text": "apple.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=apple.com"
                                    }
                              ]
                        },
                        {
                              "html": "What methylene blue can (and can‚Äôt) do for the brain",
                              "text": "What methylene blue can (and can‚Äôt) do for the brain",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://neurofrontiers.blog/what-methylene-blue-can-and-cant-do-for-the-brain/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">neurofrontiers.blog</span>",
                              "text": "neurofrontiers.blog",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=neurofrontiers.blog"
                                    }
                              ]
                        },
                        {
                              "html": "Domains I Love",
                              "text": "Domains I Love",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.ahmedsaoudi.com/blog/domains-i-love/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ahmedsaoudi.com</span>",
                              "text": "ahmedsaoudi.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ahmedsaoudi.com"
                                    }
                              ]
                        },
                        {
                              "html": "The Xerox Alto, Smalltalk, and Rewriting a Running GUI",
                              "text": "The Xerox Alto, Smalltalk, and Rewriting a Running GUI",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.righto.com/2017/10/the-xerox-alto-smalltalk-and-rewriting.html"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">righto.com</span>",
                              "text": "righto.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=righto.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Somo ‚Äì a human friendly alternative to netstat",
                              "text": "Show HN: Somo ‚Äì a human friendly alternative to netstat",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/theopfr/somo"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/theopfr</span>",
                              "text": "github.com/theopfr",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/theopfr"
                                    }
                              ]
                        },
                        {
                              "html": "Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking",
                              "text": "Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "item?id=44225930"
                                    }
                              ]
                        },
                        {
                              "html": "Go is a good fit for agents",
                              "text": "Go is a good fit for agents",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://docs.hatchet.run/blog/go-agents"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">hatchet.run</span>",
                              "text": "hatchet.run",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=hatchet.run"
                                    }
                              ]
                        },
                        {
                              "html": "Doctors could hack the nervous system with ultrasound",
                              "text": "Doctors could hack the nervous system with ultrasound",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://spectrum.ieee.org/focused-ultrasound-stimulation-inflammation-diabetes"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ieee.org</span>",
                              "text": "ieee.org",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ieee.org"
                                    }
                              ]
                        },
                        {
                              "html": "Bruteforcing the phone number of any Google user",
                              "text": "Bruteforcing the phone number of any Google user",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://brutecat.com/articles/leaking-google-phones"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">brutecat.com</span>",
                              "text": "brutecat.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=brutecat.com"
                                    }
                              ]
                        },
                        {
                              "html": "Hokusai Moyo Gafu: an album of dyeing patterns",
                              "text": "Hokusai Moyo Gafu: an album of dyeing patterns",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://ndlsearch.ndl.go.jp/en/imagebank/theme/hokusaimoyo"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ndl.go.jp</span>",
                              "text": "ndl.go.jp",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ndl.go.jp"
                                    }
                              ]
                        },
                        {
                              "html": "Pi in Pascal's Triangle (2014)",
                              "text": "Pi in Pascal's Triangle (2014)",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.cut-the-knot.org/arithmetic/algebra/PiInPascal.shtml"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">cut-the-knot.org</span>",
                              "text": "cut-the-knot.org",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=cut-the-knot.org"
                                    }
                              ]
                        },
                        {
                              "html": "Myanmar's chinlone ball sport threatened by conflict and rattan shortages",
                              "text": "Myanmar's chinlone ball sport threatened by conflict and rattan shortages",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.aljazeera.com/gallery/2025/6/5/myanmars-chinlone-ball-sport-threatened-by-conflict-and-rattan-shortages"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">aljazeera.com</span>",
                              "text": "aljazeera.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=aljazeera.com"
                                    }
                              ]
                        },
                        {
                              "html": "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square",
                              "text": "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.thisiscolossal.com/2025/05/alex-chinneck-a-week-at-the-knees/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">thisiscolossal.com</span>",
                              "text": "thisiscolossal.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=thisiscolossal.com"
                                    }
                              ]
                        },
                        {
                              "html": "Algovivo an energy-based formulation for soft-bodied virtual creatures",
                              "text": "Algovivo an energy-based formulation for soft-bodied virtual creatures",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://juniorrojas.com/algovivo/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">juniorrojas.com</span>",
                              "text": "juniorrojas.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=juniorrojas.com"
                                    }
                              ]
                        },
                        {
                              "html": "The new G√∂del Prize winner tastes great and is less filling",
                              "text": "The new G√∂del Prize winner tastes great and is less filling",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://blog.computationalcomplexity.org/2025/06/the-new-godel-prize-winner-tastes-great.html"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">computationalcomplexity.org</span>",
                              "text": "computationalcomplexity.org",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=computationalcomplexity.org"
                                    }
                              ]
                        },
                        {
                              "html": "Why quadratic funding is not optimal",
                              "text": "Why quadratic funding is not optimal",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://jonathanwarden.com/quadratic-funding-is-not-optimal/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">jonathanwarden.com</span>",
                              "text": "jonathanwarden.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=jonathanwarden.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Most users won't report bugs unless you make it stupidly easy",
                              "text": "Show HN: Most users won't report bugs unless you make it stupidly easy",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "item?id=44225352"
                                    }
                              ]
                        },
                        {
                              "html": "A bit more on Twitter/X's new encrypted messaging",
                              "text": "A bit more on Twitter/X's new encrypted messaging",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://blog.cryptographyengineering.com/2025/06/09/a-bit-more-on-twitter-xs-new-encrypted-messaging/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">cryptographyengineering.com</span>",
                              "text": "cryptographyengineering.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=cryptographyengineering.com"
                                    }
                              ]
                        },
                        {
                              "html": "RFK Jr. ousts entire CDC vaccine advisory committee",
                              "text": "RFK Jr. ousts entire CDC vaccine advisory committee",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://apnews.com/article/kennedy-cdc-acip-vaccines-3790c89f45b6314c5c7b686db0e3a8f9"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">apnews.com</span>",
                              "text": "apnews.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=apnews.com"
                                    }
                              ]
                        },
                        {
                              "html": "A man rebuilding the last Inca rope bridge",
                              "text": "A man rebuilding the last Inca rope bridge",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.atlasobscura.com/articles/last-inca-rope-bridge-qeswachaka-tradition"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">atlasobscura.com</span>",
                              "text": "atlasobscura.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=atlasobscura.com"
                                    }
                              ]
                        },
                        {
                              "html": "Finding Shawn Mendes (2019)",
                              "text": "Finding Shawn Mendes (2019)",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://ericneyman.wordpress.com/2019/11/26/finding-shawn-mendes/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ericneyman.wordpress.com</span>",
                              "text": "ericneyman.wordpress.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ericneyman.wordpress.com"
                                    }
                              ]
                        },
                        {
                              "html": "How do you prototype a nice language?",
                              "text": "How do you prototype a nice language?",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://kevinlynagh.com/newsletter/2025_06_03_prototyping_a_language/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">kevinlynagh.com</span>",
                              "text": "kevinlynagh.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=kevinlynagh.com"
                                    }
                              ]
                        },
                        {
                              "html": "Astronomers have discovered a mysterious object flashing signals from deep space",
                              "text": "Astronomers have discovered a mysterious object flashing signals from deep space",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.livescience.com/space/unlike-anything-we-have-seen-before-astronomers-discover-mysterious-object-firing-strange-signals-at-earth-every-44-minutes"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">livescience.com</span>",
                              "text": "livescience.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=livescience.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Glowstick ‚Äì type level tensor shapes in stable rust",
                              "text": "Show HN: Glowstick ‚Äì type level tensor shapes in stable rust",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/nicksenger/glowstick"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/nicksenger</span>",
                              "text": "github.com/nicksenger",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/nicksenger"
                                    }
                              ]
                        },
                        {
                              "html": "LLMs are cheap",
                              "text": "LLMs are cheap",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.snellman.net/blog/archive/2025-06-02-llms-are-cheap/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">snellman.net</span>",
                              "text": "snellman.net",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=snellman.net"
                                    }
                              ]
                        }
                  ],
                  "key": "titles"
            },
            {
                  "selector": "tr.athing .titleline",
                  "results": [
                        {
                              "html": "<a href=\"item?id=44226145\">Tell HN: Help restore the tax deduction for software dev in the US (Section 174)</a>",
                              "text": "Tell HN: Help restore the tax deduction for software dev in the US (Section 174)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://github.com/apple/containerization\">Containerization is a Swift package for running Linux containers on macOS</a><span class=\"sitebit comhead\"> (<a href=\"from?site=github.com/apple\"><span class=\"sitestr\">github.com/apple</span></a>)</span>",
                              "text": "Containerization is a Swift package for running Linux containers on macOS (github.com/apple)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://www.apple.com/newsroom/2025/06/apple-supercharges-its-tools-and-technologies-for-developers/\">Apple announces Foundation Models and Containerization frameworks, etc</a><span class=\"sitebit comhead\"> (<a href=\"from?site=apple.com\"><span class=\"sitestr\">apple.com</span></a>)</span>",
                              "text": "Apple announces Foundation Models and Containerization frameworks, etc (apple.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://abcnews.go.com/US/sly-stone-pioneering-leader-funk-band-sly-family/story?id=122666345\">Sly Stone has died</a><span class=\"sitebit comhead\"> (<a href=\"from?site=go.com\"><span class=\"sitestr\">go.com</span></a>)</span>",
                              "text": "Sly Stone has died (go.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://github.com/Askannz/munal-os\">Show HN: Munal OS: a graphical experimental OS with WASM sandboxing</a><span class=\"sitebit comhead\"> (<a href=\"from?site=github.com/askannz\"><span class=\"sitestr\">github.com/askannz</span></a>)</span>",
                              "text": "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing (github.com/askannz)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://www.apple.com/newsroom/2025/06/apple-introduces-a-delightful-and-elegant-new-software-design/\">Apple introduces a universal design across platforms</a><span class=\"sitebit comhead\"> (<a href=\"from?site=apple.com\"><span class=\"sitestr\">apple.com</span></a>)</span>",
                              "text": "Apple introduces a universal design across platforms (apple.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://neurofrontiers.blog/what-methylene-blue-can-and-cant-do-for-the-brain/\">What methylene blue can (and can‚Äôt) do for the brain</a><span class=\"sitebit comhead\"> (<a href=\"from?site=neurofrontiers.blog\"><span class=\"sitestr\">neurofrontiers.blog</span></a>)</span>",
                              "text": "What methylene blue can (and can‚Äôt) do for the brain (neurofrontiers.blog)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://www.ahmedsaoudi.com/blog/domains-i-love/\">Domains I Love</a><span class=\"sitebit comhead\"> (<a href=\"from?site=ahmedsaoudi.com\"><span class=\"sitestr\">ahmedsaoudi.com</span></a>)</span>",
                              "text": "Domains I Love (ahmedsaoudi.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://www.righto.com/2017/10/the-xerox-alto-smalltalk-and-rewriting.html\">The Xerox Alto, Smalltalk, and Rewriting a Running GUI</a><span class=\"sitebit comhead\"> (<a href=\"from?site=righto.com\"><span class=\"sitestr\">righto.com</span></a>)</span>",
                              "text": "The Xerox Alto, Smalltalk, and Rewriting a Running GUI (righto.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://github.com/theopfr/somo\">Show HN: Somo ‚Äì a human friendly alternative to netstat</a><span class=\"sitebit comhead\"> (<a href=\"from?site=github.com/theopfr\"><span class=\"sitestr\">github.com/theopfr</span></a>)</span>",
                              "text": "Show HN: Somo ‚Äì a human friendly alternative to netstat (github.com/theopfr)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"item?id=44225930\">Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking</a>",
                              "text": "Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://docs.hatchet.run/blog/go-agents\">Go is a good fit for agents</a><span class=\"sitebit comhead\"> (<a href=\"from?site=hatchet.run\"><span class=\"sitestr\">hatchet.run</span></a>)</span>",
                              "text": "Go is a good fit for agents (hatchet.run)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://spectrum.ieee.org/focused-ultrasound-stimulation-inflammation-diabetes\">Doctors could hack the nervous system with ultrasound</a><span class=\"sitebit comhead\"> (<a href=\"from?site=ieee.org\"><span class=\"sitestr\">ieee.org</span></a>)</span>",
                              "text": "Doctors could hack the nervous system with ultrasound (ieee.org)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://brutecat.com/articles/leaking-google-phones\">Bruteforcing the phone number of any Google user</a><span class=\"sitebit comhead\"> (<a href=\"from?site=brutecat.com\"><span class=\"sitestr\">brutecat.com</span></a>)</span>",
                              "text": "Bruteforcing the phone number of any Google user (brutecat.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://ndlsearch.ndl.go.jp/en/imagebank/theme/hokusaimoyo\">Hokusai Moyo Gafu: an album of dyeing patterns</a><span class=\"sitebit comhead\"> (<a href=\"from?site=ndl.go.jp\"><span class=\"sitestr\">ndl.go.jp</span></a>)</span>",
                              "text": "Hokusai Moyo Gafu: an album of dyeing patterns (ndl.go.jp)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://www.cut-the-knot.org/arithmetic/algebra/PiInPascal.shtml\">Pi in Pascal's Triangle (2014)</a><span class=\"sitebit comhead\"> (<a href=\"from?site=cut-the-knot.org\"><span class=\"sitestr\">cut-the-knot.org</span></a>)</span>",
                              "text": "Pi in Pascal's Triangle (2014) (cut-the-knot.org)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://www.aljazeera.com/gallery/2025/6/5/myanmars-chinlone-ball-sport-threatened-by-conflict-and-rattan-shortages\">Myanmar's chinlone ball sport threatened by conflict and rattan shortages</a><span class=\"sitebit comhead\"> (<a href=\"from?site=aljazeera.com\"><span class=\"sitestr\">aljazeera.com</span></a>)</span>",
                              "text": "Myanmar's chinlone ball sport threatened by conflict and rattan shortages (aljazeera.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://www.thisiscolossal.com/2025/05/alex-chinneck-a-week-at-the-knees/\">A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square</a><span class=\"sitebit comhead\"> (<a href=\"from?site=thisiscolossal.com\"><span class=\"sitestr\">thisiscolossal.com</span></a>)</span>",
                              "text": "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square (thisiscolossal.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://juniorrojas.com/algovivo/\">Algovivo an energy-based formulation for soft-bodied virtual creatures</a><span class=\"sitebit comhead\"> (<a href=\"from?site=juniorrojas.com\"><span class=\"sitestr\">juniorrojas.com</span></a>)</span>",
                              "text": "Algovivo an energy-based formulation for soft-bodied virtual creatures (juniorrojas.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://blog.computationalcomplexity.org/2025/06/the-new-godel-prize-winner-tastes-great.html\">The new G√∂del Prize winner tastes great and is less filling</a><span class=\"sitebit comhead\"> (<a href=\"from?site=computationalcomplexity.org\"><span class=\"sitestr\">computationalcomplexity.org</span></a>)</span>",
                              "text": "The new G√∂del Prize winner tastes great and is less filling (computationalcomplexity.org)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://jonathanwarden.com/quadratic-funding-is-not-optimal/\">Why quadratic funding is not optimal</a><span class=\"sitebit comhead\"> (<a href=\"from?site=jonathanwarden.com\"><span class=\"sitestr\">jonathanwarden.com</span></a>)</span>",
                              "text": "Why quadratic funding is not optimal (jonathanwarden.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"item?id=44225352\">Show HN: Most users won't report bugs unless you make it stupidly easy</a>",
                              "text": "Show HN: Most users won't report bugs unless you make it stupidly easy",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://blog.cryptographyengineering.com/2025/06/09/a-bit-more-on-twitter-xs-new-encrypted-messaging/\">A bit more on Twitter/X's new encrypted messaging</a><span class=\"sitebit comhead\"> (<a href=\"from?site=cryptographyengineering.com\"><span class=\"sitestr\">cryptographyengineering.com</span></a>)</span>",
                              "text": "A bit more on Twitter/X's new encrypted messaging (cryptographyengineering.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://apnews.com/article/kennedy-cdc-acip-vaccines-3790c89f45b6314c5c7b686db0e3a8f9\">RFK Jr. ousts entire CDC vaccine advisory committee</a><span class=\"sitebit comhead\"> (<a href=\"from?site=apnews.com\"><span class=\"sitestr\">apnews.com</span></a>)</span>",
                              "text": "RFK Jr. ousts entire CDC vaccine advisory committee (apnews.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://www.atlasobscura.com/articles/last-inca-rope-bridge-qeswachaka-tradition\">A man rebuilding the last Inca rope bridge</a><span class=\"sitebit comhead\"> (<a href=\"from?site=atlasobscura.com\"><span class=\"sitestr\">atlasobscura.com</span></a>)</span>",
                              "text": "A man rebuilding the last Inca rope bridge (atlasobscura.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://ericneyman.wordpress.com/2019/11/26/finding-shawn-mendes/\">Finding Shawn Mendes (2019)</a><span class=\"sitebit comhead\"> (<a href=\"from?site=ericneyman.wordpress.com\"><span class=\"sitestr\">ericneyman.wordpress.com</span></a>)</span>",
                              "text": "Finding Shawn Mendes (2019) (ericneyman.wordpress.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://kevinlynagh.com/newsletter/2025_06_03_prototyping_a_language/\">How do you prototype a nice language?</a><span class=\"sitebit comhead\"> (<a href=\"from?site=kevinlynagh.com\"><span class=\"sitestr\">kevinlynagh.com</span></a>)</span>",
                              "text": "How do you prototype a nice language? (kevinlynagh.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://www.livescience.com/space/unlike-anything-we-have-seen-before-astronomers-discover-mysterious-object-firing-strange-signals-at-earth-every-44-minutes\">Astronomers have discovered a mysterious object flashing signals from deep space</a><span class=\"sitebit comhead\"> (<a href=\"from?site=livescience.com\"><span class=\"sitestr\">livescience.com</span></a>)</span>",
                              "text": "Astronomers have discovered a mysterious object flashing signals from deep space (livescience.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://github.com/nicksenger/glowstick\">Show HN: Glowstick ‚Äì type level tensor shapes in stable rust</a><span class=\"sitebit comhead\"> (<a href=\"from?site=github.com/nicksenger\"><span class=\"sitestr\">github.com/nicksenger</span></a>)</span>",
                              "text": "Show HN: Glowstick ‚Äì type level tensor shapes in stable rust (github.com/nicksenger)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        },
                        {
                              "html": "<a href=\"https://www.snellman.net/blog/archive/2025-06-02-llms-are-cheap/\">LLMs are cheap</a><span class=\"sitebit comhead\"> (<a href=\"from?site=snellman.net\"><span class=\"sitestr\">snellman.net</span></a>)</span>",
                              "text": "LLMs are cheap (snellman.net)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "titleline"
                                    }
                              ]
                        }
                  ],
                  "key": "titles"
            },
            {
                  "selector": "tr.athing .title",
                  "results": [
                        {
                              "html": "<span class=\"rank\">1.</span>",
                              "text": "1.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"item?id=44226145\">Tell HN: Help restore the tax deduction for software dev in the US (Section 174)</a></span>",
                              "text": "Tell HN: Help restore the tax deduction for software dev in the US (Section 174)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">2.</span>",
                              "text": "2.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://github.com/apple/containerization\">Containerization is a Swift package for running Linux containers on macOS</a><span class=\"sitebit comhead\"> (<a href=\"from?site=github.com/apple\"><span class=\"sitestr\">github.com/apple</span></a>)</span></span>",
                              "text": "Containerization is a Swift package for running Linux containers on macOS (github.com/apple)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">3.</span>",
                              "text": "3.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://www.apple.com/newsroom/2025/06/apple-supercharges-its-tools-and-technologies-for-developers/\">Apple announces Foundation Models and Containerization frameworks, etc</a><span class=\"sitebit comhead\"> (<a href=\"from?site=apple.com\"><span class=\"sitestr\">apple.com</span></a>)</span></span>",
                              "text": "Apple announces Foundation Models and Containerization frameworks, etc (apple.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">4.</span>",
                              "text": "4.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://abcnews.go.com/US/sly-stone-pioneering-leader-funk-band-sly-family/story?id=122666345\">Sly Stone has died</a><span class=\"sitebit comhead\"> (<a href=\"from?site=go.com\"><span class=\"sitestr\">go.com</span></a>)</span></span>",
                              "text": "Sly Stone has died (go.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">5.</span>",
                              "text": "5.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://github.com/Askannz/munal-os\">Show HN: Munal OS: a graphical experimental OS with WASM sandboxing</a><span class=\"sitebit comhead\"> (<a href=\"from?site=github.com/askannz\"><span class=\"sitestr\">github.com/askannz</span></a>)</span></span>",
                              "text": "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing (github.com/askannz)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">6.</span>",
                              "text": "6.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://www.apple.com/newsroom/2025/06/apple-introduces-a-delightful-and-elegant-new-software-design/\">Apple introduces a universal design across platforms</a><span class=\"sitebit comhead\"> (<a href=\"from?site=apple.com\"><span class=\"sitestr\">apple.com</span></a>)</span></span>",
                              "text": "Apple introduces a universal design across platforms (apple.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">7.</span>",
                              "text": "7.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://neurofrontiers.blog/what-methylene-blue-can-and-cant-do-for-the-brain/\">What methylene blue can (and can‚Äôt) do for the brain</a><span class=\"sitebit comhead\"> (<a href=\"from?site=neurofrontiers.blog\"><span class=\"sitestr\">neurofrontiers.blog</span></a>)</span></span>",
                              "text": "What methylene blue can (and can‚Äôt) do for the brain (neurofrontiers.blog)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">8.</span>",
                              "text": "8.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://www.ahmedsaoudi.com/blog/domains-i-love/\">Domains I Love</a><span class=\"sitebit comhead\"> (<a href=\"from?site=ahmedsaoudi.com\"><span class=\"sitestr\">ahmedsaoudi.com</span></a>)</span></span>",
                              "text": "Domains I Love (ahmedsaoudi.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">9.</span>",
                              "text": "9.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://www.righto.com/2017/10/the-xerox-alto-smalltalk-and-rewriting.html\">The Xerox Alto, Smalltalk, and Rewriting a Running GUI</a><span class=\"sitebit comhead\"> (<a href=\"from?site=righto.com\"><span class=\"sitestr\">righto.com</span></a>)</span></span>",
                              "text": "The Xerox Alto, Smalltalk, and Rewriting a Running GUI (righto.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">10.</span>",
                              "text": "10.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://github.com/theopfr/somo\">Show HN: Somo ‚Äì a human friendly alternative to netstat</a><span class=\"sitebit comhead\"> (<a href=\"from?site=github.com/theopfr\"><span class=\"sitestr\">github.com/theopfr</span></a>)</span></span>",
                              "text": "Show HN: Somo ‚Äì a human friendly alternative to netstat (github.com/theopfr)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">11.</span>",
                              "text": "11.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"item?id=44225930\">Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking</a></span>",
                              "text": "Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">12.</span>",
                              "text": "12.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://docs.hatchet.run/blog/go-agents\">Go is a good fit for agents</a><span class=\"sitebit comhead\"> (<a href=\"from?site=hatchet.run\"><span class=\"sitestr\">hatchet.run</span></a>)</span></span>",
                              "text": "Go is a good fit for agents (hatchet.run)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">13.</span>",
                              "text": "13.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://spectrum.ieee.org/focused-ultrasound-stimulation-inflammation-diabetes\">Doctors could hack the nervous system with ultrasound</a><span class=\"sitebit comhead\"> (<a href=\"from?site=ieee.org\"><span class=\"sitestr\">ieee.org</span></a>)</span></span>",
                              "text": "Doctors could hack the nervous system with ultrasound (ieee.org)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">14.</span>",
                              "text": "14.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://brutecat.com/articles/leaking-google-phones\">Bruteforcing the phone number of any Google user</a><span class=\"sitebit comhead\"> (<a href=\"from?site=brutecat.com\"><span class=\"sitestr\">brutecat.com</span></a>)</span></span>",
                              "text": "Bruteforcing the phone number of any Google user (brutecat.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">15.</span>",
                              "text": "15.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://ndlsearch.ndl.go.jp/en/imagebank/theme/hokusaimoyo\">Hokusai Moyo Gafu: an album of dyeing patterns</a><span class=\"sitebit comhead\"> (<a href=\"from?site=ndl.go.jp\"><span class=\"sitestr\">ndl.go.jp</span></a>)</span></span>",
                              "text": "Hokusai Moyo Gafu: an album of dyeing patterns (ndl.go.jp)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">16.</span>",
                              "text": "16.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://www.cut-the-knot.org/arithmetic/algebra/PiInPascal.shtml\">Pi in Pascal's Triangle (2014)</a><span class=\"sitebit comhead\"> (<a href=\"from?site=cut-the-knot.org\"><span class=\"sitestr\">cut-the-knot.org</span></a>)</span></span>",
                              "text": "Pi in Pascal's Triangle (2014) (cut-the-knot.org)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">17.</span>",
                              "text": "17.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://www.aljazeera.com/gallery/2025/6/5/myanmars-chinlone-ball-sport-threatened-by-conflict-and-rattan-shortages\">Myanmar's chinlone ball sport threatened by conflict and rattan shortages</a><span class=\"sitebit comhead\"> (<a href=\"from?site=aljazeera.com\"><span class=\"sitestr\">aljazeera.com</span></a>)</span></span>",
                              "text": "Myanmar's chinlone ball sport threatened by conflict and rattan shortages (aljazeera.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">18.</span>",
                              "text": "18.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://www.thisiscolossal.com/2025/05/alex-chinneck-a-week-at-the-knees/\">A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square</a><span class=\"sitebit comhead\"> (<a href=\"from?site=thisiscolossal.com\"><span class=\"sitestr\">thisiscolossal.com</span></a>)</span></span>",
                              "text": "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square (thisiscolossal.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">19.</span>",
                              "text": "19.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://juniorrojas.com/algovivo/\">Algovivo an energy-based formulation for soft-bodied virtual creatures</a><span class=\"sitebit comhead\"> (<a href=\"from?site=juniorrojas.com\"><span class=\"sitestr\">juniorrojas.com</span></a>)</span></span>",
                              "text": "Algovivo an energy-based formulation for soft-bodied virtual creatures (juniorrojas.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">20.</span>",
                              "text": "20.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://blog.computationalcomplexity.org/2025/06/the-new-godel-prize-winner-tastes-great.html\">The new G√∂del Prize winner tastes great and is less filling</a><span class=\"sitebit comhead\"> (<a href=\"from?site=computationalcomplexity.org\"><span class=\"sitestr\">computationalcomplexity.org</span></a>)</span></span>",
                              "text": "The new G√∂del Prize winner tastes great and is less filling (computationalcomplexity.org)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">21.</span>",
                              "text": "21.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://jonathanwarden.com/quadratic-funding-is-not-optimal/\">Why quadratic funding is not optimal</a><span class=\"sitebit comhead\"> (<a href=\"from?site=jonathanwarden.com\"><span class=\"sitestr\">jonathanwarden.com</span></a>)</span></span>",
                              "text": "Why quadratic funding is not optimal (jonathanwarden.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">22.</span>",
                              "text": "22.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"item?id=44225352\">Show HN: Most users won't report bugs unless you make it stupidly easy</a></span>",
                              "text": "Show HN: Most users won't report bugs unless you make it stupidly easy",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">23.</span>",
                              "text": "23.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://blog.cryptographyengineering.com/2025/06/09/a-bit-more-on-twitter-xs-new-encrypted-messaging/\">A bit more on Twitter/X's new encrypted messaging</a><span class=\"sitebit comhead\"> (<a href=\"from?site=cryptographyengineering.com\"><span class=\"sitestr\">cryptographyengineering.com</span></a>)</span></span>",
                              "text": "A bit more on Twitter/X's new encrypted messaging (cryptographyengineering.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">24.</span>",
                              "text": "24.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://apnews.com/article/kennedy-cdc-acip-vaccines-3790c89f45b6314c5c7b686db0e3a8f9\">RFK Jr. ousts entire CDC vaccine advisory committee</a><span class=\"sitebit comhead\"> (<a href=\"from?site=apnews.com\"><span class=\"sitestr\">apnews.com</span></a>)</span></span>",
                              "text": "RFK Jr. ousts entire CDC vaccine advisory committee (apnews.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">25.</span>",
                              "text": "25.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://www.atlasobscura.com/articles/last-inca-rope-bridge-qeswachaka-tradition\">A man rebuilding the last Inca rope bridge</a><span class=\"sitebit comhead\"> (<a href=\"from?site=atlasobscura.com\"><span class=\"sitestr\">atlasobscura.com</span></a>)</span></span>",
                              "text": "A man rebuilding the last Inca rope bridge (atlasobscura.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">26.</span>",
                              "text": "26.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://ericneyman.wordpress.com/2019/11/26/finding-shawn-mendes/\">Finding Shawn Mendes (2019)</a><span class=\"sitebit comhead\"> (<a href=\"from?site=ericneyman.wordpress.com\"><span class=\"sitestr\">ericneyman.wordpress.com</span></a>)</span></span>",
                              "text": "Finding Shawn Mendes (2019) (ericneyman.wordpress.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">27.</span>",
                              "text": "27.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://kevinlynagh.com/newsletter/2025_06_03_prototyping_a_language/\">How do you prototype a nice language?</a><span class=\"sitebit comhead\"> (<a href=\"from?site=kevinlynagh.com\"><span class=\"sitestr\">kevinlynagh.com</span></a>)</span></span>",
                              "text": "How do you prototype a nice language? (kevinlynagh.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">28.</span>",
                              "text": "28.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://www.livescience.com/space/unlike-anything-we-have-seen-before-astronomers-discover-mysterious-object-firing-strange-signals-at-earth-every-44-minutes\">Astronomers have discovered a mysterious object flashing signals from deep space</a><span class=\"sitebit comhead\"> (<a href=\"from?site=livescience.com\"><span class=\"sitestr\">livescience.com</span></a>)</span></span>",
                              "text": "Astronomers have discovered a mysterious object flashing signals from deep space (livescience.com)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">29.</span>",
                              "text": "29.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://github.com/nicksenger/glowstick\">Show HN: Glowstick ‚Äì type level tensor shapes in stable rust</a><span class=\"sitebit comhead\"> (<a href=\"from?site=github.com/nicksenger\"><span class=\"sitestr\">github.com/nicksenger</span></a>)</span></span>",
                              "text": "Show HN: Glowstick ‚Äì type level tensor shapes in stable rust (github.com/nicksenger)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"rank\">30.</span>",
                              "text": "30.",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"titleline\"><a href=\"https://www.snellman.net/blog/archive/2025-06-02-llms-are-cheap/\">LLMs are cheap</a><span class=\"sitebit comhead\"> (<a href=\"from?site=snellman.net\"><span class=\"sitestr\">snellman.net</span></a>)</span></span>",
                              "text": "LLMs are cheap (snellman.net)",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "title"
                                    }
                              ]
                        }
                  ],
                  "key": "titles"
            },
            {
                  "selector": "span.titleline a",
                  "results": [
                        {
                              "html": "Tell HN: Help restore the tax deduction for software dev in the US (Section 174)",
                              "text": "Tell HN: Help restore the tax deduction for software dev in the US (Section 174)",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "item?id=44226145"
                                    }
                              ]
                        },
                        {
                              "html": "Containerization is a Swift package for running Linux containers on macOS",
                              "text": "Containerization is a Swift package for running Linux containers on macOS",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/apple/containerization"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/apple</span>",
                              "text": "github.com/apple",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/apple"
                                    }
                              ]
                        },
                        {
                              "html": "Apple announces Foundation Models and Containerization frameworks, etc",
                              "text": "Apple announces Foundation Models and Containerization frameworks, etc",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.apple.com/newsroom/2025/06/apple-supercharges-its-tools-and-technologies-for-developers/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">apple.com</span>",
                              "text": "apple.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=apple.com"
                                    }
                              ]
                        },
                        {
                              "html": "Sly Stone has died",
                              "text": "Sly Stone has died",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://abcnews.go.com/US/sly-stone-pioneering-leader-funk-band-sly-family/story?id=122666345"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">go.com</span>",
                              "text": "go.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=go.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing",
                              "text": "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/Askannz/munal-os"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/askannz</span>",
                              "text": "github.com/askannz",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/askannz"
                                    }
                              ]
                        },
                        {
                              "html": "Apple introduces a universal design across platforms",
                              "text": "Apple introduces a universal design across platforms",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.apple.com/newsroom/2025/06/apple-introduces-a-delightful-and-elegant-new-software-design/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">apple.com</span>",
                              "text": "apple.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=apple.com"
                                    }
                              ]
                        },
                        {
                              "html": "What methylene blue can (and can‚Äôt) do for the brain",
                              "text": "What methylene blue can (and can‚Äôt) do for the brain",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://neurofrontiers.blog/what-methylene-blue-can-and-cant-do-for-the-brain/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">neurofrontiers.blog</span>",
                              "text": "neurofrontiers.blog",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=neurofrontiers.blog"
                                    }
                              ]
                        },
                        {
                              "html": "Domains I Love",
                              "text": "Domains I Love",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.ahmedsaoudi.com/blog/domains-i-love/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ahmedsaoudi.com</span>",
                              "text": "ahmedsaoudi.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ahmedsaoudi.com"
                                    }
                              ]
                        },
                        {
                              "html": "The Xerox Alto, Smalltalk, and Rewriting a Running GUI",
                              "text": "The Xerox Alto, Smalltalk, and Rewriting a Running GUI",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.righto.com/2017/10/the-xerox-alto-smalltalk-and-rewriting.html"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">righto.com</span>",
                              "text": "righto.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=righto.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Somo ‚Äì a human friendly alternative to netstat",
                              "text": "Show HN: Somo ‚Äì a human friendly alternative to netstat",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/theopfr/somo"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/theopfr</span>",
                              "text": "github.com/theopfr",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/theopfr"
                                    }
                              ]
                        },
                        {
                              "html": "Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking",
                              "text": "Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "item?id=44225930"
                                    }
                              ]
                        },
                        {
                              "html": "Go is a good fit for agents",
                              "text": "Go is a good fit for agents",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://docs.hatchet.run/blog/go-agents"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">hatchet.run</span>",
                              "text": "hatchet.run",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=hatchet.run"
                                    }
                              ]
                        },
                        {
                              "html": "Doctors could hack the nervous system with ultrasound",
                              "text": "Doctors could hack the nervous system with ultrasound",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://spectrum.ieee.org/focused-ultrasound-stimulation-inflammation-diabetes"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ieee.org</span>",
                              "text": "ieee.org",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ieee.org"
                                    }
                              ]
                        },
                        {
                              "html": "Bruteforcing the phone number of any Google user",
                              "text": "Bruteforcing the phone number of any Google user",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://brutecat.com/articles/leaking-google-phones"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">brutecat.com</span>",
                              "text": "brutecat.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=brutecat.com"
                                    }
                              ]
                        },
                        {
                              "html": "Hokusai Moyo Gafu: an album of dyeing patterns",
                              "text": "Hokusai Moyo Gafu: an album of dyeing patterns",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://ndlsearch.ndl.go.jp/en/imagebank/theme/hokusaimoyo"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ndl.go.jp</span>",
                              "text": "ndl.go.jp",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ndl.go.jp"
                                    }
                              ]
                        },
                        {
                              "html": "Pi in Pascal's Triangle (2014)",
                              "text": "Pi in Pascal's Triangle (2014)",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.cut-the-knot.org/arithmetic/algebra/PiInPascal.shtml"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">cut-the-knot.org</span>",
                              "text": "cut-the-knot.org",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=cut-the-knot.org"
                                    }
                              ]
                        },
                        {
                              "html": "Myanmar's chinlone ball sport threatened by conflict and rattan shortages",
                              "text": "Myanmar's chinlone ball sport threatened by conflict and rattan shortages",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.aljazeera.com/gallery/2025/6/5/myanmars-chinlone-ball-sport-threatened-by-conflict-and-rattan-shortages"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">aljazeera.com</span>",
                              "text": "aljazeera.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=aljazeera.com"
                                    }
                              ]
                        },
                        {
                              "html": "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square",
                              "text": "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.thisiscolossal.com/2025/05/alex-chinneck-a-week-at-the-knees/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">thisiscolossal.com</span>",
                              "text": "thisiscolossal.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=thisiscolossal.com"
                                    }
                              ]
                        },
                        {
                              "html": "Algovivo an energy-based formulation for soft-bodied virtual creatures",
                              "text": "Algovivo an energy-based formulation for soft-bodied virtual creatures",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://juniorrojas.com/algovivo/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">juniorrojas.com</span>",
                              "text": "juniorrojas.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=juniorrojas.com"
                                    }
                              ]
                        },
                        {
                              "html": "The new G√∂del Prize winner tastes great and is less filling",
                              "text": "The new G√∂del Prize winner tastes great and is less filling",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://blog.computationalcomplexity.org/2025/06/the-new-godel-prize-winner-tastes-great.html"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">computationalcomplexity.org</span>",
                              "text": "computationalcomplexity.org",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=computationalcomplexity.org"
                                    }
                              ]
                        },
                        {
                              "html": "Why quadratic funding is not optimal",
                              "text": "Why quadratic funding is not optimal",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://jonathanwarden.com/quadratic-funding-is-not-optimal/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">jonathanwarden.com</span>",
                              "text": "jonathanwarden.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=jonathanwarden.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Most users won't report bugs unless you make it stupidly easy",
                              "text": "Show HN: Most users won't report bugs unless you make it stupidly easy",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "item?id=44225352"
                                    }
                              ]
                        },
                        {
                              "html": "A bit more on Twitter/X's new encrypted messaging",
                              "text": "A bit more on Twitter/X's new encrypted messaging",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://blog.cryptographyengineering.com/2025/06/09/a-bit-more-on-twitter-xs-new-encrypted-messaging/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">cryptographyengineering.com</span>",
                              "text": "cryptographyengineering.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=cryptographyengineering.com"
                                    }
                              ]
                        },
                        {
                              "html": "RFK Jr. ousts entire CDC vaccine advisory committee",
                              "text": "RFK Jr. ousts entire CDC vaccine advisory committee",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://apnews.com/article/kennedy-cdc-acip-vaccines-3790c89f45b6314c5c7b686db0e3a8f9"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">apnews.com</span>",
                              "text": "apnews.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=apnews.com"
                                    }
                              ]
                        },
                        {
                              "html": "A man rebuilding the last Inca rope bridge",
                              "text": "A man rebuilding the last Inca rope bridge",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.atlasobscura.com/articles/last-inca-rope-bridge-qeswachaka-tradition"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">atlasobscura.com</span>",
                              "text": "atlasobscura.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=atlasobscura.com"
                                    }
                              ]
                        },
                        {
                              "html": "Finding Shawn Mendes (2019)",
                              "text": "Finding Shawn Mendes (2019)",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://ericneyman.wordpress.com/2019/11/26/finding-shawn-mendes/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ericneyman.wordpress.com</span>",
                              "text": "ericneyman.wordpress.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ericneyman.wordpress.com"
                                    }
                              ]
                        },
                        {
                              "html": "How do you prototype a nice language?",
                              "text": "How do you prototype a nice language?",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://kevinlynagh.com/newsletter/2025_06_03_prototyping_a_language/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">kevinlynagh.com</span>",
                              "text": "kevinlynagh.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=kevinlynagh.com"
                                    }
                              ]
                        },
                        {
                              "html": "Astronomers have discovered a mysterious object flashing signals from deep space",
                              "text": "Astronomers have discovered a mysterious object flashing signals from deep space",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.livescience.com/space/unlike-anything-we-have-seen-before-astronomers-discover-mysterious-object-firing-strange-signals-at-earth-every-44-minutes"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">livescience.com</span>",
                              "text": "livescience.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=livescience.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Glowstick ‚Äì type level tensor shapes in stable rust",
                              "text": "Show HN: Glowstick ‚Äì type level tensor shapes in stable rust",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/nicksenger/glowstick"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/nicksenger</span>",
                              "text": "github.com/nicksenger",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/nicksenger"
                                    }
                              ]
                        },
                        {
                              "html": "LLMs are cheap",
                              "text": "LLMs are cheap",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.snellman.net/blog/archive/2025-06-02-llms-are-cheap/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">snellman.net</span>",
                              "text": "snellman.net",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=snellman.net"
                                    }
                              ]
                        }
                  ],
                  "key": "titles"
            },
            {
                  "selector": "td.title .titleline a",
                  "results": [
                        {
                              "html": "Tell HN: Help restore the tax deduction for software dev in the US (Section 174)",
                              "text": "Tell HN: Help restore the tax deduction for software dev in the US (Section 174)",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "item?id=44226145"
                                    }
                              ]
                        },
                        {
                              "html": "Containerization is a Swift package for running Linux containers on macOS",
                              "text": "Containerization is a Swift package for running Linux containers on macOS",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/apple/containerization"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/apple</span>",
                              "text": "github.com/apple",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/apple"
                                    }
                              ]
                        },
                        {
                              "html": "Apple announces Foundation Models and Containerization frameworks, etc",
                              "text": "Apple announces Foundation Models and Containerization frameworks, etc",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.apple.com/newsroom/2025/06/apple-supercharges-its-tools-and-technologies-for-developers/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">apple.com</span>",
                              "text": "apple.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=apple.com"
                                    }
                              ]
                        },
                        {
                              "html": "Sly Stone has died",
                              "text": "Sly Stone has died",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://abcnews.go.com/US/sly-stone-pioneering-leader-funk-band-sly-family/story?id=122666345"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">go.com</span>",
                              "text": "go.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=go.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing",
                              "text": "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/Askannz/munal-os"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/askannz</span>",
                              "text": "github.com/askannz",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/askannz"
                                    }
                              ]
                        },
                        {
                              "html": "Apple introduces a universal design across platforms",
                              "text": "Apple introduces a universal design across platforms",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.apple.com/newsroom/2025/06/apple-introduces-a-delightful-and-elegant-new-software-design/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">apple.com</span>",
                              "text": "apple.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=apple.com"
                                    }
                              ]
                        },
                        {
                              "html": "What methylene blue can (and can‚Äôt) do for the brain",
                              "text": "What methylene blue can (and can‚Äôt) do for the brain",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://neurofrontiers.blog/what-methylene-blue-can-and-cant-do-for-the-brain/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">neurofrontiers.blog</span>",
                              "text": "neurofrontiers.blog",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=neurofrontiers.blog"
                                    }
                              ]
                        },
                        {
                              "html": "Domains I Love",
                              "text": "Domains I Love",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.ahmedsaoudi.com/blog/domains-i-love/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ahmedsaoudi.com</span>",
                              "text": "ahmedsaoudi.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ahmedsaoudi.com"
                                    }
                              ]
                        },
                        {
                              "html": "The Xerox Alto, Smalltalk, and Rewriting a Running GUI",
                              "text": "The Xerox Alto, Smalltalk, and Rewriting a Running GUI",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.righto.com/2017/10/the-xerox-alto-smalltalk-and-rewriting.html"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">righto.com</span>",
                              "text": "righto.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=righto.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Somo ‚Äì a human friendly alternative to netstat",
                              "text": "Show HN: Somo ‚Äì a human friendly alternative to netstat",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/theopfr/somo"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/theopfr</span>",
                              "text": "github.com/theopfr",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/theopfr"
                                    }
                              ]
                        },
                        {
                              "html": "Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking",
                              "text": "Launch HN: Chonkie (YC X25) ‚Äì Open-Source Library for Advanced Chunking",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "item?id=44225930"
                                    }
                              ]
                        },
                        {
                              "html": "Go is a good fit for agents",
                              "text": "Go is a good fit for agents",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://docs.hatchet.run/blog/go-agents"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">hatchet.run</span>",
                              "text": "hatchet.run",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=hatchet.run"
                                    }
                              ]
                        },
                        {
                              "html": "Doctors could hack the nervous system with ultrasound",
                              "text": "Doctors could hack the nervous system with ultrasound",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://spectrum.ieee.org/focused-ultrasound-stimulation-inflammation-diabetes"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ieee.org</span>",
                              "text": "ieee.org",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ieee.org"
                                    }
                              ]
                        },
                        {
                              "html": "Bruteforcing the phone number of any Google user",
                              "text": "Bruteforcing the phone number of any Google user",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://brutecat.com/articles/leaking-google-phones"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">brutecat.com</span>",
                              "text": "brutecat.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=brutecat.com"
                                    }
                              ]
                        },
                        {
                              "html": "Hokusai Moyo Gafu: an album of dyeing patterns",
                              "text": "Hokusai Moyo Gafu: an album of dyeing patterns",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://ndlsearch.ndl.go.jp/en/imagebank/theme/hokusaimoyo"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ndl.go.jp</span>",
                              "text": "ndl.go.jp",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ndl.go.jp"
                                    }
                              ]
                        },
                        {
                              "html": "Pi in Pascal's Triangle (2014)",
                              "text": "Pi in Pascal's Triangle (2014)",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.cut-the-knot.org/arithmetic/algebra/PiInPascal.shtml"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">cut-the-knot.org</span>",
                              "text": "cut-the-knot.org",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=cut-the-knot.org"
                                    }
                              ]
                        },
                        {
                              "html": "Myanmar's chinlone ball sport threatened by conflict and rattan shortages",
                              "text": "Myanmar's chinlone ball sport threatened by conflict and rattan shortages",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.aljazeera.com/gallery/2025/6/5/myanmars-chinlone-ball-sport-threatened-by-conflict-and-rattan-shortages"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">aljazeera.com</span>",
                              "text": "aljazeera.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=aljazeera.com"
                                    }
                              ]
                        },
                        {
                              "html": "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square",
                              "text": "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.thisiscolossal.com/2025/05/alex-chinneck-a-week-at-the-knees/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">thisiscolossal.com</span>",
                              "text": "thisiscolossal.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=thisiscolossal.com"
                                    }
                              ]
                        },
                        {
                              "html": "Algovivo an energy-based formulation for soft-bodied virtual creatures",
                              "text": "Algovivo an energy-based formulation for soft-bodied virtual creatures",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://juniorrojas.com/algovivo/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">juniorrojas.com</span>",
                              "text": "juniorrojas.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=juniorrojas.com"
                                    }
                              ]
                        },
                        {
                              "html": "The new G√∂del Prize winner tastes great and is less filling",
                              "text": "The new G√∂del Prize winner tastes great and is less filling",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://blog.computationalcomplexity.org/2025/06/the-new-godel-prize-winner-tastes-great.html"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">computationalcomplexity.org</span>",
                              "text": "computationalcomplexity.org",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=computationalcomplexity.org"
                                    }
                              ]
                        },
                        {
                              "html": "Why quadratic funding is not optimal",
                              "text": "Why quadratic funding is not optimal",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://jonathanwarden.com/quadratic-funding-is-not-optimal/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">jonathanwarden.com</span>",
                              "text": "jonathanwarden.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=jonathanwarden.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Most users won't report bugs unless you make it stupidly easy",
                              "text": "Show HN: Most users won't report bugs unless you make it stupidly easy",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "item?id=44225352"
                                    }
                              ]
                        },
                        {
                              "html": "A bit more on Twitter/X's new encrypted messaging",
                              "text": "A bit more on Twitter/X's new encrypted messaging",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://blog.cryptographyengineering.com/2025/06/09/a-bit-more-on-twitter-xs-new-encrypted-messaging/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">cryptographyengineering.com</span>",
                              "text": "cryptographyengineering.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=cryptographyengineering.com"
                                    }
                              ]
                        },
                        {
                              "html": "RFK Jr. ousts entire CDC vaccine advisory committee",
                              "text": "RFK Jr. ousts entire CDC vaccine advisory committee",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://apnews.com/article/kennedy-cdc-acip-vaccines-3790c89f45b6314c5c7b686db0e3a8f9"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">apnews.com</span>",
                              "text": "apnews.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=apnews.com"
                                    }
                              ]
                        },
                        {
                              "html": "A man rebuilding the last Inca rope bridge",
                              "text": "A man rebuilding the last Inca rope bridge",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.atlasobscura.com/articles/last-inca-rope-bridge-qeswachaka-tradition"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">atlasobscura.com</span>",
                              "text": "atlasobscura.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=atlasobscura.com"
                                    }
                              ]
                        },
                        {
                              "html": "Finding Shawn Mendes (2019)",
                              "text": "Finding Shawn Mendes (2019)",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://ericneyman.wordpress.com/2019/11/26/finding-shawn-mendes/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">ericneyman.wordpress.com</span>",
                              "text": "ericneyman.wordpress.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=ericneyman.wordpress.com"
                                    }
                              ]
                        },
                        {
                              "html": "How do you prototype a nice language?",
                              "text": "How do you prototype a nice language?",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://kevinlynagh.com/newsletter/2025_06_03_prototyping_a_language/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">kevinlynagh.com</span>",
                              "text": "kevinlynagh.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=kevinlynagh.com"
                                    }
                              ]
                        },
                        {
                              "html": "Astronomers have discovered a mysterious object flashing signals from deep space",
                              "text": "Astronomers have discovered a mysterious object flashing signals from deep space",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.livescience.com/space/unlike-anything-we-have-seen-before-astronomers-discover-mysterious-object-firing-strange-signals-at-earth-every-44-minutes"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">livescience.com</span>",
                              "text": "livescience.com",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=livescience.com"
                                    }
                              ]
                        },
                        {
                              "html": "Show HN: Glowstick ‚Äì type level tensor shapes in stable rust",
                              "text": "Show HN: Glowstick ‚Äì type level tensor shapes in stable rust",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://github.com/nicksenger/glowstick"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">github.com/nicksenger</span>",
                              "text": "github.com/nicksenger",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=github.com/nicksenger"
                                    }
                              ]
                        },
                        {
                              "html": "LLMs are cheap",
                              "text": "LLMs are cheap",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "https://www.snellman.net/blog/archive/2025-06-02-llms-are-cheap/"
                                    }
                              ]
                        },
                        {
                              "html": "<span class=\"sitestr\">snellman.net</span>",
                              "text": "snellman.net",
                              "attributes": [
                                    {
                                          "name": "href",
                                          "value": "from?site=snellman.net"
                                    }
                              ]
                        }
                  ],
                  "key": "titles"
            },
            {
                  "selector": "td.subtext .score",
                  "results": [
                        {
                              "html": "1243 points",
                              "text": "1243 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226145"
                                    }
                              ]
                        },
                        {
                              "html": "175 points",
                              "text": "175 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229348"
                                    }
                              ]
                        },
                        {
                              "html": "432 points",
                              "text": "432 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226978"
                                    }
                              ]
                        },
                        {
                              "html": "54 points",
                              "text": "54 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229841"
                                    }
                              ]
                        },
                        {
                              "html": "145 points",
                              "text": "145 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226879"
                                    }
                              ]
                        },
                        {
                              "html": "377 points",
                              "text": "377 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226612"
                                    }
                              ]
                        },
                        {
                              "html": "73 points",
                              "text": "73 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44201143"
                                    }
                              ]
                        },
                        {
                              "html": "46 points",
                              "text": "46 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229150"
                                    }
                              ]
                        },
                        {
                              "html": "13 points",
                              "text": "13 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229694"
                                    }
                              ]
                        },
                        {
                              "html": "71 points",
                              "text": "71 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44227207"
                                    }
                              ]
                        },
                        {
                              "html": "88 points",
                              "text": "88 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225930"
                                    }
                              ]
                        },
                        {
                              "html": "94 points",
                              "text": "94 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44179889"
                                    }
                              ]
                        },
                        {
                              "html": "110 points",
                              "text": "110 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224874"
                                    }
                              ]
                        },
                        {
                              "html": "415 points",
                              "text": "415 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224684"
                                    }
                              ]
                        },
                        {
                              "html": "121 points",
                              "text": "121 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224992"
                                    }
                              ]
                        },
                        {
                              "html": "41 points",
                              "text": "41 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44200240"
                                    }
                              ]
                        },
                        {
                              "html": "17 points",
                              "text": "17 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44195768"
                                    }
                              ]
                        },
                        {
                              "html": "24 points",
                              "text": "24 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44203870"
                                    }
                              ]
                        },
                        {
                              "html": "52 points",
                              "text": "52 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225761"
                                    }
                              ]
                        },
                        {
                              "html": "86 points",
                              "text": "86 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224996"
                                    }
                              ]
                        },
                        {
                              "html": "88 points",
                              "text": "88 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224915"
                                    }
                              ]
                        },
                        {
                              "html": "145 points",
                              "text": "145 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225352"
                                    }
                              ]
                        },
                        {
                              "html": "97 points",
                              "text": "97 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44227689"
                                    }
                              ]
                        },
                        {
                              "html": "141 points",
                              "text": "141 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229778"
                                    }
                              ]
                        },
                        {
                              "html": "58 points",
                              "text": "58 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44206150"
                                    }
                              ]
                        },
                        {
                              "html": "328 points",
                              "text": "328 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44222119"
                                    }
                              ]
                        },
                        {
                              "html": "10 points",
                              "text": "10 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44197007"
                                    }
                              ]
                        },
                        {
                              "html": "59 points",
                              "text": "59 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44228550"
                                    }
                              ]
                        },
                        {
                              "html": "31 points",
                              "text": "31 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225922"
                                    }
                              ]
                        },
                        {
                              "html": "285 points",
                              "text": "285 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44223448"
                                    }
                              ]
                        }
                  ],
                  "key": "points"
            },
            {
                  "selector": "span.score",
                  "results": [
                        {
                              "html": "1243 points",
                              "text": "1243 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226145"
                                    }
                              ]
                        },
                        {
                              "html": "175 points",
                              "text": "175 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229348"
                                    }
                              ]
                        },
                        {
                              "html": "432 points",
                              "text": "432 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226978"
                                    }
                              ]
                        },
                        {
                              "html": "54 points",
                              "text": "54 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229841"
                                    }
                              ]
                        },
                        {
                              "html": "145 points",
                              "text": "145 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226879"
                                    }
                              ]
                        },
                        {
                              "html": "377 points",
                              "text": "377 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226612"
                                    }
                              ]
                        },
                        {
                              "html": "73 points",
                              "text": "73 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44201143"
                                    }
                              ]
                        },
                        {
                              "html": "46 points",
                              "text": "46 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229150"
                                    }
                              ]
                        },
                        {
                              "html": "13 points",
                              "text": "13 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229694"
                                    }
                              ]
                        },
                        {
                              "html": "71 points",
                              "text": "71 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44227207"
                                    }
                              ]
                        },
                        {
                              "html": "88 points",
                              "text": "88 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225930"
                                    }
                              ]
                        },
                        {
                              "html": "94 points",
                              "text": "94 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44179889"
                                    }
                              ]
                        },
                        {
                              "html": "110 points",
                              "text": "110 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224874"
                                    }
                              ]
                        },
                        {
                              "html": "415 points",
                              "text": "415 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224684"
                                    }
                              ]
                        },
                        {
                              "html": "121 points",
                              "text": "121 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224992"
                                    }
                              ]
                        },
                        {
                              "html": "41 points",
                              "text": "41 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44200240"
                                    }
                              ]
                        },
                        {
                              "html": "17 points",
                              "text": "17 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44195768"
                                    }
                              ]
                        },
                        {
                              "html": "24 points",
                              "text": "24 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44203870"
                                    }
                              ]
                        },
                        {
                              "html": "52 points",
                              "text": "52 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225761"
                                    }
                              ]
                        },
                        {
                              "html": "86 points",
                              "text": "86 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224996"
                                    }
                              ]
                        },
                        {
                              "html": "88 points",
                              "text": "88 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224915"
                                    }
                              ]
                        },
                        {
                              "html": "145 points",
                              "text": "145 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225352"
                                    }
                              ]
                        },
                        {
                              "html": "97 points",
                              "text": "97 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44227689"
                                    }
                              ]
                        },
                        {
                              "html": "141 points",
                              "text": "141 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229778"
                                    }
                              ]
                        },
                        {
                              "html": "58 points",
                              "text": "58 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44206150"
                                    }
                              ]
                        },
                        {
                              "html": "328 points",
                              "text": "328 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44222119"
                                    }
                              ]
                        },
                        {
                              "html": "10 points",
                              "text": "10 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44197007"
                                    }
                              ]
                        },
                        {
                              "html": "59 points",
                              "text": "59 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44228550"
                                    }
                              ]
                        },
                        {
                              "html": "31 points",
                              "text": "31 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225922"
                                    }
                              ]
                        },
                        {
                              "html": "285 points",
                              "text": "285 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44223448"
                                    }
                              ]
                        }
                  ],
                  "key": "points"
            },
            {
                  "selector": "tr + tr td.subtext .score",
                  "results": [
                        {
                              "html": "1243 points",
                              "text": "1243 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226145"
                                    }
                              ]
                        },
                        {
                              "html": "175 points",
                              "text": "175 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229348"
                                    }
                              ]
                        },
                        {
                              "html": "432 points",
                              "text": "432 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226978"
                                    }
                              ]
                        },
                        {
                              "html": "54 points",
                              "text": "54 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229841"
                                    }
                              ]
                        },
                        {
                              "html": "145 points",
                              "text": "145 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226879"
                                    }
                              ]
                        },
                        {
                              "html": "377 points",
                              "text": "377 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226612"
                                    }
                              ]
                        },
                        {
                              "html": "73 points",
                              "text": "73 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44201143"
                                    }
                              ]
                        },
                        {
                              "html": "46 points",
                              "text": "46 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229150"
                                    }
                              ]
                        },
                        {
                              "html": "13 points",
                              "text": "13 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229694"
                                    }
                              ]
                        },
                        {
                              "html": "71 points",
                              "text": "71 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44227207"
                                    }
                              ]
                        },
                        {
                              "html": "88 points",
                              "text": "88 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225930"
                                    }
                              ]
                        },
                        {
                              "html": "94 points",
                              "text": "94 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44179889"
                                    }
                              ]
                        },
                        {
                              "html": "110 points",
                              "text": "110 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224874"
                                    }
                              ]
                        },
                        {
                              "html": "415 points",
                              "text": "415 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224684"
                                    }
                              ]
                        },
                        {
                              "html": "121 points",
                              "text": "121 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224992"
                                    }
                              ]
                        },
                        {
                              "html": "41 points",
                              "text": "41 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44200240"
                                    }
                              ]
                        },
                        {
                              "html": "17 points",
                              "text": "17 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44195768"
                                    }
                              ]
                        },
                        {
                              "html": "24 points",
                              "text": "24 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44203870"
                                    }
                              ]
                        },
                        {
                              "html": "52 points",
                              "text": "52 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225761"
                                    }
                              ]
                        },
                        {
                              "html": "86 points",
                              "text": "86 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224996"
                                    }
                              ]
                        },
                        {
                              "html": "88 points",
                              "text": "88 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224915"
                                    }
                              ]
                        },
                        {
                              "html": "145 points",
                              "text": "145 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225352"
                                    }
                              ]
                        },
                        {
                              "html": "97 points",
                              "text": "97 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44227689"
                                    }
                              ]
                        },
                        {
                              "html": "141 points",
                              "text": "141 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229778"
                                    }
                              ]
                        },
                        {
                              "html": "58 points",
                              "text": "58 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44206150"
                                    }
                              ]
                        },
                        {
                              "html": "328 points",
                              "text": "328 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44222119"
                                    }
                              ]
                        },
                        {
                              "html": "10 points",
                              "text": "10 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44197007"
                                    }
                              ]
                        },
                        {
                              "html": "59 points",
                              "text": "59 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44228550"
                                    }
                              ]
                        },
                        {
                              "html": "31 points",
                              "text": "31 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225922"
                                    }
                              ]
                        },
                        {
                              "html": "285 points",
                              "text": "285 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44223448"
                                    }
                              ]
                        }
                  ],
                  "key": "points"
            },
            {
                  "selector": "td.subtext span.score",
                  "results": [
                        {
                              "html": "1243 points",
                              "text": "1243 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226145"
                                    }
                              ]
                        },
                        {
                              "html": "175 points",
                              "text": "175 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229348"
                                    }
                              ]
                        },
                        {
                              "html": "432 points",
                              "text": "432 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226978"
                                    }
                              ]
                        },
                        {
                              "html": "54 points",
                              "text": "54 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229841"
                                    }
                              ]
                        },
                        {
                              "html": "145 points",
                              "text": "145 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226879"
                                    }
                              ]
                        },
                        {
                              "html": "377 points",
                              "text": "377 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226612"
                                    }
                              ]
                        },
                        {
                              "html": "73 points",
                              "text": "73 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44201143"
                                    }
                              ]
                        },
                        {
                              "html": "46 points",
                              "text": "46 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229150"
                                    }
                              ]
                        },
                        {
                              "html": "13 points",
                              "text": "13 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229694"
                                    }
                              ]
                        },
                        {
                              "html": "71 points",
                              "text": "71 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44227207"
                                    }
                              ]
                        },
                        {
                              "html": "88 points",
                              "text": "88 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225930"
                                    }
                              ]
                        },
                        {
                              "html": "94 points",
                              "text": "94 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44179889"
                                    }
                              ]
                        },
                        {
                              "html": "110 points",
                              "text": "110 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224874"
                                    }
                              ]
                        },
                        {
                              "html": "415 points",
                              "text": "415 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224684"
                                    }
                              ]
                        },
                        {
                              "html": "121 points",
                              "text": "121 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224992"
                                    }
                              ]
                        },
                        {
                              "html": "41 points",
                              "text": "41 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44200240"
                                    }
                              ]
                        },
                        {
                              "html": "17 points",
                              "text": "17 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44195768"
                                    }
                              ]
                        },
                        {
                              "html": "24 points",
                              "text": "24 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44203870"
                                    }
                              ]
                        },
                        {
                              "html": "52 points",
                              "text": "52 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225761"
                                    }
                              ]
                        },
                        {
                              "html": "86 points",
                              "text": "86 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224996"
                                    }
                              ]
                        },
                        {
                              "html": "88 points",
                              "text": "88 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224915"
                                    }
                              ]
                        },
                        {
                              "html": "145 points",
                              "text": "145 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225352"
                                    }
                              ]
                        },
                        {
                              "html": "97 points",
                              "text": "97 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44227689"
                                    }
                              ]
                        },
                        {
                              "html": "141 points",
                              "text": "141 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229778"
                                    }
                              ]
                        },
                        {
                              "html": "58 points",
                              "text": "58 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44206150"
                                    }
                              ]
                        },
                        {
                              "html": "328 points",
                              "text": "328 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44222119"
                                    }
                              ]
                        },
                        {
                              "html": "10 points",
                              "text": "10 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44197007"
                                    }
                              ]
                        },
                        {
                              "html": "59 points",
                              "text": "59 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44228550"
                                    }
                              ]
                        },
                        {
                              "html": "31 points",
                              "text": "31 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225922"
                                    }
                              ]
                        },
                        {
                              "html": "285 points",
                              "text": "285 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44223448"
                                    }
                              ]
                        }
                  ],
                  "key": "points"
            },
            {
                  "selector": "span.subline .score",
                  "results": [
                        {
                              "html": "1243 points",
                              "text": "1243 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226145"
                                    }
                              ]
                        },
                        {
                              "html": "175 points",
                              "text": "175 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229348"
                                    }
                              ]
                        },
                        {
                              "html": "432 points",
                              "text": "432 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226978"
                                    }
                              ]
                        },
                        {
                              "html": "54 points",
                              "text": "54 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229841"
                                    }
                              ]
                        },
                        {
                              "html": "145 points",
                              "text": "145 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226879"
                                    }
                              ]
                        },
                        {
                              "html": "377 points",
                              "text": "377 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44226612"
                                    }
                              ]
                        },
                        {
                              "html": "73 points",
                              "text": "73 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44201143"
                                    }
                              ]
                        },
                        {
                              "html": "46 points",
                              "text": "46 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229150"
                                    }
                              ]
                        },
                        {
                              "html": "13 points",
                              "text": "13 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229694"
                                    }
                              ]
                        },
                        {
                              "html": "71 points",
                              "text": "71 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44227207"
                                    }
                              ]
                        },
                        {
                              "html": "88 points",
                              "text": "88 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225930"
                                    }
                              ]
                        },
                        {
                              "html": "94 points",
                              "text": "94 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44179889"
                                    }
                              ]
                        },
                        {
                              "html": "110 points",
                              "text": "110 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224874"
                                    }
                              ]
                        },
                        {
                              "html": "415 points",
                              "text": "415 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224684"
                                    }
                              ]
                        },
                        {
                              "html": "121 points",
                              "text": "121 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224992"
                                    }
                              ]
                        },
                        {
                              "html": "41 points",
                              "text": "41 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44200240"
                                    }
                              ]
                        },
                        {
                              "html": "17 points",
                              "text": "17 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44195768"
                                    }
                              ]
                        },
                        {
                              "html": "24 points",
                              "text": "24 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44203870"
                                    }
                              ]
                        },
                        {
                              "html": "52 points",
                              "text": "52 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225761"
                                    }
                              ]
                        },
                        {
                              "html": "86 points",
                              "text": "86 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224996"
                                    }
                              ]
                        },
                        {
                              "html": "88 points",
                              "text": "88 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44224915"
                                    }
                              ]
                        },
                        {
                              "html": "145 points",
                              "text": "145 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225352"
                                    }
                              ]
                        },
                        {
                              "html": "97 points",
                              "text": "97 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44227689"
                                    }
                              ]
                        },
                        {
                              "html": "141 points",
                              "text": "141 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44229778"
                                    }
                              ]
                        },
                        {
                              "html": "58 points",
                              "text": "58 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44206150"
                                    }
                              ]
                        },
                        {
                              "html": "328 points",
                              "text": "328 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44222119"
                                    }
                              ]
                        },
                        {
                              "html": "10 points",
                              "text": "10 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44197007"
                                    }
                              ]
                        },
                        {
                              "html": "59 points",
                              "text": "59 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44228550"
                                    }
                              ]
                        },
                        {
                              "html": "31 points",
                              "text": "31 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44225922"
                                    }
                              ]
                        },
                        {
                              "html": "285 points",
                              "text": "285 points",
                              "attributes": [
                                    {
                                          "name": "class",
                                          "value": "score"
                                    },
                                    {
                                          "name": "id",
                                          "value": "score_44223448"
                                    }
                              ]
                        }
                  ],
                  "key": "points"
            }
      ],
      "success": true,
      "advance_config": {
            "console": [],
            "network": [],
            "cookies": []
      },
      "_usage": {
            "input_tokens": 21,
            "output_tokens": 27023,
            "inference_time_tokens": 9399,
            "total_tokens": 36443
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/ai-search.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.web.search({
      "query": "What is the capital of France?"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.web.search({
      "query": "What is the capital of France?"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/web/search \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"query":"What is the capital of France?"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/web/search');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"query":"What is the capital of France?"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/web/search')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'query' => 'What is the capital of France?'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"query":"What is the capital of France?"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/web/search", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/web/search"))
    .POST(BodyPublishers.ofString("{\"query\":\"What is the capital of France?\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "query": "What is the capital of France?"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/web/search")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"query":"What is the capital of France?"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/web/search');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"query\":\"What is the capital of France?\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/web/search")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/web/search");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"query\":\"What is the capital of France?\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "query": "capital of France",
      "ai_overview": "Paris has been the capital of France since its liberation in 1944. Other cities that have served as the capital of France throughout history include:\n\n*   Tournai (before 486)\n*   Soissons (486‚Äì936)\n*   Laon (936‚Äì987)\n*   Orl√©ans (1108)\n*   Troyes (1419‚Äì1422)\n*   Bourges (1422‚Äì1444)\n*   Tours (1444‚Äì1527, 1589-1594)\n*   Versailles (1682‚Äì1789)\n*   Bordeaux (September 1914, June 1940)\n*   Clermont-Ferrand (June 29, 1940)\n*   Vichy (1940‚Äì1944)\n*   Brazzaville (1940‚Äì1943)\n*   Algiers (1943‚Äì1944)",
      "spell_fixed": false,
      "is_safe": true,
      "results": [
            {
                  "title": "Paris - Wikipedia",
                  "url": "https://en.wikipedia.org/wiki/Paris",
                  "description": "Clovis the Frank, the first king of the Merovingian dynasty, made the city his <strong>capital</strong> from 508. As the Frankish domination of Gaul began, there was a gradual immigration by the Franks to Paris and the Parisian Francien dialects were born.",
                  "content": "Paris\nEtymology History Geography Administration Cityscape Demographics Economy Culture Infrastructure International relations See also Notes References Further reading External links\nOrigins High and Late Middle Ages to Louis XIV 18th and 19th centuries 20th and 21st centuries Location Climate City government M√©tropole du Grand Paris Regional government National government Police force Urbanism and architecture Housing Suburbs Migration Religion Employment and income Tourism Painting and sculpture Museums Theatre Literature Music Cinema Restaurants and cuisine Fashion Photography Media Holidays and festivals Libraries Sports Transport Electricity Water and sanitation Parks and gardens Cemeteries Education Healthcare International organisations Twin towns ‚Äì sister cities Other relationships Citations Sources\nWalking Railways Air Motorways Waterways Cycling\nParis (.mw-parser-output .IPA-label-small{font-size:85%}.mw-parser-output .references .IPA-label-small,.mw-parser-output .infobox .IPA-label-small,.mw-parser-output .navbox .IPA-label-small{font-size:100%}French pronunciation: [pa Åi] ‚ìò) is the capital and largest city of France. With an estimated population of 2,048,472 residents in January 2025[3] in an area of more than 105 km2 (41 sq mi),[4] Paris is the fourth-most populous city in the European Union and the 30th most densely populated city in the world in 2022.[5] Since the 17th century, Paris has been one of the world's major centres of finance, diplomacy, commerce, culture, fashion, and gastronomy. Because of its leading role in the arts and sciences and its early adoption of extensive street lighting, Paris became known as the City of Light in the 19th century.[6] The City of Paris is the centre of the √éle-de-France region, or Paris Region, with an official estimated population of 12,271,794 inhabitants in January 2023, or about 19% of the population of France.[3] The Paris Region had a nominal GDP of ‚Ç¨765 billion (US$1.064 trillion when adjusted for PPP)[7] in 2021, the highest in the European Union.[8] According to the Economist Intelligence Unit Worldwide Cost of Living Survey, in 2022, Paris was the city with the ninth-highest cost of living in the world.[9] Paris is a major railway, highway, and air-transport hub served by two international airports: Charles de Gaulle Airport, the third-busiest airport in Europe, and Orly Airport.[10][11] Paris has one of the most sustainable transportation systems[12] and is one of only two cities in the world that received the Sustainable Transport Award twice.[13] Paris is known for its museums and architectural landmarks: the Louvre received 8.9 million visitors in 2023, on track for keeping its position as the most-visited art museum in the world.[14] The Mus√©e d'Orsay, Mus√©e Marmottan Monet and Mus√©e de l'Orangerie are noted for their collections of French Impressionist art. The Pompidou Centre, Mus√©e National d'Art Moderne, Mus√©e Rodin and Mus√©e Picasso are noted for their collections of modern and contemporary art. The historical district along the Seine in the city centre has been classified as a UNESCO World Heritage Site since 1991.[15] Paris is home to several United Nations organizations including UNESCO, as well as other international organizations such as the OECD, the OECD Development Centre, the International Bureau of Weights and Measures, the International Energy Agency, the International Federation for Human Rights, along with European bodies such as the European Space Agency, the European Banking Authority and the European Securities and Markets Authority. The football club Paris Saint-Germain and the rugby union club Stade Fran√ßais are based in Paris. The 81,000-seat Stade de France, built for the 1998 FIFA World Cup, is located just north of Paris in the neighbouring commune of Saint-Denis. Paris hosts the French Open, an annual Grand Slam tennis tournament, on the red clay of Roland Garros. Paris hosted the 1900, the 1924, and the 2024 Summer Olympics. The 1938 and 1998 FIFA World Cups, the 2019 FIFA Women's World Cup, the 2007 and 2023 Rugby World Cups, the 1954 and 1972 Rugby League World Cups, as well as the 1960, 1984 and 2016 UEFA European Championships were held in Paris. Every July, the Tour de France bicycle race finishes on the Avenue des Champs-√âlys√©es. The ancient oppidum that corresponds to the modern city of Paris was first mentioned in the mid-1st century BC by Julius Caesar as Luteciam Parisiorum ('Lutetia of the Parisii') and is later attested as Parision in the 5th century AD, then as Paris in 1265.[16][17] During the Roman period, it was commonly known as Lutetia or Lutecia in Latin, and as Leukotek√≠a in Greek, which is interpreted as either stemming from the Celtic root *lukot- ('mouse'), or from *luto- ('marsh, swamp').[18][19][17] The name Paris is derived from its early inhabitants, the Parisii, a Gallic tribe from the Iron Age and the Roman period.[20] The meaning of the Gaulish ethnonym remains debated. According to Xavier Delamarre, it may derive from the Celtic root pario- ('cauldron').[20] Alfred Holder interpreted the name as 'the makers' or 'the commanders', by comparing it to the Welsh peryff ('lord, commander'), both possibly descending from a Proto-Celtic form reconstructed as *kwar-is-io-.[21] Alternatively, Pierre-Yves Lambert proposed to translate Parisii as the 'spear people', by connecting the first element to the Old Irish carr ('spear'), derived from an earlier *kwar-sƒÅ.[17] In any case, the city's name is not related to the Paris of Greek mythology. Residents of the city are known in English as Parisians and in French as Parisiens ([pa Åizj…õÃÉ] ‚ìò). They are also pejoratively called Parigots ([pa Åi…°o] ‚ìò).[note 1][22] The Parisii people inhabited the Paris area from around the middle of the 3rd century BC.[23][24] One of the area's major north‚Äìsouth trade routes crossed the Seine on the √éle de la Cit√©, which gradually became an important trading centre.[25] The Parisii traded with many river towns (some as far away as the Iberian Peninsula) and minted their own coins.[26] Julius Caesar conquered the Paris Basin for the Roman Republic in 52 BC and began the Roman settlement on Paris's Left Bank.[27] The Roman town was originally called Lutetia (more fully, Lutetia Parisiorum, \"Lutetia of the Parisii\", modern French Lut√®ce). It became a prosperous city with a forum, baths, temples, theatres, and an amphitheatre.[28] By the end of the Western Roman Empire, the town was known as Parisius, a Latin name that would later become Paris in French.[29] Christianity was introduced in the middle of the 3rd century AD by Saint Denis, the first Bishop of Paris: according to legend, when he refused to renounce his faith before the Roman occupiers, he was beheaded on the hill which became known as Mons Martyrum (Latin \"Hill of Martyrs\"), later \"Montmartre\", from where he walked headless to the north of the city; the place where he fell and was buried became an important religious shrine, the Basilica of Saint-Denis, and many French kings are buried there.[30] Clovis the Frank, the first king of the Merovingian dynasty, made the city his capital from 508.[31] As the Frankish domination of Gaul began, there was a gradual immigration by the Franks to Paris and the Parisian Francien dialects were born. Fortification of the √éle de la Cit√© failed to avert sacking by Vikings in 845, but Paris's strategic importance‚Äîwith its bridges preventing ships from passing‚Äîwas established by successful defence in the Siege of Paris (885‚Äì886), for which the then Count of Paris (comte de Paris), Odo of France, was elected king of West Francia.[32] From the Capetian dynasty that began with the 987 election of Hugh Capet, Count of Paris and Duke of the Franks (duc des Francs), as king of a unified West Francia, Paris gradually became the largest and most prosperous city in France.[30] By the end of the 12th century, Paris had become the political, economic, religious, and cultural capital of France.[33] The Palais de la Cit√©, the royal residence, was located at the western end of the √éle de la Cit√©. In 1163, during the reign of Louis VII, Maurice de Sully, bishop of Paris, undertook the construction of the Notre Dame Cathedral at its eastern extremity. After the marshland between the river Seine and its slower 'dead arm' to its north was filled in from around the 10th century,[34] Paris's cultural centre began to move to the Right Bank. In 1137, a new city marketplace (today's Les Halles) replaced the two smaller ones on the √éle de la Cit√© and Place de Gr√®ve (Place de l'H√¥tel de Ville).[35] The latter location housed the headquarters of Paris's river trade corporation, an organisation that later became, unofficially (although formally in later years), Paris's first municipal government. In the late 12th century, Philip Augustus extended the Louvre fortress to defend the city against river invasions from the west, gave the city its first walls between 1190 and 1215, rebuilt its bridges to either side of its central island, and paved its main thoroughfares.[36] In 1190, he transformed Paris's former cathedral school into a student-teacher corporation that would become the University of Paris and would draw students from all of Europe.[37][33] With 200,000 inhabitants in 1328, Paris, then already the capital of France, was the most populous city of Europe. By comparison, London in 1300 had 80,000 inhabitants.[38] By the early fourteenth century, so much filth had collected inside urban Europe that French and Italian cities were naming streets after human waste. In medieval Paris, several street names were inspired by merde, the French word for \"shit\".[39] During the Hundred Years' War, Paris was occupied by England-friendly Burgundian forces from 1418, before being occupied outright by the English when Henry V of England entered the French capital in 1420;[40] in spite of a 1429 effort by Joan of Arc to liberate the city,[41] it would remain under English occupation until 1436. In the late 16th-century French Wars of Religion, Paris was a stronghold of the Catholic League, the organisers of 24 August 1572 St. Bartholomew's Day massacre in which thousands of French Protestants were killed.[42][43] The conflicts ended when pretender to the throne Henry IV, after converting to Catholicism to gain entry to the capital, entered the city in 1594 to claim the crown of France. This king made several improvements to the capital during his reign: he completed the construction of Paris's first uncovered, sidewalk-lined bridge, the Pont Neuf, built a Louvre extension connecting it to the Tuileries Palace, and created the first Paris residential square, the Place Royale, now Place des Vosges. In spite of Henry IV's efforts to improve city circulation, the narrowness of Paris's streets was a contributing factor in his assassination near Les Halles marketplace in 1610.[44] During the 17th century, Cardinal Richelieu, chief minister of Louis XIII, was determined to make Paris the most beautiful city in Europe. He built five new bridges, a new chapel for the College of Sorbonne, and a palace for himself, the Palais-Cardinal. After Richelieu's death in 1642, it was renamed the Palais-Royal.[45] Due to the Parisian uprisings during the Fronde civil war, Louis XIV moved his court to a new palace, Versailles, in 1682. Although no longer the capital of France, arts and sciences in the city flourished with the Com√©die-Fran√ßaise, the Academy of Painting, and the French Academy of Sciences. To demonstrate that the city was safe from attack, the king had the city walls demolished and replaced with tree-lined boulevards that would become the Grands Boulevards.[46] Other marks of his reign were the Coll√®ge des Quatre-Nations, the Place Vend√¥me, the Place des Victoires, and Les Invalides.[47] Paris grew in population from about 400,000 in 1640 to 650,000 in 1780.[48] A new boulevard named the Champs-√âlys√©es extended the city west to √âtoile,[49] while the working-class neighbourhood of the Faubourg Saint-Antoine on the eastern side of the city grew increasingly crowded with poor migrant workers from other regions of France.[50] Paris was the centre of an explosion of philosophic and scientific activity, known as the Age of Enlightenment. Diderot and D'Alembert published their Encyclop√©die in 1751, before the Montgolfier Brothers launched the first manned flight in a hot air balloon on 21 November 1783. Paris was the financial capital of continental Europe, as well the primary European centre for book publishing, fashion and the manufacture of fine furniture and luxury goods.[51] On 22 October 1797, Paris was also the site of the first parachute jump in history, by Garnerin. In the summer of 1789, Paris became the centre stage of the French Revolution. On 14 July, a mob seized the arsenal at the Invalides, acquiring thousands of guns, with which it stormed the Bastille, a principal symbol of royal authority. The first independent Paris Commune, or city council, met in the H√¥tel de Ville and elected a Mayor, the astronomer Jean Sylvain Bailly, on 15 July.[52] Louis XVI and the royal family were brought to Paris and incarcerated in the Tuileries Palace. In 1793, as the revolution turned increasingly radical, the king, queen and mayor were beheaded by guillotine in the Reign of Terror, along with more than 16,000 others throughout France.[53] The property of the aristocracy and the church was nationalised, and the city's churches were closed, sold or demolished.[54] A succession of revolutionary factions ruled Paris until 9 November 1799 (coup d'√©tat du 18 brumaire), when Napoleon Bonaparte seized power as First Consul.[55] The population of Paris had dropped by 100,000 during the Revolution, but after 1799 it surged with 160,000 new residents, reaching 660,000 by 1815.[56] Napoleon replaced the elected government of Paris with a prefect that reported directly to him. He began erecting monuments to military glory, including the Arc de Triomphe, and improved the neglected infrastructure of the city with new fountains, the Canal de l'Ourcq, P√®re Lachaise Cemetery and the city's first metal bridge, the Pont des Arts.[56] During the Restoration, the bridges and squares of Paris were returned to their pre-Revolution names; the July Revolution in 1830 (commemorated by the July Column on the Place de la Bastille) brought to power a constitutional monarch, Louis Philippe I. The first railway line to Paris opened in 1837, beginning a new period of massive migration from the provinces to the city.[56] In 1848, Louis-Philippe was overthrown by a popular uprising in the streets of Paris. His successor, Napoleon III, alongside the newly appointed prefect of the Seine, Georges-Eug√®ne Haussmann, launched a huge public works project to build wide new boulevards, a new opera house, a central market, new aqueducts, sewers and parks, including the Bois de Boulogne and Bois de Vincennes.[57] In 1860, Napoleon III annexed the surrounding towns and created eight new arrondissements, expanding Paris to its current limits.[57] During the Franco-Prussian War (1870‚Äì1871), Paris was besieged by the Prussian Army. Following several months of blockade, hunger, and then bombardment by the Prussians, the city was forced to surrender on 28 January 1871. After seizing power in Paris on 28 March, a revolutionary government known as the Paris Commune held power for two months, before being harshly suppressed by the French army during the \"Bloody Week\" at the end of May 1871.[58] In the late 19th century, Paris hosted two major international expositions: the 1889 Universal Exposition, which featured the new Eiffel Tower, was held to mark the centennial of the French Revolution; and the 1900 Universal Exposition gave Paris the Pont Alexandre III, the Grand Palais, the Petit Palais and the first Paris M√©tro line.[59] Paris became the laboratory of Naturalism (√âmile Zola) and Symbolism (Charles Baudelaire and Paul Verlaine), and of Impressionism in art (Courbet, Manet, Monet, Renoir).[60] By 1901, the population of Paris had grown to about 2,715,000.[61] At the beginning of the century, artists from around the world including Pablo Picasso, Modigliani, and Henri Matisse made Paris their home. It was the birthplace of Fauvism, Cubism and abstract art,[62][63] and authors such as Marcel Proust were exploring new approaches to literature.[64] During the First World War, Paris sometimes found itself on the front line; 600 to 1,000 Paris taxis played a small but highly important symbolic role in transporting 6,000 soldiers to the front line at the First Battle of the Marne. The city was also bombed by Zeppelins and shelled by German long-range guns.[65] In the years after the war, known as Les Ann√©es Folles, Paris continued to be a mecca for writers, musicians and artists from around the world, including Ernest Hemingway, Igor Stravinsky, James Joyce, Josephine Baker, Eva Kotchever, Henry Miller, Ana√Øs Nin, Sidney Bechet[66] and Salvador Dal√≠.[67] In the years after the peace conference, the city was also home to growing numbers of students and activists from French colonies and other Asian and African countries, who later became leaders of their countries, such as Ho Chi Minh, Zhou Enlai and L√©opold S√©dar Senghor.[68] On 14 June 1940, the German army marched into Paris, which had been declared an \"open city\".[69] On 16‚Äì17 July 1942, following German orders, the French police and gendarmes arrested 12,884 Jews, including 4,115 children, and confined them during five days at the Vel d'Hiv, from which they were transported by train to the extermination camp at Auschwitz. None of the children came back.[70][71] On 25 August 1944, the city was liberated by the French 2nd Armoured Division and the 4th Infantry Division of the United States Army. General Charles de Gaulle led a huge and emotional crowd down the Champs √âlys√©es towards Notre Dame de Paris and made a rousing speech from the H√¥tel de Ville.[72] In the 1950s and the 1960s, Paris became one front of the Algerian War for independence; in August 1961, the pro-independence FLN targeted and killed 11 Paris policemen, leading to the imposition of a curfew on Muslims of Algeria (who, at that time, were French citizens). On 17 October 1961, an unauthorised but peaceful protest demonstration of Algerians against the curfew led to violent confrontations between the police and demonstrators, in which at least 40 people were killed. The anti-independence Organisation arm√©e secr√®te (OAS) carried out a series of bombings in Paris throughout 1961 and 1962.[73][74] In May 1968, protesting students occupied the Sorbonne and put up barricades in the Latin Quarter. Thousands of Parisian blue-collar workers joined the students, and the movement grew into a two-week general strike. Supporters of the government won the June elections by a large majority. The May 1968 events in France resulted in the break-up of the University of Paris into 13 independent campuses.[75] In 1975, the National Assembly changed the status of Paris to that of other French cities and, on 25 March 1977, Jacques Chirac became the first elected mayor of Paris since 1793.[76] The Tour Maine-Montparnasse, the tallest building in the city at 57 storeys and 210 m (689 ft) high, was built between 1969 and 1973. It was highly controversial, and it remains the only building in the centre of the city over 32 storeys high.[77] The population of Paris dropped from 2,850,000 in 1954 to 2,152,000 in 1990, as middle-class families moved to the suburbs.[78] A suburban railway network, the RER (R√©seau Express R√©gional), was built to complement the M√©tro; the P√©riph√©rique expressway encircling the city, was completed in 1973.[79] Most of the postwar presidents of the Fifth Republic wanted to leave their own monuments in Paris; President Georges Pompidou started the Centre Georges Pompidou (1977), Val√©ry Giscard d'Estaing began the Mus√©e d'Orsay (1986); President Fran√ßois Mitterrand had the Op√©ra Bastille built (1985‚Äì1989), the new site of the Biblioth√®que nationale de France (1996), the Arche de la D√©fense (1985‚Äì1989) in La D√©fense, as well as the Louvre Pyramid with its underground courtyard (1983‚Äì1989); Jacques Chirac (2006), the Mus√©e du quai Branly.[80] In the early 21st century, the population of Paris began to increase slowly again, as more young people moved into the city. It reached 2.25 million in 2011. In March 2001, Bertrand Delano√´ became the first socialist mayor. He was re-elected in March 2008.[81] In 2007, in an effort to reduce car traffic, he introduced the V√©lib', a system which rents bicycles. Bertrand Delano√´ also transformed a section of the highway along the Left Bank of the Seine into an urban promenade and park, the Promenade des Berges de la Seine, which he inaugurated in June 2013.[82] In 2007, President Nicolas Sarkozy launched the Grand Paris project, to integrate Paris more closely with the towns in the region around it. After many modifications, the new area, named the Metropolis of Grand Paris, with a population of 6.7 million, was created on 1 January 2016.[83] In 2011, the City of Paris and the national government approved the plans for the Grand Paris Express, totalling 205 km (127 mi) of automated metro lines to connect Paris, the innermost three departments around Paris, airports and high-speed rail (TGV) stations, at an estimated cost of ‚Ç¨35 billion.[84] The system is scheduled to be completed by 2030.[85] In January 2015, Al-Qaeda in the Arabian Peninsula claimed attacks across the Paris region.[86][87] 1.5 million people marched in Paris in a show of solidarity against terrorism and in support of freedom of speech.[88] In November of the same year, terrorist attacks, claimed by ISIL,[89] killed 130 people and injured more than 350.[90] On 22 April 2016, the Paris Agreement was signed by 196 nations of the United Nations Framework Convention on Climate Change in an aim to limit the effects of climate change below 2 ¬∞C.[91] Paris is located in northern central France, in a north-bending arc of the river Seine, whose crest includes two islands, the √éle Saint-Louis and the larger √éle de la Cit√©, which form the oldest part of Paris. The river's mouth on the English Channel (La Manche) is about 233 mi (375 km) downstream from Paris. Paris is spread widely on both banks of the river.[92] Overall, Paris is relatively flat, and the lowest point is 35 m (115 ft) above sea level. Paris has several prominent hills, the highest of which is Montmartre at 130 m (427 ft).[93] Excluding the outlying parks of Bois de Boulogne and Bois de Vincennes, Paris covers an oval measuring about 87 km2 (34 sq mi) in area, enclosed by the 35 km (22 mi) ring road, the Boulevard P√©riph√©rique.[94] Paris' last major annexation of outlying territories in 1860 gave it its modern form, and created the 20 clockwise-spiralling arrondissements (municipal boroughs). From the 1860 area of 78 km2 (30 sq mi), the city limits were expanded marginally to 86.9 km2 (33.6 sq mi) in the 1920s. In 1929, the Bois de Boulogne and Bois de Vincennes forest parks were annexed to the city, bringing its area to about 105 km2 (41 sq mi).[95] The metropolitan area is 2,300 km2 (890 sq mi).[92] Measured from the 'point zero' in front of its Notre-Dame cathedral, Paris by road is 450 km (280 mi) southeast of London, 287 km (178 mi) south of Calais, 305 km (190 mi) southwest of Brussels, 774 km (481 mi) north of Marseille, 385 km (239 mi) northeast of Nantes, and 135 km (84 mi) southeast of Rouen.[96] Paris has an oceanic climate within the K√∂ppen climate classification, typical of western Europe. This climate type features cool winters, with frequent rain and overcast skies, and mild to warm summers. Very hot and very cold temperatures and weather extremes are rare in this type of climate.[97][failed verification] Summer days are usually mild and pleasant, with average temperatures between 15 and 25 ¬∞C (59 and 77 ¬∞F), and a fair amount of sunshine.[98] Each year there are a few days when the temperature rises above 32 ¬∞C (90 ¬∞F). Longer periods of more intense heat sometimes occur, such as the heat wave of 2003 when temperatures exceeded 30 ¬∞C (86 ¬∞F) for weeks, reached 40 ¬∞C (104 ¬∞F) on some days, and rarely cooled down at night.[99] Spring and autumn have, on average, mild days and cool nights, but are changing and unstable. Surprisingly warm or cool weather occurs frequently in both seasons.[100] In winter, sunshine is scarce. Days are cool, and nights are cold but generally above freezing, with low temperatures around 3 ¬∞C (37 ¬∞F).[101] Light night frosts are quite common, but the temperature seldom dips below ‚àí5 ¬∞C (23 ¬∞F). Paris sometimes sees light snow or flurries with or without accumulation.[102] Paris has an average annual precipitation of 641 mm (25.2 in), and experiences light rainfall distributed evenly throughout the year. Paris is known for intermittent, abrupt, heavy showers. The highest recorded temperature was 42.6 ¬∞C (108.7 ¬∞F), on 25 July 2019.[103] The lowest was ‚àí23.9 ¬∞C (‚àí11.0 ¬∞F), on 10 December 1879.[104] For almost all of its long history, except for a few brief periods, Paris was governed directly by representatives of the king, emperor, or president of France. In 1974, Paris was granted municipal autonomy by the National Assembly.[108] The first modern elected mayor of Paris was Jacques Chirac, elected March 1977, becoming the city's first mayor since 1871 and only the fourth since 1794. The current mayor is Anne Hidalgo, a socialist, first elected in April 2014,[109] and re-elected in June 2020.[110] The mayor of Paris is elected indirectly by Paris voters. The voters of each of the city's 20 arrondissements elect members to the Conseil de Paris (Council of Paris), which elects the mayor. The council is composed of 163 members. Each arrondissement is allocated a number of seats dependent upon its population, from 10 members for each of the least-populated arrondissements, to 34 members for the most populated. The council is elected using closed list proportional representation in a two-round system.[111] Party lists winning an absolute majority in the first round ‚Äì or at least a plurality in the second round ‚Äì automatically win half the seats of an arrondissement. The remaining half of seats are distributed proportionally to all lists which win at least 5% of the vote, using the highest averages method.[111] This ensures that the winning party or coalition always wins a majority of the seats, even if they do not win an absolute majority of the vote.[112] Prior to the 2020 Paris municipal election, each of Paris's 20 arrondissements had its own town hall and a directly elected council (conseil d'arrondissement), which elects an arrondissement mayor.[113] The council of each arrondissement is composed of members of the Conseil de Paris, and members who serve only on the council of the arrondissement. The number of deputy mayors in each arrondissement varies depending upon its population. As of 1996, there were 20 arrondissement mayors and 120 deputy mayors.[108] The creation of Paris Centre, a unified administrative division with a single mayor covering the first four arrondissements, took effect with the said 2020 election. The other 16 arrondissements continue to have their own mayors.[114] In January 2016, the M√©tropole du Grand Paris, or simply Grand Paris, came into existence.[115] It is an administrative structure for co-operation between the City of Paris and its nearest suburbs. It includes the City of Paris, plus the communes of the three departments of the inner suburbs, Hauts-de-Seine, Seine-Saint-Denis and Val-de-Marne, plus seven communes in the outer suburbs, including Argenteuil in Val d'Oise and Paray-Vieille-Poste in Essonne, which were added to include the major airports of Paris. The Metropole covers 814 km2 (314 sq mi). In 2015, it had a population of 6.945 million people.[116][117] The new structure is administered by a Metropolitan Council of 210 members, not directly elected, but chosen by the councils of the member Communes. By 2020 its basic competencies will include urban planning, housing and protection of the environment.[115][117] In January 2016, Patrick Ollier was elected the first president of the metropolitan council. Though the Metropole has a population of nearly seven million people and accounts for 25 percent of the GDP of France, it has a very small budget: just 65 million Euros, compared with eight billion Euros for the City of Paris.[118] The Region of √éle de France, including Paris and its surrounding communities, is governed by the Regional Council, composed of 209 members representing its different communes. In December 2015, a list of candidates of the Union of the Right, a coalition of centrist and right-wing parties, led by Val√©rie P√©cresse, narrowly won the regional election, defeating a coalition of Socialists and ecologists. The Socialists had governed the region for seventeen years. The regional council has 121 members from the Union of the Right, 66 from the Union of the Left and 22 from the extreme right National Front.[119] As the capital of France, Paris is the seat of France's national government. For the executive, the two chief officers each have their own official residences, which also serve as their offices. The President of the French Republic resides at the √âlys√©e Palace.[120] The Prime Minister's seat is at the H√¥tel Matignon.[121][122] Government ministries are located in various parts of the city, many near the H√¥tel Matignon.[123] Both houses of the French Parliament are located on the Rive Gauche. The upper house, the Senate, meets in the Palais du Luxembourg. The more important lower house, the National Assembly, meets in the Palais Bourbon. The President of the Senate, the second-highest public official in France, with the President of the Republic being the sole superior, resides in the Petit Luxembourg, a smaller palace annexe to the Palais du Luxembourg.[124] France's highest courts are located in Paris. The Court of Cassation, the highest court in the judicial order, which reviews criminal and civil cases, is located in the Palais de Justice on the √éle de la Cit√©.[125] The Conseil d'√âtat, which provides legal advice to the executive and acts as the highest court in the administrative order, judging litigation against public bodies, is located in the Palais-Royal in the 1st arrondissement.[126] The Constitutional Council, an advisory body with ultimate authority on the constitutionality of laws and government decrees, meets in the Montpensier wing of the Palais Royal.[127] Paris and its region host the headquarters of several international organisations, including UNESCO, the Organisation for Economic Co-operation and Development, the International Chamber of Commerce, the Paris Club, the European Space Agency, the International Energy Agency, the Organisation internationale de la Francophonie, the European Union Institute for Security Studies, the International Bureau of Weights and Measures, the International Exhibition Bureau, and the International Federation for Human Rights. The security of Paris is mainly the responsibility of the Prefecture of Police of Paris, a subdivision of the Ministry of the Interior. It supervises the units of the National Police who patrol the city and the three neighbouring departments. It is also responsible for providing emergency services, including the Paris Fire Brigade. Its headquarters is on Place Louis L√©pine on the √éle de la Cit√©.[128] There are 43,800 officers under the prefecture, and a fleet of more than 6,000 vehicles, including police cars, motorcycles, fire trucks, boats and helicopters.[128] The national police has its own special unit for riot control and crowd control and security of public buildings, called the Compagnies R√©publicaines de S√©curit√© (CRS). Vans of CRS agents are frequently seen in the centre of Paris when there are demonstrations and public events. The police are supported by the National Gendarmerie, a branch of the French Armed Forces. Their police operations are supervised by the Ministry of the Interior.[129] Crime in Paris is similar to that in most large cities. Violent crime is relatively rare in the city centre. Political violence is uncommon, though very large demonstrations may occur in Paris and other French cities simultaneously. These demonstrations, usually managed by a strong police presence, can turn confrontational and escalate into violence.[130] Paris is one of the few world capitals that has rarely seen destruction by catastrophe or war. As a result, even its earliest history is visible in its streetmap, and centuries of rulers adding their respective architectural marks on the capital has resulted in an accumulated wealth of history-rich monuments and buildings whose beauty plays a large part in giving Paris the reputation it has today.[131] At its origin, before the Middle Ages, Paris was composed of several islands and sandbanks in a bend of the Seine. Of those, two remain today: √éle Saint-Louis and the √éle de la Cit√©. A third one is the 1827 artificially created √éle aux Cygnes. Modern Paris owes much of its downtown plan and architectural harmony to Napoleon III and his Prefect of the Seine, Baron Haussmann. Between 1853 and 1870 they rebuilt the city centre, created the wide downtown boulevards and squares where the boulevards intersected, imposed standard facades along the boulevards, and required that the facades be built of the distinctive cream-grey \"Paris stone\". They built the major parks around central Paris.[132] The high residential population of the city centre makes Paris much different from most other major western cities.[133] Paris's urbanism laws have been under strict control since the early 17th century,[134] particularly where street-front alignment, building height and building distribution is concerned.[134] The 210 m (690 ft) Tour Montparnasse was both Paris's and France's tallest building since 1973,[135] Since 2011, this record has been held by the La D√©fense quarter Tour First tower in Courbevoie. In 2018, the most expensive residential street in Paris by average price per square metre, was Avenue Montaigne, at 22,372 euros per square metre.[136] In 2011, the number of residences in the City of Paris was 1,356,074. Among these, 1,165,541 (85.9 percent) were main residences, 91,835 (6.8 percent) were secondary residences, and the remaining 7.3 percent were empty.[137] Sixty-two percent of buildings date from 1949 and before, with 20 percent built between 1949 and 1974. 18 percent of Paris buildings were built after 1974.[138] Two-thirds of the city's 1.3 million residences are studio and two-room apartments. Paris averages 1.9 people per residence, a number that has remained constant since the 1980s, which is less than √éle-de-France's 2.33 person-per-residence average. Only 33 percent of principal residence Parisians own their habitation, against 47 percent for the wider √éle-de-France region. Most of Paris' population rent their residence.[138] In 2017, social or public housing was 19.9 percent Paris' residences. Its distribution varies widely throughout Paris, from 2.6 percent of the housing in the wealthy 7th arrondissement, to 39.9 percent in the 19th arrondissement.[139] In February 2019, a Paris NGO conducted its annual citywide count of homeless persons. They counted 3,641 homeless persons in Paris, of whom twelve percent were women. More than half had been homeless for more than a year. 2,885 were living in the streets or parks, 298 in train and metro stations, and 756 in other forms of temporary shelter. This was an increase of 588 persons since 2018.[140] Aside from the 20th-century addition of the Bois de Boulogne, the Bois de Vincennes and the Paris heliport, Paris's administrative limits have remained unchanged since 1860. A greater administrative Seine department had been governing Paris and its suburbs since its creation in 1790, but the rising suburban population had made it difficult to maintain as a unique entity. To address this problem, the parent \"District de la r√©gion parisienne\" ('district of the Paris region') was reorganised into several new departments from 1968: Paris became a department in itself, and the administration of its suburbs was divided between the three new departments surrounding it. The district of the Paris region was renamed \"√éle-de-France\" in 1977, but this abbreviated \"Paris region\" name is still commonly used today to describe the √éle-de-France, and as a vague reference to the entire Paris agglomeration.[141] Long-intended measures to unite Paris with its suburbs began in January 2016, when the M√©tropole du Grand Paris came into existence.[115] Paris's disconnect with its suburbs, its lack of suburban transportation, in particular, became all too apparent with the Paris agglomeration's growth. Paul Delouvrier promised to resolve the Paris-suburbs m√©sentente when he became head of the Paris region in 1961.[142] Two of his most ambitious projects for the Region were the construction of five suburban \"villes nouvelles\" (\"new cities\")[143] and the RER commuter train network.[144] Many other suburban residential districts (grands ensembles) were built between the 1960s and 1970s, to provide a low-cost solution for a rapidly expanding population.[145] These districts were socially mixed at first,[146] but few residents actually owned their homes. The growing economy made these accessible to the middle classes only from the 1970s.[147] Their poor construction quality and their haphazard insertion into existing urban growth contributed to their desertion by those able to move elsewhere, and their repopulation by those with more limited resources.[147] These areas, quartiers sensibles (\"sensitive quarters\"), are in northern and eastern Paris, namely around its Goutte d'Or and Belleville neighbourhoods. To the north of Paris, they are grouped mainly in the Seine-Saint-Denis department, and to a lesser extreme to the east in the Val-d'Oise department. Other difficult areas are located in the Seine valley, in √âvry et Corbeil-Essonnes (Essonne), in Mureaux, Mantes-la-Jolie (Yvelines), and scattered among social housing districts created by Delouvrier's 1961 \"ville nouvelle\" political initiative.[148] The Paris agglomeration's urban sociology is basically that of 19th-century Paris: the wealthy live in the west and southwest, and the middle-to-working classes are in the north and east. The remaining areas are mostly middle-class, dotted with wealthy islands in areas of historical importance, namely Saint-Maur-des-Foss√©s to the east and Enghien-les-Bains to the north of Paris.[149] The population of the City of Paris was 2,102,650 in January 2023, down from 2,165,423 in January 2022, according to the INSEE, the French statistical agency. Between 2013 and 2023, the population fell by 122,919, or about five percent. The Mayor of Paris, Anne Hidalgo, declared that this illustrated the \"de-densification\" of the city, creating more green space and less crowding.[152][153] Despite the drop, Paris remains the most densely-populated city in Europe, with 252 residents per hectare, not counting parks.[154] This drop was attributed partly to a lower birth rate, the departure of middle-class residents and the possible loss of housing in Paris, due to short-term rentals for tourism.[155] Paris is the fourth largest municipality in the European Union, after Berlin, Madrid and Rome. Eurostat places Paris (6.5 million people) behind London (8 million) and ahead of Berlin (3.5 million), based on the 2012 populations of what Eurostat calls \"urban audit core cities\".[156] The population of Paris today is lower than its historical peak of 2.9 million in 1921.[157] The principal reasons are a significant decline in household size, and a dramatic migration of residents to the suburbs between 1962 and 1975. Factors in the migration included de-industrialisation, high rent, the gentrification of many inner quarters, the transformation of living space into offices, and greater affluence among working families. Paris's population loss came to a temporary halt at the beginning of the 21st century. The population increased from 2,125,246 in 1999 to 2,240,621 in 2012, before declining again slightly in 2017, 2018, and again in 2021.[158][159] Paris is the core of a built-up area that extends well beyond its limits: commonly referred to as the agglom√©ration Parisienne, and statistically as a unit√© urbaine (a measure of urban area), the Paris agglomeration's population of 10,785,092 in 2017 made it the largest urban area in the European Union.[160][161] City-influenced commuter activity reaches further, in a statistical aire d'attraction de Paris, \"functional area\", a statistical method comparable to a metropolitan area,[162]), that had a population of 13,024,518 in 2017,[163] 19.6% of the population of France,[164] and the largest metropolitan area in the Eurozone.[161] In 2012, according to Eurostat, the EU statistical agency, in 2012 the Commune of Paris was the most densely populated city in the European Union. There were 21,616 people per square kilometre within the city limits, the NUTS-3 statistical area, ahead of Inner London West, which had 10,374 people per square kilometre. In the same census, three departments bordering Paris, Hauts-de-Seine, Seine-Saint-Denis and Val-de-Marne, had population densities of over 10,000 people per square kilometre, ranking among the 10 most densely populated areas of the EU.[165][verification needed] Under French law, people born in foreign countries with no French citizenship at birth are defined as immigrants. In the 2012 census, 135,853 residents of the City of Paris were immigrants from Europe, 112,369 were immigrants from the Maghreb, 70,852 from sub-Saharan Africa and Egypt, 5,059 from Turkey, 91,297 from Asia outside Turkey, 38,858 from the Americas, and 1,365 from the South Pacific.[166] In the Paris Region, 590,504 residents were immigrants from Europe, 627,078 were immigrants from the Maghreb, 435,339 from sub-Saharan Africa and Egypt, 69,338 from Turkey, 322,330 from Asia outside Turkey, 113,363 from the Americas, and 2,261 from the South Pacific.[167] In 2012, there were 8,810 British citizens and 10,019 United States citizens living in the City of Paris (Ville de Paris), and 20,466 British citizens and 16,408 United States citizens living in the entire Paris Region (√éle-de-France).[168][169] In 2020‚Äì2021, about 6 million people, or 41% of the population of the Paris Region, were either immigrants (21%) or had at least one immigrant parent (20%). These figures do not include French people born in Overseas France and their direct descendants.[170] At the beginning of the twentieth century, Paris was the largest Catholic city in the world.[171] French census data does not contain information about religious affiliation.[172] In a 2011 survey by the Institut fran√ßais d'opinion publique (IFOP), a French public opinion research organisation, 61 percent of residents of the Paris Region (√éle-de-France) identified themselves as Roman Catholic. In the same survey, 7 percent of residents identified themselves as Muslims, 4 percent as Protestants, 2 percent as Jewish and 25 percent as without religion. According to the INSEE, between 4 and 5 million French residents were born, or had at least one parent born, in a predominantly Muslim country, particularly Algeria, Morocco and Tunisia. An IFOP survey in 2008 reported that, of immigrants from these predominantly Muslim countries, 25 percent went to the mosque regularly. 41 percent practised the religion, and 34 percent were believers, but did not practice the religion.[173][174] In 2012 and 2013, it was estimated that there were almost 500,000 Muslims in the City of Paris, 1.5 million Muslims in the √éle-de-France region and 4 to 5 million Muslims in France.[175][176] In 2014, the Jewish population of the Paris Region was estimated to be 282,000, the largest concentration of Jews in the world outside of Israel and the United States.[177] The economy of the City of Paris is based largely on services and commerce. Of the 390,480 enterprises in Paris, 80.6 percent are engaged in commerce, transportation, and diverse services, 6.5 percent in construction, and 3.8 percent in industry.[181] The story is similar in the Paris Region (√éle-de-France): 76.7 percent of enterprises are engaged in commerce and services, and 3.4 percent in industry.[182] At the 2012 census, 59.5% of jobs in the Paris Region were in market services (12.0% in wholesale and retail trade, 9.7% in professional, scientific, and technical services, 6.5% in information and communication, 6.5% in transportation and warehousing, 5.9% in finance and insurance, 5.8% in administrative and support services, 4.6% in accommodation and food services, and 8.5% in various other market services), 26.9% in non-market services (10.4% in human health and social work activities, 9.6% in public administration and defence, and 6.9% in education), 8.2% in manufacturing and utilities (6.6% in manufacturing and 1.5% in utilities), 5.2% in construction, and 0.2% in agriculture.[183][184] The Paris Region had 5.4 million salaried employees in 2010, of whom 2.2 million were concentrated in 39 p√¥les d'emplois or business districts. The largest of these, in terms of number of employees, is known in French as the QCA, or quartier central des affaires. In 2010, it was the workplace of 500,000 salaried employees, about 30 percent of the salaried employees in Paris and 10 percent of those in the √éle-de-France. The largest sectors of activity in the central business district were finance and insurance (16 percent of employees in the district) and business services (15 percent). The district includes a large concentration of department stores, shopping areas, hotels and restaurants, as well a government offices and ministries.[185] The second-largest business district in terms of employment is La D√©fense, just west of the city. In 2010, it was the workplace of 144,600 employees, of whom 38 percent worked in finance and insurance, 16 percent in business support services. Two other important districts, Neuilly-sur-Seine and Levallois-Perret, are extensions of the Paris business district and of La D√©fense. Another district, including Boulogne-Billancourt, Issy-les-Moulineaux and the southern part of the 15th arrondissement, is a centre of activity for the media and information technology.[185] In 2021, the top French companies listed in the Fortune Global 500 all have their headquarters in the Paris Region. Six are in the central business district of the City of Paris, four are close to the city in the Hauts-de-Seine Department, three are in La D√©fense and one is in Boulogne-Billancourt. Some companies, like Soci√©t√© G√©n√©rale, have offices in both Paris and La D√©fense. The Paris Region is France's leading region for economic activity, with a GDP of ‚Ç¨765 billion, of which ‚Ç¨253 billion was in Paris city.[186] In 2021, its GDP ranked first among the metropolitan regions of the EU, and its per-capita GDP PPP was the 8th highest.[187][188][189] While the Paris region's population accounted for 18.8 percent of metropolitan France in 2019,[3] the Paris region's GDP accounted for 32 percent of metropolitan France's GDP.[190][191] The Paris Region economy has gradually shifted from industry to high-value-added service industries (finance, IT services) and high-tech manufacturing (electronics, optics, aerospace, etc.).[192] The Paris region's most intense economic activity through the central Hauts-de-Seine department and suburban La D√©fense business district places Paris's economic centre to the west of the city, in a triangle between the Op√©ra Garnier, La D√©fense and the Val de Seine.[192] While the Paris economy is dominated by services, and employment in manufacturing sector has declined sharply, the region remains an important manufacturing centre, particularly for aeronautics, automobiles, and \"eco\" industries.[192] In the 2017 worldwide cost of living survey by the Economist Intelligence Unit, based on a survey made in September 2016, Paris ranked as the seventh most expensive city in the world, and the second most expensive in Europe.[193] In 2018, Paris was the most expensive city in the world with Singapore and Hong Kong.[194] Station F is a business incubator for startups, noted as the world's largest startup facility.[195] In 2007, the majority of Paris's salaried employees filled 370,000 businesses services jobs, concentrated in the north-western 8th, 16th and 17th arrondissements.[196] Paris's financial service companies are concentrated in the central-western 8th and 9th arrondissement banking and insurance district.[196] Paris's department store district in the 1st, 6th, 8th and 9th arrondissements employ ten percent of mostly female Paris workers, with 100,000 of these in the retail trade.[196] Fourteen percent of Parisians worked in hotels and restaurants and other services to individuals.[196] Nineteen percent of Paris employees work for the State in either administration or education. The majority of Paris's healthcare and social workers work at the hospitals and social housing, concentrated in the peripheral 13th, 14th, 18th, 19th and 20th arrondissements.[196] Outside Paris, the western Hauts-de-Seine department La D√©fense district specialising in finance, insurance and scientific research district, employs 144,600.[192] The north-eastern Seine-Saint-Denis audiovisual sector has 200 media firms and 10 major film studios.[192] Paris's manufacturing is mostly focused in its suburbs. Paris has around 75,000 manufacturing workers, most of which are in the textile, clothing, leather goods, and shoe trades.[192] In 2015, the Paris region's 800 aerospace companies employed 100,000.[192] Four hundred automobile industry companies employ another 100,000 workers. Many of these are centred in the Yvelines department, around the Renault and PSA-Citro√´n plants. This department alone employs 33,000.[192] In 2014, the industry as a whole suffered a major loss, with the closing of a major Aulnay-sous-Bois Citro√´n assembly plant.[192] The southern Essonne department specialises in science and technology.[192] The south-eastern Val-de-Marne, with its wholesale Rungis food market, specialises in food processing and beverages.[192] The Paris region's manufacturing decline is quickly being replaced by eco-industries. These employ about 100,000 workers.[192] Incomes are higher in the Western part of Paris and in the western suburbs, than in the northern and eastern parts of the urban area.[197] While Paris has some of the richest neighbourhoods in France, it also has some of the poorest, mostly on the eastern side of the city. In 2012, 14 percent of households in Paris earned less than ‚Ç¨977 per month, the official poverty line. Twenty-five percent of residents in the 19th arrondissement lived below the poverty line. In Paris' wealthiest neighbourhood, the 7th arrondissement, 7 percent lived below the poverty line.[198] The unemployment rate in Paris in the 4th trimester of 2021 was six percent, compared with 7.4 percent in the whole of France. This was the lowest rate in thirteen years.[199][200] As of 2024, Paris was considered the most attractive city in the world 4 years in a row, by the Euromonitor Global Cities Destination Index. However, by the number of tourists coming from other countries it was only in the 9th place.[201] Tourism continued to recover in the Paris region in 2022, increasing to 44 million visitors, an increase of 95 percent over 2021, but still 13 percent lower than in 2019.[202] Greater Paris, comprising Paris and its three surrounding departments, received a record 38 million visitors in 2019, measured by hotel arrivals.[203] These included 12.2 million French visitors. Of the foreign visitors, the greatest number came from the United States (2.6 million), United Kingdom (1.2 million), Germany (981 thousand) and China (711 thousand).[203] In 2018, measured by the Euromonitor Global Cities Destination Index, Paris was the second-busiest airline destination in the world, with 19.10 million visitors, behind Bangkok (22.78 million) but ahead of London (19.09 million).[204] In 2016, 393,008 workers in Greater Paris, or 12.4 percent of the total workforce, were engaged in tourism-related sectors such as hotels, catering, transport and leisure.[205] Paris' top cultural attractions in 2022 were the Louvre Museum (7.7 million visitors), the Eiffel Tower (5.8 million visitors), the Mus√©e d'Orsay (3.27 million visitors) and the Centre Pompidou (3 million visitors).[202] In 2019, Greater Paris had 2,056 hotels, including 94 five-star hotels, with a total of 121,646 rooms.[203] In 2019, in addition to the hotels, Greater Paris had 60,000 homes registered with Airbnb.[203] Under French law, renters of these units must pay the Paris tourism tax. The company paid the city government 7.3 million euros in 2016.[206][207][full citation needed] A minuscule fraction of foreign visitors suffer from Paris syndrome, when their experiences do not meet expectations.[208] For centuries, Paris has attracted artists from around the world. As a result, Paris has acquired a reputation as the \"City of Art\".[209] Italian artists were a profound influence on the development of art in Paris in the 16th and 17th centuries, particularly in sculpture and reliefs. Painting and sculpture became the pride of the French monarchy and the French royal family commissioned many Parisian artists to adorn their palaces during the French Baroque and Classicism era. Sculptors such as Girardon, Coysevox and Coustou acquired reputations as the finest artists in the royal court in 17th-century France. Pierre Mignard became the first painter to King Louis XIV during this period. In 1648, the Acad√©mie royale de peinture et de sculpture (Royal Academy of Painting and Sculpture) was established to accommodate for the dramatic interest in art in the capital. This served as France's top art school until 1793.[210] Paris was in its artistic prime in the 19th century and early 20th century, when it had a colony of artists established in the city and in art schools associated with some of the finest painters of the times: Henri de Toulouse-Lautrec, √âdouard Manet, Claude Monet, Berthe Morisot, Paul Gauguin, Pierre-Auguste Renoir and others. Paris was central to the development of Romanticism in art, with painters such as G√©ricault.[210] Impressionism, Art Nouveau, Symbolism, Fauvism, Cubism and Art Deco movements all evolved in Paris.[210] In the late 19th century, many artists in the French provinces and worldwide flocked to Paris to exhibit their works in the numerous salons and expositions and make a name for themselves.[211] Artists such as Pablo Picasso, Henri Matisse, Vincent van Gogh, Paul C√©zanne, Jean Metzinger, Albert Gleizes, Henri Rousseau, Marc Chagall, Amedeo Modigliani and many others became associated with Paris. The most prestigious sculptors who made their reputation in Paris in the modern era are Fr√©d√©ric Auguste Bartholdi (Statue of Liberty), Auguste Rodin, Camille Claudel, Antoine Bourdelle, Paul Landowski (statue of Christ the Redeemer in Rio de Janeiro) and Aristide Maillol. The Golden Age of the School of Paris ended between the two world wars. The Louvre received 2,8 million visitors in 2021, up from 2.7 million in 2020,[212] holding its position as first among the most-visited museums. Its treasures include the Mona Lisa (La Joconde), the Venus de Milo statue, and Liberty Leading the People. The second-most visited museum in the city in 2021, with 1.5 million visitors, was the Centre Georges Pompidou, also known as Beaubourg, which houses the Mus√©e National d'Art Moderne The third most visited Paris museum in 2021 was the National Museum of Natural History with 1,4 million visitors. It is famous for its dinosaur artefacts, mineral collections and its Gallery of Evolution. It was followed by the Mus√©e d'Orsay, featuring 19th century art and the French Impressionists, which had one million visitors. Paris hosts one of the largest science museums in Europe, the Cit√© des sciences et de l'industrie (984,000 visitors in 2020) and one of the oldest, the Mus√©e des Arts et M√©tiers (opened in 1794). The other most-visited Paris museums in 2021 were the Fondation Louis Vuitton (691,000), the Mus√©e du Quai Branly ‚Äì Jacques Chirac, featuring the indigenous art and cultures of Africa, Asia, Oceania, and the Americas. (616,000); the Mus√©e Carnavalet (History of Paris) (606,000), and the Petit Palais, the art museum of the City of Paris (518,000).[213] The Mus√©e de l'Orangerie, near both the Louvre and the Orsay, also exhibits Impressionists and Post-Impressionists, including most of Claude Monet's large Water Lilies murals. The Mus√©e national du Moyen √Çge, or Cluny Museum, presents Medieval art. The Guimet Museum, or Mus√©e national des arts asiatiques, has one of the largest collections of Asian art in Europe. There are also notable museums devoted to individual artists, including the Mus√©e Picasso, the Mus√©e Rodin and the Mus√©e national Eug√®ne Delacroix. The military history of France is presented by displays at the Mus√©e de l'Arm√©e at Les Invalides. In addition to the national museums, run by the Ministry of Culture, the City of Paris operates 14 museums, including the Carnavalet Museum on the history of Paris, Mus√©e d'Art Moderne de la Ville de Paris, Palais de Tokyo, the House of Victor Hugo, the House of Balzac and the Catacombs of Paris.[214] There are also notable private museums. The Contemporary Art museum of the Louis Vuitton Foundation, designed by architect Frank Gehry, opened in October 2014 in the Bois de Boulogne. The largest opera houses of Paris are the 19th-century Op√©ra Garnier (historical Paris Op√©ra) and modern Op√©ra Bastille; the former tends toward the more classic ballets and operas, and the latter provides a mixed repertoire of classic and modern.[215] In the middle of the 19th century, there were three other active and competing opera houses: the Op√©ra-Comique (which still exists), Th√©√¢tre-Italien and Th√©√¢tre Lyrique (which in modern times changed its profile and name to Th√©√¢tre de la Ville).[216] Philharmonie de Paris, the modern symphonic concert hall of Paris, opened in January 2015. Another musical landmark is the Th√©√¢tre des Champs-√âlys√©es, where the first performances of Diaghilev's Ballets Russes took place in 1913. Theatre traditionally has occupied a large place in Parisian culture, and many of its most popular actors today are also stars of French television. The oldest and most famous Paris theatre is the Com√©die-Fran√ßaise, founded in 1680. Run by the Government of France, it performs mostly French classics at the Salle Richelieu in the Palais-Royal.[217] Other famous theatres include the Od√©on-Th√©√¢tre de l'Europe, also a state institution and theatrical landmark; the Th√©√¢tre Mogador; and the Th√©√¢tre de la Ga√Æt√©-Montparnasse.[218] The music hall and cabaret are famous Paris institutions. The Moulin Rouge was opened in 1889 and became the birthplace of the dance known as the French Cancan. It helped make famous the singers Mistinguett and √âdith Piaf and the painter Toulouse-Lautrec, who made posters for the venue. In 1911, the dance hall Olympia Paris invented the grand staircase as a settling for its shows, competing with its great rival, the Folies Berg√®re. Its stars in the 1920s included the American singer and dancer Josephine Baker. Later, Olympia Paris presented Dalida, Edith Piaf, Marlene Dietrich, Miles Davis, Judy Garland and the Grateful Dead. The Casino de Paris presented many famous French singers, including Mistinguett, Maurice Chevalier and Tino Rossi. Other famous Paris music halls include Le Lido, on the Champs-√âlys√©es, opened in 1946; and the Crazy Horse Saloon, featuring strip-tease, dance and magic, opened in 1951. A half dozen music halls exist today in Paris, attended mostly by visitors to the city.[219] The first book printed in France, Epistolae (\"Letters\"), by Gasparinus de Bergamo (Gasparino da Barzizza), was published in Paris in 1470 by the press established by Johann Heynlin. Since then, Paris has been the centre of the French publishing industry, the home of some of the world's best-known writers and poets, and the setting for many classic works of French literature. Paris did not become the acknowledged capital of French literature until the 17th century, with authors such as Boileau, Corneille, La Fontaine, Moli√®re, Racine, Charles Perrault,[220] several coming from the provinces, as well as the foundation of the Acad√©mie fran√ßaise.[221] In the 18th century, the literary life of Paris revolved around the caf√©s and salons; it was dominated by Voltaire, Jean-Jacques Rousseau, Pierre de Marivaux and Pierre Beaumarchais. During the 19th century, Paris was the home and subject for some of France's greatest writers, including Charles Baudelaire, St√©phane Mallarm√©, M√©rim√©e, Alfred de Musset, Marcel Proust, √âmile Zola, Alexandre Dumas, Gustave Flaubert, Guy de Maupassant and Honor√© de Balzac. Victor Hugo's The Hunchback of Notre-Dame inspired the renovation of its setting, the Notre-Dame de Paris.[222] Another of Victor Hugo's works, Les Mis√©rables, described the social change and political turmoil in Paris in the early 1830s.[223] One of the most popular of all French writers, Jules Verne, worked at the Theatre Lyrique and the Paris stock exchange, while he did research for his stories at the National Library.[224] In the 20th century, the Paris literary community was dominated by figures such as Colette, Andr√© Gide, Fran√ßois Mauriac, Andr√© Malraux, Albert Camus, and, after World War II, by Simone de Beauvoir and Jean-Paul Sartre. Between the wars it was the home of many important expatriate writers, including Ernest Hemingway, Samuel Beckett, Miguel √Ångel Asturias, Alejo Carpentier and, Arturo Uslar Pietri. The winner of the 2014 Nobel Prize in Literature, Patrick Modiano, based most of his literary work on the depiction of the city during World War II and the 1960s‚Äì1970s.[225] Paris is a city of books and bookstores. In the 1970s, 80 percent of French-language publishing houses were found in Paris.[226] It is also a city of small bookstores. There are about 150 bookstores in the 5th arrondissement alone, plus another 250 book stalls along the Seine. Small Paris bookstores are protected against competition from discount booksellers by French law; books, even e-books, cannot be discounted more than five percent below their publisher's cover price.[227] In the late 12th century, a school of polyphony was established at Notre-Dame. Among the Trouv√®res of northern France, a group of Parisian aristocrats became known for their poetry and songs. Troubadours, from the south of France, were also popular. During the reign of Fran√ßois I, in the Renaissance era, the lute became popular in the French court. The French royal family and courtiers \"disported themselves in masques, ballets, allegorical dances, recitals, and opera and comedy\", and a national musical printing house was established.[210] In the Baroque-era, noted composers included Jean-Baptiste Lully, Jean-Philippe Rameau, and Fran√ßois Couperin.[210] The Conservatoire de Musique de Paris was founded in 1795.[228] By 1870, Paris had become an important centre for symphony, ballet and operatic music. Romantic-era composers (in Paris) include Hector Berlioz, Charles Gounod, Camille Saint-Sa√´ns, L√©o Delibes and Jules Massenet, among others.[210] Georges Bizet's Carmen premiered 3 March 1875. Carmen has since become one of the most popular and frequently-performed operas in the classical canon.[229][230] Among the Impressionist composers who created new works for piano, orchestra, opera, chamber music and other musical forms, stand in particular, Claude Debussy, Erik Satie and Maurice Ravel. Several foreign-born composers, such as Fr√©d√©ric Chopin, Franz Liszt, Jacques Offenbach, Niccol√≤ Paganini, and Igor Stravinsky, established themselves or made significant contributions both with their works and their influence in Paris. Bal-musette is a style of French music and dance that first became popular in Paris in the 1870s and 1880s; by 1880 Paris had some 150 dance halls.[231] Patrons danced the bourr√©e to the accompaniment of the cabrette (a bellows-blown bagpipe locally called a \"musette\") and often the vielle √† roue (hurdy-gurdy) in the caf√©s and bars of the city. Parisian and Italian musicians who played the accordion adopted the style and established themselves in Auvergnat bars,[232] and Paris became a major centre for jazz and still attracts jazz musicians from all around the world to its clubs and caf√©s.[233] Paris is the spiritual home of gypsy jazz in particular, and many of the Parisian jazzmen who developed in the first half of the 20th century began by playing Bal-musette in the city.[232] Django Reinhardt rose to fame in Paris and performed with violinist St√©phane Grappelli and their Quintette du Hot Club de France in the 1930s and 1940s.[234] Immediately after the War the Saint-Germain-des-Pres quarter and the nearby Saint-Michel quarter became home to many small jazz clubs, including the Caveau des Lorientais, the Club Saint-Germain, the Rose Rouge, the Vieux-Colombier, and the most famous, Le Tabou. They introduced Parisians to the music of Claude Luter, Boris Vian, Sydney Bechet, Mezz Mezzrow, and Henri Salvador. Most of the clubs closed by the early 1960s, as musical tastes shifted toward rock and roll.[235] Some of the finest manouche musicians in the world are found here playing the caf√©s of the city at night.[234] Some of the more notable jazz venues include the New Morning, Le Sunset, La Chope des Puces and Bouquet du Nord.[233][234] Several yearly festivals take place in Paris, including the Paris Jazz Festival and the rock festival Rock en Seine.[236] The Orchestre de Paris was established in 1967.[237] December 2015 was the 100th anniversary of the birth of Edith Piaf‚Äîwidely regarded as France's national chanteuse and one of France's greatest international stars.[238] Paris has a big hip hop scene. This music became popular during the 1980s.[239] The movie industry was born in Paris when Auguste and Louis Lumi√®re projected the first motion picture for a paying audience at the Grand Caf√© on 28 December 1895.[240] Many of Paris's concert/dance halls were transformed into cinemas when the media became popular beginning in the 1930s. Paris's largest cinema room today is in the Grand Rex theatre with 2,700 seats.[241] Big multiplex cinemas have been built since the 1990s. UGC Cin√© Cit√© Les Halles with 27 screens, MK2 Biblioth√®que with 20 screens and UGC Cin√© Cit√© Bercy with 18 screens are among the largest.[242] Parisians tend to share the same movie-going trends as many of the world's global cities, with cinemas primarily dominated by Hollywood-generated film entertainment. French cinema comes a close second, with major directors (r√©alisateurs) such as Claude Lelouch, Jean-Luc Godard, and Luc Besson, and the more slapstick/popular genre with director Claude Zidi as an example. European and Asian films are also widely shown and appreciated.[243] Since the late 18th century, Paris has been famous for its restaurants and haute cuisine, food meticulously prepared and artfully presented. A luxury restaurant, La Taverne Anglaise, opened in 1786 in the arcades of the Palais-Royal by Antoine Beauvilliers; it became a model for future Paris restaurants. The restaurant Le Grand V√©four in the Palais-Royal dates from the same period.[244] The famous Paris restaurants of the 19th century, including the Caf√© de Paris, the Rocher de Cancale, the Caf√© Anglais, Maison Dor√©e and the Caf√© Riche, were mostly located near the theatres on the Boulevard des Italiens. Several of the best-known restaurants in Paris today appeared during the Belle √âpoque, including Maxim's on Rue Royale, Ledoyen in the gardens of the Champs-√âlys√©es, and the Tour d'Argent on the Quai de la Tournelle.[245] Today, owing to Paris's cosmopolitan population, every French regional cuisine and almost every national cuisine in the world can be found there; the city has more than 9,000 restaurants.[246] The Michelin Guide has been a standard guide to French restaurants since 1900, awarding its highest award, three stars, to the best restaurants in France. In 2018, of the 27 Michelin three-star restaurants in France, ten are located in Paris. These include both restaurants which serve classical French cuisine, such as L'Ambroisie, and those which serve non-traditional menus, such as L'Astrance, which combines French and Asian cuisines. Several of France's most famous chefs, including Pierre Gagnaire, Alain Ducasse, Yannick All√©no and Alain Passard, have three-star restaurants in Paris.[247][248] Paris has several other kinds of traditional eating places. The caf√© arrived in Paris in the 17th century, and by the 18th century Parisian caf√©s were centres of the city's political and cultural life. The Caf√© Procope on the Left Bank dates from this period. In the 20th century, the caf√©s of the Left Bank, especially Caf√© de la Rotonde and Le D√¥me Caf√© in Montparnasse and Caf√© de Flore and Les Deux Magots on Boulevard Saint Germain, all still in business, were important meeting places for painters, writers and philosophers.[245] A bistro is a type of eating place loosely defined as a neighbourhood restaurant with a modest decor and prices and a regular clientele and a congenial atmosphere. Real bistros are increasingly rare in Paris, due to rising costs, competition, and different eating habits of Parisian diners.[249] A brasserie originally was a tavern located next to a brewery, which served beer and food at any hour. Beginning with the Paris Exposition of 1867, it became a popular kind of restaurant which featured beer and other beverages served by young women in the national costume associated with the beverage. Now brasseries, like caf√©s, serve food and drinks throughout the day.[250] Since the 19th century, Paris has been an international fashion capital, particularly in the domain of haute couture (clothing hand-made to order for private clients).[251] It is home to some of the largest fashion houses in the world, including Dior and Chanel, as well as many other well-known and more contemporary fashion designers, such as Karl Lagerfeld, Jean-Paul Gaultier, Yves Saint Laurent, Givenchy, and Christian Lacroix. Paris Fashion Week, held in January and July in the Carrousel du Louvre among other renowned city locations, is one of the top four events on the international fashion calendar.[252][253] Moreover, Paris is also the home of the world's largest cosmetics company: L'Or√©al as well as three of the top five global makers of luxury fashion accessories: Louis Vuitton, Herm√©s, and Cartier.[254] Most of the major fashion designers have their showrooms along the Avenue Montaigne, between the Champs-√âlys√©es and the Seine. The inventor Nic√©phore Ni√©pce produced the first permanent photograph on a polished pewter plate in Paris in 1825. In 1839, after the death of Ni√©pce, Louis Daguerre patented the Daguerrotype, which became the most common form of photography until the 1860s.[210] The work of √âtienne-Jules Marey in the 1880s contributed considerably to the development of modern photography. Photography came to occupy a central role in Parisian Surrealist activity, in the works of Man Ray and Maurice Tabard.[255][256] Numerous photographers achieved renown for their photography of Paris, including Eug√®ne Atget, noted for his depictions of street scenes, Robert Doisneau, noted for his playful pictures of people and market scenes (among which Le baiser de l'h√¥tel de ville has become iconic of the romantic vision of Paris), Marcel Bovis, noted for his night scenes, as well as others such as Jacques-Henri Lartigue and Henri Cartier-Bresson.[210] Poster art also became an important art form in Paris in the late nineteenth century, through the work of Henri de Toulouse-Lautrec, Jules Ch√©ret, Eug√®ne Grasset, Adolphe Willette, Pierre Bonnard, Georges de Feure, Henri-Gabriel Ibels, Paul Gavarni and Alphonse Mucha.[210] Paris and its close suburbs are home to numerous newspapers, magazines and publications including Le Monde, Le Figaro, Lib√©ration, Le Nouvel Observateur, Le Canard encha√Æn√©, La Croix, Le Parisien (in Saint-Ouen), Les √âchos, Paris Match (Neuilly-sur-Seine), R√©seaux & T√©l√©coms, Reuters France, l'√âquipe (Boulogne-Billancourt) and L'Officiel des Spectacles.[258] France's two most prestigious newspapers, Le Monde and Le Figaro, are the centrepieces of the Parisian publishing industry.[259] Agence France-Presse is France's oldest, and one of the world's oldest, continually operating news agencies, and is headquartered in Paris.[260] France 24 is a television news channel owned and operated by the French government, and is based in Paris.[261] France Diplomatie, owned and operated by the Ministry of Foreign and European Affairs, pertains solely to diplomatic news and occurrences.[262] The most-viewed network in France, TF1, is in nearby Boulogne-Billancourt. France 2, France 3, Canal+, France 5, M6 (Neuilly-sur-Seine), Arte, D8, W9, NT1, NRJ 12, La Cha√Æne parlementaire, France 4, BFM TV, and Gulli are other stations located in and around the capital.[263] Radio France, France's public radio broadcaster, and its various channels, is headquartered in Paris's 16th arrondissement. Radio France Internationale, another public broadcaster is also based in the city.[264] Paris also holds the headquarters of the La Poste, France's national postal carrier.[265] Bastille Day, a celebration of the storming of the Bastille in 1789, the biggest festival in the city, is a military parade taking place every year on 14 July on the Champs-√âlys√©es, from the Arc de Triomphe to Place de la Concorde. It includes a flypast over the Champs √âlys√©es by the Patrouille de France, a parade of military units and equipment, and a display of fireworks in the evening, the most spectacular being the one at the Eiffel Tower.[266] Other yearly festivals include Paris-Plages, a festive summertime event when the Right Bank of the Seine is converted into a temporary beach;[266] Journ√©es du Patrimoine, F√™te de la Musique, Techno Parade, Nuit Blanche, Cin√©ma au clair de lune, Printemps des rues, Festival d'automne, and F√™te des jardins. The Carnaval de Paris, one of the oldest festivals in Paris, dates back to the Middle Ages. The Biblioth√®que nationale de France (BnF) operates public libraries in Paris, among them the Fran√ßois Mitterrand Library, Richelieu Library, Louvois, Op√©ra Library, and Arsenal Library.[267] The Biblioth√®que Forney, in the Marais district, is dedicated to the decorative arts; the Arsenal Library occupies a former military building, and has a large collection on French literature; and the Biblioth√®que historique de la ville de Paris, also in Le Marais, contains the Paris historical research service. The Sainte-Genevi√®ve Library, designed by Henri Labrouste and built in the mid-1800s, contains a rare book and manuscript division.[268] Biblioth√®que Mazarine is the oldest public library in France. The M√©diath√®que Musicale Mahler opened in 1986 and contains collections related to music. The Fran√ßois Mitterrand Library (nicknamed Tr√®s Grande Biblioth√®que) was completed in 1994 to a design of Dominique Perrault and contains four glass towers.[268] There are several academic libraries and archives in Paris. The Sorbonne Library is the largest university library in Paris. In addition to the Sorbonne location, there are branches in Malesherbes, Clignancourt-Championnet, Michelet-Institut d'Art et d'Arch√©ologie, Serpente-Maison de la Recherche, and Institut des Etudes Ib√©riques.[269] Other academic libraries include Interuniversity Pharmaceutical Library, Leonardo da Vinci University Library, Paris School of Mines Library, and the Ren√© Descartes University Library.[270] Paris's most popular sport clubs are the association football club Paris Saint-Germain F.C. and the rugby union clubs Stade Fran√ßais and Racing 92 (the latter based in Nanterre, a western inner suburb just outside the city proper). The 80,000-seat Stade de France, built for the 1998 FIFA World Cup, is located just north of Paris in the commune of Saint-Denis.[271] It is used for football, rugby union and track and field athletics. It hosts the France national football team for friendlies and major tournaments qualifiers, annually hosts the French national rugby team's home matches of the Six Nations Championship, and hosts several important matches of the Stade Fran√ßais rugby team.[271] The city and closer suburbs have a number of other professional and amateur football clubs: Paris FC, Red Star FC, US Cr√©teil, RCF Paris and Stade Fran√ßais Football. Rugby league is not a popular sport in Paris compared to other areas of France. Despite this, the capital has hosted several major events in the sport's history since the country's first game, and exhibition match between the Australia national team and a British League Select XIII, in December 1933. The Rugby League World Cup was first held in 1954 with the Parc des Princes hosting the opening match and the final in which France finished as runners-up to Great Britain. The newly rebuild Parc des Princes was later used for a group game of the 1972 Rugby League World Cup. In 1996 and 1997, football club Paris Saint-Germain entered created a rugby league club to participate in the Super League.[272] In 2006, Catalans Dragons became the first French side to enter the British rugby league system following PSG's withdrawal. In 2026 they will move their home game against Wigan Warriors (world champions at time of planning) to Paris to celebrate 20 years of French clubs in the British game.[273] Paris hosted the 1900, 1924 and 2024 Summer Olympics. The city also bid for the 1992, 2008, and 2012 Olympic Games but lost to Barcelona, Beijing, and London. The city hosted the finals of the 1938 FIFA World Cup, at the Stade Olympique de Colombes, and the 1998 FIFA World Cup, 2007 Rugby World Cup and 2023 Rugby World Cup, at the Stade de France. Paris hosted as well as the finals of the 1960, 1984 (both at Parc des Princes stadium) and 2016 UEFA European Championships.[274] Three UEFA Champions League Finals in the current century have also been played in the Stade de France: the 2000, 2006 and 2022.[275] The final stage of the most famous bicycle racing in the world, Tour de France, always finishes in Paris. Since 1975, the race has finished on the Champs-Elys√©es.[276] Tennis is another popular sport in Paris and throughout France; the French Open, held every year on the red clay of the Roland Garros National Tennis Centre,[277] is one of the four Grand Slam events of the world professional tennis tour. The 17,000-seat Bercy Arena is the venue for the annual Paris Masters tennis tournament. The Bercy Arena also hosted the 2017 IIHF World Ice Hockey Championship, together with Cologne, Germany. The final stages of the FIBA EuroBasket 1951 and EuroBasket 1999 were also played in Paris, the latter at the Palais Omnisports de Paris-Bercy. Basketball teams Levallois SCB and Paris Basket Racing merged in 2007 to create club Metropolitans 92, which plays some of its games at the Stade Pierre de Coubertin.[278] Another top-level professional team, Nanterre 92, plays in Nanterre. Founded in 2018, Paris Basketball has seen rapid growth to success, winning the 2023‚Äì24 EuroCup. Professional handball club Paris Saint-Germain (the handball department of Paris Saint-Germain Football Club) plays in the highest tier of French handball, the LNH Division 1. In 2023, a professional American football team, the Paris Musketeers, were formed in the city[279] joining the European League of Football. Paris is a major rail, highway, and air transport hub. The √éle-de-France Mobilit√©s (IDFM) oversees the transit network in the region.[280] The syndicate coordinates public transport. The RATP operates 347 bus lines, the M√©tro, eight tramway lines, and sections of the RER. The SNCF operates suburban rails, one tramway line and the other sections of the RER. The Optile consortium of private operators manages 1,176 bus lines.[281] Paris has one of the most sustainable transportation systems in the world,[12][282] and is one of only two cities that received the Sustainable Transport Award twice, in 2008 and 2023.[13] In 2022‚Äì2023, 53.3% of trips in Paris were made on foot, 30% on public transport, 11.2% on bicycles and 4.3% on cars.[283][284] Bike lanes are being doubled, and electric car incentives are being created. Paris is banning the most polluting automobiles from key districts.[285][286] The concept of the 15-minute city was created by Carlos Moreno (urbanist) a professor from Paris and began to be implemented by its mayor Anne Hidalgo.[287] Walking is the most popular mode of transportation in Paris accounting for 53% of all trips in 2024.[288] In the Grand Paris metropolis walking is also the most popular way of moving. The number of trips made by foot increased by 50% from the year 2000 to 2018.[289] Paris is considered a walkable city and try to increase walkability more.[290][291] A central hub of the national rail network, Paris's six major railway stations (Gare du Nord, Gare de l'Est, Gare de Lyon, Gare d'Austerlitz, Gare Montparnasse, Gare Saint-Lazare) and a minor one (Gare de Bercy) are connected to three networks: high-speed rail lines (TGV, Eurostar, Intercity Express, Frecciarossa), normal speed trains (Intercit√©s, Intercit√©s de nuit, Nightjet, TER), and the suburban rails (Transilien). The Transilien is the commuter rail network serving Paris region, through 9 lines, 392 stations and 1,294 km (804.1 mi) of rails. Since the inauguration of its first line in 1900, Paris's M√©tro network has grown to become the city's most widely used local transport system. In 2015, it carried about 5.23 million passengers daily.[292] There are 16 lines, 321 stations (405 stops) and 245.6 km (152.6 mi) of rails. Superimposed on this is a \"regional express network\", the RER, whose five lines, 257 stops and 602 km (374 mi) of rails connect Paris to more distant parts of the urban area. With over 1.4 million passengers per day RER A is the busiest metro line in Europe. The Paris region is served by a light rail network, the tramway. Opened since 1992, fifteen lines are operational. The network is 196.6 kilometres (122.2 mi) long, with 283 stations. Paris is a major international air transport hub, and the 5th busiest airport system in the world. Paris is served by three commercial international airports: Charles de Gaulle Airport, Orly Airport and Beauvais‚ÄìTill√© Airport. In 2019, these three airports recorded traffic of 112 million passengers.[294] There is also one general aviation airport, Paris‚ÄìLe Bourget Airport, historically the oldest Parisian airport and closest to the city centre, which is now used only for private business flights and air shows. Charles de Gaulle Airport, located on the edge of the northern suburbs of Paris, opened to commercial traffic in 1974 and became the busiest Parisian airport in 1993.[295] In 2023, it was the 4th busiest airport in the world by international traffic and it is the hub for the nation's flag carrier, Air France.[296] Beauvais-Till√© Airport, located 69 km (43 mi) north of Paris's city centre, is used by charter airlines and low-cost carriers. Paris is the most important hub of France's motorway network, and is surrounded by three orbital freeways: the P√©riph√©rique,[94] which follows the approximate path of 19th-century fortifications around Paris, the A86 motorway in the inner suburbs, and the Francilienne motorway in the outer suburbs. Paris has an extensive road network with over 2,000 km (1,243 mi) of highways and motorways. The Paris region is the most active water transport area in France. Most of the cargo is handled by the Ports of Paris, in facilities located around Paris. The rivers Loire, Rhine, Rh√¥ne, Meuse, and Scheldt can be reached by canals connecting with the Seine, which include the Canal Saint-Martin, Canal Saint-Denis, and the Canal de l'Ourcq.[297] There are 440 km (270 mi) of cycle paths and routes in Paris. These include piste cyclable, bike lanes separated from other traffic by physical barriers, and bande cyclable, a bicycle lane denoted by a painted path on the road). Some 29 km (18 mi) of specially marked bus lanes are free for use by cyclists, with a protective barrier against encroachments from vehicles.[298] Cyclists have the right to ride in both directions on certain one-way streets. Paris has a bike sharing system called V√©lib' with more than 20,000 public bicycles distributed at 1,800 parking stations.[299] Electricity is provided to Paris through a peripheral grid, fed by multiple sources. In 2012, around 50% of electricity generated in the √éle-de-France came from cogeneration energy plants. Other energy sources included thermal power (35%), waste incineration (9% ‚Äì with cogeneration plants, these provide the city in heat as well), methane gas (5%), hydraulics (1%), solar power (0.1%) and a negligible amount of wind power.[300] A quarter of the city's district heating is to come from a plant in Saint-Ouen-sur-Seine, burning a 50/50-mix of coal and wood pellets.[301] Paris in its early history had only the rivers Seine and Bi√®vre for water. From 1809, the Canal de l'Ourcq provided Paris with water from less-polluted rivers to the north-east of the capital.[302] From 1857, the civil engineer Eug√®ne Belgrand, under Napoleon III, oversaw the construction of a series of new aqueducts that brought water from locations all around the city to several reservoirs.[303] From then on, the new reservoir system became Paris's principal source of drinking water. The remains of the old system, pumped into lower levels of the same reservoirs, were from then on used for the cleaning of Paris's streets. This system is still a major part of Paris's water-supply network. Today Paris has more than 2,400 km (1,491 mi) of underground sewers.[304] Air pollution in Paris, from the point of view of particulate matter (PM10), is the highest in France with 38 Œºg/m3.[305] From the point of view of nitrogen dioxide pollution, Paris has one of the highest levels in the EU.[306] Paris has more than 421 municipal parks and gardens, covering more than 3,000 hectares and containing more than 250,000 trees.[307] Two of Paris's oldest and most famous gardens are the Tuileries Garden, created in 1564 for the Tuileries Palace and redone by Andr√© Le N√¥tre between 1664 and 1672,[308] and the Luxembourg Garden, for the Luxembourg Palace, built for Marie de' Medici in 1612, which today houses the Senate.[309] The Jardin des plantes was the first botanical garden in Paris, created in 1626.[310] Between 1853 and 1870, Emperor Napoleon III and the city's first director of parks and gardens, Jean-Charles Adolphe Alphand, created the Bois de Boulogne, Bois de Vincennes, Parc Montsouris and Parc des Buttes-Chaumont, located at the four compass points around Paris, as well as many smaller parks, squares and gardens in the Paris's quarters.[311] Since 1977, the city has created 166 new parks, most notably the Parc de la Villette (1987), Parc Andr√© Citro√´n (1992), Parc de Bercy (1997) and Parc Clichy-Batignolles (2007).[312] One of the newest parks, the Promenade des Berges de la Seine (2013), has floating gardens. During the Roman era, Paris' main cemetery was located on the outskirts of the left bank settlement. This changed with the rise of Catholic Christianity, where most every inner-city church had adjoining burial grounds for use by their parishes. With Paris's growth, many of these, particularly the city's largest cemetery, the Holy Innocents' Cemetery, were filled to overflowing. When inner-city burials were condemned from 1786, the contents of all Paris' parish cemeteries were transferred to a renovated section of Paris's stone mines, today place Denfert-Rochereau in the 14th arrondissement.[313][314] After a tentative creation of several smaller suburban cemeteries, the Prefect Nicholas Frochot under Napoleon Bonaparte provided a more definitive solution, in the creation of three massive Parisian cemeteries outside the city limits.[315] Open from 1804, these were the cemeteries of P√®re Lachaise, Montmartre, Montparnasse, and later Passy. New suburban cemeteries were created in the early 20th century: The largest of these are the Cimeti√®re parisien de Saint-Ouen, the Cimeti√®re parisien de Pantin, also known as Cimeti√®re parisien de Pantin-Bobigny, the Cimeti√®re parisien d'Ivry, and the Cimeti√®re parisien de Bagneux.[316] Famous people buried in Parisian cemeteries include Oscar Wilde, Fr√©d√©ric Chopin, Jim Morrison, √âdith Piaf and Serge Gainsbourg.[317] Paris is the d√©partement with the highest proportion of highly educated people. In 2009, around 40 percent of Parisians held a licence-level diploma or higher, the highest proportion in France.[318] 13 percent have no diploma, the third-lowest percentage in France. Education in Paris and the √éle-de-France region employs approximately 330,000 people, 170,000 of whom are teachers and professors, teaching approximately 2.9 million students in around 9,000 primary, secondary, and higher education schools and institutions.[319] The University of Paris, founded in the 12th century, is often called the Sorbonne after one of its original medieval colleges. In 1970, it was broken up into thirteen autonomous universities, following the student demonstrations in 1968. Most of the campuses today are in the Latin Quarter where the old university was located, while others are scattered around the city and the suburbs.[320] The Paris region hosts France's highest concentration of the grandes √©coles ‚Äì 55 specialised centres of higher-education outside or inside the public university structure. The prestigious public universities are usually considered grands √©tablissements. Most of the grandes √©coles were relocated to the suburbs of Paris in the 1960s and 1970s, in new campuses much larger than the old campuses within the crowded City of Paris. The √âcole Normale Sup√©rieure, PSL University has remained on rue d'Ulm in the 5th arrondissement.[321] In 2025, Paris is the home of prestigious universities in science and technology (Conservatoire national des arts et m√©tiers, Polytechnic Institute of Paris, Paris Cit√© University, Paris-Saclay University, Sorbonne University), political science (Sciences Po),[322] management (HEC Paris, ESSEC Business School, ESCP Business School, INSEAD)[323] as well as multidisciplinary universities (Paris Sciences et Lettres University).[324] Health care and emergency medical service in the City of Paris and its suburbs are provided by the Assistance publique ‚Äì H√¥pitaux de Paris (AP-HP), a public hospital system that employs more than 90,000 people, including practitioners, support personnel, and administrators, in 44 hospitals.[325] It is the largest hospital system in Europe. The hospitals receive more than 5.8 million annual patient visits.[325] One of the most notable hospitals is the H√¥tel-Dieu, founded in 651, the oldest hospital in Paris and the oldest worldwide still operating,[326] although the current building is the product of a reconstruction of 1877. Other hospitals include Piti√©-Salp√™tri√®re Hospital, one of the largest in Europe, H√¥pital Cochin, Bichat‚ÄìClaude Bernard Hospital, H√¥pital Europ√©en Georges-Pompidou, Bic√™tre Hospital, Beaujon Hospital, the Curie Institute, Lariboisi√®re Hospital, Necker‚ÄìEnfants Malades Hospital, H√¥pital Saint-Louis, H√¥pital de la Charit√© and the American Hospital of Paris. The United Nations Educational, Scientific and Cultural Organization (UNESCO) has had its headquarters in Paris since November 1958. Paris is also the home of the Organisation for Economic Co-operation and Development (OECD).[327] Paris hosts the headquarters of the European Space Agency, the International Energy Agency, European Securities and Markets Authority and the European Banking Authority. Since April 1956, Paris is exclusively and reciprocally twinned with:[328][329] Paris has agreements of friendship and co-operation with:[328]\nAc√®h –ê–¥—ã–≥—ç–±–∑—ç –ê–¥—ã–≥–∞–±–∑—ç Afrikaans Alemannisch ·ä†·àõ·à≠·äõ Anar√¢≈°kiel√¢ ‡§Ö‡§Ç‡§ó‡§ø‡§ï‡§æ √Ünglisc ÿßŸÑÿπÿ±ÿ®Ÿäÿ© Aragon√©s ‹ê‹™‹°‹ù‹ê ‘±÷Ä’•÷Ç’¥’ø’°’∞’°’µ’•÷Ä’ß’∂ Arm√£neashti Arpetan ‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ Asturianu Atikamekw ‡§Ö‡§µ‡§ß‡•Ä Ava√±e'·∫Ω –ê–≤–∞—Ä Aymar aru Az…ôrbaycanca ÿ™€Üÿ±⁄©ÿ¨Ÿá Basa Bali Bamanankan ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ Èñ©ÂçóË™û / B√¢n-l√¢m-g√∫ –ë–∞—à“°–æ—Ä—Ç—Å–∞ –ë–µ–ª–∞—Ä—É—Å–∫–∞—è –ë–µ–ª–∞—Ä—É—Å–∫–∞—è (—Ç–∞—Ä–∞—à–∫–µ–≤—ñ—Ü–∞) ‡§≠‡•ã‡§ú‡§™‡•Å‡§∞‡•Ä Bikol Central Bislama –ë—ä–ª–≥–∞—Ä—Å–∫–∏ Boarisch ‡Ωñ‡Ωº‡Ωë‡ºã‡Ω°‡Ω≤‡ΩÇ Bosanski Brezhoneg –ë—É—Ä—è–∞–¥ Catal√† –ß”ë–≤–∞—à–ª–∞ Cebuano ƒåe≈°tina Chamoru Chavacano de Zamboanga Chi-Chewa ChiShona ChiTumbuka Corsu Cymraeg Dagbanli Dansk ÿßŸÑÿØÿßÿ±ÿ¨ÿ© Davvis√°megiella Deitsch Deutsch Din√© bizaad Dolnoserbski ‡§°‡•ã‡§ü‡•á‡§≤‡•Ä ‡Ωá‡Ωº‡ΩÑ‡ºã‡ΩÅ Eesti ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ Emili√†n e rumagn√≤l –≠—Ä–∑—è–Ω—å Espa√±ol Esperanto Estreme√±u Euskara E ãegbe ŸÅÿßÿ±ÿ≥€å Fiji Hindi F√∏royskt Fran√ßais Frysk Fulfulde Furlan Gaeilge Gaelg Gagauz G√†idhlig Galego –ì”Ä–∞–ª–≥”Ä–∞–π Ë¥õË™û ⁄Ø€åŸÑ⁄©€å ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä êå≤êåøêçÑêåπêçÉêå∫ ‡§ó‡•ã‡§Ç‡§Ø‡§ö‡•Ä ‡§ï‡•ã‡§Ç‡§ï‡§£‡•Ä / G√µychi Konknni Gungbe ÂÆ¢ÂÆ∂Ë™û / Hak-k√¢-ng√Æ ÌïúÍµ≠Ïñ¥ Hausa Hawai ªi ’Ä’°’µ’•÷Ä’•’∂ ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä Hornjoserbsce Hrvatski Ido Ilokano Bahasa Indonesia Interlingua Interlingue ·êÉ·ìÑ·íÉ·ëé·ëê·ë¶ / inuktitut –ò—Ä–æ–Ω IsiXhosa IsiZulu √çslenska Italiano ◊¢◊ë◊®◊ô◊™ Jawa Kab…©y…õ Kalaallisut ‡≤ï‡≤®‡≥ç‡≤®‡≤° Kapampangan –ö—ä–∞—Ä–∞—á–∞–π-–º–∞–ª–∫—ä–∞—Ä ·É•·Éê·É†·Éó·É£·Éö·Éò ‡§ï‡•â‡§∂‡•Å‡§∞ / ⁄©Ÿ≤ÿ¥Ÿèÿ± Kasz√´bsczi “ö–∞–∑–∞“õ—à–∞ Kernowek Ikinyarwanda Ikirundi Kiswahili –ö–æ–º–∏ Kongo Kotava Krey√≤l ayisyen Kriy√≤l gwiyannen Kurd√Æ –ö—ã—Ä–≥—ã–∑—á–∞ –ö—ã—Ä—ã–∫ –º–∞—Ä—ã Ladin Ladino ‡∫•‡∫≤‡∫ß Latgaƒºu Latina Latvie≈°u L√´tzebuergesch –õ–µ–∑–≥–∏ Lietuvi≈≥ Ligure Limburgs Ling√°la Lingua Franca Nova Livvinkarjala La .lojban. Luganda Lombard Magyar ‡§Æ‡•à‡§•‡§ø‡§≤‡•Ä –ú–∞–∫–µ–¥–æ–Ω—Å–∫–∏ Malagasy ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç Malti MƒÅori ‡§Æ‡§∞‡§æ‡§†‡•Ä ·Éõ·Éê·É†·Éí·Éê·Éö·É£·É†·Éò ŸÖÿµÿ±Ÿâ ŸÖÿßÿ≤Ÿêÿ±ŸàŸÜ€å Bahasa Melayu Minangkabau Èñ©Êù±Ë™û / M√¨ng-dƒïÃ§ng-ng·π≥ÃÑ Mirand√©s –ú–æ–∫—à–µ–Ω—å –ú–æ–Ω–≥–æ–ª ·Äô·Äº·Äî·Ä∫·Äô·Ä¨·Äò·Ä¨·Äû·Ä¨ Na Vosa Vakaviti Nederlands Nedersaksies ‡§®‡•á‡§™‡§æ‡§≤‡•Ä ‡§®‡•á‡§™‡§æ‡§≤ ‡§≠‡§æ‡§∑‡§æ Êó•Êú¨Ë™û Napulitano –ù–æ—Ö—á–∏–π–Ω Nordfriisk Norsk bokm√•l Norsk nynorsk Nouormand Novial Occitan –û–ª—ã–∫ –º–∞—Ä–∏–π ‡¨ì‡¨°‡¨º‡¨ø‡¨Ü Oromoo O ªzbekcha / —û–∑–±–µ–∫—á–∞ ‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä ŸæŸÜÿ¨ÿßÿ®€å Papiamentu Ÿæ⁄öÿ™Ÿà Patois –ü–µ—Ä–µ–º –∫–æ–º–∏ ·ûó·û∂·ûü·û∂·ûÅ·üí·ûò·üÇ·ûö Picard Piemont√®is Pinayuanan Tok Pisin Plattd√º√ºtsch Polski Œ†ŒøŒΩœÑŒπŒ±Œ∫Œ¨ Portugu√™s Qaraqalpaqsha Qƒ±rƒ±mtatarca Reo tahiti Rom√¢nƒÉ Romani ƒçhib Rumantsch Runa Simi –†—É—Å–∏–Ω—å—Å–∫—ã–π –†—É—Å—Å–∫–∏–π –°–∞—Ö–∞ —Ç—ã–ª–∞ Gagana Samoa S√§ng√∂ ·±•·±ü·±±·±õ·±ü·±≤·±§ Sardu Scots Seeltersk Sesotho Shqip Sicilianu ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω Simple English ÿ≥ŸÜ⁄åŸä Slovenƒçina Sloven≈°ƒçina –°–ª–æ–≤—£–Ω—å—Å–∫—ä / ‚∞î‚∞é‚∞ë‚∞Ç‚∞°‚∞ê‚∞†‚∞î‚∞ç‚∞ü ≈öl≈Ønski Soomaaliga ⁄©Ÿàÿ±ÿØ€å Sranantongo –°—Ä–ø—Å–∫–∏ / srpski Srpskohrvatski / —Å—Ä–ø—Å–∫–æ—Ö—Ä–≤–∞—Ç—Å–∫–∏ Sunda Suomi Svenska Tagalog ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç Tacl·∏•it Taqbaylit Tarand√≠ne –¢–∞—Ç–∞—Ä—á–∞ / tatar√ßa ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å Tetun ‡πÑ‡∏ó‡∏¢ –¢–æ“∑–∏–∫”£ Lea faka-Tonga Tsets√™hest√¢hese T√ºrk√ße T√ºrkmen√ße Twi Tyap –¢—ã–≤–∞ –¥—ã–ª –£–¥–º—É—Ä—Ç –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ ÿßÿ±ÿØŸà ÿ¶€áŸäÿ∫€áÿ±⁄Ü€ï / Uyghurche Vahcuengh V√®neto Veps√§n kel‚Äô Ti·∫øng Vi·ªát Volap√ºk V√µro Walon ÊñáË®Ä West-Vlams Winaray Wolof Âê¥ËØ≠ ◊ô◊ô÷¥◊ì◊ô◊© Yor√πb√° Á≤µË™û Zazaki Ze√™uws ≈Ωemaitƒó≈°ka ‰∏≠Êñá Betawi F…îÃÄngb√® Kumoring Yerwa Kanuri Nupe –†—É—Å–∫–∏ Tolƒ±≈üi ‚µú‚¥∞‚µé‚¥∞‚µ£‚µâ‚µñ‚µú ‚µú‚¥∞‚µè‚¥∞‚µ°‚¥∞‚µ¢‚µú Article Talk Read View source View history Read View source View history What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Download as PDF Printable version Wikimedia Commons Wikinews Wikiquote Wikivoyage Wikidata item Rome, Italy Algiers, 2003 Amman, 1987 Amsterdam, 2013 Athens, 2000 Beijing, 1997 Beirut, 1992 Berlin, 1987 Brazzaville, 2015 Buenos Aires, 1999 Cairo, 1985 Casablanca, 2004 Chicago, 1996 Copenhagen, 2005 Dakar, 2011 Doha, 2010 Geneva, 2002 Istanbul, 2009 Jakarta, 1995 Jericho, 2009 Kinshasa, 2014 Kyoto, 1958 Lisbon, 1998 London, 2001 Madrid, 2000 Mexico City, 1999 Montevideo, 2013 Montreal, 2006 Moscow, 1992 Phnom Penh, 2007 Porto Alegre, 2001 Prague, 1997 Quebec City, 1996 Rabat, 2004 Ramallah, 2011 Rio de Janeiro, 2009 Riyadh, 1997 Saint Petersburg, 1997 Sanaa, 1987 San Francisco, 1996 Santiago, 1997 S√£o Paulo, 2004 Seoul, 1991 Sofia, 1998 Sydney, 1998 Tbilisi, 1997 Tel Aviv, 2010 Tokyo, 1982 Tunis, 2004 Warsaw, 1999 Washington, D.C., 2000 Yerevan, 1998 France portal Cities portal Art Nouveau in Paris Art Deco in Paris C40 Cities Climate Leadership Group International Exposition of Modern Industrial and Decorative Arts held in Paris in 1925 Megacity Outline of France Outline of Paris Paris syndrome Parish and Civil Registers in Paris ^ The word was most likely created by Parisians of the lower popular class who spoke *argot*, then *parigot* was used in a provocative manner outside the Parisian region and throughout France to mean Parisians in general. ^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:\"\\\"\"\"\\\"\"\"'\"\"'\"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free.id-lock-free a{background:url(\"//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited.id-lock-limited a,.mw-parser-output .id-lock-registration.id-lock-registration a{background:url(\"//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription.id-lock-subscription a{background:url(\"//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url(\"//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg\")right 0.1em center/12px no-repeat}body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-free a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-limited a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-registration a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-subscription a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .cs1-ws-icon a{background-size:contain;padding:0 1em 0 0}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:var(--color-error,#d33)}.mw-parser-output .cs1-visible-error{color:var(--color-error,#d33)}.mw-parser-output .cs1-maint{display:none;color:#085;margin-left:0.3em}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}@media screen{.mw-parser-output .cs1-format{font-size:95%}html.skin-theme-clientpref-night .mw-parser-output .cs1-maint{color:#18911f}}@media screen and (prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .cs1-maint{color:#18911f}}\"R√©pertoire national des √©lus: les maires\". data.gouv.fr (in French). 16 December 2022. Archived from the original on 27 February 2023. ^ a b c d e \"D√©partement: Paris (75); Unit√© urbaine: Paris (00851); R√©gion: √éle-de-France (11); Aire d'attraction des villes: Paris (001)\". insee.fr. INSEE. 9 January 2025. Retrieved 24 January 2025. ^ a b c d \"Estimation de la population au 1·µâ ≥ Janvier 2025 - S√©ries par r√©gion, d√©partement, sexe et √¢ge\". insee.fr. INSEE. 14 January 2025. Retrieved 24 January 2025. ^ \"Populations l√©gales 2019: Commune de Paris (75056)\". INSEE. 29 December 2021. Archived from the original on 22 January 2022. Retrieved 3 February 2022. ^ \"The World's Most Densely Populated Cities\". WorldAtlas. 4 October 2020. Archived from the original on 19 March 2022. Retrieved 4 March 2022. ^ \"Paris\". Encyclop√¶dia Britannica. Archived from the original on 27 August 2022. Retrieved 8 August 2022. ^ Source: PPPs and exchange rates. \"Conversion rates ‚Äì Purchasing power parities (PPP) ‚Äì OECD Data\". Data.oecd.org. Archived from the original on 4 November 2017. Retrieved 9 March 2022. ^ \"Gross domestic product (GDP) at current market prices by metropolitan regions\". ec.europa.eu. 10 March 2023. Archived from the original on 15 February 2023. Retrieved 13 June 2023. ^ \"The world's most, and least, expensive cities\". The Economist. ISSN 0013-0613. Archived from the original on 1 December 2022. Retrieved 1 December 2022. ^ \"List: The world's 20 busiest airports (2017)\". USA Today. Archived from the original on 25 June 2018. Retrieved 2 May 2018. ^ \"ACI reveals the world's busiest passenger and cargo airports\". Airport World. 9 April 2018. Archived from the original on 28 June 2018. Retrieved 2 May 2018. ^ a b Zhang, Yiqian (26 November 2019). \"Paris leads the way for sustainable urban mobility\". ICLEI ‚Äì Sustainable Mobility, 2024. Archived from the original on 7 January 2024. Retrieved 7 January 2024. ^ a b \"Paris, France Honored with the 2023 Sustainable Transport Award\". Institute for Transportation & Development policy. 10 January 2023. Archived from the original on 7 January 2024. Retrieved 7 January 2024. ^ \"The Art Newspaper\", 27 March 2023 ^ \"Paris, Banks of the Seine\". UNESCO World Heritage Centre. United Nations Educational, Scientific, and Cultural Organization. Archived from the original on 9 May 2019. Retrieved 17 October 2021. ^ N√®gre 1990, p. 155. ^ a b c Falileyev 2010, s.v. Parisii and Lutetia. ^ Lambert 1994, p. 38. ^ Delamarre 2003, p. 211. ^ a b Delamarre 2003, p. 247. ^ Busse 2006, p. 199. ^ Dottin 1920, p. 535. ^ Arbois de Jubainville & Dottin 1889, p. 132. ^ Cunliffe 2004, p. 201. ^ Lawrence & Gondrand 2010, p. 25. ^ Schmidt 2009, pp. 65‚Äì70. ^ Schmidt 2009, pp. 88‚Äì104. ^ Schmidt 2009, pp. 154‚Äì167. ^ Meunier 2014, p. 12. ^ a b Schmidt 2009, pp. 210‚Äì211. ^ Patrick Boucheron, et al., eds. France in the World: A New Global History (2019) pp 81‚Äì86. ^ Jones 1994, p. 48. ^ a b Lawrence & Gondrand 2010, p. 27. ^ Bussmann 1985, p. 22. ^ de Vitriaco & Hinnebusch 1972, p. 262. ^ Sarmant 2012, pp. 36‚Äì40. ^ Sarmant 2012, pp. 28‚Äì29. ^ \"Paris history facts\". Paris Digest. 2018. Archived from the original on 6 September 2018. Retrieved 6 September 2018. ^ John Kelly, \"The Great Mortality\" (2005). pp 42 ^ Du Fresne de Beaucourt, G., Histoire de Charles VII, Tome I: Le Dauphin (1403‚Äì1422), Librairie de la Soci√©t√© bibliographiqque, 35 Rue de Grenelle, Paris, 1881, pp. 32 & 48 ^ Fierro 1996, pp. 52‚Äì53. ^ \"Massacre of Saint Bartholomew's Day\". Encyclop√¶dia Britannica Online. Archived from the original on 4 May 2015. Retrieved 23 November 2014. ^ Bayrou 1994, pp. 121‚Äì130. ^ Fierro 1996, p. 577. ^ Fierro 1996, p. 582. ^ Combeau 2003, pp. 42‚Äì43. ^ Fierro 1996, pp. 590‚Äì591. ^ Durant, Will; Durant, Ariel (1975). The Story of Civilization XI The Age of Napoleon. Simon & Schuster. p. 3. ISBN 978-0-671-21988-8. Archived from the original on 29 December 2016. Retrieved 11 February 2016. ^ Combeau 2003, pp. 45‚Äì47. ^ Sarmant 2012, pp. 129‚Äì133. ^ Sarmant 2012, p. 120. ^ Paine 1998, p. 453. ^ Fierro 1996, p. 674. ^ Sarmant 2012, p. 144. ^ Sarmant 2012, p. 147. ^ a b c Sarmant 2012, p. 148. ^ a b De Moncan 2012, pp. 7‚Äì35. ^ Rougerie 2014, p. 118. ^ Fraser & Spalding 2011, p. 117. ^ Fierro 1996, pp. 490‚Äì491. ^ Combeau 2003, p. 61. ^ Fierro 1996, p. 497. ^ Franck, Dan (1 December 2007). Bohemian Paris: Picasso, Modigliani, Matisse, and the Birth of Modern Art. Open Road + Grove/Atlantic. ISBN 978-0-8021-9740-5. Archived from the original on 18 November 2015 ‚Äì via Google Books. ^ Fierro 1996, p. 491. ^ Fierro 1996, p. 750. ^ William A. Shack, Harlem in Montmartre, A Paris Jazz Story between the Great Wars, University of California Press, 2001. ISBN 978-0-520-22537-4, ^ Meisler, Stanley (April 2005). \"The Surreal World of Salvador Dal√≠\". Smithsonian.com. Smithsonian Magazine. Archived from the original on 18 May 2014. Retrieved 12 July 2014. ^ Goebel, Anti-Imperial Metropolis Archived 4 September 2015 at the Wayback Machine. ^ Sarmant 2012, p. 217. ^ Fierro 1996, p. 637. ^ Sarmant 2012, p. 218. ^ Fierro 1996, pp. 242‚Äì243. ^ Kim Willsher (17 October 2011). \"France remembers Algerian massacre 50 years on\". The Guardian. Archived from the original on 26 October 2014. Retrieved 26 October 2014. ^ Fierro 1996, p. 658. ^ Sarmant 2012, p. 226. ^ Fierro 1996, p. 260. ^ Sarmant 2012, p. 222. ^ Combeau 2003, pp. 107‚Äì108. ^ Bell & de-Shalit 2011, p. 247. ^ Sarmant 2012, pp. 226‚Äì230. ^ \"City Mayors: Bertrand Delanoe ‚Äì Mayor of Paris\". www.citymayors.com. Archived from the original on 22 July 2012. Retrieved 16 August 2023. ^ \"Les berges de Seine rendues aux Parisiens\". Le Moniteur (in French). 19 June 2013. Archived from the original on 20 December 2014. Retrieved 2 December 2014. ^ Lichfield, John (29 April 2009). \"Sarko's ‚Ç¨35bn rail plan for a 'Greater Paris'\". The Independent. London. Archived from the original on 2 May 2009. Retrieved 12 June 2009. ^ \"‚Ç¨26.5bn Grand Paris metro expansion programme confirmed\". Railway Gazette International. 12 March 2013. Archived from the original on 18 March 2013. Retrieved 24 April 2013. ^ \"Le Metro du Grand Paris\" (in French). Site of Grand Paris Express. Archived from the original on 14 July 2011. Retrieved 27 November 2014. ^ Library, C.N.N. (21 January 2015). \"2015 Charlie Hebdo Attacks Fast Facts\". CNN. Archived from the original on 23 June 2017. Retrieved 20 June 2017. ^ \"Attentats terroristes : les questions que vous nous avez le plus pos√©es\". Le Monde (in French). 15 January 2015. Archived from the original on 14 January 2015. Retrieved 15 January 2015. ^ \"Les politiques s'affichent √† la marche r√©publicaine\". Le Figaro (in French). 11 January 2015. Archived from the original on 11 January 2015. Retrieved 11 January 2015. ^ \"Islamic State claims Paris attacks that killed 127\". Reuters. 14 November 2015. Archived from the original on 14 November 2015. Retrieved 14 November 2015. ^ \"Paris attacks death toll rises to 130\". RT√â.ie. 20 November 2015. Archived from the original on 23 April 2019. Retrieved 8 November 2021. ^ \"'Today is an historic day,' says Ban, as 175 countries sign Paris climate accord\". United Nations. 22 April 2016. Archived from the original on 29 June 2017. Retrieved 26 June 2023. ^ a b \"Paris\". Encyclop√¶dia Britannica Online. Archived from the original on 7 July 2013. Retrieved 4 July 2013. ^ Blackmore & McConnachie 2004, p. 153. ^ a b Lawrence & Gondrand 2010, p. 69. ^ \"Key figures for Paris\". Mairie de Paris. Paris.fr. 15 November 2007. Archived from the original on 6 March 2009. Retrieved 5 May 2009. ^ Google Maps Archived 11 January 2019 at the Wayback Machine, Retrieved 6 July 2013 ^ \"Climate\". Paris.com. Archived from the original on 8 March 2013. Retrieved 29 June 2013. ^ Lawrence & Gondrand 2010, p. 309. ^ Goldstein 2005, p. 8. ^ \"Climate in Paris\". ParisInfo. Paris Convention and Visitors Bureau. Archived from the original on 5 December 2014. Retrieved 29 June 2013. ^ Courtney Traub (31 January 2018). \"Visiting Paris in the Winter: A Complete Guide\". tripsavvy. Archived from the original on 11 October 2017. Retrieved 27 February 2018. ^ Kelby Carr (30 November 2017). \"Weather in France ‚Äì Climate and Temperatures of French Cities\". tripsavvy. Archived from the original on 28 February 2018. Retrieved 27 February 2018. ^ \"42.6 ¬∞C √† Paris : record absolu de chaleur battu !\". meteofrance.fr. M√©t√©o France. Archived from the original on 25 July 2019. Retrieved 25 July 2019. ^ \"G√©ographie de la capitale ‚Äì Le climat\" (in French). Institut National de la Statistique et des √âtudes √âconomiques. Archived from the original on 3 October 2006. Retrieved 24 May 2006 ‚Äì via Paris.fr. ^ \"Paris‚ÄìMontsouris (984)\" (PDF). Fiche Climatologique: Statistiques 1991‚Äì2020 et records (in French). Meteo France. Archived from the original (PDF) on 27 February 2018. Retrieved 13 July 2022. ^ \"Normes et records 1961‚Äì1990: Paris-Montsouris (75) ‚Äì altitude 75m\" (in French). Infoclimat. Archived from the original on 24 August 2017. Retrieved 19 May 2015. ^ \"Paris, France ‚Äì Climate data\". Weather Atlas. Archived from the original on 12 March 2017. Retrieved 9 March 2017. ^ a b Fierro 1996, p. 334. ^ \"Anne Hidalgo is new Mayor of Paris\". City of Paris. Archived from the original on 20 December 2014. Retrieved 29 November 2014. ^ Willsher, Kim (28 June 2020). \"Greens surge in French local elections as Anne Hidalgo holds Paris\". The Guardian. ISSN 0261-3077. Archived from the original on 30 June 2020. Retrieved 1 July 2020. ^ a b \"Code √©lectoral ‚Äì Article L260\" [Election Code ‚Äì Article L260] (in French). Legifrance. 13 March 1983. Archived from the original on 25 December 2014. Retrieved 7 November 2014. ^ \"Election Preview: France Municipal Elections 2014 ‚Äì Part I\". World Elections. 22 March 2014. Archived from the original on 11 October 2016. Retrieved 4 January 2017. ^ Shales 2007, p. 16. ^ \"Regroupement des 4 premiers arrondissements : le secteur Paris Centre sera cr√©√© le 11 juillet\". Paris.fr. 12 June 2020. Archived from the original on 14 November 2023. Retrieved 15 November 2023. ^ a b c \"Code g√©n√©ral des collectivit√©s territoriales ‚Äì Article L5219-1\" [General Code of Territorial Communities ‚Äì Article L5219-1] (in French). Legifrance. Archived from the original on 1 January 2016. Retrieved 29 November 2015. ^ \"D√©cret n¬∞ 2015-1212 du 30 septembre 2015 constatant le p√©rim√®tre fixant le si√®ge et d√©signant le comptable public de la m√©tropole du Grand Paris\" [Decree n¬∞ 2015-1212 of 30 September 2015 noting the perimeter fixing the seat and designating the public accountant of the metropolis of Greater Paris] (in French). Legifrance. Archived from the original on 28 February 2018. Retrieved 27 February 2018. ^ a b Nathalie Moutarde (17 July 2015). \"La m√©tropole du Grand Paris verra le jour le 1er janvier 2016\" [The metropolis of Greater Paris will be born 1 January 2016]. Le Moniteur (in French). Archived from the original on 8 December 2015. Retrieved 3 December 2015. ^ Manon Rescan (22 January 2016). \"Du Grand Paris √† la M√©tropole du Grand Paris\" [From Greater Paris to Greater Paris Metropolis]. Le Monde (in French). Archived from the original on 10 October 2017. Retrieved 30 January 2016. ^ \"R√©gionales 2015 : les chiffres cl√©s du scrutin\" [Results of 2015 Regional Elections] (in French). Regional Council of √éle-de-France. 15 December 2015. Archived from the original on 19 December 2015. Retrieved 16 December 2015. ^ \"Le Palais de L'√âlys√©e et son histoire\" [The Elys√©e Palace and its history] (in French). Elysee.fr. Archived from the original on 19 May 2017. Retrieved 16 June 2013. ^ \"Matignon Hotel\". Embassy of France, Washington. 1 December 2007. Archived from the original on 5 April 2017. Retrieved 19 June 2013. ^ Knapp & Wright 2006, pp. 93‚Äì94. ^ Borrus 2012, p. 288. ^ \"A la d√©couverte du Petit Luxembourg\" [Discovering Petit Luxembourg] (in French). Senat.fr. Archived from the original on 17 June 2013. Retrieved 3 May 2013. ^ \"Introduction\". Cour de Cassation [Court of Cassation] (in French). Archived from the original on 15 May 2013. Retrieved 27 April 2013. ^ \"Histoire & Patrimoine\" [History & Heritage] (in French). Conseil d'Etat. Archived from the original on 10 April 2013. Retrieved 27 April 2013. ^ \"Le si√®ge du Conseil constitutionnel\" [The seat of the Constitutional Council] (PDF) (in French). Conseil Constitutionnel. 16 September 2011. Archived from the original (PDF) on 23 March 2014. Retrieved 26 April 2013. ^ a b \"Pr√©sentation g√©n√©rale\" [General Presentation] (in French). Police nationale ‚Äî Minist√®re de l'int√®rieur [National Police ‚Äî Ministry of the Interior]. Archived from the original on 8 March 2013. Retrieved 22 November 2014. ^ \"Accueil\" [Home] (in French). Gendarmerie nationale ‚Äî Minist√®re de l'int√®rieur [National Gendarmerie ‚Äî Ministry of the Interior]. Archived from the original on 26 December 2010. Retrieved 22 November 2014. ^ \"France\". Travel.State.Gov. U.S. Department of State. Archived from the original on 4 April 2017. Retrieved 4 April 2017. ^ Barthelemy, Marc; Bordin, Patricia; Berestycki, Henri; Gribaudi, Maurizio (8 July 2013). \"Paris Street Evolution\". Scientific Reports. 3 (1): 2153. doi:10.1038/srep02153. ISSN 2045-2322. PMC 3703887. PMID 23835429. S2CID 11824030. ^ De Moncan, Patrice, Le Paris de Haussmann, Les √âditions de Mecene, Paris, ISBN 978-2-907970-98-3 ^ Braimoh & Vlek 2008, p. 12. ^ a b \"Plan des hauteurs\". Mairie de Paris (in French). Paris.fr. Archived from the original on 10 April 2014. Retrieved 1 November 2014. ^ \"Plan Local d'Urbanisme ‚Äì R√®glement √† la parcelle\". Mairie de Paris. Archived from the original on 22 August 2010. Retrieved 31 August 2010. ^ Challenges, www. Challenges.fr, 3 July 2018. ^ \"Chiffres Cl√©fs Logements (2011) ‚Äì D√©partement de Paris (75)\". INSEE. 2011. Archived from the original on 4 September 2015. Retrieved 1 November 2014. ^ a b \"Un territoire ancien et de petite taille\" (PDF) (in French). www.notaires.paris-idf.fr. February 2012. p. 11. Archived from the original (PDF) on 1 November 2014. Retrieved 1 November 2014. ^ Le Logement Parisien en Chiffres, Agence Departmentale de l'information sur le lodgment de Paris, October 2017. ^ Le Monde, 18 March 2019. ^ \"Une br√®ve histoire de l'am√©nagement de Paris et sa r√©gion Du District √† la R√©gion √éle-de-France\" (PDF) (in French). DRIEA √éle-de-France. Archived (PDF) from the original on 1 January 2017. Retrieved 26 November 2014. ^ Masson 1984, p. 536. ^ Yarri 2008, p. 407. ^ Gordon 2006, pp. 46‚Äì47. ^ Castells 1983, p. 75. ^ Tomas et al. 2003, p. 237. ^ a b \"Les Politiques Nationales du Logement et le Logement dans les Villes Nouvelles\" (PDF). Laburba.fr. p. 6. Archived from the original (PDF) on 26 March 2016. Retrieved 25 November 2014. ^ \"Atlas des Zones urbaines sensibles (Zus)\". SIG du secretariat g√©n√©rale du SIV (in French). Minist√®re de l'Egalit√© des Territoires et du Logement. Archived from the original on 16 August 2017. Retrieved 10 November 2014. ^ \"Une forte h√©t√©rog√©n√©it√© des revenus en √éle-de-France\" (in French). INSEE. Archived from the original on 29 December 2014. Retrieved 26 November 2014. ^ INSEE. \"Individus localis√©s √† la r√©gion en 2019 - Recensement de la population - Fichiers d√©tail\" (in French). Retrieved 15 February 2023. ^ INSEE. \"IMG1B - Population immigr√©e par sexe, √¢ge et pays de naissance en 2019 - R√©gion d'√éle-de-France (11)\" (in French). Retrieved 15 February 2023. ^ \"Paris Population Shrank By 122,000 Over Past Decade\",\"Forbes Magazine\", 24 February 2023 ^ \"Le Parisien, \"Paris n'attire plus comme autrefois: ann√©e apres ann√©e, Paris perd des habitants\": Le Parisien, 30 December 2021 ^ Le Monde, 22 January 2019 ^ \"Paris perd ses habitants, la faute √† la d√©mographie et aux... meubl√©s touristiques pour la Ville.\" Le Parisien, 28 December 2017 ^ \"Statistics on European cities\". Eurostat. Archived from the original on 14 November 2014. Retrieved 28 November 2014. ^ Des villages de Cassini aux communes d'aujourd'hui: Commune data sheet Paris, EHESS (in French). ^ \"Le Parisien\", \"Paris n'attire plus comme autrefois: ann√©e apres ann√©e, Paris perd des habitants\": Le Parisien, 30 December 2021 ^ Institut National de la Statistique et des √âtudes √âconomiques. \"Population en historique depuis 1968: Commune de Paris (75056)\" (in French). Archived from the original on 15 February 2021. Retrieved 11 September 2020. ^ INSEE. \"√âvolution et structure de la population en 2017: Unit√© urbaine 2020 de Paris (00851)\" (in French). Archived from the original on 17 June 2022. Retrieved 17 June 2022. ^ a b \"Urban Europe ‚Äî Statistics on cities, towns and suburbs\". 2016. Archived from the original on 12 October 2020. Retrieved 11 September 2020. ^ \"Functional areas ‚Äì Definition\". INSEE. Archived from the original on 9 April 2022. Retrieved 17 June 2022. ^ INSEE. \"√âvolution et structure de la population en 2017: Aire d'attraction des villes 2020 de Paris (001)\" (in French). Archived from the original on 17 June 2022. Retrieved 17 June 2022. ^ INSEE. \"√âvolution et structure de la population en 2017: France enti√®re\" (in French). Archived from the original on 17 January 2021. Retrieved 11 September 2020. ^ \"Population statistics at regional level\". Eurostat. 25 March 2015. Archived from the original on 7 April 2015. Retrieved 3 April 2015. ^ \"Les immigr√©s par sexe, √¢ge et pays de naissance ‚Äì D√©partement de Paris (75)\" [Immigrants by sex, age and country of birth ‚Äì Department of Paris (75)]. Insee (in French). Archived from the original on 1 January 2016. Retrieved 19 November 2015. ^ \"Les immigr√©s par sexe, √¢ge et pays de naissance ‚Äì R√©gion d'√éle-de-France (11)\" [Immigrants by sex, age and country of birth ‚Äì √éle-de-France region (11)]. Insee (in French). Archived from the original on 1 January 2016. Retrieved 19 November 2015. ^ \"Population par sexe, √¢ge et nationalit√© ‚Äì R√©gion d'√éle-de-France (11)\" [Population by sex, age and nationality ‚Äì √éle-de-France region (11)]. Insee (in French). Archived from the original on 1 January 2016. Retrieved 20 November 2015. ^ \"Population par sexe, √¢ge et nationalit√© ‚Äì D√©partement de Paris (75)\" [Population by sex, age and nationality ‚Äì Department of Paris (75)]. Insee (in French). Archived from the original on 1 January 2016. Retrieved 20 November 2015. ^ \"Localisation des immigr√©s et des descendants d'immigr√©s\" [Location of immigrants and descendants of immigrants]. Insee (in French). Archived from the original on 12 October 2023. Retrieved 28 September 2023. ^ Ivereigh, Austen (2016). Catholicism and Politics in Argentina, 1810‚Äì1960. Springer. p. 76. ISBN 978-1-349-13618-6. Buenos Aires was the second largest Catholic city in the world (after Paris) ^ Burchardt, Marian; Michalowski, Ines (26 November 2014). After Integration: Islam, Conviviality and Contentious Politics in Europe. Springer. ISBN 978-3-658-02594-6. Archived from the original on 1 October 2017. Retrieved 30 September 2017. ^ \"que pese l'Islam en France\". Le Monde (in French). 21 January 2015. Archived from the original on 27 November 2015. Retrieved 13 November 2015. ^ \"How does France count its muslim population?\". Le Figaro. Archived from the original on 5 November 2015. Retrieved 30 October 2015. ^ \"Interview with Dalil Boubakeur\". Le Soir (in French). Archived from the original on 28 January 2015. Retrieved 13 November 2015. ^ Riou, Mathilde (29 April 2013). \"Le manque de mosqu√©e en Ile-de-France\". France 3. Archived from the original on 17 November 2017. Retrieved 17 November 2017. ^ Berman Jewish Databank. \"World Jewish Population 2014\". Archived from the original on 4 November 2015. Retrieved 13 November 2015. ^ \"La D√©fense, Europe's largest business district\". France.fr. Archived from the original on 30 May 2013. Retrieved 8 January 2013. ^ \"Largest banks worldwide as of December 2021, by assets\". statista.com. Statista. 29 August 2022. Archived from the original on 10 August 2019. Retrieved 21 March 2023. ^ \"De Las Cases √† Jean Jaur√®s : Cr√©dit Agricole S.A. √† travers ses si√®ges\". Cr√©dit Agricole. 2011. Archived from the original on 25 July 2023. Retrieved 25 July 2023. ^ \"Department of Paris; Complete Dossier\" (in French). INSEE. Archived from the original on 7 March 2016. Retrieved 25 November 2015. ^ \"√éle-de-France Region ‚Äì Complete dossier\" (in French). INSEE. Archived from the original on 16 March 2016. Retrieved 25 November 2015. ^ \"EMP2 ‚Äì Emplois au lieu de travail par sexe, statut et secteur d'activit√© √©conomique ‚Äì R√©gion d'√éle-de-France (11)\" (in French). INSEE. Archived from the original on 1 January 2016. Retrieved 26 November 2015. ^ \"La nomenclature agr√©g√©e ‚Äì NA, 2008\" (in French). INSEE. Archived from the original on 19 December 2015. Retrieved 26 November 2015. ^ a b \"En √éle-de-France, 39 poles d'emploi structurent l'economie r√©gionale\". INSEE. Archived from the original on 1 January 2016. Retrieved 7 December 2015. ^ \"Gross domestic product (GDP) at current market prices by NUTS 3 regions\". ec.europa.eu. Archived from the original on 1 January 2024. Retrieved 1 January 2024. ^ \"Regional gross domestic product (PPS per inhabitant) by NUTS 2 regions\". ec.europa.eu. 21 February 2023. Archived from the original on 13 June 2023. Retrieved 13 June 2023. ^ \"L'√éle-de-France, une des r√©gions les plus riches d'Europe\". Insee. Archived from the original on 4 September 2015. Retrieved 11 November 2014. ^ \"The Most Dynamic Cities of 2025\". Foreign Policy. Archived from the original on 28 August 2012. Retrieved 2 November 2014. ^ \"GDP in value (current prices) ‚Äì Metropolitan France\". www.insee.fr. 15 February 2023. Archived from the original on 16 August 2023. Retrieved 13 June 2023. ^ \"GDP in value (current prices) ‚Äì √éle-de-France\". www.insee.fr. 15 February 2023. Archived from the original on 16 August 2023. Retrieved 13 June 2023. ^ a b c d e f g h i j k l \"L'Industrie en √éle-de-France, Principaux Indicateurs R√©gionaux\" (PDF). INSEE. Archived (PDF) from the original on 23 February 2015. Retrieved 24 November 2014. ^ Economist Intelligence Unit Worldwide Cost of Living Survey, based in September 2016 data, retrieved July 2017. ^ \"Classement.Singapour, Hong Kong, Paris : le trio des villes les plus ch√®res du monde\". courrierinternational.com. Courrier International. 20 March 2019. Archived from the original on 27 March 2019. Retrieved 23 March 2019.. ^ Medeiros, Jo√£o (29 June 2017). \"Station F, the world's largest startup campus opens in Paris\". Wired. Archived from the original on 21 August 2017. Retrieved 21 August 2017. ^ a b c d e \"√éle-de-France ‚Äì A la Page N¬∫288 ‚Äì INSEE 2007\" (PDF) (Press release). November 2007. Archived (PDF) from the original on 29 December 2014. Retrieved 24 November 2014. ^ \"Structure et distribution des revenus, in√©galit√© des niveaux de vie en 2013\". insee.fr. Archived from the original on 20 June 2017. Retrieved 4 April 2017. ^ \"Neighborhoods of Paris with more than 40 percent living below poverty line\" (in French). Metronews. Archived from the original on 6 April 2014. Retrieved 28 November 2013. ^ Reuters, \"France unemployment hits 13-year low\", 18 February 2022 ^ INSEE data published 1 April 2022 ^ \"Euromonitor International reveals world's Top 100 City Destinations for 2024\". Euromonitor International. Retrieved 4 April 2025. ^ a b \"Bilan de l'ann√©e touristique 2022 √† Paris √éle-de-France (mars 2023)\" [Review of the 2022 tourist year in Paris √éle-de-France (March 2023)]. pro.visitparisregion.com. 20 March 2023. Archived from the original on 25 March 2023. ^ a b c d \"Tourism in Paris ‚Äì Key Figures 2020\". press.parisinfo.com. Paris Convention and Visitors Bureau. Archived from the original on 10 September 2021. Retrieved 10 September 2021. ^ Rosen, Eric (4 September 2019). \"The World's Most-Visited City Is Bangkok\". Forbes. Archived from the original on 14 September 2019. Retrieved 21 September 2019. ^ \"Tourism in Paris ‚Äì Key Figures 2016\". Paris Convention and Visitors Bureau. 9 August 2017. Archived from the original on 19 February 2018. Retrieved 18 February 2018. ^ Vidalon, Dominique (5 July 2017). \"hoteliers-welcome-paris-decision-forcing-airbnb-hosts-to-register-rentals-idUSL8N1JW2DD\". Reuters. ^ Fortune Magazine, 5 July 2017. ^ Wyatt, Caroline (20 December 2006). \"'Paris Syndrome' strikes Japanese\". BBC News. Archived from the original on 31 October 2009. Retrieved 4 November 2009. ^ Montclos 2003. ^ a b c d e f g h i Michelin 2011. ^ Perry 1995, p. 19. ^ \"Visitor Figures 2021\", \"The Art Newspaper\", 5 January 2022. ^ \"Le Tourisme a Paris ‚Äì Chiffres Cles -Edition 2021,\"the Office of Tourism and Congresses of the City of Paris.(published 2022) ^ \"Municipal museums\". Maire de Paris. Archived from the original on 23 November 2014. Retrieved 23 November 2014. ^ Lawrence & Gondrand 2010, p. 178. ^ Schumacher 1996, p. 60. ^ Fierro 1996, p. 1173. ^ Who's Where. 1961. p. 304. Archived from the original on 7 September 2013. Retrieved 2 July 2013. ^ Fierro 1996, pp. 1005‚Äì1006. ^ \"scan of the book at the Biblioth√®que nationale de France\". Gallica.bnf.fr. 15 October 2007. Archived from the original on 12 June 2013. Retrieved 24 March 2014. ^ Fierro 1996, p. 488. ^ \"Notre Dame Renovations\". Adoremus Organization. Archived from the original on 7 February 2013. Retrieved 4 July 2013. ^ \"Les Miserables\". Preface. Gutenberg Organization. 1862. Archived from the original on 11 October 2013. Retrieved 4 July 2013. ^ \"Jules Verne\". Encyclopaedia Britannica. Retrieved 18 April 2024. ^ \"Official site of the Nobel Prize\". Archived from the original on 16 December 2014. Retrieved 24 November 2014. ^ Fierro 1996, p. 840. ^ \"The French Still Flock to Bookstores\", New York Times, 20 June 2012 ^ Damschroeder & Williams 1990, p. 157. ^ Georges Bizet: Carmen Archived 26 March 2023 at the Wayback Machine, Susan McClary, p. 120 ^ Dubal, David (2003). The Essential Canon of Classical Music. Macmillan. p. 346. ISBN 978-1-4668-0726-6. Archived from the original on 1 February 2023. Retrieved 9 January 2016. ^ Dregni 2004, p. 19. ^ a b Dregni 2008, p. 32. ^ a b Mroue 2006, p. 260. ^ a b c \"Best Gypsy jazz bars in Paris\". The Guardian. 3 March 2010. Archived from the original on 20 March 2014. Retrieved 3 July 2013. ^ Bezbakh 2004, p. 872. ^ \"Rock en Seine '13\". Efestivals.co.uk. Archived from the original on 13 May 2013. Retrieved 23 April 2013. ^ Andante (2004). \"Orchestre de Paris\". Andante.com. Archived from the original on 12 March 2007. Retrieved 3 July 2013. ^ Huey, Steve. √âdith Piaf biography at AllMusic. Retrieved 22 December 2015. ^ \"Hip-Hop √† la Fran√ßaise\". The New York Times. 15 October 2013. Archived from the original on 9 December 2015. Retrieved 28 November 2015. ^ Universalis, Encyclop√¶dia (27 March 2002). \"PR√âSENTATION DU CIN√âMATOGRAPHE LUMI√àRE\". Encyclop√¶dia Universalis. Archived from the original on 11 October 2017. Retrieved 14 May 2022. ^ \"The Grand Rex ... and its Etoiles\". RFI. 24 October 2010. Archived from the original on 7 October 2015. Retrieved 5 October 2015. ^ \"Le Cin√©ma √† Paris\". Paris.fr. Archived from the original on 16 October 2015. Retrieved 5 October 2015. ^ \"2 Tamil Films in 1st SAFF in Paris\". The Times of India. 27 December 2012. Archived from the original on 2 July 2013. Retrieved 2 July 2013. ^ Fierro 1996, pp. 1136‚Äì1138. ^ a b Fierro 1996, p. 1137. ^ Domin√© 2014. ^ Le Monde, 2 February 2015 ^ \"Michelin Guide\". Michelin Guide. Archived from the original on 25 November 2014. Retrieved 23 November 2014. ^ Fierro 1996, p. 715. ^ Fierro 1996, p. 773. ^ Carr-Allinson, Rowena. \"11 Ways to Look like a Local in Paris\". iExplore.com. Inside-Out Media. Archived from the original on 24 September 2016. Retrieved 16 September 2016. ^ Bradford, Julie (2014). Fashion Journalism. Routledge. p. 129. ISBN 978-1-136-47536-8. Archived from the original on 1 January 2016. Retrieved 25 October 2015. ^ Dillon, Susan (2011). The Fundamentals of Fashion Management. A&C Black. p. 115. ISBN 978-2-940411-58-0. Archived from the original on 1 January 2016. Retrieved 25 October 2015. ^ \"Global ranking of manufacturers of luxury goods\". Insidermonkey.com. Archived from the original on 19 January 2015. Retrieved 16 January 2015. ^ Department of Photographs, Photography and Surrealism, Heilbrunn Timeline of Art History Archived 13 February 2015 at the Wayback Machine, The Metropolitan Museum of Art, New York, 2000. ^ Hazan 2011, p. 362. ^ \"Le Figaro\". Encyclop√¶dia Britannica. 2 October 2023. Archived from the original on 13 November 2014. Retrieved 25 July 2023. ^ \"French and Francophone Publications\". French.about.com. Archived from the original on 13 May 2013. Retrieved 3 July 2013. ^ \"Paris's Top Newspapers\". About-France.com. Archived from the original on 28 June 2013. Retrieved 3 July 2013. ^ \"Agence France-Presse\". Agence France-Presse website. 16 January 2012. Archived from the original on 8 July 2013. Retrieved 3 July 2013. ^ \"France 24\". France24.com. Archived from the original on 15 October 2014. Retrieved 3 July 2013. ^ \"France Diplomatie\". Diplomatie.gouv.fr. Archived from the original on 29 June 2013. Retrieved 3 July 2013. ^ \"French and Francophone TV Stations\". French.about.com. Archived from the original on 20 May 2013. Retrieved 3 July 2013. ^ \"France's Radio Stations\". Listenlive.eu. Archived from the original on 10 October 2017. Retrieved 3 July 2013. ^ \"La Poste\". Laposte.com. Archived from the original on 12 July 2013. Retrieved 3 July 2013. ^ a b BlackmoreMcConnachie 2004, p. 204. ^ \"How to find us\". Biblioth√®que nationale de France. Archived from the original on 16 October 2005. ^ a b Woodward, Richard B. (5 March 2006). \"At These Parisian Landmarks, Shhh Is the Word\". The New York Times. Archived from the original on 14 December 2014. Retrieved 4 July 2013. ^ \"Paris-Sorbonne libraries\". Paris-Sorbonne University. Archived from the original on 3 July 2013. Retrieved 4 July 2013. ^ \"French Libraries and Archives\". University of Notre Dame, Hesburgh Libraries. Archived from the original on 17 October 2013. Retrieved 5 July 2013. ^ a b Lawrence & Gondrand 2010, pp. 300‚Äì301. ^ \"Locations of League: Paris\". TotalRugbyLeague. 25 March 2025. Retrieved 24 April 2025. ^ Darbyshire, Drew (8 April 2025). \"Wigan Warriors and Catalans Dragons progress Paris plans for 2026\". Wigan Today. Retrieved 15 May 2025. ^ \"EURO 2016: All you need to know\". UEFA. 1 January 2023. Retrieved 6 June 2024. ^ \"Arsenal aim to upset the odds\". BBC Sport. 16 June 2006. Archived from the original on 12 September 2017. Retrieved 21 April 2013. ^ \"2013 route\". Le Tour. Archived from the original on 17 May 2013. Retrieved 21 April 2013. ^ \"Roland-Garros\". Roland Garros. Archived from the original on 15 April 2013. Retrieved 21 April 2013. ^ \"Stade Pierre de Coubertin (Paris)\". √âquipement-Paris. Archived from the original on 13 July 2017. Retrieved 4 April 2017. ^ \"Paris Football Team | The Paris Football Team is an American football franchise of the European League of Football, based in Paris, France\". Archived from the original on 23 September 2022. Retrieved 23 September 2022. ^ Syndicat des Transports d'√éle-de-France (STIF). \"Le web des voyageurs franciliens\" (in French). Archived from the original on 11 April 2006. Retrieved 10 April 2006. ^ \"Optile en bref\". Optile. Archived from the original on 8 December 2015. Retrieved 27 November 2015. ^ Vigneau, Laurent (30 May 2018). \"On foot or by bike? While Paris walks, Amsterdam pedals\". Medium. La Fabrique de la Cit√©. Archived from the original on 7 August 2020. Retrieved 13 May 2020. ^ \"Bikes overtake cars as means of transport in Paris\". AFP. The Local. 12 April 2024. Archived from the original on 15 May 2024. Retrieved 15 May 2024. ^ Frost, Rosie (12 April 2024). \"Cycling is now more popular than driving in the centre of Paris, study finds\". Euronews. Archived from the original on 19 June 2024. Retrieved 15 May 2024. ^ \"5 reasons the world looks to Europe's cities\". European Investment Bank. Archived from the original on 7 June 2021. Retrieved 7 June 2021. ^ McMahon, Jeff. \"How Bike Lanes Are Transforming Paris\". Forbes. Archived from the original on 7 June 2021. Retrieved 7 June 2021. ^ Maassen, Anne. \"Paris' Vision for a '15-Minute City' Sparks a Global Movement\". World Resource Institute. Retrieved 4 April 2025. ^ Walker, Jim. \"Why walking and public transport must be integrated\". The International Association for public transport. Retrieved 4 April 2025. ^ \"Mobility changes in Greater Paris -Grand Paris- Historical trends, current and emerging developments\". Apur, the Paris Urbanism Agency. Retrieved 4 April 2025. ^ Limb, Lottie (16 June 2024). \"The time of the whole car city is over': How is Paris encouraging walking and cycling?\". Euronews. Retrieved 4 April 2025. ^ Peters, Adele. \"How Paris became a 15-minute city\". Fast Company. Retrieved 4 April 2025. ^ \"M√©tro2030, notre nouveau m√©tro de Paris\". RATP. Archived from the original on 1 January 2016. Retrieved 27 November 2015. ^ \"2023 Airport Traffic Report\" (PDF). Port Authority of New York and New Jersey. April 2024. p. 32. ^ \"Bulletin statistique, trafic a√©rien commercial ‚Äì ann√©e 2014\" (PDF). Direction g√©n√©rale de l'Aviation civile. p. 15. Archived (PDF) from the original on 29 March 2017. Retrieved 28 November 2015. ^ \"Trafic a√©roportuaire 1986‚Äì2013\". Direction g√©n√©rale de l'Aviation civile. pp. 15‚Äì17. Archived from the original on 5 April 2017. Retrieved 27 November 2015. ^ Lawrence & Gondrand 2010, pp. 278‚Äì283. ^ Jefferson 2009, p. 114. ^ Hart 2004, p. 355. ^ Rand 2010, p. 165. ^ \"La production √©lectrique en IdF\" (PDF). La DRIEE ‚Äì Prefet de la r√©gion d'√éle-de-France. Archived (PDF) from the original on 7 October 2015. Retrieved 11 November 2015. ^ \"Paris to be heated with US wood pellets\". Global Wood Markets Info. 11 March 2016. Archived from the original on 12 March 2016. Retrieved 11 March 2016. ^ \"Historique des √©gouts\" (in French). Paris.fr. Archived from the original on 10 April 2014. Retrieved 18 June 2013. ^ Burchell 1971, p. 93. ^ \"Les √©gouts parisiens\". Mairie de Paris (in French). Archived from the original on 3 October 2006. Retrieved 15 May 2006. ^ Air pollution in Paris Archived 24 September 2012 at the Wayback Machine according to L'internaute ^ \"Air pollution in Europe: These are the worst-hit cities to live in\". euronews. 24 December 2021. Archived from the original on 1 April 2022. Retrieved 1 April 2022. ^ Jarrass√© 2007, p. 6. ^ Lawrence & Gondrand 2010, p. 125. ^ Lawrence & Gondrand 2010, p. 208. ^ \"Le Jardin de Plantes\". Archived from the original on 15 June 2013. Retrieved 22 June 2013. ^ Jarrass√© 2007, pp. 122‚Äì161. ^ Jarrass√© 2007, pp. 242‚Äì256. ^ Whaley 2012, p. 101. ^ Broadwell 2007, p. 92. ^ Ayers 2004, p. 271. ^ \"Les 20 cimeti√®res Parisiens\". Paris.fr. Archived from the original on 5 April 2017. Retrieved 4 April 2017. ^ \"Les c√©l√©brit√©s du cimeti√®re du P√®re Lachaise √† Paris\". www.oui.sncf (in French). 7 November 2018. Archived from the original on 14 April 2020. Retrieved 20 April 2020. ^ \"Indicateurs d√©partementaux et r√©gionaux sur les dipl√¥mes et la formation en 2009\". INSEE. Archived from the original on 10 September 2013. Retrieved 29 June 2013. ^ La Pr√©fecture de la R√©gion d'√éle-de-France. \"L'enseignement\" (in French). Archived from the original on 24 August 2007. Retrieved 9 October 2007. ^ Combeau 2013, pp. 213‚Äì214. ^ \"Contact and Maps\" (in French). √âcole Normale Sup√©rieure. Archived from the original on 7 June 2013. Retrieved 18 June 2013. ^ Plan√™te grandes √©coles (16 April 2024). \"Classement QS 2024 : Sciences Po devient la 2√®me meilleure universit√© mondiale en \"Politics\"\" (in French). Retrieved 8 May 2024. ^ Financial Times. \"European Business School Rankings 2023\". Retrieved 8 May 2024. ^ ARWU. \"2023 Academic Ranking of World Universities\". Retrieved 8 May 2024. ^ a b \"Rapport Annuel 2008\" (in French). Rapport Activite. Archived from the original on 27 March 2014. Retrieved 21 April 2013. ^ \"Hotel Dieu\". London Science Museum. Archived from the original on 8 May 2013. Retrieved 21 April 2013. ^ |Where we are |publisher oecd.org |accessed on 30 August 2016. ^ a b \"Les pactes d'amiti√© et de coop√©ration\" (in French). Paris. September 2015. Archived from the original on 8 March 2021. Retrieved 14 December 2021. ^ \"Twinning Rome ‚Äì Paris\" (PDF) (in French). 30 January 1956. Archived (PDF) from the original on 13 November 2018. Retrieved 28 February 2018. \"Roma ‚Äì Relazioni Internazionali Bilaterali\" (in Italian). Commune Roma. Archived from the original on 9 July 2016. Retrieved 10 September 2016. ^ \"Dichiarazione congiunta Roma ‚Äì Parigi ‚Äì (2014)\" (PDF). Roma ‚Äì Relazioni Internazionali Bilaterali (in French). Rome: Commune Roma. 1 October 2014. Archived from the original on 9 July 2016. Retrieved 10 September 2016. ^ \"Twinning with Rome\". Archived from the original on 5 September 2012. Retrieved 27 May 2010. ^ \"Les pactes d'amiti√© et de coop√©ration\". Mairie de Paris. Archived from the original on 11 October 2007. Retrieved 14 October 2007. ^ \"International relations: special partners\". Mairie de Paris. Archived from the original on 6 August 2007. Retrieved 14 October 2007. Andia, B√©atrice de; Brialy, Jean-Claude (2001). Larousse Paris (in French). Larousse. ISBN 978-2-03-585012-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Arbois de Jubainville, Henry; Dottin, George (1889). Les premiers habitants de l'Europe (in French). E. Thorin. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Ayers, Andrew (2004). The Architecture of Paris. Axel Mendes. ISBN 978-3-930698-96-7. Archived from the original on 23 January 2021. Retrieved 22 August 2020. Bayrou, Fran√ßois (1994). Henri IV: le roi libre (in French). le Grand livre du mois. ISBN 978-2-7028-3282-0. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Beevor, Antony; Cooper, Artemis (2007). Paris After the Liberation: 1944‚Äì1949: 1944‚Äì1949. Penguin Books Limited. ISBN 978-0-14-191288-2. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Bell, Daniel A.; de-Shalit, Avner (2011). The Spirit of Cities: Why the Identity of a City Matters in a Global Age. Princeton University Press. ISBN 978-1-4008-3972-8. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Berg, Leo van den; Braun, Erik (2012). National Policy Responses to Urban Challenges in Europe. Ashgate Publishing, Ltd. ISBN 978-1-4094-8725-8. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Bernard, L√©on (1970). The emerging city: Paris in the age of Louis XIV. Duke University Press. ISBN 978-0-8223-0214-8. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Bezbakh, Pierre (2004). Petit Larousse de l'histoire de France (in French). Larousse. ISBN 978-2-03-505369-5. Blackmore, Ruth; McConnachie, James (2003). Rough Guide to Paris (9th ed.). Rough Guides. ISBN 978-1-84353-078-7. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Blackmore, Ruth; McConnachie, James (2004). Rough Guide Paris Directions. Rough Guides. ISBN 978-1-84353-317-7. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Blanchard, Pascal; Deroo, Eric; El Yazami, Driss; Fourni√©, Pierre; Manceron, Gilles (2003). Le Paris Arabe (in French). La D√©couverte. ISBN 978-2-7071-3904-7. Blum, Carol (2002). Strength in Numbers: Population, Reproduction, and Power in Eighteenth-Century France. JHU Press. ISBN 978-0-8018-6810-8. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Boogert, Kate van der (2012). Frommer's Paris 2013. John Wiley & Sons. ISBN 978-1-118-33143-9. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Borrus, Kathy (2012). Five Hundred Buildings of Paris. Black Dog & Leventhal Publishers. ISBN 978-1-60376-267-0. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Braimoh, Ademola K.; Vlek, Paul L. G., eds. (2008). Land Use and Soil Resources. Springer Science & Business Media. pp. 212‚Äì. ISBN 978-1-4020-6778-5. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Broadwell, Valerie (2007). City of Light, City of Dark: Exploring Paris Below. Valerie Broadwell. ISBN 978-1-4257-9022-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Burchell, S.C. (1971). Imperial Masquerade: The Paris of Napoleon III. Atheneum. Busse, Peter E. (2006). \"Belgae\". In Koch, John T. (ed.). Celtic Culture: A Historical Encyclopedia. ABC-CLIO. pp. 195‚Äì200. ISBN 978-1-85109-440-0. Archived from the original on 19 August 2020. Retrieved 31 May 2020. Bussmann, Klaus (1985). Paris and the Ile de France. Webb & Bower. ISBN 978-0-86350-038-1. Archived from the original on 22 May 2020. Retrieved 6 July 2018. Byrne, Jim (1987). Conflict and Change: Europe 1870‚Äì1966. Educational Company. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Byrne, Joseph P. (2012). Encyclopedia of the Black Death. ABC-CLIO. ISBN 978-1-59884-254-8. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Castells, Manuel (1983). The City and the Grassroots: A Cross-Cultural Theory of Urban Social Movements. University of California Press. ISBN 978-0-520-05617-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Clark, Linda L. (2008). Women and Achievement in Nineteenth-Century Europe. Cambridge University Press. ISBN 978-0-521-65098-4. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Combeau, Yvan (2013). Histoire de Paris (in French). Presses Universitaires de France. ISBN 978-2-13-060852-3. Combeau, Yvan (2003). Histoire de Paris (in French). Presses universitaires de France. ISBN 978-2-13-053865-3. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Compayr√©, Gabriel (2004). Abelard And the Origin And Early History of Universities. Kessinger Publishing. ISBN 978-1-4179-4646-4. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Cunliffe, Barry (2004). Iron Age communities in Britain : an account of England, Scotland and Wales from the seventh century BC until the Roman conquest (4th ed.). London: Routledge. ISBN 978-0-415-34779-2. Archived from the original on 17 April 2021. Retrieved 18 November 2020. Daniel Jay Grimminger Ph.D. (2010). Paris. Arcadia Publishing. ISBN 978-1-4396-4101-9. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Damschroeder, David; Williams, David Russell (1990). Music Theory from Zarlino to Schenker: A Bibliography and Guide. Pendragon Press. ISBN 978-0-918728-99-9. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Delamarre, Xavier (2003). Dictionnaire de la langue gauloise: Une approche linguistique du vieux-celtique continental (in French). Errance. ISBN 978-2-87772-369-5. De Moncan, Patrice (2007). Les jardins du Baron Haussmann. Paris: Les √âditions du M√©c√®ne. ISBN 978-2-907970-91-4. De Moncan, Patrice (2012). Le Paris d'Haussmann (in French). Paris: Les Editions du Mecene. ISBN 978-2-907970-98-3. Domin√©, Andr√© (2014). Culinaria France. Cologne: K√∂nemann Verlagsgesellschaft mbh. ISBN 978-3-8331-1129-7. Dosch, Dee Davidson (2010). A Summer in '69. Strategic Book Publishing. ISBN 978-1-60976-878-2. Archived from the original on 29 December 2016. Retrieved 12 October 2016. Dottin, George (1920). La Langue Gauloise : Grammaire, Textes et Glossaire (in French). Paris: C. Klincksieck. ISBN 978-2-05-100208-0. {{cite book}}: ISBN / Date incompatibility (help) Dregni, Michael (2004). Django : The Life and Music of a Gypsy Legend: The Life and Music of a Gypsy Legend. Oxford University Press. ISBN 978-0-19-803743-9. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Dregni, Michael (2008). Gypsy Jazz : In Search of Django Reinhardt and the Soul of Gypsy Swing: In Search of Django Reinhardt and the Soul of Gypsy Swing. Oxford University Press. ISBN 978-0-19-804262-4. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Du Camp, Maxim (1875). Paris: ses organes, ses fonctions et sa vie jusqu'en 1870. G. Rondeau. ISBN 978-2-910305-02-4. Archived from the original on 1 January 2016. Retrieved 25 October 2015. {{cite book}}: ISBN / Date incompatibility (help) Dutton, Paul Edward (1994). The Politics of Dreaming in the Carolingian Empire. U of Nebraska Press. ISBN 978-0-8032-1653-2. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Singleton, Esther (1912). Paris as Seen and Described by Famous Writers ... Dodd, Mead & Company. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Evans, Graeme (2002). Cultural Planning: An Urban Renaissance?. Routledge. ISBN 978-0-203-45974-4. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Falileyev, Alexander (2010). Dictionary of Continental Celtic Place-names: A Celtic Companion to the Barrington Atlas of the Greek and Roman World. CMCS. ISBN 978-0-9557182-3-6. Fallon, Steve; Williams, Nicola (2008). Paris (7 ed.). Lonely Planet. ISBN 978-1-74059-850-7. Fierro, Alfred (1996). Histoire et dictionnaire de Paris (in French). Lafont. ISBN 978-0-7859-9300-1. Forsyth, David (1867). Marie Antoinette in the Conciergerie, a lecture. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Franck, Dan (2003). Bohemian Paris: Picasso, Modigliani, Matisse, and the Birth of Modern Art. Grove/Atlantic. ISBN 978-0-8021-3997-9. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Fraser, Benjamin; Spalding, Steven D. (2011). Trains, Culture, and Mobility: Riding the Rails. Lexington Books. ISBN 978-0-7391-6749-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Frommer's (2012). AARP Paris 2012. John Wiley & Sons. ISBN 978-1-118-26621-2. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Garrioch, David (2002). The making of revolutionary Paris (electronic resource). University of California Press. ISBN 978-0-520-24327-9. Goebel, Michael (2015). Anti-Imperial Metropolis: Interwar Paris and the Seeds of Third World Nationalism. Cambridge University Press. ISBN 978-1-107-07305-0. Archived from the original on 22 May 2020. Retrieved 7 September 2017. Goldstein, Natalie (2005). Droughts And Heat Waves: A Practical Survival Guide. The Rosen Publishing Group. ISBN 978-1-4042-0536-9. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Goodman, David C. (1999). The European Cities and Technology Reader: Industrial to Post-industrial City. Routledge. ISBN 978-0-415-20082-0. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Gordon, David (2006). Planning Twentieth Century Capital Cities. New York: Routledge. ISBN 978-0-415-28061-7. Haine, W. Scott (1998). The World of the Paris Caf√©: Sociability Among the French Working Class, 1789‚Äì1914. JHU Press. ISBN 978-0-8018-6070-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Hall, Peter; Pain, Kathy (2012). The Polycentric Metropolis: Learning from Mega-City Regions in Europe. Routledge. ISBN 978-1-136-54768-3. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Harding, Vanessa (2002). The Dead and the Living in Paris and London, 1500‚Äì1670. Cambridge University Press. ISBN 978-0-521-81126-2. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Hart, Alan (2004). Going to Live in Paris: How to Live and Work in France's Great Capital. How To Books Ltd. ISBN 978-1-85703-985-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Hargreaves, Alec Gordon; Kelsay, John; Twiss, Sumner B. (2007). Politics and Religion in France and the United States. Rowman & Littlefield Pub Incorporated. ISBN 978-0-7391-1930-3. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Hazan, Eric (2011). The Invention of Paris: A History in Footsteps. Verso Books. ISBN 978-1-84467-800-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Herv√©, Peter (1818). A Chronological Account of the History of France. p. 72. Higonnet, Patrice L. R. (2009). Paris: Capital of the World. Harvard University Press. ISBN 978-0-674-03864-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Horne, Alistair (2003). Seven Ages of Paris. Knopf. ISBN 978-0-679-45481-6. d'Istria, Robert Colonna (2002). Paris and Versailles. Editions Marcus. ISBN 978-2-7131-0202-8. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Jefferson, David (2009). Through the French Canals (12th ed.). A&C Black. ISBN 978-1-4081-0381-4. Archived from the original on 17 April 2021. Retrieved 22 August 2020. Jones, Colin (2006). Paris: Biography of a City. Penguin Adult. ISBN 978-0-14-028292-4. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Jones, Colin (1994). The Cambridge Illustrated History of France. Cambridge University Press. p. 48. ISBN 978-0-521-66992-4. west francia kingdom. Jarrass√©, Dominique (2007). Grammaire des jardins parisiens: de l'h√©ritage des rois aux cr√©ations contemporaines (in French). Parigramme. ISBN 978-2-84096-476-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Kaberry, Rachel; Brown, Amy K. (2001). Paris. Rough Guides. ISBN 978-1-85828-679-2. Korgen, Kathleen Odell; White, Jonathan Michael (2008). The Engaged Sociologist: Connecting the Classroom to the Community. Pine Forge Press. ISBN 978-1-4129-6900-0. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Knapp, Andrew; Wright, Vincent (2006). The Government and Politics of France. Routledge. ISBN 978-0-415-35732-6. Krinsky, Carol Herselle (1996). Synagogues of Europe: Architecture, History, Meaning. Dover Publications. ISBN 978-0-486-29078-2. Lambert, Pierre-Yves (1994). La langue gauloise: description linguistique, commentaire d'inscriptions choisies. Errance. ISBN 978-2-87772-089-2. Lawrence, Rachel; Gondrand, Fabienne (2010). Paris (City Guide) (12th ed.). London: Insight Guides. ISBN 978-981-282-079-2. Leclanche, Maria Spyropoulou (1998). Le refrain dans la chanson fran√ßaise: de Bruant √† Renaud (in French). Presses Univ. Limoges. ISBN 978-2-84287-096-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Madge, Charles; Willmott, Peter (2006). Inner City Poverty in Paris and London. Routledge. ISBN 978-0-415-41762-4. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Masson, Jean-Louis (1984). Provinces, d√©partements, r√©gions: l'organisation administrative de la France. Fernand Lanore. Mehra, Ajay K.; Levy, Rene (2011). The Police, State and Society: Perspectives from India and France. Pearson Education India. ISBN 978-81-317-3145-1. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Metzelthin, Pearl Violette Newfield (1981). Gourmet. Cond√© Nast Publications. Archived from the original on 6 February 2021. Retrieved 25 October 2015. Meunier, Florian (2014). Le Paris du Moyen √Çge (in French). √âditions Ouest-France. ISBN 978-2-7373-6217-0. Michelin (2011). Paris Green Guide Michelin 2012‚Äì2013. Michelin. ISBN 978-2-06-718220-2. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Montclos, Jean-Marie Perouse De (2003). Paris, City of Art. Harry N. Abrams. ISBN 978-0-86565-226-2. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Modood, Tariq; Triandafyllidou, Anna; Zapata-Barrero, Ricard (2012). Multiculturalism, Muslims and Citizenship: A European Approach. Routledge. ISBN 978-1-134-25561-0. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Mroue, Haas (2006). Frommer's Memorable Walks in Paris. John Wiley & Sons. ISBN 978-0-470-03712-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. N√®gre, Ernest (1990). Toponymie g√©n√©rale de la France. Librairie Droz. ISBN 978-2-600-02883-7. Nevez, Catherine Le (2010). Paris Encounter. Lonely Planet. ISBN 978-1-74220-503-8. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Newman, Peter; Thornley, Andy (2002). Urban Planning in Europe: International Competition, National Systems and Planning Projects. Taylor & Francis. ISBN 978-0-203-42794-1. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Oscherwitz, Dayna (2010). Past Forward: French Cinema and the Post-Colonial Heritage. SIU Press. p. 135. ISBN 978-0-8093-8588-1. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Overy, Richard (2006). Why the Allies Won. Pimlico. ISBN 978-1-84595-065-1. Paine, Thomas (1998). Rights of Man, Common Sense, and Other Political Writings. Oxford University Press. ISBN 978-0-19-283557-4. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Papayanis, Nicholas (2004). Planning Paris Before Haussmann. JHU Press. ISBN 978-0-8018-7930-2. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Perry, Gillian (1995). Women Artists and the Parisian Avant-garde: Modernism and 'feminine Art' Art, 1900 to the Late 1920s. Manchester University Press. ISBN 978-0-7190-4165-5. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Perry, Marvin; Chase, Myrna; Jacob, James R.; Jacob, Margaret C.; Von Laue, Theodore H. (2011). Western Civilization: Ideas, Politics, and Society: from 1600: Ideas, Politics, and Society: From the 1600s (10th ed.). Cengage Learning. ISBN 978-1-111-83171-4. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Phillips, Betty Lou (2005). The French Connection. Gibbs Smith. ISBN 978-1-58685-529-1. Rand, Tom (2010). Kick the Fossil Fuel Habit: 10 Clean Technologies to Save Our World. Greenleaf Book Group. ISBN 978-0-9812952-0-6. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Robb, Graham (2010). Parisians: An Adventure History of Paris. Pan Macmillan. ISBN 978-0-330-52254-0. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Robertson, Jamie Cox (2010). A Literary Paris: Hemingway, Colette, Sedaris, and Others on the Uncommon Lure of the City of Light. Krause Publications. ISBN 978-1-4405-0740-3. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Rodgers, Eamonn J. (1999). Encyclopedia of Contemporary Spanish Culture. CRC Press. ISBN 978-0-415-13187-2. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Rougerie, Jacques (2014). La Commune de 1871 (in French). Paris: Presses universitaires de France. ISBN 978-2-13-062078-5. Rousseau, George Sebastian (2004). Yourcenar. Haus Bublishing. ISBN 978-1-904341-28-4. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Ryersson, Scot D.; Yaccarino, Michael Orlando (2004). Infinite variety: the life and legend of the Marchesa Casati. University of Minnesota Press. ISBN 978-0-8166-4520-6. Archived from the original on 5 March 2021. Retrieved 25 October 2015. Sarmant, Thierry (2012). Histoire de Paris: politique, urbanisme, civilisation (in French). Editions Gisserot. ISBN 978-2-7558-0330-3. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Schmidt, Jo√´l (2009). Lut√®ce: Paris, des origines √† Clovis (in French). Perrin. ISBN 978-2-262-03015-5. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Schumacher, Claude (1996). Naturalism and Symbolism in European Theatre 1850‚Äì1918. Cambridge University Press. ISBN 978-0-521-23014-8. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Shack, William A. (2001). Harlem in Montmartre, A Paris Jazz Story between the Great Wars. University of California Press. ISBN 978-0-520-22537-4. Shales, Melissa (2007). Paris. New Holland Publishers. ISBN 978-1-84537-661-1. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Simmer, James (1997). Innovation Networks and Learning Regions?. Routledge. ISBN 978-0-11-702360-4. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Steele, Valerie (1998). Paris Fashion: A Cultural History. Berg. ISBN 978-1-85973-973-0. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Sutherland, Cara (2003). The Statue of Liberty. Barnes & Noble Publishing. ISBN 978-0-7607-3890-0. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Tallett, Frank; Atkin, Nicholas (1991). Religion, Society and Politics in France Since 1789. Continuum. ISBN 978-1-85285-057-9. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Tellier, Luc-Normand (2009). Urban World History: An Economic and Geographical Perspective. PUQ. ISBN 978-2-7605-2209-1. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Tomas, Fran√ßois; Blanc, Jean-No√´l; Bonilla, Mario; IERP (2003). Les grands ensembles: une histoire qui continue. Universit√© de Saint-√âtienne. p. 237. ISBN 978-2-86272-260-3. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Truslove, Roland; de Blowitz, Henri Georges Stephane Adolphe Opper (1911). \"Paris\" . In Chisholm, Hugh (ed.). Encyclop√¶dia Britannica. Vol. 20 (11th ed.). Cambridge University Press. pp. 805‚Äì822. de Vitriaco, Jacobus; Hinnebusch, John Frederick (1972). The Historia Occidentalis of Jacques de Vitry. Saint-Paul. GGKEY:R8CJPKJJK4D. Archived from the original on 11 April 2017. Retrieved 10 April 2017. Weingardt, Richard (2009). Circles in the Sky: The Life and Times of George Ferris. ASCE Publications. ISBN 978-0-7844-1010-3. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Whaley, Joachim (2012). Mirrors of Mortality (Routledge Revivals): Social Studies in the History of Death. Routledge. ISBN 978-1-136-81060-2. Archived from the original on 1 January 2016. Retrieved 25 October 2015. Woolley, Reginald Maxwell (1915). Coronation Rites. Cambridge University Press. p. 106. Yarri, Monique (2008). Rethinking the French City: Architecture, Dwelling, and Display After 1968. Amsterdam, New York: Editions Rodopi B.V. ISBN 978-90-420-2500-4. Archived from the original on 17 April 2021. Retrieved 18 November 2020. Zarka, Yves Charles; Taussig, Sylvie; Fleury, Cynthia (2004). \"Les contours d'une population susceptible d'√™tre musulmane d'apr√®s la filiation\". L'Islam en France (in French). Presses universitaires de France. ISBN 978-2-13-053723-6. Archived from the original on 28 September 2015. Retrieved 25 October 2015. Vincent Cronin (1989). Paris on the Eve, 1900‚Äì1914. New York: HarperCollins. ISBN 978-0-312-04876-1. Vincent Cronin (1994). Paris: City of Light, 1919‚Äì1939. New York: HarperCollins. ISBN 978-0-00-215191-7. Jean Favier (1997). Paris (in French). Fayard. ISBN 978-2-213-59874-1. Jacques Hillairet (2005). Connaissance du Vieux Paris (in French). Rivages. ISBN 978-2-86930-648-6. Colin Jones (2004). Paris: The Biography of a City. New York: Penguin Viking. ISBN 978-0-670-03393-5. Bernard Marchand (1993). Paris, histoire d'une ville : XIXe-XXe si√®cle (in French). Paris: Le Seuil. ISBN 978-2-02-012864-3. Rosemary Wakeman (2009). The Heroic City: Paris, 1945‚Äì1958. University of Chicago Press. ISBN 978-0-226-87023-6. Official website (in French) v t e Administration Airports Charles de Gaulle Orly Charles de Gaulle Orly Archdiocese Architecture era of absolutism tallest buildings era of absolutism tallest buildings Bridges Culture music music Cycling V√©lib' M√©tropole V√©lib' M√©tropole Economy Education History (timeline) Landmarks Libraries Mayors Museums list list Squares Topography Transport M√©tro Transilien Tramways RER M√©tro Transilien Tramways RER Tourism syndrome syndrome Grand Paris Paris metropolitan area √éle-de-France France v t e Paris Marseille Lyon Toulouse Nice Nantes Montpellier Strasbourg Bordeaux Lille Rennes Toulon Reims Saint-√âtienne Le Havre Villeurbanne Dijon Angers Grenoble Saint-Denis, R√©union N√Æmes Saint-Denis, Seine-Saint-Denis Aix-en-Provence Clermont-Ferrand Le Mans Brest Tours Amiens Annecy Limoges Metz Perpignan Boulogne-Billancourt Besan√ßon Orl√©ans Rouen Montreuil Caen Argenteuil Saint-Paul Mulhouse Nancy Complete list v t e Arc de Triomphe Arc de Triomphe du Carrousel Ar√®nes de Lut√®ce Bourse Catacombs Conciergerie Eiffel Tower Gare d'Austerlitz Gare de l'Est Gare de Lyon Gare du Nord Gare Montparnasse Gare Saint-Lazare Grand Palais and Petit Palais Institut de France Jeanne d'Arc Les Invalides Napoleon's tomb Napoleon's tomb Louvre Pyramid Luxor Obelisk Od√©on Op√©ra Bastille Op√©ra Garnier Panth√©on Philharmonie de Paris Place Diana Flame of Liberty Flame of Liberty Porte Saint-Denis Porte Saint-Martin Sorbonne Tour Montparnasse Army Museum Biblioth√®que nationale Carnavalet Centre Pompidou Cit√© des Sciences et de l'Industrie Galerie nationale du Jeu de Paume Louis Vuitton Foundation Mus√©e des Arts d√©coratifs Mus√©e des Arts et M√©tiers Mus√©e d'Art et d'Histoire du Juda√Øsme Mus√©e d'Art Moderne de Paris Maison de Balzac Mus√©e Bourdelle Mus√©e de la Cin√©math√®que Mus√©e Cognacq-Jay Mus√©e Gr√©vin Mus√©e Guimet Maison de Victor Hugo Mus√©e Jacquemart-Andr√© Mus√©e du Louvre Mus√©e Marmottan Monet Mus√©e de la Vie romantique Mus√©e de Montmartre Mus√©e National d'Art Moderne Mus√©e national Eug√®ne Delacroix Mus√©e national Gustave Moreau Mus√©e national des Monuments Fran√ßais Mus√©um national d'histoire naturelle Mus√©e de Cluny ‚Äì Mus√©e national du Moyen √Çge Mus√©e de l'Orangerie Mus√©e d'Orsay Mus√©e Pasteur Mus√©e Picasso Mus√©e du Quai Branly Mus√©e Rodin Palais de la L√©gion d'Honneur Mus√©e de la L√©gion d'honneur Mus√©e de la L√©gion d'honneur Palais de Tokyo Alexander Nevsky Cathedral American Cathedral American Church Armenian Cathedral of St. John the Baptist Chapelle expiatoire Grand Mosque Grand Synagogue Synagogue de Nazareth La Madeleine Notre-Dame de Paris Notre-Dame-de-Bonne-Nouvelle Notre-Dame-de-Lorette Notre-Dame-des-Victoires Sacr√©-C≈ìur Saint Ambroise Saint-Augustin Saint-√âtienne-du-Mont Saint-Eustache Saint-Fran√ßois-Xavier Saint-Germain-des-Pr√©s Saint-Germain l'Auxerrois Saint-Gervais-Saint-Protais Tour Saint-Jacques Saint-Jean de Montmartre Saint-Paul-Saint-Louis Saint-Pierre de Montmartre Saint-Roch Saint-Sulpice Saint-Vincent-de-Paul Sainte-Chapelle Sainte-Clotilde Sainte-Trinit√© Temple du Marais Val-de-Gr√¢ce √âlys√©e Palace H√¥tel de Beauvais H√¥tel de Charost H√¥tel de Crillon H√¥tel d'Estr√©es H√¥tel de la Pa√Øva H√¥tel de Pontalba H√¥tel de Sens H√¥tel de Soubise H√¥tel de Sully H√¥tel de Ville H√¥tel Lambert H√¥tel Matignon Luxembourg Palace Petit Luxembourg Petit Luxembourg Palais Bourbon Palais de Justice Palais de la Cit√© Palais de la Cit√© Palais-Royal Avenue de l'Op√©ra Avenue Foch Avenue George V Boulevard de la Madeleine Boulevard de S√©bastopol Canal de l'Ourcq Canal Saint-Martin Champ de Mars Champs-√âlys√©es Covered passages Galerie V√©ro-Dodat Choiseul Panoramas Galerie Vivienne Havre Jouffroy Brady Galerie V√©ro-Dodat Choiseul Panoramas Galerie Vivienne Havre Jouffroy Brady Latin Quarter Le Marais Montmartre Montparnasse Place Diana Place Dauphine Place de la Bastille Place de la Concorde Place de la Nation Place de la R√©publique Place des √âmeutes-de-Stonewall Place des √âtats-Unis Place des Pyramides Place des Victoires Place des Vosges Place du Carrousel Place du Ch√¢telet Place du Tertre Place Saint-Michel Place Vend√¥me Pont Alexandre III Pont d'I√©na Pont de Bir-Hakeim Pont des Arts Pont Neuf Port du Louvre Rive Gauche Rue Basse Rue Bonaparte Rue Charlemagne Rue d'Argenteuil Rue de la Ferronnerie Rue de la Paix Rue de la Sourdi√®re Rue de Montmorency Rue de Richelieu Rue de Rivoli Rue de Vaugirard Rue des Francs-Bourgeois Rue des Lombards Rue du Faubourg Saint-Honor√© Rue Elz√©vir Rue Foyatier Rue Moli√®re Rue Montorgueil Rue Radziwill Rue Rambuteau Rue Mond√©tour Rue Pastourelle Rue des Rosiers Rue Saint-Honor√© Rue Saint-Denis Rue Sainte-Anne Saint-Germain-des-Pr√©s Trocad√©ro Viaduc d'Austerlitz Bois de Boulogne Jardin d'Acclimatation Jardin d'Acclimatation Bois de Vincennes Parc floral Parc floral Jardin du Luxembourg Parc Andr√©-Citro√´n Parc Clichy-Batignolles Parc de Belleville Parc de Bercy Parc de la Butte-du-Chapeau-Rouge Parc des Buttes Chaumont Parc Georges-Brassens Parc Monceau Parc Montsouris Tuileries Garden Coul√©e verte Ren√©-Dumont Accor Arena Auteuil Hippodrome Halle Georges Carpentier Longchamp Hippodrome Parc des Princes Piscine Molitor Porte de La Chapelle Arena Stade Jean Bouin Stade Pershing Stade Pierre de Coubertin Stade Roland Garros Stade S√©bastien Charl√©ty V√©lodrome de Vincennes Vincennes Hippodrome Montmartre Cemetery Montparnasse Cemetery Passy Cemetery P√®re Lachaise Cemetery Oscar Wilde's tomb Oscar Wilde's tomb Picpus Cemetery Basilica of Saint-Denis Ch√¢teau d'√âcouen Ch√¢teau de Chantilly Ch√¢teau de Fontainebleau Ch√¢teau de Malmaison Ch√¢teau de Rambouillet Ch√¢teau de Saint-Germain-en-Laye Ch√¢teau de Sceaux Ch√¢teau and Gardens of Versailles (Grand Trianon and Petit Trianon, including the Fresh pavilion) Ch√¢teau de Vincennes La D√©fense Grande Arche Paris La D√©fense Arena Grande Arche Paris La D√©fense Arena Disneyland Paris Disneyland Park Walt Disney Studios Park Disneyland Park Walt Disney Studios Park Explorad√¥me Fort Mont-Val√©rien M√©morial de la France combattante Suresnes American Cemetery and Memorial M√©morial de la France combattante Suresnes American Cemetery and Memorial France Miniature Mus√©e de l'air et de l'espace Mus√©e Fragonard d'Alfort Parc Ast√©rix Parc de Saint-Cloud Provins La Roche-Guyon S√®vres ‚Äì Cit√© de la c√©ramique Stade de France Vaux-le-Vicomte Bastille Day military parade D√Æner en Blanc F√™te de la Musique Nuit Blanche Paris Air Show Paris Fashion Week Paris-Plages Republican Guard Solidays Axe historique Bateau-Lavoir Bateaux Mouches Caf√© des 2 Moulins Caf√© Procope Folies Berg√®re Fountains in Paris La Ruche Les Deux Magots Maxim's Moulin de la Galette Moulin Rouge Paris M√©tro entrances Montmartre Funicular entrances Montmartre Funicular Paris Mus√©es Paris syndrome Paris Zoological Park Pyramide invers√©e World Heritage Centre List of tourist attractions in Paris Art in Paris Paris syndrome v t e RATP Tvm Tvm Noctilien CDGVAL Orlyval Montmartre Funicular Grand Paris Express CDG Express Line 3bis and Line 7bis merger IDFM RATP SNCF Optile Keolis Transdev Navigo card Public transport fares in the √éle-de-France Versement transport List of Paris M√©tro stations Architecture Ghost stations Architecture Ghost stations Lists of railway stations RER Transilien in Paris RER Transilien in Paris List of tram stops v t e Paris Argenteuil Boulogne-Billancourt Montreuil Saint-Denis Asni√®res-sur-Seine Aubervilliers Aulnay-sous-Bois Champigny-sur-Marne Colombes Courbevoie Cr√©teil Nanterre Rueil-Malmaison Versailles Vitry-sur-Seine Antony Le Blanc-Mesnil Bobigny Bondy Cergy Chelles Clamart Clichy Corbeil-Essonnes Drancy √âpinay-sur-Seine √âvry-Courcouronnes Fontenay-sous-Bois Issy-les-Moulineaux Ivry-sur-Seine Levallois-Perret Maisons-Alfort Massy Meaux Neuilly-sur-Seine Noisy-le-Grand Pantin Saint-Maur-des-Foss√©s Saint-Ouen-sur-Seine Sarcelles Sartrouville Sevran Villejuif Alfortville Athis-Mons Bagneux Bagnolet Bezons Bois-Colombes Br√©tigny-sur-Orge Brunoy Bussy-Saint-Georges Cachan Champs-sur-Marne Charenton-le-Pont Ch√¢tenay-Malabry Ch√¢tillon Chatou Le Chesnay-Rocquencourt Choisy-le-Roi Clichy-sous-Bois Conflans-Sainte-Honorine Cormeilles-en-Parisis La Courneuve Creil Draveil Dreux Eaubonne √âlancourt Ermont √âtampes Fontenay-aux-Roses Franconville Fresnes Gagny La Garenne-Colombes Garges-l√®s-Gonesse Gennevilliers Gonesse Goussainville Grigny Guyancourt L'Ha√ø-les-Roses Herblay-sur-Seine Houilles Limeil-Br√©vannes Livry-Gargan Malakoff Mantes-la-Jolie Melun Meudon Montfermeil Montigny-le-Bretonneux Montrouge Les Mureaux Neuilly-sur-Marne Nogent-sur-Marne Noisy-le-Sec Palaiseau Le Perreux-sur-Marne Plaisir Le Plessis-Robinson Poissy Pontault-Combault Pontoise Puteaux Rambouillet Ris-Orangis Romainville Rosny-sous-Bois Saint-Cloud Saint-Germain-en-Laye Sainte-Genevi√®ve-des-Bois Sannois Savigny-sur-Orge Savigny-le-Temple Stains Sucy-en-Brie Suresnes Taverny Thiais Trappes Tremblay-en-France Les Ulis Vanves Vigneux-sur-Seine Villemomble Villeneuve-Saint-Georges Villeparisis Villepinte Villiers-le-Bel Villiers-sur-Marne Vincennes Viry-Ch√¢tillon Yerres 1,792 other communes v t e Three arrondissements 21 cantons 194 communes 10 legislative constituencies 10 intercommunalities Three arrondissements 23 cantons 36 communes 13 legislative constituencies 4 EPTs One departmental arrondissement 1 commune 20 municipal arrondissements 80 administrative quarters 18 legislative constituencies 1 intercommunality Five arrondissements 23 cantons 507 communes 11 legislative constituencies 21 intercommunalities Three arrondissements 21 cantons 40 communes 12 legislative constituencies 4 EPTs Three arrondissements 25 cantons 47 communes 11 legislative constituencies 3 EPTs Three arrondissements 21 cantons 184 communes 10 legislative constituencies 10 intercommunalities Four arrondissements 21 cantons 259 communes 12 legislative constituencies 10 intercommunalities v t e Bourg-en-Bresse (Ain) Laon (Aisne) Moulins (Allier) Digne-les-Bains (Alpes-de-Haute-Provence) Gap (Hautes-Alpes) Nice (Alpes-Maritimes) Privas (Ard√®che) Charleville-M√©zi√®res (Ardennes) Foix (Ari√®ge) Troyes (Aube) Carcassonne (Aude) Rodez (Aveyron) Marseille (Bouches-du-Rh√¥ne) Caen (Calvados) Aurillac (Cantal) Angoul√™me (Charente) La Rochelle (Charente-Maritime) Bourges (Cher) Tulle (Corr√®ze) Ajaccio (Corse-du-Sud) Bastia (Haute-Corse) Dijon (C√¥te-d'Or) Saint-Brieuc (C√¥tes-d'Armor) Gu√©ret (Creuse) P√©rigueux (Dordogne) Besan√ßon (Doubs) Valence (Dr√¥me) √âvreux (Eure) Chartres (Eure-et-Loir) Quimper (Finist√®re) N√Æmes (Gard) Toulouse (Haute-Garonne) Auch (Gers) Bordeaux (Gironde) Montpellier (H√©rault) Rennes (Ille-et-Vilaine) Ch√¢teauroux (Indre) Tours (Indre-et-Loire) Grenoble (Is√®re) Lons-le-Saunier (Jura) Mont-de-Marsan (Landes) Blois (Loir-et-Cher) Saint-√âtienne (Loire) Le Puy-en-Velay (Haute-Loire) Nantes (Loire-Atlantique) Orl√©ans (Loiret) Cahors (Lot) Agen (Lot-et-Garonne) Mende (Loz√®re) Angers (Maine-et-Loire) Saint-L√¥ (Manche) Ch√¢lons-en-Champagne (Marne) Chaumont (Haute-Marne) Laval (Mayenne) Nancy (Meurthe-et-Moselle) Bar-le-Duc (Meuse) Vannes (Morbihan) Metz (Moselle) Nevers (Ni√®vre) Lille (Nord) Beauvais (Oise) Alen√ßon (Orne) Arras (Pas-de-Calais) Clermont-Ferrand (Puy-de-D√¥me) Pau (Pyr√©n√©es-Atlantiques) Tarbes (Hautes-Pyr√©n√©es) Perpignan (Pyr√©n√©es-Orientales) Strasbourg (Bas-Rhin) Colmar (Haut-Rhin) Lyon (Rh√¥ne) Vesoul (Haute-Sa√¥ne) M√¢con (Sa√¥ne-et-Loire) Le Mans (Sarthe) Chamb√©ry (Savoie) Annecy (Haute-Savoie) Paris (Paris) Rouen (Seine-Maritime) Melun (Seine-et-Marne) Versailles (Yvelines) Niort (Deux-S√®vres) Amiens (Somme) Albi (Tarn) Montauban (Tarn-et-Garonne) Toulon (Var) Avignon (Vaucluse) La Roche-sur-Yon (Vend√©e) Poitiers (Vienne) Limoges (Haute-Vienne) √âpinal (Vosges) Auxerre (Yonne) Belfort (Territoire de Belfort) √âvry-Courcouronnes (Essonne) Nanterre (Hauts-de-Seine) Bobigny (Seine-Saint-Denis) Cr√©teil (Val-de-Marne) Cergy, Pontoise (Val-d'Oise) Basse-Terre (Guadeloupe) Fort-de-France (Martinique) Cayenne (French Guiana) Saint-Denis (R√©union) Mamoudzou (Mayotte) v t e Lyon (Auvergne-Rh√¥ne-Alpes) Dijon (Bourgogne-Franche-Comt√©) Rennes (Brittany) Orl√©ans (Centre-Val de Loire) Ajaccio (Corsica) Strasbourg (Grand Est) Lille (Hauts-de-France) Paris (√éle-de-France) Rouen (Normandy) Bordeaux (Nouvelle-Aquitaine) Toulouse (Occitania) Nantes (Pays de la Loire) Marseille (Provence-Alpes-C√¥te d'Azur) Cayenne (French Guiana) Basse-Terre (Guadeloupe) Fort-de-France (Martinique) Mamoudzou (Mayotte) Saint Denis (R√©union) v t e 01 Ain 02 Aisne 03 Allier 04 Alpes-de-Haute-Provence 05 Hautes-Alpes 06 Alpes-Maritimes 07 Ard√®che 08 Ardennes 09 Ari√®ge 10 Aube 11 Aude 12 Aveyron 13 Bouches-du-Rh√¥ne 14 Calvados 15 Cantal 16 Charente 17 Charente-Maritime 18 Cher 19 Corr√®ze 2A Corse-du-Sud 2B Haute-Corse 21 C√¥te-d'Or 22 C√¥tes-d'Armor 23 Creuse 24 Dordogne 25 Doubs 26 Dr√¥me 27 Eure 28 Eure-et-Loir 29 Finist√®re 30 Gard 31 Haute-Garonne 32 Gers 33 Gironde 34 H√©rault 35 Ille-et-Vilaine 36 Indre 37 Indre-et-Loire 38 Is√®re 39 Jura 40 Landes 41 Loir-et-Cher 42 Loire 43 Haute-Loire 44 Loire-Atlantique 45 Loiret 46 Lot 47 Lot-et-Garonne 48 Loz√®re 49 Maine-et-Loire 50 Manche 51 Marne 52 Haute-Marne 53 Mayenne 54 Meurthe-et-Moselle 55 Meuse 56 Morbihan 57 Moselle 58 Ni√®vre 59 Nord 60 Oise 61 Orne 62 Pas-de-Calais 63 Puy-de-D√¥me 64 Pyr√©n√©es-Atlantiques 65 Hautes-Pyr√©n√©es 66 Pyr√©n√©es-Orientales 67 Bas-Rhin 68 Haut-Rhin 69D Rh√¥ne 70 Haute-Sa√¥ne 71 Sa√¥ne-et-Loire 72 Sarthe 73 Savoie 74 Haute-Savoie 76 Seine-Maritime 77 Seine-et-Marne 78 Yvelines 79 Deux-S√®vres 80 Somme 81 Tarn 82 Tarn-et-Garonne 83 Var 84 Vaucluse 85 Vend√©e 86 Vienne 87 Haute-Vienne 88 Vosges 89 Yonne 90 Territoire de Belfort 91 Essonne 92 Hauts-de-Seine 93 Seine-Saint-Denis 94 Val-de-Marne 95 Val-d'Oise 971 Guadeloupe 972 Martinique (territorial collectivity) 973 French Guiana (territorial collectivity) 974 R√©union 976 Mayotte 69M Lyon (collectivity with special status) 75 Paris (collectivity with special status) 975 Saint Pierre and Miquelon (Overseas collectivity) Definitions from Wiktionary Media from Commons News from Wikinews Quotations from Wikiquote Texts from Wikisource Textbooks from Wikibooks Resources from Wikiversity Travel guides from Wikivoyage Data from Wikidata ISNI VIAF FAST WorldCat Germany United States France BnF data Japan Italy Australia Czech Republic Spain Norway Taiwan Latvia Chile Argentina Israel Catalonia MusicBrainz area CiNii KulturNav Victoria IdRef Historical Dictionary of Switzerland NARA2 2 SNAC Paris Capitals in Europe Catholic pilgrimage sites Cities in France Cities in √éle-de-France Companions of the Liberation Departments of √éle-de-France Culture of Europe Culture of France Gallia Lugdunensis Populated places established in the 3rd century BC Prefectures in France Pages using gadget WikiMiniAtlas Pages using the Phonos extension CS1 French-language sources (fr) Webarchive template wayback links Articles with French-language sources (fr) CS1 Italian-language sources (it) Articles with short description Short description is different from Wikidata Good articles Wikipedia indefinitely semi-protected pages EngvarB from July 2018 Use dmy dates from August 2024 Pages using infobox settlement with bad settlement type Articles containing French-language text Pages using multiple image with auto scaled images Articles containing Latin-language text Pages using infobox settlement with possible motto list Coordinates on Wikidata Pages using infobox settlement with possible demonym list Pages using infobox settlement with image map1 but not image map Pages with French IPA Pages including recorded pronunciations All articles with failed verification Articles with failed verification from November 2024 All pages needing factual verification Wikipedia articles needing factual verification from June 2019 All articles with incomplete citations Articles with incomplete citations from November 2023 Articles with Italian-language sources (it) CS1 errors: ISBN date Wikipedia articles incorporating a citation from the 1911 Encyclopaedia Britannica with Wikisource reference Pages using Sister project links with wikidata namespace mismatch Pages using Sister project links with hidden wikidata Pages using the Kartographer extension\nAc√®h –ê–¥—ã–≥—ç–±–∑—ç –ê–¥—ã–≥–∞–±–∑—ç Afrikaans Alemannisch ·ä†·àõ·à≠·äõ Anar√¢≈°kiel√¢ ‡§Ö‡§Ç‡§ó‡§ø‡§ï‡§æ √Ünglisc ÿßŸÑÿπÿ±ÿ®Ÿäÿ© Aragon√©s ‹ê‹™‹°‹ù‹ê ‘±÷Ä’•÷Ç’¥’ø’°’∞’°’µ’•÷Ä’ß’∂ Arm√£neashti Arpetan ‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ Asturianu Atikamekw ‡§Ö‡§µ‡§ß‡•Ä Ava√±e'·∫Ω –ê–≤–∞—Ä Aymar aru Az…ôrbaycanca ÿ™€Üÿ±⁄©ÿ¨Ÿá Basa Bali Bamanankan ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ Èñ©ÂçóË™û / B√¢n-l√¢m-g√∫ –ë–∞—à“°–æ—Ä—Ç—Å–∞ –ë–µ–ª–∞—Ä—É—Å–∫–∞—è –ë–µ–ª–∞—Ä—É—Å–∫–∞—è (—Ç–∞—Ä–∞—à–∫–µ–≤—ñ—Ü–∞) ‡§≠‡•ã‡§ú‡§™‡•Å‡§∞‡•Ä Bikol Central Bislama –ë—ä–ª–≥–∞—Ä—Å–∫–∏ Boarisch ‡Ωñ‡Ωº‡Ωë‡ºã‡Ω°‡Ω≤‡ΩÇ Bosanski Brezhoneg –ë—É—Ä—è–∞–¥ Catal√† –ß”ë–≤–∞—à–ª–∞ Cebuano ƒåe≈°tina Chamoru Chavacano de Zamboanga Chi-Chewa ChiShona ChiTumbuka Corsu Cymraeg Dagbanli Dansk ÿßŸÑÿØÿßÿ±ÿ¨ÿ© Davvis√°megiella Deitsch Deutsch Din√© bizaad Dolnoserbski ‡§°‡•ã‡§ü‡•á‡§≤‡•Ä ‡Ωá‡Ωº‡ΩÑ‡ºã‡ΩÅ Eesti ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ Emili√†n e rumagn√≤l –≠—Ä–∑—è–Ω—å Espa√±ol Esperanto Estreme√±u Euskara E ãegbe ŸÅÿßÿ±ÿ≥€å Fiji Hindi F√∏royskt Fran√ßais Frysk Fulfulde Furlan Gaeilge Gaelg Gagauz G√†idhlig Galego –ì”Ä–∞–ª–≥”Ä–∞–π Ë¥õË™û ⁄Ø€åŸÑ⁄©€å ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä êå≤êåøêçÑêåπêçÉêå∫ ‡§ó‡•ã‡§Ç‡§Ø‡§ö‡•Ä ‡§ï‡•ã‡§Ç‡§ï‡§£‡•Ä / G√µychi Konknni Gungbe ÂÆ¢ÂÆ∂Ë™û / Hak-k√¢-ng√Æ ÌïúÍµ≠Ïñ¥ Hausa Hawai ªi ’Ä’°’µ’•÷Ä’•’∂ ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä Hornjoserbsce Hrvatski Ido Ilokano Bahasa Indonesia Interlingua Interlingue ·êÉ·ìÑ·íÉ·ëé·ëê·ë¶ / inuktitut –ò—Ä–æ–Ω IsiXhosa IsiZulu √çslenska Italiano ◊¢◊ë◊®◊ô◊™ Jawa Kab…©y…õ Kalaallisut ‡≤ï‡≤®‡≥ç‡≤®‡≤° Kapampangan –ö—ä–∞—Ä–∞—á–∞–π-–º–∞–ª–∫—ä–∞—Ä ·É•·Éê·É†·Éó·É£·Éö·Éò ‡§ï‡•â‡§∂‡•Å‡§∞ / ⁄©Ÿ≤ÿ¥Ÿèÿ± Kasz√´bsczi “ö–∞–∑–∞“õ—à–∞ Kernowek Ikinyarwanda Ikirundi Kiswahili –ö–æ–º–∏ Kongo Kotava Krey√≤l ayisyen Kriy√≤l gwiyannen Kurd√Æ –ö—ã—Ä–≥—ã–∑—á–∞ –ö—ã—Ä—ã–∫ –º–∞—Ä—ã Ladin Ladino ‡∫•‡∫≤‡∫ß Latgaƒºu Latina Latvie≈°u L√´tzebuergesch –õ–µ–∑–≥–∏ Lietuvi≈≥ Ligure Limburgs Ling√°la Lingua Franca Nova Livvinkarjala La .lojban. Luganda Lombard Magyar ‡§Æ‡•à‡§•‡§ø‡§≤‡•Ä –ú–∞–∫–µ–¥–æ–Ω—Å–∫–∏ Malagasy ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç Malti MƒÅori ‡§Æ‡§∞‡§æ‡§†‡•Ä ·Éõ·Éê·É†·Éí·Éê·Éö·É£·É†·Éò ŸÖÿµÿ±Ÿâ ŸÖÿßÿ≤Ÿêÿ±ŸàŸÜ€å Bahasa Melayu Minangkabau Èñ©Êù±Ë™û / M√¨ng-dƒïÃ§ng-ng·π≥ÃÑ Mirand√©s –ú–æ–∫—à–µ–Ω—å –ú–æ–Ω–≥–æ–ª ·Äô·Äº·Äî·Ä∫·Äô·Ä¨·Äò·Ä¨·Äû·Ä¨ Na Vosa Vakaviti Nederlands Nedersaksies ‡§®‡•á‡§™‡§æ‡§≤‡•Ä ‡§®‡•á‡§™‡§æ‡§≤ ‡§≠‡§æ‡§∑‡§æ Êó•Êú¨Ë™û Napulitano –ù–æ—Ö—á–∏–π–Ω Nordfriisk Norsk bokm√•l Norsk nynorsk Nouormand Novial Occitan –û–ª—ã–∫ –º–∞—Ä–∏–π ‡¨ì‡¨°‡¨º‡¨ø‡¨Ü Oromoo O ªzbekcha / —û–∑–±–µ–∫—á–∞ ‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä ŸæŸÜÿ¨ÿßÿ®€å Papiamentu Ÿæ⁄öÿ™Ÿà Patois –ü–µ—Ä–µ–º –∫–æ–º–∏ ·ûó·û∂·ûü·û∂·ûÅ·üí·ûò·üÇ·ûö Picard Piemont√®is Pinayuanan Tok Pisin Plattd√º√ºtsch Polski Œ†ŒøŒΩœÑŒπŒ±Œ∫Œ¨ Portugu√™s Qaraqalpaqsha Qƒ±rƒ±mtatarca Reo tahiti Rom√¢nƒÉ Romani ƒçhib Rumantsch Runa Simi –†—É—Å–∏–Ω—å—Å–∫—ã–π –†—É—Å—Å–∫–∏–π –°–∞—Ö–∞ —Ç—ã–ª–∞ Gagana Samoa S√§ng√∂ ·±•·±ü·±±·±õ·±ü·±≤·±§ Sardu Scots Seeltersk Sesotho Shqip Sicilianu ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω Simple English ÿ≥ŸÜ⁄åŸä Slovenƒçina Sloven≈°ƒçina –°–ª–æ–≤—£–Ω—å—Å–∫—ä / ‚∞î‚∞é‚∞ë‚∞Ç‚∞°‚∞ê‚∞†‚∞î‚∞ç‚∞ü ≈öl≈Ønski Soomaaliga ⁄©Ÿàÿ±ÿØ€å Sranantongo –°—Ä–ø—Å–∫–∏ / srpski Srpskohrvatski / —Å—Ä–ø—Å–∫–æ—Ö—Ä–≤–∞—Ç—Å–∫–∏ Sunda Suomi Svenska Tagalog ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç Tacl·∏•it Taqbaylit Tarand√≠ne –¢–∞—Ç–∞—Ä—á–∞ / tatar√ßa ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å Tetun ‡πÑ‡∏ó‡∏¢ –¢–æ“∑–∏–∫”£ Lea faka-Tonga Tsets√™hest√¢hese T√ºrk√ße T√ºrkmen√ße Twi Tyap –¢—ã–≤–∞ –¥—ã–ª –£–¥–º—É—Ä—Ç –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ ÿßÿ±ÿØŸà ÿ¶€áŸäÿ∫€áÿ±⁄Ü€ï / Uyghurche Vahcuengh V√®neto Veps√§n kel‚Äô Ti·∫øng Vi·ªát Volap√ºk V√µro Walon ÊñáË®Ä West-Vlams Winaray Wolof Âê¥ËØ≠ ◊ô◊ô÷¥◊ì◊ô◊© Yor√πb√° Á≤µË™û Zazaki Ze√™uws ≈Ωemaitƒó≈°ka ‰∏≠Êñá Betawi F…îÃÄngb√® Kumoring Yerwa Kanuri Nupe –†—É—Å–∫–∏ Tolƒ±≈üi ‚µú‚¥∞‚µé‚¥∞‚µ£‚µâ‚µñ‚µú ‚µú‚¥∞‚µè‚¥∞‚µ°‚¥∞‚µ¢‚µú Edit links Article Talk Read View source View history Read View source View history What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Download as PDF Printable version Wikimedia Commons Wikinews Wikiquote Wikivoyage Wikidata item Coordinates 48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E / 48.85667¬∞N 2.35222¬∞E / 48.85667; 2.35222 Paris (disambiguation) Parisien (disambiguation) Capital city commune department Eiffel Tower Seine Tour Saint-Jacques Notre-Dame Sacr√©-C≈ìur Panth√©on Arc de Triomphe Palais Garnier Louvre Flag Coat of arms Fluctuat nec mergitur 48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E / 48.85667¬∞N 2.35222¬∞E / 48.85667; 2.35222 France Region √éle-de-France Department Arrondissement Intercommunality M√©tropole du Grand Paris Subdivisions arrondissements Anne Hidalgo [1] PS [2] [2] [2] [3] 9th 1st Urban [2] Metro [2] Demonym(s) en fr Time zone UTC+01:00 CET DST UTC+02:00 CEST INSEE 75056 paris.fr [pa Åi] ‚ìò capital largest city France [3] [4] fourth-most populous city European Union 30th most densely populated city in the world [5] finance diplomacy commerce culture fashion gastronomy arts sciences [6] √éle-de-France [3] GDP PPP [7] [8] Economist Intelligence Unit [9] Charles de Gaulle Airport third-busiest airport in Europe Orly Airport [10] [11] sustainable transportation [12] Sustainable Transport Award [13] Louvre [14] Mus√©e d'Orsay Mus√©e Marmottan Monet Mus√©e de l'Orangerie Impressionist Pompidou Centre Mus√©e National d'Art Moderne Mus√©e Rodin Mus√©e Picasso modern contemporary art Seine UNESCO World Heritage Site [15] United Nations OECD OECD Development Centre International Bureau of Weights and Measures International Energy Agency International Federation for Human Rights European Space Agency European Banking Authority European Securities and Markets Authority Paris Saint-Germain rugby union Stade Fran√ßais Stade de France 1998 FIFA World Cup Saint-Denis French Open Grand Slam Roland Garros 1900 1924 2024 Summer Olympics 1938 1998 2019 FIFA Women's World Cup 2007 2023 1954 1972 Rugby League World Cups 1960 1984 2016 Tour de France Avenue des Champs-√âlys√©es Wiktionary oppidum Julius Caesar Lutetia Parisii [16] [17] Celtic [18] [19] [17] Parisii Gallic Iron Age Roman period [20] ethnonym Xavier Delamarre [20] Alfred Holder Welsh Proto-Celtic [21] Pierre-Yves Lambert Old Irish [17] Paris Greek mythology [pa Åizj…õÃÉ] ‚ìò [pa Åi…°o] ‚ìò [note 1] [22] History of Paris Timeline of Paris Lutetia Parisii [23] [24] Seine √éle de la Cit√© [25] [26] Parisii Julius Caesar conquered Paris Basin Roman Republic Left Bank [27] Lutetia amphitheatre [28] Western Roman Empire Latin [29] Christianity Denis Montmartre Basilica of Saint-Denis [30] Clovis the Frank Merovingian dynasty [31] Franks Francien √éle de la Cit√© sacking by Vikings in 845 Siege of Paris (885‚Äì886) Count of Paris Odo of France West Francia [32] Capetian Hugh Capet Duke of the Franks [30] Paris in the Middle Ages Paris in the 16th century Paris in the 17th century Palais de la Cit√© Sainte-Chapelle Tr√®s Riches Heures du duc de Berry [33] Palais de la Cit√© Louis VII Maurice de Sully Notre Dame Cathedral [34] Les Halles √éle de la Cit√© Place de Gr√®ve (Place de l'H√¥tel de Ville) [35] Philip Augustus Louvre [36] University of Paris [37] [33] [38] [39] H√¥tel de Sens Hundred Years' War Burgundian forces Henry V of England [40] Joan of Arc [41] French Wars of Religion Catholic League St. Bartholomew's Day massacre [42] [43] Henry IV Pont Neuf Tuileries Palace Place des Vosges Les Halles [44] Cardinal Richelieu Louis XIII College of Sorbonne Palais-Cardinal Palais-Royal [45] Jan Janssonius Fronde Louis XIV Versailles Com√©die-Fran√ßaise French Academy of Sciences city walls Grands Boulevards [46] Coll√®ge des Quatre-Nations Place Vend√¥me Place des Victoires Les Invalides [47] Paris in the 18th century Paris during the Second Empire Haussmann's renovation of Paris [48] Champs-√âlys√©es √âtoile [49] Faubourg Saint-Antoine [50] Bastille Jean-Pierre Hou√´l Panth√©on Rive Gauche Age of Enlightenment Diderot D'Alembert Encyclop√©die Montgolfier Brothers hot air balloon [51] Garnerin French Revolution Invalides stormed the Bastille Paris Commune Mayor Jean Sylvain Bailly [52] Louis XVI brought to Paris guillotine Reign of Terror [53] nationalised [54] 9 November 1799 Napoleon Bonaparte [55] [56] Arc de Triomphe Canal de l'Ourcq P√®re Lachaise Cemetery Pont des Arts [56] Eiffel Tower Restoration July Revolution July Column Place de la Bastille Louis Philippe I provinces [56] popular uprising Napoleon III Georges-Eug√®ne Haussmann Bois de Boulogne Bois de Vincennes [57] [57] Franco-Prussian War Prussian Army Paris Commune Bloody Week [58] 1889 Universal Exposition 1900 Universal Exposition Pont Alexandre III Grand Palais Petit Palais Paris M√©tro [59] Naturalism √âmile Zola Symbolism Charles Baudelaire Paul Verlaine Impressionism Courbet Manet Monet Renoir [60] Paris in the Belle √âpoque Paris during the First World War Paris between the Wars (1919‚Äì1939) Paris in World War II History of Paris (1946‚Äì2000) [61] Pablo Picasso Modigliani Henri Matisse Fauvism Cubism abstract art [62] [63] Marcel Proust [64] First World War First Battle of the Marne Zeppelins long-range guns [65] Les Ann√©es Folles Ernest Hemingway Igor Stravinsky James Joyce Josephine Baker Eva Kotchever Henry Miller Ana√Øs Nin Sidney Bechet [66] Salvador Dal√≠ [67] peace conference French colonies Ho Chi Minh Zhou Enlai L√©opold S√©dar Senghor [68] Charles de Gaulle open city [69] Vel d'Hiv Auschwitz [70] [71] French 2nd Armoured Division 4th Infantry Division United States Army Charles de Gaulle H√¥tel de Ville [72] Algerian War FLN violent confrontations Organisation arm√©e secr√®te [73] [74] Sorbonne Latin Quarter May 1968 events in France [75] Jacques Chirac [76] Tour Maine-Montparnasse [77] [78] RER P√©riph√©rique [79] Fifth Republic Georges Pompidou Centre Georges Pompidou Val√©ry Giscard d'Estaing Mus√©e d'Orsay Fran√ßois Mitterrand Op√©ra Bastille Biblioth√®que nationale de France Arche de la D√©fense La D√©fense Louvre Pyramid Jacques Chirac Mus√©e du quai Branly [80] Bertrand Delano√´ [81] V√©lib' Promenade des Berges de la Seine [82] Place de la R√©publique Republican marches Charlie Hebdo shooting Nicolas Sarkozy Grand Paris Metropolis of Grand Paris [83] Grand Paris Express high-speed rail (TGV) [84] [85] Al-Qaeda in the Arabian Peninsula attacks [86] [87] 1.5 million people marched in Paris [88] terrorist attacks [89] [90] Paris Agreement United Nations Framework Convention on Climate Change effects of climate change [91] Geography of Paris Sentinel-2 Seine √éle Saint-Louis √éle de la Cit√© English Channel [92] above sea level Montmartre [93] Bois de Boulogne Bois de Vincennes Boulevard P√©riph√©rique [94] [95] [92] 'point zero' Notre-Dame cathedral Calais Brussels Marseille Nantes Rouen [96] Climate of Paris oceanic climate K√∂ppen climate classification [97] failed verification [98] heat wave of 2003 [99] [100] [101] [102] [103] [104] Parc Montsouris precipitation relative humidity sunshine hours possible sunshine ultraviolet index Meteo France [105] [106] [107] Administration of Paris Arrondissements of Paris Mayor of Paris arrondissements of Paris [108] Jacques Chirac Anne Hidalgo socialist in April 2014 [109] in June 2020 [110] H√¥tel de Ville elected indirectly Conseil de Paris closed list proportional representation two-round system [111] majority plurality highest averages method [111] [112] 2020 Paris municipal election conseil d'arrondissement [113] [108] Paris Centre [114] M√©tropole du Grand Paris Grand Paris [115] Hauts-de-Seine Seine-Saint-Denis Val-de-Marne Argenteuil Val d'Oise Paray-Vieille-Poste Essonne [116] [117] [115] [117] Patrick Ollier [118] Region √éle de France Regional Council Val√©rie P√©cresse [119] √âlys√©e Palace President of France national government President of the French Republic √âlys√©e Palace [120] Prime Minister H√¥tel Matignon [121] [122] [123] French Parliament Senate Palais du Luxembourg National Assembly Palais Bourbon President of the Senate Petit Luxembourg [124] Conseil d'√âtat Court of Cassation Palais de Justice [125] Conseil d'√âtat Palais-Royal 1st arrondissement [126] Constitutional Council [127] UNESCO Organisation for Economic Co-operation and Development International Chamber of Commerce Paris Club European Space Agency International Energy Agency Organisation internationale de la Francophonie European Union Institute for Security Studies International Bureau of Weights and Measures International Exhibition Bureau International Federation for Human Rights Gendarmerie Prefecture of Police of Paris Ministry of the Interior National Police Paris Fire Brigade Place Louis L√©pine √éle de la Cit√© [128] [128] Compagnies R√©publicaines de S√©curit√© National Gendarmerie French Armed Forces [129] [130] Seine Architecture of Paris Haussmann's renovation of Paris Religious buildings in Paris List of tallest buildings and structures in the Paris region Rue de Rivoli Place des Vosges [131] Seine √éle Saint-Louis √éle de la Cit√© √éle aux Cygnes Napoleon III Baron Haussmann 1853 and 1870 they rebuilt the city centre Paris stone [132] [133] [134] [134] Tour Montparnasse [135] La D√©fense Tour First Courbevoie Front de Seine Seine Avenue Montaigne [136] [137] [138] [138] [139] [140] SkySat Tour Montparnasse Seine √éle-de-France [141] Grand Paris [115] Paul Delouvrier [142] [143] RER [144] [145] [146] [147] [147] Goutte d'Or Belleville Seine-Saint-Denis department Val-d'Oise department Seine √âvry Corbeil-Essonnes Essonne Mureaux Mantes-la-Jolie Yvelines [148] urban sociology Saint-Maur-des-Foss√©s Enghien-les-Bains [149] Demographics of Paris √éle-de-France [150] [151] Metropolitan France Algeria Morocco Portugal Tunisia Guadeloupe Martinique China Turkey Mali C√¥te d'Ivoire Senegal Italy Romania Democratic Republic of Congo Spain Sri Lanka Cameroon Republic of the Congo Haiti Poland Vietnam Cambodia R√©union India Serbia Lebanon Madagascar Germany Pakistan Russia Mauritius Guinea Brazil United Kingdom United States INSEE Anne Hidalgo [152] [153] [154] [155] Berlin Madrid Rome Eurostat [156] [157] de-industrialisation gentrification [158] [159] unit√© urbaine urban area largest urban area in the European Union [160] [161] aire d'attraction de Paris metropolitan area [162] [163] [164] largest metropolitan area Eurozone [161] Eurostat Hauts-de-Seine Seine-Saint-Denis Val-de-Marne [165] verification needed Europe Maghreb sub-Saharan Africa Egypt Turkey Asia Americas South Pacific [166] [167] √éle-de-France [168] [169] [170] Religious buildings in Paris Sacr√©-C≈ìur Montmartre Catholic [171] [172] Institut fran√ßais d'opinion publique Roman Catholic Algeria Morocco Tunisia [173] [174] [175] [176] Israel [177] Economy of Paris La D√©fense [178] headquarters BNP Paribas Boulevard des Italiens [179] Axa Cr√©dit Agricole Montrouge [180] [181] Paris Region [182] [183] [184] [185] La D√©fense Neuilly-sur-Seine Levallois-Perret Boulogne-Billancourt Issy-les-Moulineaux [185] Fortune Global 500 Hauts-de-Seine La D√©fense Boulogne-Billancourt Soci√©t√© G√©n√©rale GDP ‚Ç¨ [186] [187] [188] [189] [3] [190] [191] finance [192] Hauts-de-Seine Op√©ra Garnier Val de Seine [192] services [192] Economist Intelligence Unit [193] Singapore Hong Kong [194] Station F business incubator [195] [196] [196] [196] [196] [196] La D√©fense [192] [192] [192] [192] Yvelines [192] Aulnay-sous-Bois [192] Essonne [192] Val-de-Marne Rungis food market [192] [192] [197] poverty line [198] [199] [200] Tourism in Paris Landmarks in Paris Historical quarters of Paris List of tourist attractions in Paris Louvre most-visited art museum in the world Euromonitor [201] [202] Greater Paris [203] [203] Euromonitor [204] [205] Louvre Museum Eiffel Tower Mus√©e d'Orsay Centre Pompidou [202] [203] Airbnb [203] [206] [207] full citation needed Paris syndrome [208] Art in Paris Auguste Renoir Bal du moulin de la Galette Mus√©e d'Orsay [209] French Baroque and Classicism Girardon Coysevox Coustou Pierre Mignard Louis XIV Acad√©mie royale de peinture et de sculpture [210] Henri de Toulouse-Lautrec √âdouard Manet Claude Monet Berthe Morisot Paul Gauguin Pierre-Auguste Renoir Romanticism G√©ricault [210] Impressionism Art Nouveau Symbolism Fauvism Cubism Art Deco [210] [211] Pablo Picasso Henri Matisse Vincent van Gogh Paul C√©zanne Jean Metzinger Albert Gleizes Henri Rousseau Marc Chagall Amedeo Modigliani Fr√©d√©ric Auguste Bartholdi Statue of Liberty Auguste Rodin Camille Claudel Antoine Bourdelle Paul Landowski Christ the Redeemer Rio de Janeiro Aristide Maillol Golden Age School of Paris List of museums in Paris Mus√©e d'Orsay Louvre [212] most-visited museums Mona Lisa Venus de Milo Liberty Leading the People Centre Georges Pompidou Mus√©e National d'Art Moderne National Museum of Natural History Mus√©e d'Orsay French Impressionists Cit√© des sciences et de l'industrie Mus√©e des Arts et M√©tiers Fondation Louis Vuitton Mus√©e du Quai Branly ‚Äì Jacques Chirac Mus√©e Carnavalet Petit Palais [213] Mus√©e du quai Branly Mus√©e de l'Orangerie Claude Monet Water Lilies Mus√©e national du Moyen √Çge Medieval art Guimet Museum Mus√©e Picasso Mus√©e Rodin Mus√©e national Eug√®ne Delacroix Mus√©e de l'Arm√©e Les Invalides Ministry of Culture Carnavalet Museum Mus√©e d'Art Moderne de la Ville de Paris Palais de Tokyo House of Victor Hugo House of Balzac Catacombs of Paris [214] Louis Vuitton Foundation Frank Gehry Bois de Boulogne Paris Op√©ra Op√©ra Bastille [215] Th√©√¢tre-Italien Th√©√¢tre Lyrique Th√©√¢tre de la Ville [216] Philharmonie de Paris Th√©√¢tre des Champs-√âlys√©es Ballets Russes Com√©die Fran√ßaise Com√©die-Fran√ßaise Palais-Royal [217] Od√©on-Th√©√¢tre de l'Europe Th√©√¢tre de la Ga√Æt√©-Montparnasse [218] cabaret Moulin Rouge Cancan Mistinguett √âdith Piaf Toulouse-Lautrec Olympia Paris Folies Berg√®re Josephine Baker Dalida Edith Piaf Marlene Dietrich Miles Davis Judy Garland Grateful Dead Casino de Paris Mistinguett Maurice Chevalier Tino Rossi Le Lido Crazy Horse Saloon [219] Writers in Paris Victor Hugo Gasparinus de Bergamo Johann Heynlin Boileau Corneille La Fontaine Moli√®re Racine Charles Perrault [220] Acad√©mie fran√ßaise [221] Voltaire Jean-Jacques Rousseau Pierre de Marivaux Pierre Beaumarchais Charles Baudelaire St√©phane Mallarm√© M√©rim√©e Alfred de Musset Marcel Proust √âmile Zola Alexandre Dumas Gustave Flaubert Guy de Maupassant Honor√© de Balzac The Hunchback of Notre-Dame Notre-Dame de Paris [222] Les Mis√©rables [223] Jules Verne [224] Colette Andr√© Gide Fran√ßois Mauriac Andr√© Malraux Albert Camus Simone de Beauvoir Jean-Paul Sartre Ernest Hemingway Samuel Beckett Miguel √Ångel Asturias Alejo Carpentier Arturo Uslar Pietri Nobel Prize in Literature Patrick Modiano [225] [226] [227] Music in Paris History of music in Paris Olympia polyphony Trouv√®res Troubadours Fran√ßois I Renaissance era lute [210] Baroque-era Jean-Baptiste Lully Jean-Philippe Rameau Fran√ßois Couperin [210] Conservatoire de Musique de Paris [228] Romantic-era Hector Berlioz Charles Gounod Camille Saint-Sa√´ns L√©o Delibes Jules Massenet [210] Georges Bizet Carmen canon [229] [230] Impressionist Claude Debussy Erik Satie Maurice Ravel Fr√©d√©ric Chopin Franz Liszt Jacques Offenbach Niccol√≤ Paganini Igor Stravinsky Bal-musette [231] bourr√©e cabrette bellows bagpipe vielle √† roue hurdy-gurdy accordion [232] jazz [233] gypsy jazz [232] Django Reinhardt St√©phane Grappelli Quintette du Hot Club de France [234] Moulin Rouge √âdith Piaf Saint-Germain-des-Pres Le Tabou Claude Luter Boris Vian Sydney Bechet Mezz Mezzrow Henri Salvador [235] manouche [234] [233] [234] Paris Jazz Festival Rock en Seine [236] Orchestre de Paris [237] Edith Piaf chanteuse [238] hip hop [239] List of films set in Paris Lumi√®re brothers L'Arroseur Arros√© Auguste and Louis Lumi√®re [240] Grand Rex [241] [242] French cinema Claude Lelouch Jean-Luc Godard Luc Besson Claude Zidi [243] French cuisine Place du Ch√¢telet haute cuisine Palais-Royal Antoine Beauvilliers Le Grand V√©four [244] Rocher de Cancale Caf√© Anglais Maison Dor√©e Boulevard des Italiens Belle √âpoque Maxim's Ledoyen Champs-√âlys√©es Tour d'Argent [245] [246] Michelin Guide L'Ambroisie L'Astrance Pierre Gagnaire Alain Ducasse Yannick All√©no Alain Passard [247] [248] Les Deux Magots caf√© Caf√© Procope Caf√© de la Rotonde Le D√¥me Caf√© Caf√© de Flore Les Deux Magots [245] bistro [249] brasserie Paris Exposition of 1867 [250] Fashion in Paris Magdalena Frackowiak Paris Fashion Week fashion capital haute couture [251] Dior Chanel Karl Lagerfeld Jean-Paul Gaultier Yves Saint Laurent Givenchy Christian Lacroix Paris Fashion Week Carrousel du Louvre [252] [253] cosmetics L'Or√©al Louis Vuitton Herm√©s Cartier [254] Avenue Montaigne Champs-√âlys√©es Nic√©phore Ni√©pce Louis Daguerre Daguerrotype [210] √âtienne-Jules Marey Man Ray Maurice Tabard [255] [256] Eug√®ne Atget Robert Doisneau Marcel Bovis Jacques-Henri Lartigue Henri Cartier-Bresson [210] Poster art Henri de Toulouse-Lautrec Jules Ch√©ret Eug√®ne Grasset Adolphe Willette Pierre Bonnard Georges de Feure Henri-Gabriel Ibels Paul Gavarni Alphonse Mucha [210] Le Figaro newspaper of record [257] Le Monde Le Figaro Lib√©ration Le Nouvel Observateur Le Canard encha√Æn√© La Croix Le Parisien Saint-Ouen Les √âchos Neuilly-sur-Seine Reuters l'√âquipe Boulogne-Billancourt [258] [259] Agence France-Presse [260] France 24 [261] Ministry of Foreign and European Affairs [262] TF1 Boulogne-Billancourt France 2 France 3 Canal+ France 5 M6 Neuilly-sur-Seine Arte D8 W9 NT1 NRJ 12 La Cha√Æne parlementaire France 4 BFM TV Gulli [263] Radio France 16th arrondissement Radio France Internationale [264] La Poste [265] Bastille Day Champs-√âlys√©es Arc de Triomphe Place de la Concorde flypast Patrouille de France [266] Paris-Plages [266] Journ√©es du Patrimoine F√™te de la Musique Nuit Blanche Carnaval de Paris Libraries in Paris Biblioth√®que nationale de France Arsenal Library [267] Sainte-Genevi√®ve Library Biblioth√®que Forney Biblioth√®que historique de la ville de Paris Sainte-Genevi√®ve Library Henri Labrouste [268] Biblioth√®que Mazarine M√©diath√®que Musicale Mahler Dominique Perrault [268] Sorbonne Library Sorbonne Institut d'Art et d'Arch√©ologie [269] [270] Football in Paris Parc des Princes association football Paris Saint-Germain F.C. rugby union Stade Fran√ßais Racing 92 Nanterre Stade de France 1998 FIFA World Cup Saint-Denis [271] France national football team French national rugby team Six Nations Championship [271] Paris FC Red Star FC US Cr√©teil RCF Paris Stade Fran√ßais Football Rugby league Australia national team British League Rugby League World Cup 1954 Parc des Princes final France Great Britain Parc des Princes 1972 Rugby League World Cup Paris Saint-Germain a rugby league club Super League [272] Catalans Dragons British rugby league system Wigan Warriors [273] 1900 1924 2024 Summer Olympics 1992 2008 2012 Olympic Games Barcelona Beijing London 1938 FIFA World Cup Stade Olympique de Colombes 1998 FIFA World Cup 2007 Rugby World Cup 2023 Rugby World Cup 1960 1984 Parc des Princes 2016 [274] UEFA Champions League Finals 2000 2006 2022 [275] Champs √âlys√©es bicycle racing Tour de France finished on the Champs-Elys√©es [276] Tennis French Open [277] Grand Slam Bercy Arena Paris Masters 2017 IIHF World Ice Hockey Championship Cologne EuroBasket 1951 EuroBasket 1999 Basketball Levallois SCB Paris Basket Racing Metropolitans 92 Stade Pierre de Coubertin [278] Nanterre 92 Paris Basketball 2023‚Äì24 EuroCup handball Paris Saint-Germain LNH Division 1 American football Paris Musketeers [279] European League of Football Transport in Paris Gare du Nord √éle-de-France Mobilit√©s [280] RATP bus M√©tro SNCF Optile [281] sustainable [12] [282] Sustainable Transport Award [13] [283] [284] [285] [286] 15-minute city Carlos Moreno (urbanist) Anne Hidalgo [287] [288] [289] walkable walkability [290] [291] List of Paris railway stations Paris M√©tro R√©seau Express R√©gional Transilien Tramways in √éle-de-France Paris M√©tro Gare du Nord Gare de l'Est Gare de Lyon Gare d'Austerlitz Gare Montparnasse Gare Saint-Lazare Gare de Bercy high-speed rail TGV Eurostar Intercity Express Frecciarossa Intercit√©s Intercit√©s de nuit Nightjet TER Transilien commuter rail Paris region [292] regional express network RER A Paris region a light rail network, the tramway Charles de Gaulle Airport [293] 5th busiest airport system in the world Charles de Gaulle Airport Orly Airport Beauvais‚ÄìTill√© Airport [294] general aviation Paris‚ÄìLe Bourget Airport [295] 4th busiest airport in the world by international traffic flag carrier Air France [296] low-cost carriers Boulevard P√©riph√©rique motorway P√©riph√©rique [94] A86 Francilienne Ports of Paris Loire Rhine Rh√¥ne Meuse Scheldt Canal Saint-Martin Canal Saint-Denis [297] V√©lib' Place de la Bastille cycle paths and routes [298] bike sharing V√©lib' [299] √éle-de-France [300] district heating Saint-Ouen-sur-Seine wood pellets [301] √éle de la Cit√© Bateau Mouche Bi√®vre Canal de l'Ourcq [302] Eug√®ne Belgrand Napoleon III [303] [304] Air pollution particulate matter [305] [306] List of parks and gardens in Paris History of Parks and Gardens of Paris Parc des Buttes-Chaumont [307] Tuileries Garden Tuileries Palace Andr√© Le N√¥tre [308] Luxembourg Garden Luxembourg Palace Marie de' Medici Senate [309] Jardin des plantes [310] Napoleon III Jean-Charles Adolphe Alphand Bois de Boulogne Bois de Vincennes Parc Montsouris Parc des Buttes-Chaumont [311] Parc de la Villette Parc Andr√© Citro√´n Parc de Bercy Parc Clichy-Batignolles [312] Promenade des Berges de la Seine Paris Catacombs left bank Holy Innocents' Cemetery Paris's stone mines place Denfert-Rochereau [313] [314] Napoleon [315] P√®re Lachaise Montmartre Montparnasse Passy Cimeti√®re parisien de Saint-Ouen Cimeti√®re parisien de Pantin Pantin Bobigny Ivry Bagneux [316] Oscar Wilde Fr√©d√©ric Chopin Jim Morrison √âdith Piaf Serge Gainsbourg [317] Education in Paris Sorbonne University licence [318] [319] University of Paris Sorbonne thirteen autonomous universities student demonstrations in 1968 Latin Quarter [320] grandes √©coles grands √©tablissements √âcole Normale Sup√©rieure PSL University 5th arrondissement [321] Conservatoire national des arts et m√©tiers Polytechnic Institute of Paris Paris Cit√© University Paris-Saclay University Sorbonne University Sciences Po [322] HEC Paris ESSEC Business School ESCP Business School INSEAD [323] Paris Sciences et Lettres University [324] H√¥tel-Dieu de Paris Assistance publique ‚Äì H√¥pitaux de Paris [325] [325] H√¥tel-Dieu [326] Piti√©-Salp√™tri√®re Hospital H√¥pital Cochin Bichat‚ÄìClaude Bernard Hospital H√¥pital Europ√©en Georges-Pompidou Bic√™tre Hospital Beaujon Hospital Curie Institute Lariboisi√®re Hospital Necker‚ÄìEnfants Malades Hospital H√¥pital Saint-Louis H√¥pital de la Charit√© American Hospital of Paris United Nations Educational, Scientific and Cultural Organization Organisation for Economic Co-operation and Development [327] European Space Agency International Energy Agency European Securities and Markets Authority European Banking Authority List of twin towns and sister cities in France twinned [328] [329] Rome [330] [331] [332] [333] [328] Algiers Amman Amsterdam Athens Beijing Beirut Berlin Brazzaville Buenos Aires Cairo Casablanca Chicago Copenhagen Dakar Doha Geneva Istanbul Jakarta Jericho Kinshasa Kyoto Lisbon London Madrid Mexico City Montevideo Montreal Moscow Phnom Penh Porto Alegre Prague Quebec City Rabat Ramallah Rio de Janeiro Riyadh Saint Petersburg Sanaa San Francisco Santiago S√£o Paulo Seoul Sofia Sydney Tbilisi Tel Aviv Tokyo Tunis Warsaw Washington, D.C. Yerevan France portal Cities portal Art Nouveau in Paris Art Deco in Paris C40 Cities Climate Leadership Group International Exposition of Modern Industrial and Decorative Arts Megacity Outline of France Outline of Paris Paris syndrome Parish and Civil Registers in Paris ^ ^ \"R√©pertoire national des √©lus: les maires\" Archived a b c d e \"D√©partement: Paris (75); Unit√© urbaine: Paris (00851); R√©gion: √éle-de-France (11); Aire d'attraction des villes: Paris (001)\" INSEE a b c d \"Estimation de la population au 1·µâ ≥ Janvier 2025 - S√©ries par r√©gion, d√©partement, sexe et √¢ge\" INSEE ^ \"Populations l√©gales 2019: Commune de Paris (75056)\" Archived ^ \"The World's Most Densely Populated Cities\" Archived ^ \"Paris\" Archived ^ \"Conversion rates ‚Äì Purchasing power parities (PPP) ‚Äì OECD Data\" Archived ^ \"Gross domestic product (GDP) at current market prices by metropolitan regions\" Archived ^ \"The world's most, and least, expensive cities\" ISSN 0013-0613 Archived ^ \"List: The world's 20 busiest airports (2017)\" Archived ^ \"ACI reveals the world's busiest passenger and cargo airports\" Archived a b \"Paris leads the way for sustainable urban mobility\" Archived a b \"Paris, France Honored with the 2023 Sustainable Transport Award\" Archived ^ ^ \"Paris, Banks of the Seine\" Archived ^ N√®gre 1990 a b c Falileyev 2010 ^ Lambert 1994 ^ Delamarre 2003 a b Delamarre 2003 ^ Busse 2006 ^ Dottin 1920 ^ Arbois de Jubainville & Dottin 1889 ^ Cunliffe 2004 ^ Lawrence & Gondrand 2010 ^ Schmidt 2009 ^ Schmidt 2009 ^ Schmidt 2009 ^ Meunier 2014 a b Schmidt 2009 ^ ^ Jones 1994 a b Lawrence & Gondrand 2010 ^ Bussmann 1985 ^ de Vitriaco & Hinnebusch 1972 ^ Sarmant 2012 ^ Sarmant 2012 ^ \"Paris history facts\" Archived ^ ^ ^ Fierro 1996 ^ \"Massacre of Saint Bartholomew's Day\" Archived ^ Bayrou 1994 ^ Fierro 1996 ^ Fierro 1996 ^ Combeau 2003 ^ Fierro 1996 ^ The Story of Civilization XI The Age of Napoleon ISBN 978-0-671-21988-8 Archived ^ Combeau 2003 ^ Sarmant 2012 ^ Sarmant 2012 ^ Paine 1998 ^ Fierro 1996 ^ Sarmant 2012 ^ Sarmant 2012 a b c Sarmant 2012 a b De Moncan 2012 ^ Rougerie 2014 ^ Fraser & Spalding 2011 ^ Fierro 1996 ^ Combeau 2003 ^ Fierro 1996 ^ Bohemian Paris: Picasso, Modigliani, Matisse, and the Birth of Modern Art ISBN 978-0-8021-9740-5 the original ^ Fierro 1996 ^ Fierro 1996 ^ ISBN 978-0-520-22537-4 ^ \"The Surreal World of Salvador Dal√≠\" Archived ^ Anti-Imperial Metropolis Archived Wayback Machine ^ Sarmant 2012 ^ Fierro 1996 ^ Sarmant 2012 ^ Fierro 1996 ^ \"France remembers Algerian massacre 50 years on\" Archived ^ Fierro 1996 ^ Sarmant 2012 ^ Fierro 1996 ^ Sarmant 2012 ^ Combeau 2003 ^ Bell & de-Shalit 2011 ^ Sarmant 2012 ^ \"City Mayors: Bertrand Delanoe ‚Äì Mayor of Paris\" Archived ^ \"Les berges de Seine rendues aux Parisiens\" the original ^ \"Sarko's ‚Ç¨35bn rail plan for a 'Greater Paris'\" The Independent Archived ^ \"‚Ç¨26.5bn Grand Paris metro expansion programme confirmed\" Archived ^ \"Le Metro du Grand Paris\" Archived ^ \"2015 Charlie Hebdo Attacks Fast Facts\" Archived ^ \"Attentats terroristes : les questions que vous nous avez le plus pos√©es\" Archived ^ \"Les politiques s'affichent √† la marche r√©publicaine\" Archived ^ \"Islamic State claims Paris attacks that killed 127\" Archived ^ \"Paris attacks death toll rises to 130\" RT√â.ie Archived ^ \"'Today is an historic day,' says Ban, as 175 countries sign Paris climate accord\" Archived a b \"Paris\" Archived ^ Blackmore & McConnachie 2004 a b Lawrence & Gondrand 2010 ^ \"Key figures for Paris\" the original ^ Google Maps Archived Wayback Machine ^ \"Climate\" the original ^ Lawrence & Gondrand 2010 ^ Goldstein 2005 ^ \"Climate in Paris\" the original ^ \"Visiting Paris in the Winter: A Complete Guide\" Archived ^ \"Weather in France ‚Äì Climate and Temperatures of French Cities\" Archived ^ \"42.6 ¬∞C √† Paris : record absolu de chaleur battu !\" Archived ^ \"G√©ographie de la capitale ‚Äì Le climat\" the original ^ \"Paris‚ÄìMontsouris (984)\" the original ^ \"Normes et records 1961‚Äì1990: Paris-Montsouris (75) ‚Äì altitude 75m\" the original ^ \"Paris, France ‚Äì Climate data\" Archived a b Fierro 1996 ^ \"Anne Hidalgo is new Mayor of Paris\" the original ^ \"Greens surge in French local elections as Anne Hidalgo holds Paris\" The Guardian ISSN 0261-3077 Archived a b \"Code √©lectoral ‚Äì Article L260\" Archived ^ \"Election Preview: France Municipal Elections 2014 ‚Äì Part I\" Archived ^ Shales 2007 ^ \"Regroupement des 4 premiers arrondissements : le secteur Paris Centre sera cr√©√© le 11 juillet\" Archived a b c \"Code g√©n√©ral des collectivit√©s territoriales ‚Äì Article L5219-1\" Archived ^ \"D√©cret n¬∞ 2015-1212 du 30 septembre 2015 constatant le p√©rim√®tre fixant le si√®ge et d√©signant le comptable public de la m√©tropole du Grand Paris\" Archived a b \"La m√©tropole du Grand Paris verra le jour le 1er janvier 2016\" Archived ^ \"Du Grand Paris √† la M√©tropole du Grand Paris\" the original ^ \"R√©gionales 2015 : les chiffres cl√©s du scrutin\" Archived ^ \"Le Palais de L'√âlys√©e et son histoire\" Archived ^ \"Matignon Hotel\" Archived ^ Knapp & Wright 2006 ^ Borrus 2012 ^ \"A la d√©couverte du Petit Luxembourg\" Archived ^ \"Introduction\" Archived ^ \"Histoire & Patrimoine\" the original ^ \"Le si√®ge du Conseil constitutionnel\" the original a b \"Pr√©sentation g√©n√©rale\" Archived ^ \"Accueil\" Archived ^ \"France\" Archived ^ \"Paris Street Evolution\" doi 10.1038/srep02153 ISSN 2045-2322 PMC 3703887 PMID 23835429 S2CID 11824030 ^ ISBN 978-2-907970-98-3 ^ Braimoh & Vlek 2008 a b \"Plan des hauteurs\" the original ^ \"Plan Local d'Urbanisme ‚Äì R√®glement √† la parcelle\" Archived ^ ^ \"Chiffres Cl√©fs Logements (2011) ‚Äì D√©partement de Paris (75)\" Archived a b \"Un territoire ancien et de petite taille\" the original ^ ^ ^ \"Une br√®ve histoire de l'am√©nagement de Paris et sa r√©gion Du District √† la R√©gion √éle-de-France\" Archived ^ Masson 1984 ^ Yarri 2008 ^ Gordon 2006 ^ Castells 1983 ^ Tomas et al. 2003 a b \"Les Politiques Nationales du Logement et le Logement dans les Villes Nouvelles\" the original ^ \"Atlas des Zones urbaines sensibles (Zus)\" the original ^ \"Une forte h√©t√©rog√©n√©it√© des revenus en √éle-de-France\" Archived ^ INSEE \"Individus localis√©s √† la r√©gion en 2019 - Recensement de la population - Fichiers d√©tail\" ^ INSEE \"IMG1B - Population immigr√©e par sexe, √¢ge et pays de naissance en 2019 - R√©gion d'√éle-de-France (11)\" ^ ^ ^ ^ ^ \"Statistics on European cities\" Archived ^ Commune data sheet Paris EHESS ^ ^ Institut National de la Statistique et des √âtudes √âconomiques \"Population en historique depuis 1968: Commune de Paris (75056)\" Archived ^ INSEE \"√âvolution et structure de la population en 2017: Unit√© urbaine 2020 de Paris (00851)\" Archived a b \"Urban Europe ‚Äî Statistics on cities, towns and suburbs\" Archived ^ \"Functional areas ‚Äì Definition\" INSEE Archived ^ INSEE \"√âvolution et structure de la population en 2017: Aire d'attraction des villes 2020 de Paris (001)\" Archived ^ INSEE \"√âvolution et structure de la population en 2017: France enti√®re\" Archived ^ \"Population statistics at regional level\" the original ^ \"Les immigr√©s par sexe, √¢ge et pays de naissance ‚Äì D√©partement de Paris (75)\" Insee the original ^ \"Les immigr√©s par sexe, √¢ge et pays de naissance ‚Äì R√©gion d'√éle-de-France (11)\" Insee the original ^ \"Population par sexe, √¢ge et nationalit√© ‚Äì R√©gion d'√éle-de-France (11)\" Insee the original ^ \"Population par sexe, √¢ge et nationalit√© ‚Äì D√©partement de Paris (75)\" Insee the original ^ \"Localisation des immigr√©s et des descendants d'immigr√©s\" Insee Archived ^ ISBN 978-1-349-13618-6 ^ After Integration: Islam, Conviviality and Contentious Politics in Europe ISBN 978-3-658-02594-6 Archived ^ \"que pese l'Islam en France\" Archived ^ \"How does France count its muslim population?\" Archived ^ \"Interview with Dalil Boubakeur\" Archived ^ \"Le manque de mosqu√©e en Ile-de-France\" Archived ^ \"World Jewish Population 2014\" Archived ^ \"La D√©fense, Europe's largest business district\" the original ^ \"Largest banks worldwide as of December 2021, by assets\" Archived ^ \"De Las Cases √† Jean Jaur√®s : Cr√©dit Agricole S.A. √† travers ses si√®ges\" Archived ^ \"Department of Paris; Complete Dossier\" Archived ^ \"√éle-de-France Region ‚Äì Complete dossier\" Archived ^ \"EMP2 ‚Äì Emplois au lieu de travail par sexe, statut et secteur d'activit√© √©conomique ‚Äì R√©gion d'√éle-de-France (11)\" Archived ^ \"La nomenclature agr√©g√©e ‚Äì NA, 2008\" Archived a b \"En √éle-de-France, 39 poles d'emploi structurent l'economie r√©gionale\" Archived ^ \"Gross domestic product (GDP) at current market prices by NUTS 3 regions\" Archived ^ \"Regional gross domestic product (PPS per inhabitant) by NUTS 2 regions\" Archived ^ \"L'√éle-de-France, une des r√©gions les plus riches d'Europe\" Archived ^ \"The Most Dynamic Cities of 2025\" Archived ^ \"GDP in value (current prices) ‚Äì Metropolitan France\" Archived ^ \"GDP in value (current prices) ‚Äì √éle-de-France\" Archived a b c d e f g h i j k l \"L'Industrie en √éle-de-France, Principaux Indicateurs R√©gionaux\" Archived ^ ^ \"Classement.Singapour, Hong Kong, Paris : le trio des villes les plus ch√®res du monde\" Courrier International Archived ^ \"Station F, the world's largest startup campus opens in Paris\" Archived a b c d e \"√éle-de-France ‚Äì A la Page N¬∫288 ‚Äì INSEE 2007\" Archived ^ \"Structure et distribution des revenus, in√©galit√© des niveaux de vie en 2013\" Archived ^ \"Neighborhoods of Paris with more than 40 percent living below poverty line\" the original ^ ^ ^ \"Euromonitor International reveals world's Top 100 City Destinations for 2024\" a b \"Bilan de l'ann√©e touristique 2022 √† Paris √éle-de-France (mars 2023)\" Archived a b c d \"Tourism in Paris ‚Äì Key Figures 2020\" the original ^ \"The World's Most-Visited City Is Bangkok\" Forbes Archived ^ \"Tourism in Paris ‚Äì Key Figures 2016\" Archived ^ \"hoteliers-welcome-paris-decision-forcing-airbnb-hosts-to-register-rentals-idUSL8N1JW2DD\" ^ ^ \"'Paris Syndrome' strikes Japanese\" BBC News Archived ^ Montclos 2003 a b c d e f g h i Michelin 2011 ^ Perry 1995 ^ ^ ^ \"Municipal museums\" Archived ^ Lawrence & Gondrand 2010 ^ Schumacher 1996 ^ Fierro 1996 ^ Who's Where Archived ^ Fierro 1996 ^ \"scan of the book at the Biblioth√®que nationale de France\" Archived ^ Fierro 1996 ^ \"Notre Dame Renovations\" Archived ^ \"Les Miserables\" Archived ^ \"Jules Verne\" ^ \"Official site of the Nobel Prize\" Archived ^ Fierro 1996 ^ ^ Damschroeder & Williams 1990 ^ Georges Bizet: Carmen Archived Wayback Machine ^ The Essential Canon of Classical Music ISBN 978-1-4668-0726-6 Archived ^ Dregni 2004 a b Dregni 2008 a b Mroue 2006 a b c \"Best Gypsy jazz bars in Paris\" Archived ^ Bezbakh 2004 ^ \"Rock en Seine '13\" Archived ^ \"Orchestre de Paris\" the original ^ √âdith Piaf biography AllMusic ^ \"Hip-Hop √† la Fran√ßaise\" The New York Times Archived ^ \"PR√âSENTATION DU CIN√âMATOGRAPHE LUMI√àRE\" Archived ^ \"The Grand Rex ... and its Etoiles\" Archived ^ \"Le Cin√©ma √† Paris\" Archived ^ \"2 Tamil Films in 1st SAFF in Paris\" The Times of India Archived ^ Fierro 1996 a b Fierro 1996 ^ Domin√© 2014 ^ ^ \"Michelin Guide\" Michelin Guide Archived ^ Fierro 1996 ^ Fierro 1996 ^ \"11 Ways to Look like a Local in Paris\" Archived ^ Fashion Journalism Routledge ISBN 978-1-136-47536-8 Archived ^ The Fundamentals of Fashion Management ISBN 978-2-940411-58-0 Archived ^ \"Global ranking of manufacturers of luxury goods\" Archived ^ Department of Photographs, Photography and Surrealism, Heilbrunn Timeline of Art History Archived Wayback Machine ^ Hazan 2011 ^ \"Le Figaro\" Archived ^ \"French and Francophone Publications\" Archived ^ \"Paris's Top Newspapers\" Archived ^ \"Agence France-Presse\" Archived ^ \"France 24\" Archived ^ \"France Diplomatie\" Archived ^ \"French and Francophone TV Stations\" Archived ^ \"France's Radio Stations\" the original ^ \"La Poste\" the original a b BlackmoreMcConnachie 2004 ^ \"How to find us\" Biblioth√®que nationale de France the original a b \"At These Parisian Landmarks, Shhh Is the Word\" Archived ^ \"Paris-Sorbonne libraries\" Archived ^ \"French Libraries and Archives\" Archived a b Lawrence & Gondrand 2010 ^ \"Locations of League: Paris\" ^ \"Wigan Warriors and Catalans Dragons progress Paris plans for 2026\" ^ \"EURO 2016: All you need to know\" UEFA ^ \"Arsenal aim to upset the odds\" Archived ^ \"2013 route\" the original ^ \"Roland-Garros\" Archived ^ \"Stade Pierre de Coubertin (Paris)\" the original ^ \"Paris Football Team | The Paris Football Team is an American football franchise of the European League of Football, based in Paris, France\" Archived ^ \"Le web des voyageurs franciliens\" the original ^ \"Optile en bref\" Archived ^ \"On foot or by bike? While Paris walks, Amsterdam pedals\" Archived ^ \"Bikes overtake cars as means of transport in Paris\" The Local the original ^ \"Cycling is now more popular than driving in the centre of Paris, study finds\" the original ^ \"5 reasons the world looks to Europe's cities\" Archived ^ \"How Bike Lanes Are Transforming Paris\" Archived ^ \"Paris' Vision for a '15-Minute City' Sparks a Global Movement\" ^ \"Why walking and public transport must be integrated\" ^ \"Mobility changes in Greater Paris -Grand Paris- Historical trends, current and emerging developments\" ^ \"The time of the whole car city is over': How is Paris encouraging walking and cycling?\" ^ \"How Paris became a 15-minute city\" ^ \"M√©tro2030, notre nouveau m√©tro de Paris\" the original ^ \"2023 Airport Traffic Report\" ^ \"Bulletin statistique, trafic a√©rien commercial ‚Äì ann√©e 2014\" Archived ^ \"Trafic a√©roportuaire 1986‚Äì2013\" Archived ^ Lawrence & Gondrand 2010 ^ Jefferson 2009 ^ Hart 2004 ^ Rand 2010 ^ \"La production √©lectrique en IdF\" Archived ^ \"Paris to be heated with US wood pellets\" Archived ^ \"Historique des √©gouts\" the original ^ Burchell 1971 ^ \"Les √©gouts parisiens\" the original ^ Air pollution in Paris Archived Wayback Machine ^ \"Air pollution in Europe: These are the worst-hit cities to live in\" Archived ^ Jarrass√© 2007 ^ Lawrence & Gondrand 2010 ^ Lawrence & Gondrand 2010 ^ \"Le Jardin de Plantes\" Archived ^ Jarrass√© 2007 ^ Jarrass√© 2007 ^ Whaley 2012 ^ Broadwell 2007 ^ Ayers 2004 ^ \"Les 20 cimeti√®res Parisiens\" Archived ^ \"Les c√©l√©brit√©s du cimeti√®re du P√®re Lachaise √† Paris\" Archived ^ \"Indicateurs d√©partementaux et r√©gionaux sur les dipl√¥mes et la formation en 2009\" Archived ^ \"L'enseignement\" the original ^ Combeau 2013 ^ \"Contact and Maps\" √âcole Normale Sup√©rieure the original ^ \"Classement QS 2024 : Sciences Po devient la 2√®me meilleure universit√© mondiale en \"Politics\"\" ^ Financial Times \"European Business School Rankings 2023\" ^ ARWU \"2023 Academic Ranking of World Universities\" a b \"Rapport Annuel 2008\" the original ^ \"Hotel Dieu\" Archived ^ |Where we are |publisher oecd.org |accessed on 30 August 2016 a b \"Les pactes d'amiti√© et de coop√©ration\" Archived ^ \"Twinning Rome ‚Äì Paris\" Archived \"Roma ‚Äì Relazioni Internazionali Bilaterali\" Archived ^ \"Dichiarazione congiunta Roma ‚Äì Parigi ‚Äì (2014)\" Archived ^ \"Twinning with Rome\" the original ^ \"Les pactes d'amiti√© et de coop√©ration\" the original ^ \"International relations: special partners\" the original Larousse Paris ISBN 978-2-03-585012-6 Archived Les premiers habitants de l'Europe Archived The Architecture of Paris ISBN 978-3-930698-96-7 Archived Bayrou, Fran√ßois Henri IV: le roi libre ISBN 978-2-7028-3282-0 Archived Paris After the Liberation: 1944‚Äì1949: 1944‚Äì1949 ISBN 978-0-14-191288-2 Archived The Spirit of Cities: Why the Identity of a City Matters in a Global Age ISBN 978-1-4008-3972-8 Archived National Policy Responses to Urban Challenges in Europe ISBN 978-1-4094-8725-8 Archived The emerging city: Paris in the age of Louis XIV ISBN 978-0-8223-0214-8 Archived ISBN 978-2-03-505369-5 Rough Guide to Paris ISBN 978-1-84353-078-7 Archived Rough Guide Paris Directions ISBN 978-1-84353-317-7 Archived ISBN 978-2-7071-3904-7 Strength in Numbers: Population, Reproduction, and Power in Eighteenth-Century France ISBN 978-0-8018-6810-8 Archived Frommer's Paris 2013 ISBN 978-1-118-33143-9 Archived Five Hundred Buildings of Paris ISBN 978-1-60376-267-0 Archived Land Use and Soil Resources ISBN 978-1-4020-6778-5 Archived City of Light, City of Dark: Exploring Paris Below ISBN 978-1-4257-9022-6 Archived Imperial Masquerade: The Paris of Napoleon III Celtic Culture: A Historical Encyclopedia ISBN 978-1-85109-440-0 Archived Paris and the Ile de France ISBN 978-0-86350-038-1 Archived Conflict and Change: Europe 1870‚Äì1966 Archived Encyclopedia of the Black Death ISBN 978-1-59884-254-8 Archived The City and the Grassroots: A Cross-Cultural Theory of Urban Social Movements ISBN 978-0-520-05617-6 Archived Women and Achievement in Nineteenth-Century Europe ISBN 978-0-521-65098-4 Archived Histoire de Paris ISBN 978-2-13-060852-3 Histoire de Paris ISBN 978-2-13-053865-3 Archived Abelard And the Origin And Early History of Universities ISBN 978-1-4179-4646-4 Archived Iron Age communities in Britain : an account of England, Scotland and Wales from the seventh century BC until the Roman conquest ISBN 978-0-415-34779-2 Archived Paris ISBN 978-1-4396-4101-9 Archived Music Theory from Zarlino to Schenker: A Bibliography and Guide ISBN 978-0-918728-99-9 Archived Delamarre, Xavier ISBN 978-2-87772-369-5 ISBN 978-2-907970-91-4 ISBN 978-2-907970-98-3 ISBN 978-3-8331-1129-7 A Summer in '69 ISBN 978-1-60976-878-2 Archived La Langue Gauloise : Grammaire, Textes et Glossaire ISBN 978-2-05-100208-0 cite book help Django : The Life and Music of a Gypsy Legend: The Life and Music of a Gypsy Legend ISBN 978-0-19-803743-9 Archived Gypsy Jazz : In Search of Django Reinhardt and the Soul of Gypsy Swing: In Search of Django Reinhardt and the Soul of Gypsy Swing ISBN 978-0-19-804262-4 Archived Paris: ses organes, ses fonctions et sa vie jusqu'en 1870 ISBN 978-2-910305-02-4 Archived cite book help The Politics of Dreaming in the Carolingian Empire ISBN 978-0-8032-1653-2 Archived Paris as Seen and Described by Famous Writers ... Archived Cultural Planning: An Urban Renaissance? ISBN 978-0-203-45974-4 Archived ISBN 978-0-9557182-3-6 ISBN 978-1-74059-850-7 ISBN 978-0-7859-9300-1 Marie Antoinette in the Conciergerie, a lecture Archived Bohemian Paris: Picasso, Modigliani, Matisse, and the Birth of Modern Art ISBN 978-0-8021-3997-9 Archived Trains, Culture, and Mobility: Riding the Rails ISBN 978-0-7391-6749-6 Archived AARP Paris 2012 ISBN 978-1-118-26621-2 Archived The making of revolutionary Paris ISBN 978-0-520-24327-9 Anti-Imperial Metropolis: Interwar Paris and the Seeds of Third World Nationalism ISBN 978-1-107-07305-0 Archived Droughts And Heat Waves: A Practical Survival Guide ISBN 978-1-4042-0536-9 Archived The European Cities and Technology Reader: Industrial to Post-industrial City ISBN 978-0-415-20082-0 Archived ISBN 978-0-415-28061-7 The World of the Paris Caf√©: Sociability Among the French Working Class, 1789‚Äì1914 ISBN 978-0-8018-6070-6 Archived The Polycentric Metropolis: Learning from Mega-City Regions in Europe ISBN 978-1-136-54768-3 Archived The Dead and the Living in Paris and London, 1500‚Äì1670 ISBN 978-0-521-81126-2 Archived Going to Live in Paris: How to Live and Work in France's Great Capital ISBN 978-1-85703-985-6 Archived Politics and Religion in France and the United States ISBN 978-0-7391-1930-3 Archived The Invention of Paris: A History in Footsteps ISBN 978-1-84467-800-6 Archived A Chronological Account of the History of France 72 Paris: Capital of the World ISBN 978-0-674-03864-6 Archived Seven Ages of Paris ISBN 978-0-679-45481-6 Paris and Versailles ISBN 978-2-7131-0202-8 Archived Through the French Canals ISBN 978-1-4081-0381-4 Archived Paris: Biography of a City ISBN 978-0-14-028292-4 Archived The Cambridge Illustrated History of France 48 ISBN 978-0-521-66992-4 Grammaire des jardins parisiens: de l'h√©ritage des rois aux cr√©ations contemporaines ISBN 978-2-84096-476-6 Archived Paris ISBN 978-1-85828-679-2 The Engaged Sociologist: Connecting the Classroom to the Community ISBN 978-1-4129-6900-0 Archived The Government and Politics of France ISBN 978-0-415-35732-6 Dover Publications ISBN 978-0-486-29078-2 Lambert, Pierre-Yves ISBN 978-2-87772-089-2 Paris (City Guide) ISBN 978-981-282-079-2 Le refrain dans la chanson fran√ßaise: de Bruant √† Renaud ISBN 978-2-84287-096-6 Archived Inner City Poverty in Paris and London ISBN 978-0-415-41762-4 Archived The Police, State and Society: Perspectives from India and France ISBN 978-81-317-3145-1 Archived Gourmet Archived ISBN 978-2-7373-6217-0 Paris Green Guide Michelin 2012‚Äì2013 ISBN 978-2-06-718220-2 Archived Paris, City of Art ISBN 978-0-86565-226-2 Archived Multiculturalism, Muslims and Citizenship: A European Approach ISBN 978-1-134-25561-0 Archived Frommer's Memorable Walks in Paris ISBN 978-0-470-03712-6 Archived N√®gre, Ernest ISBN 978-2-600-02883-7 Paris Encounter ISBN 978-1-74220-503-8 Archived Urban Planning in Europe: International Competition, National Systems and Planning Projects ISBN 978-0-203-42794-1 Archived Past Forward: French Cinema and the Post-Colonial Heritage ISBN 978-0-8093-8588-1 Archived ISBN 978-1-84595-065-1 Rights of Man, Common Sense, and Other Political Writings ISBN 978-0-19-283557-4 Archived Planning Paris Before Haussmann ISBN 978-0-8018-7930-2 Archived Women Artists and the Parisian Avant-garde: Modernism and 'feminine Art' Art, 1900 to the Late 1920s ISBN 978-0-7190-4165-5 Archived Western Civilization: Ideas, Politics, and Society: from 1600: Ideas, Politics, and Society: From the 1600s ISBN 978-1-111-83171-4 Archived The French Connection ISBN 978-1-58685-529-1 Kick the Fossil Fuel Habit: 10 Clean Technologies to Save Our World ISBN 978-0-9812952-0-6 Archived Parisians: An Adventure History of Paris ISBN 978-0-330-52254-0 Archived A Literary Paris: Hemingway, Colette, Sedaris, and Others on the Uncommon Lure of the City of Light ISBN 978-1-4405-0740-3 Archived Encyclopedia of Contemporary Spanish Culture ISBN 978-0-415-13187-2 Archived ISBN 978-2-13-062078-5 Yourcenar ISBN 978-1-904341-28-4 Archived Infinite variety: the life and legend of the Marchesa Casati ISBN 978-0-8166-4520-6 Archived Histoire de Paris: politique, urbanisme, civilisation ISBN 978-2-7558-0330-3 Archived Lut√®ce: Paris, des origines √† Clovis ISBN 978-2-262-03015-5 Archived Naturalism and Symbolism in European Theatre 1850‚Äì1918 ISBN 978-0-521-23014-8 Archived ISBN 978-0-520-22537-4 Paris ISBN 978-1-84537-661-1 Archived Innovation Networks and Learning Regions? ISBN 978-0-11-702360-4 Archived Paris Fashion: A Cultural History ISBN 978-1-85973-973-0 Archived The Statue of Liberty ISBN 978-0-7607-3890-0 Archived Religion, Society and Politics in France Since 1789 ISBN 978-1-85285-057-9 Archived Urban World History: An Economic and Geographical Perspective ISBN 978-2-7605-2209-1 Archived Les grands ensembles: une histoire qui continue ISBN 978-2-86272-260-3 Archived \"Paris\" Chisholm, Hugh Encyclop√¶dia Britannica The Historia Occidentalis of Jacques de Vitry Archived Circles in the Sky: The Life and Times of George Ferris ISBN 978-0-7844-1010-3 Archived Mirrors of Mortality (Routledge Revivals): Social Studies in the History of Death ISBN 978-1-136-81060-2 Archived Coronation Rites 106 Rethinking the French City: Architecture, Dwelling, and Display After 1968 ISBN 978-90-420-2500-4 Archived \"Les contours d'une population susceptible d'√™tre musulmane d'apr√®s la filiation\" ISBN 978-2-13-053723-6 Archived Bibliography of Paris Vincent Cronin Paris on the Eve, 1900‚Äì1914 HarperCollins ISBN 978-0-312-04876-1 ISBN 978-0-00-215191-7 Fayard ISBN 978-2-213-59874-1 ISBN 978-2-86930-648-6 Paris: The Biography of a City Penguin Viking ISBN 978-0-670-03393-5 ISBN 978-2-02-012864-3 ISBN 978-0-226-87023-6 Wikisource 1911 Encyclop√¶dia Britannica Paris Official website v t e Paris Arrondissements Paris Centre 1st 2nd 3rd 4th 5th 6th 7th 8th 9th 10th 11th 12th 13th 14th 15th 16th 17th 18th 19th 20th Administration Airports Charles de Gaulle Orly Archdiocese Architecture era of absolutism tallest buildings Bridges Culture music Cycling V√©lib' M√©tropole Economy Education History timeline Landmarks Libraries Mayors Museums list Squares Topography Transport M√©tro Transilien Tramways RER Tourism syndrome Grand Paris Paris metropolitan area √éle-de-France France v t e Paris Marseille Lyon Toulouse Nice Nantes Montpellier Strasbourg Bordeaux Lille Rennes Toulon Reims Saint-√âtienne Le Havre Villeurbanne Dijon Angers Grenoble Saint-Denis, R√©union N√Æmes Saint-Denis, Seine-Saint-Denis Aix-en-Provence Clermont-Ferrand Le Mans Brest Tours Amiens Annecy Limoges Metz Perpignan Boulogne-Billancourt Besan√ßon Orl√©ans Rouen Montreuil Caen Argenteuil Saint-Paul Mulhouse Nancy Complete list v t e Tourism in Paris Landmarks Arc de Triomphe Arc de Triomphe du Carrousel Ar√®nes de Lut√®ce Bourse Catacombs Conciergerie Eiffel Tower Gare d'Austerlitz Gare de l'Est Gare de Lyon Gare du Nord Gare Montparnasse Gare Saint-Lazare Grand Palais Petit Palais Institut de France Jeanne d'Arc Les Invalides Napoleon's tomb Louvre Pyramid Luxor Obelisk Od√©on Op√©ra Bastille Op√©ra Garnier Panth√©on Philharmonie de Paris Place Diana Flame of Liberty Porte Saint-Denis Porte Saint-Martin Sorbonne Tour Montparnasse Museums list Army Museum Biblioth√®que nationale Carnavalet Centre Pompidou Cit√© des Sciences et de l'Industrie Galerie nationale du Jeu de Paume Louis Vuitton Foundation Mus√©e des Arts d√©coratifs Mus√©e des Arts et M√©tiers Mus√©e d'Art et d'Histoire du Juda√Øsme Mus√©e d'Art Moderne de Paris Maison de Balzac Mus√©e Bourdelle Mus√©e de la Cin√©math√®que Mus√©e Cognacq-Jay Mus√©e Gr√©vin Mus√©e Guimet Maison de Victor Hugo Mus√©e Jacquemart-Andr√© Mus√©e du Louvre Mus√©e Marmottan Monet Mus√©e de la Vie romantique Mus√©e de Montmartre Mus√©e National d'Art Moderne Mus√©e national Eug√®ne Delacroix Mus√©e national Gustave Moreau Mus√©e national des Monuments Fran√ßais Mus√©um national d'histoire naturelle Mus√©e de Cluny ‚Äì Mus√©e national du Moyen √Çge Mus√©e de l'Orangerie Mus√©e d'Orsay Mus√©e Pasteur Mus√©e Picasso Mus√©e du Quai Branly Mus√©e Rodin Palais de la L√©gion d'Honneur Mus√©e de la L√©gion d'honneur Palais de Tokyo Religious buildings Alexander Nevsky Cathedral American Cathedral American Church Armenian Cathedral of St. John the Baptist Chapelle expiatoire Grand Mosque Grand Synagogue Synagogue de Nazareth La Madeleine Notre-Dame de Paris Notre-Dame-de-Bonne-Nouvelle Notre-Dame-de-Lorette Notre-Dame-des-Victoires Sacr√©-C≈ìur Saint Ambroise Saint-Augustin Saint-√âtienne-du-Mont Saint-Eustache Saint-Fran√ßois-Xavier Saint-Germain-des-Pr√©s Saint-Germain l'Auxerrois Saint-Gervais-Saint-Protais Tour Saint-Jacques Saint-Jean de Montmartre Saint-Paul-Saint-Louis Saint-Pierre de Montmartre Saint-Roch Saint-Sulpice Saint-Vincent-de-Paul Sainte-Chapelle Sainte-Clotilde Sainte-Trinit√© Temple du Marais Val-de-Gr√¢ce √âlys√©e Palace H√¥tel de Beauvais H√¥tel de Charost H√¥tel de Crillon H√¥tel d'Estr√©es H√¥tel de la Pa√Øva H√¥tel de Pontalba H√¥tel de Sens H√¥tel de Soubise H√¥tel de Sully H√¥tel de Ville H√¥tel Lambert H√¥tel Matignon Luxembourg Palace Petit Luxembourg Palais Bourbon Palais de Justice Palais de la Cit√© Palais-Royal Avenue de l'Op√©ra Avenue Foch Avenue George V Boulevard de la Madeleine Boulevard de S√©bastopol Canal de l'Ourcq Canal Saint-Martin Champ de Mars Champs-√âlys√©es Covered passages Galerie V√©ro-Dodat Choiseul Panoramas Galerie Vivienne Havre Jouffroy Brady Latin Quarter Le Marais Montmartre Montparnasse Place Diana Place Dauphine Place de la Bastille Place de la Concorde Place de la Nation Place de la R√©publique Place des √âmeutes-de-Stonewall Place des √âtats-Unis Place des Pyramides Place des Victoires Place des Vosges Place du Carrousel Place du Ch√¢telet Place du Tertre Place Saint-Michel Place Vend√¥me Pont Alexandre III Pont d'I√©na Pont de Bir-Hakeim Pont des Arts Pont Neuf Port du Louvre Rive Gauche Rue Basse Rue Bonaparte Rue Charlemagne Rue d'Argenteuil Rue de la Ferronnerie Rue de la Paix Rue de la Sourdi√®re Rue de Montmorency Rue de Richelieu Rue de Rivoli Rue de Vaugirard Rue des Francs-Bourgeois Rue des Lombards Rue du Faubourg Saint-Honor√© Rue Elz√©vir Rue Foyatier Rue Moli√®re Rue Montorgueil Rue Radziwill Rue Rambuteau Rue Mond√©tour Rue Pastourelle Rue des Rosiers Rue Saint-Honor√© Rue Saint-Denis Rue Sainte-Anne Saint-Germain-des-Pr√©s Trocad√©ro Viaduc d'Austerlitz Parks and gardens list Bois de Boulogne Jardin d'Acclimatation Bois de Vincennes Parc floral Jardin du Luxembourg Parc Andr√©-Citro√´n Parc Clichy-Batignolles Parc de Belleville Parc de Bercy Parc de la Butte-du-Chapeau-Rouge Parc des Buttes Chaumont Parc Georges-Brassens Parc Monceau Parc Montsouris Tuileries Garden Coul√©e verte Ren√©-Dumont Accor Arena Auteuil Hippodrome Halle Georges Carpentier Longchamp Hippodrome Parc des Princes Piscine Molitor Porte de La Chapelle Arena Stade Jean Bouin Stade Pershing Stade Pierre de Coubertin Stade Roland Garros Stade S√©bastien Charl√©ty V√©lodrome de Vincennes Vincennes Hippodrome Montmartre Cemetery Montparnasse Cemetery Passy Cemetery P√®re Lachaise Cemetery Oscar Wilde's tomb Picpus Cemetery R√©gion parisienne Basilica of Saint-Denis Ch√¢teau d'√âcouen Ch√¢teau de Chantilly Ch√¢teau de Fontainebleau Ch√¢teau de Malmaison Ch√¢teau de Rambouillet Ch√¢teau de Saint-Germain-en-Laye Ch√¢teau de Sceaux Ch√¢teau Gardens of Versailles Grand Trianon Petit Trianon Fresh pavilion Ch√¢teau de Vincennes La D√©fense Grande Arche Paris La D√©fense Arena Disneyland Paris Disneyland Park Walt Disney Studios Park Explorad√¥me Fort Mont-Val√©rien M√©morial de la France combattante Suresnes American Cemetery and Memorial France Miniature Mus√©e de l'air et de l'espace Mus√©e Fragonard d'Alfort Parc Ast√©rix Parc de Saint-Cloud Provins La Roche-Guyon S√®vres ‚Äì Cit√© de la c√©ramique Stade de France Vaux-le-Vicomte Culture and events Bastille Day military parade D√Æner en Blanc F√™te de la Musique Nuit Blanche Paris Air Show Paris Fashion Week Paris-Plages Republican Guard Solidays Axe historique Bateau-Lavoir Bateaux Mouches Caf√© des 2 Moulins Caf√© Procope Folies Berg√®re Fountains in Paris La Ruche Les Deux Magots Maxim's Moulin de la Galette Moulin Rouge Paris M√©tro entrances Montmartre Funicular Paris Mus√©es Paris syndrome Paris Zoological Park Pyramide invers√©e World Heritage Centre List of tourist attractions in Paris Art in Paris Paris syndrome v t e Paris transport network M√©tro RER Transilien Tramway Bus RATP Tvm Noctilien CDGVAL Orlyval Montmartre Funicular Grand Paris Express CDG Express Line 3bis and Line 7bis merger IDFM RATP SNCF Optile Keolis Transdev Navigo card Public transport fares in the √éle-de-France Versement transport List of Paris M√©tro stations Architecture Ghost stations RER Transilien in Paris List of tram stops v t e Communes Paris metropolitan area Paris Argenteuil Boulogne-Billancourt Montreuil Saint-Denis Asni√®res-sur-Seine Aubervilliers Aulnay-sous-Bois Champigny-sur-Marne Colombes Courbevoie Cr√©teil Nanterre Rueil-Malmaison Versailles Vitry-sur-Seine Antony Le Blanc-Mesnil Bobigny Bondy Cergy Chelles Clamart Clichy Corbeil-Essonnes Drancy √âpinay-sur-Seine √âvry-Courcouronnes Fontenay-sous-Bois Issy-les-Moulineaux Ivry-sur-Seine Levallois-Perret Maisons-Alfort Massy Meaux Neuilly-sur-Seine Noisy-le-Grand Pantin Saint-Maur-des-Foss√©s Saint-Ouen-sur-Seine Sarcelles Sartrouville Sevran Villejuif Alfortville Athis-Mons Bagneux Bagnolet Bezons Bois-Colombes Br√©tigny-sur-Orge Brunoy Bussy-Saint-Georges Cachan Champs-sur-Marne Charenton-le-Pont Ch√¢tenay-Malabry Ch√¢tillon Chatou Le Chesnay-Rocquencourt Choisy-le-Roi Clichy-sous-Bois Conflans-Sainte-Honorine Cormeilles-en-Parisis La Courneuve Creil Draveil Dreux Eaubonne √âlancourt Ermont √âtampes Fontenay-aux-Roses Franconville Fresnes Gagny La Garenne-Colombes Garges-l√®s-Gonesse Gennevilliers Gonesse Goussainville Grigny Guyancourt L'Ha√ø-les-Roses Herblay-sur-Seine Houilles Limeil-Br√©vannes Livry-Gargan Malakoff Mantes-la-Jolie Melun Meudon Montfermeil Montigny-le-Bretonneux Montrouge Les Mureaux Neuilly-sur-Marne Nogent-sur-Marne Noisy-le-Sec Palaiseau Le Perreux-sur-Marne Plaisir Le Plessis-Robinson Poissy Pontault-Combault Pontoise Puteaux Rambouillet Ris-Orangis Romainville Rosny-sous-Bois Saint-Cloud Saint-Germain-en-Laye Sainte-Genevi√®ve-des-Bois Sannois Savigny-sur-Orge Savigny-le-Temple Stains Sucy-en-Brie Suresnes Taverny Thiais Trappes Tremblay-en-France Les Ulis Vanves Vigneux-sur-Seine Villemomble Villeneuve-Saint-Georges Villeparisis Villepinte Villiers-le-Bel Villiers-sur-Marne Vincennes Viry-Ch√¢tillon Yerres v t e √éle-de-France Paris Essonne √âvry-Courcouronnes Three arrondissements 21 cantons 194 communes 10 legislative constituencies 10 intercommunalities Hauts-de-Seine Nanterre Three arrondissements 23 cantons 36 communes 13 legislative constituencies 4 EPTs Paris Paris One departmental arrondissement 1 commune 20 municipal arrondissements 80 administrative quarters 18 legislative constituencies 1 intercommunality Seine-et-Marne Melun Five arrondissements 23 cantons 507 communes 11 legislative constituencies 21 intercommunalities Seine-Saint-Denis Bobigny Three arrondissements 21 cantons 40 communes 12 legislative constituencies 4 EPTs Val-de-Marne Cr√©teil Three arrondissements 25 cantons 47 communes 11 legislative constituencies 3 EPTs Val-d'Oise Pontoise Three arrondissements 21 cantons 184 communes 10 legislative constituencies 10 intercommunalities Yvelines Versailles Four arrondissements 21 cantons 259 communes 12 legislative constituencies 10 intercommunalities v t e Prefectures departments France Bourg-en-Bresse Ain Laon Aisne Moulins Allier Digne-les-Bains Alpes-de-Haute-Provence Gap Hautes-Alpes Nice Alpes-Maritimes Privas Ard√®che Charleville-M√©zi√®res Ardennes Foix Ari√®ge Troyes Aube Carcassonne Aude Rodez Aveyron Marseille Bouches-du-Rh√¥ne Caen Calvados Aurillac Cantal Angoul√™me Charente La Rochelle Charente-Maritime Bourges Cher Tulle Corr√®ze Ajaccio Corse-du-Sud Bastia Haute-Corse Dijon C√¥te-d'Or Saint-Brieuc C√¥tes-d'Armor Gu√©ret Creuse P√©rigueux Dordogne Besan√ßon Doubs Valence Dr√¥me √âvreux Eure Chartres Eure-et-Loir Quimper Finist√®re N√Æmes Gard Toulouse Haute-Garonne Auch Gers Bordeaux Gironde Montpellier H√©rault Rennes Ille-et-Vilaine Ch√¢teauroux Indre Tours Indre-et-Loire Grenoble Is√®re Lons-le-Saunier Jura Mont-de-Marsan Landes Blois Loir-et-Cher Saint-√âtienne Loire Le Puy-en-Velay Haute-Loire Nantes Loire-Atlantique Orl√©ans Loiret Cahors Lot Agen Lot-et-Garonne Mende Loz√®re Angers Maine-et-Loire Saint-L√¥ Manche Ch√¢lons-en-Champagne Marne Chaumont Haute-Marne Laval Mayenne Nancy Meurthe-et-Moselle Bar-le-Duc Meuse Vannes Morbihan Metz Moselle Nevers Ni√®vre Lille Nord Beauvais Oise Alen√ßon Orne Arras Pas-de-Calais Clermont-Ferrand Puy-de-D√¥me Pau Pyr√©n√©es-Atlantiques Tarbes Hautes-Pyr√©n√©es Perpignan Pyr√©n√©es-Orientales Strasbourg Bas-Rhin Colmar Haut-Rhin Lyon Rh√¥ne Vesoul Haute-Sa√¥ne M√¢con Sa√¥ne-et-Loire Le Mans Sarthe Chamb√©ry Savoie Annecy Haute-Savoie Paris Paris Rouen Seine-Maritime Melun Seine-et-Marne Versailles Yvelines Niort Deux-S√®vres Amiens Somme Albi Tarn Montauban Tarn-et-Garonne Toulon Var Avignon Vaucluse La Roche-sur-Yon Vend√©e Poitiers Vienne Limoges Haute-Vienne √âpinal Vosges Auxerre Yonne Belfort Territoire de Belfort √âvry-Courcouronnes Essonne Nanterre Hauts-de-Seine Bobigny Seine-Saint-Denis Cr√©teil Val-de-Marne Cergy Pontoise Val-d'Oise Overseas departments Basse-Terre Guadeloupe Fort-de-France Martinique Cayenne French Guiana Saint-Denis R√©union Mamoudzou Mayotte v t e Prefectures regions France Metropolitan regions Lyon Auvergne-Rh√¥ne-Alpes Dijon Bourgogne-Franche-Comt√© Rennes Brittany Orl√©ans Centre-Val de Loire Ajaccio Corsica Strasbourg Grand Est Lille Hauts-de-France Paris √éle-de-France Rouen Normandy Bordeaux Nouvelle-Aquitaine Toulouse Occitania Nantes Pays de la Loire Marseille Provence-Alpes-C√¥te d'Azur Overseas regions Cayenne French Guiana Basse-Terre Guadeloupe Fort-de-France Martinique Mamoudzou Mayotte Saint Denis R√©union v t e Departments of France Metropolitan Ain Aisne Allier Alpes-de-Haute-Provence Hautes-Alpes Alpes-Maritimes Ard√®che Ardennes Ari√®ge Aube Aude Aveyron Bouches-du-Rh√¥ne Calvados Cantal Charente Charente-Maritime Cher Corr√®ze Corse-du-Sud Haute-Corse C√¥te-d'Or C√¥tes-d'Armor Creuse Dordogne Doubs Dr√¥me Eure Eure-et-Loir Finist√®re Gard Haute-Garonne Gers Gironde H√©rault Ille-et-Vilaine Indre Indre-et-Loire Is√®re Jura Landes Loir-et-Cher Loire Haute-Loire Loire-Atlantique Loiret Lot Lot-et-Garonne Loz√®re Maine-et-Loire Manche Marne Haute-Marne Mayenne Meurthe-et-Moselle Meuse Morbihan Moselle Ni√®vre Nord Oise Orne Pas-de-Calais Puy-de-D√¥me Pyr√©n√©es-Atlantiques Hautes-Pyr√©n√©es Pyr√©n√©es-Orientales Bas-Rhin Haut-Rhin Rh√¥ne Haute-Sa√¥ne Sa√¥ne-et-Loire Sarthe Savoie Haute-Savoie Seine-Maritime Seine-et-Marne Yvelines Deux-S√®vres Somme Tarn Tarn-et-Garonne Var Vaucluse Vend√©e Vienne Haute-Vienne Vosges Yonne Territoire de Belfort Essonne Hauts-de-Seine Seine-Saint-Denis Val-de-Marne Val-d'Oise Overseas Guadeloupe Martinique French Guiana R√©union Mayotte Lyon Paris Saint Pierre and Miquelon sister projects Definitions Media News Quotations Texts Textbooks Resources Travel guides Data Authority control databases ISNI VIAF FAST WorldCat Germany United States France BnF data Japan Italy Australia Czech Republic Spain Norway Taiwan Latvia Chile Argentina Israel Catalonia MusicBrainz area CiNii KulturNav Victoria IdRef Historical Dictionary of Switzerland NARA 2 SNAC https://en.wikipedia.org/w/index.php?title=Paris&oldid=1294086036 Categories Paris Capitals in Europe Catholic pilgrimage sites Cities in France Cities in √éle-de-France Companions of the Liberation Departments of √éle-de-France Culture of Europe Culture of France Gallia Lugdunensis Populated places established in the 3rd century BC Prefectures in France Pages using gadget WikiMiniAtlas Pages using the Phonos extension CS1 French-language sources (fr) Webarchive template wayback links Articles with French-language sources (fr) CS1 Italian-language sources (it) Articles with short description Short description is different from Wikidata Good articles Wikipedia indefinitely semi-protected pages EngvarB from July 2018 Use dmy dates from August 2024 Pages using infobox settlement with bad settlement type Articles containing French-language text Pages using multiple image with auto scaled images Articles containing Latin-language text Pages using infobox settlement with possible motto list Coordinates on Wikidata Pages using infobox settlement with possible demonym list Pages using infobox settlement with image map1 but not image map Pages with French IPA Pages including recorded pronunciations All articles with failed verification Articles with failed verification from November 2024 All pages needing factual verification Wikipedia articles needing factual verification from June 2019 All articles with incomplete citations Articles with incomplete citations from November 2023 Articles with Italian-language sources (it) CS1 errors: ISBN date Wikipedia articles incorporating a citation from the 1911 Encyclopaedia Britannica with Wikisource reference Pages using Sister project links with wikidata namespace mismatch Pages using Sister project links with hidden wikidata Pages using the Kartographer extension\nToggle the table of contents Paris 281 languages Ac√®h –ê–¥—ã–≥—ç–±–∑—ç –ê–¥—ã–≥–∞–±–∑—ç Afrikaans Alemannisch ·ä†·àõ·à≠·äõ Anar√¢≈°kiel√¢ ‡§Ö‡§Ç‡§ó‡§ø‡§ï‡§æ √Ünglisc ÿßŸÑÿπÿ±ÿ®Ÿäÿ© Aragon√©s ‹ê‹™‹°‹ù‹ê ‘±÷Ä’•÷Ç’¥’ø’°’∞’°’µ’•÷Ä’ß’∂ Arm√£neashti Arpetan ‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ Asturianu Atikamekw ‡§Ö‡§µ‡§ß‡•Ä Ava√±e'·∫Ω –ê–≤–∞—Ä Aymar aru Az…ôrbaycanca ÿ™€Üÿ±⁄©ÿ¨Ÿá Basa Bali Bamanankan ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ Èñ©ÂçóË™û / B√¢n-l√¢m-g√∫ –ë–∞—à“°–æ—Ä—Ç—Å–∞ –ë–µ–ª–∞—Ä—É—Å–∫–∞—è –ë–µ–ª–∞—Ä—É—Å–∫–∞—è (—Ç–∞—Ä–∞—à–∫–µ–≤—ñ—Ü–∞) ‡§≠‡•ã‡§ú‡§™‡•Å‡§∞‡•Ä Bikol Central Bislama –ë—ä–ª–≥–∞—Ä—Å–∫–∏ Boarisch ‡Ωñ‡Ωº‡Ωë‡ºã‡Ω°‡Ω≤‡ΩÇ Bosanski Brezhoneg –ë—É—Ä—è–∞–¥ Catal√† –ß”ë–≤–∞—à–ª–∞ Cebuano ƒåe≈°tina Chamoru Chavacano de Zamboanga Chi-Chewa ChiShona ChiTumbuka Corsu Cymraeg Dagbanli Dansk ÿßŸÑÿØÿßÿ±ÿ¨ÿ© Davvis√°megiella Deitsch Deutsch Din√© bizaad Dolnoserbski ‡§°‡•ã‡§ü‡•á‡§≤‡•Ä ‡Ωá‡Ωº‡ΩÑ‡ºã‡ΩÅ Eesti ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ Emili√†n e rumagn√≤l –≠—Ä–∑—è–Ω—å Espa√±ol Esperanto Estreme√±u Euskara E ãegbe ŸÅÿßÿ±ÿ≥€å Fiji Hindi F√∏royskt Fran√ßais Frysk Fulfulde Furlan Gaeilge Gaelg Gagauz G√†idhlig Galego –ì”Ä–∞–ª–≥”Ä–∞–π Ë¥õË™û ⁄Ø€åŸÑ⁄©€å ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä êå≤êåøêçÑêåπêçÉêå∫ ‡§ó‡•ã‡§Ç‡§Ø‡§ö‡•Ä ‡§ï‡•ã‡§Ç‡§ï‡§£‡•Ä / G√µychi Konknni Gungbe ÂÆ¢ÂÆ∂Ë™û / Hak-k√¢-ng√Æ ÌïúÍµ≠Ïñ¥ Hausa Hawai ªi ’Ä’°’µ’•÷Ä’•’∂ ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä Hornjoserbsce Hrvatski Ido Ilokano Bahasa Indonesia Interlingua Interlingue ·êÉ·ìÑ·íÉ·ëé·ëê·ë¶ / inuktitut –ò—Ä–æ–Ω IsiXhosa IsiZulu √çslenska Italiano ◊¢◊ë◊®◊ô◊™ Jawa Kab…©y…õ Kalaallisut ‡≤ï‡≤®‡≥ç‡≤®‡≤° Kapampangan –ö—ä–∞—Ä–∞—á–∞–π-–º–∞–ª–∫—ä–∞—Ä ·É•·Éê·É†·Éó·É£·Éö·Éò ‡§ï‡•â‡§∂‡•Å‡§∞ / ⁄©Ÿ≤ÿ¥Ÿèÿ± Kasz√´bsczi “ö–∞–∑–∞“õ—à–∞ Kernowek Ikinyarwanda Ikirundi Kiswahili –ö–æ–º–∏ Kongo Kotava Krey√≤l ayisyen Kriy√≤l gwiyannen Kurd√Æ –ö—ã—Ä–≥—ã–∑—á–∞ –ö—ã—Ä—ã–∫ –º–∞—Ä—ã Ladin Ladino ‡∫•‡∫≤‡∫ß Latgaƒºu Latina Latvie≈°u L√´tzebuergesch –õ–µ–∑–≥–∏ Lietuvi≈≥ Ligure Limburgs Ling√°la Lingua Franca Nova Livvinkarjala La .lojban. Luganda Lombard Magyar ‡§Æ‡•à‡§•‡§ø‡§≤‡•Ä –ú–∞–∫–µ–¥–æ–Ω—Å–∫–∏ Malagasy ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç Malti MƒÅori ‡§Æ‡§∞‡§æ‡§†‡•Ä ·Éõ·Éê·É†·Éí·Éê·Éö·É£·É†·Éò ŸÖÿµÿ±Ÿâ ŸÖÿßÿ≤Ÿêÿ±ŸàŸÜ€å Bahasa Melayu Minangkabau Èñ©Êù±Ë™û / M√¨ng-dƒïÃ§ng-ng·π≥ÃÑ Mirand√©s –ú–æ–∫—à–µ–Ω—å –ú–æ–Ω–≥–æ–ª ·Äô·Äº·Äî·Ä∫·Äô·Ä¨·Äò·Ä¨·Äû·Ä¨ Na Vosa Vakaviti Nederlands Nedersaksies ‡§®‡•á‡§™‡§æ‡§≤‡•Ä ‡§®‡•á‡§™‡§æ‡§≤ ‡§≠‡§æ‡§∑‡§æ Êó•Êú¨Ë™û Napulitano –ù–æ—Ö—á–∏–π–Ω Nordfriisk Norsk bokm√•l Norsk nynorsk Nouormand Novial Occitan –û–ª—ã–∫ –º–∞—Ä–∏–π ‡¨ì‡¨°‡¨º‡¨ø‡¨Ü Oromoo O ªzbekcha / —û–∑–±–µ–∫—á–∞ ‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä ŸæŸÜÿ¨ÿßÿ®€å Papiamentu Ÿæ⁄öÿ™Ÿà Patois –ü–µ—Ä–µ–º –∫–æ–º–∏ ·ûó·û∂·ûü·û∂·ûÅ·üí·ûò·üÇ·ûö Picard Piemont√®is Pinayuanan Tok Pisin Plattd√º√ºtsch Polski Œ†ŒøŒΩœÑŒπŒ±Œ∫Œ¨ Portugu√™s Qaraqalpaqsha Qƒ±rƒ±mtatarca Reo tahiti Rom√¢nƒÉ Romani ƒçhib Rumantsch Runa Simi –†—É—Å–∏–Ω—å—Å–∫—ã–π –†—É—Å—Å–∫–∏–π –°–∞—Ö–∞ —Ç—ã–ª–∞ Gagana Samoa S√§ng√∂ ·±•·±ü·±±·±õ·±ü·±≤·±§ Sardu Scots Seeltersk Sesotho Shqip Sicilianu ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω Simple English ÿ≥ŸÜ⁄åŸä Slovenƒçina Sloven≈°ƒçina –°–ª–æ–≤—£–Ω—å—Å–∫—ä / ‚∞î‚∞é‚∞ë‚∞Ç‚∞°‚∞ê‚∞†‚∞î‚∞ç‚∞ü ≈öl≈Ønski Soomaaliga ⁄©Ÿàÿ±ÿØ€å Sranantongo –°—Ä–ø—Å–∫–∏ / srpski Srpskohrvatski / —Å—Ä–ø—Å–∫–æ—Ö—Ä–≤–∞—Ç—Å–∫–∏ Sunda Suomi Svenska Tagalog ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç Tacl·∏•it Taqbaylit Tarand√≠ne –¢–∞—Ç–∞—Ä—á–∞ / tatar√ßa ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å Tetun ‡πÑ‡∏ó‡∏¢ –¢–æ“∑–∏–∫”£ Lea faka-Tonga Tsets√™hest√¢hese T√ºrk√ße T√ºrkmen√ße Twi Tyap –¢—ã–≤–∞ –¥—ã–ª –£–¥–º—É—Ä—Ç –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ ÿßÿ±ÿØŸà ÿ¶€áŸäÿ∫€áÿ±⁄Ü€ï / Uyghurche Vahcuengh V√®neto Veps√§n kel‚Äô Ti·∫øng Vi·ªát Volap√ºk V√µro Walon ÊñáË®Ä West-Vlams Winaray Wolof Âê¥ËØ≠ ◊ô◊ô÷¥◊ì◊ô◊© Yor√πb√° Á≤µË™û Zazaki Ze√™uws ≈Ωemaitƒó≈°ka ‰∏≠Êñá Betawi F…îÃÄngb√® Kumoring Yerwa Kanuri Nupe –†—É—Å–∫–∏ Tolƒ±≈üi ‚µú‚¥∞‚µé‚¥∞‚µ£‚µâ‚µñ‚µú ‚µú‚¥∞‚µè‚¥∞‚µ°‚¥∞‚µ¢‚µú Edit links Article Talk English Read View source View history Tools Read View source View history What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Download as PDF Printable version Wikimedia Commons Wikinews Wikiquote Wikivoyage Wikidata item Coordinates: .mw-parser-output .geo-default,.mw-parser-output .geo-dms,.mw-parser-output .geo-dec{display:inline}.mw-parser-output .geo-nondefault,.mw-parser-output .geo-multi-punct,.mw-parser-output .geo-inline-hidden{display:none}.mw-parser-output .longitude,.mw-parser-output .latitude{white-space:nowrap}48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E / 48.85667¬∞N 2.35222¬∞E / 48.85667; 2.35222 48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E / 48.85667¬∞N 2.35222¬∞E / 48.85667; 2.35222 48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E 48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E 48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E / 48.85667¬∞N 2.35222¬∞E / 48.85667; 2.35222 48.85667¬∞N 2.35222¬∞E / 48.85667; 2.35222 48.85667; 2.35222 Palais Garnier Palais Garnier Fluctuat nec mergitur Show map of France Show map of √éle-de-France (region) .mw-parser-output .geo-default,.mw-parser-output .geo-dms,.mw-parser-output .geo-dec{display:inline}.mw-parser-output .geo-nondefault,.mw-parser-output .geo-multi-punct,.mw-parser-output .geo-inline-hidden{display:none}.mw-parser-output .longitude,.mw-parser-output .latitude{white-space:nowrap}48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E / 48.85667¬∞N 2.35222¬∞E / 48.85667; 2.35222 48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E / 48.85667¬∞N 2.35222¬∞E / 48.85667; 2.35222 48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E 48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E 48¬∞51‚Ä≤24‚Ä≥N 2¬∞21‚Ä≤8‚Ä≥E / 48.85667¬∞N 2.35222¬∞E / 48.85667; 2.35222 48.85667¬∞N 2.35222¬∞E / 48.85667; 2.35222 48.85667; 2.35222 (2020‚Äì2026) [ ] [ ] [ ] [ ] [ ] [ ] [ ] ‚Ä¢ Summer (DST) paris.fr French pronunciation: [pa Åi] ‚ìò [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] Mus√©e National d'Art Moderne Mus√©e National d'Art Moderne [ ] [ ] [ ] Lutetia Lutecia [ ] [ ] [ ] [ ] [ ] [ ] [ ] [pa Åizj…õÃÉ] ‚ìò [pa Åi…°o] ‚ìò [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] merde [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] Petit Palais Petit Palais [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] failed verification [ ] [ ] [ ] [ ] [ ] [ ] [ ] (‚â• 1.0 mm) [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] conseil d'arrondissement [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] √éle-de-France [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] verification needed [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] Cr√©dit Agricole Cr√©dit Agricole [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] Op√©ra Garnier [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] full citation needed [ ] [ ] [ ] [ ] [ ] [ ] [ ] Mus√©e National d'Art Moderne Mus√©e National d'Art Moderne Petit Palais Petit Palais [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] Acad√©mie fran√ßaise Acad√©mie fran√ßaise [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] Les Deux Magots Les Deux Magots Les Deux Magots Les Deux Magots [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] (in French) (in Italian) [ ] [ ] [ ] [ ] [ ] France portal Cities portal ^ The word was most likely created by Parisians of the lower popular class who spoke *argot*, then *parigot* was used in a provocative manner outside the Parisian region and throughout France to mean Parisians in general. ^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:\"\\\"\"\"\\\"\"\"'\"\"'\"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free.id-lock-free a{background:url(\"//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited.id-lock-limited a,.mw-parser-output .id-lock-registration.id-lock-registration a{background:url(\"//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription.id-lock-subscription a{background:url(\"//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url(\"//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg\")right 0.1em center/12px no-repeat}body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-free a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-limited a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-registration a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-subscription a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .cs1-ws-icon a{background-size:contain;padding:0 1em 0 0}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:var(--color-error,#d33)}.mw-parser-output .cs1-visible-error{color:var(--color-error,#d33)}.mw-parser-output .cs1-maint{display:none;color:#085;margin-left:0.3em}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}@media screen{.mw-parser-output .cs1-format{font-size:95%}html.skin-theme-clientpref-night .mw-parser-output .cs1-maint{color:#18911f}}@media screen and (prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .cs1-maint{color:#18911f}}\"R√©pertoire national des √©lus: les maires\". data.gouv.fr (in French). 16 December 2022. Archived from the original on 27 February 2023. ^ a b c d e \"D√©partement: Paris (75); Unit√© urbaine: Paris (00851); R√©gion: √éle-de-France (11); Aire d'attraction des villes: Paris (001)\". insee.fr. INSEE. 9 January 2025. Retrieved 24 January 2025. . Retrieved 24 January 2025 24 January ^ a b c d \"Estimation de la population au 1·µâ ≥ Janvier 2025 - S√©ries par r√©gion, d√©partement, sexe et √¢ge\". insee.fr. INSEE. 14 January 2025. Retrieved 24 January 2025. . Retrieved 24 January 2025 24 January ^ \"Populations l√©gales 2019: Commune de Paris (75056)\". INSEE. 29 December 2021. Archived from the original on 22 January 2022. Retrieved 3 February 2022. . Retrieved 3 February 2022 3 February ^ \"The World's Most Densely Populated Cities\". WorldAtlas. 4 October 2020. Archived from the original on 19 March 2022. Retrieved 4 March 2022. . Retrieved 4 March 2022 4 March ^ \"Paris\". Encyclop√¶dia Britannica. Archived from the original on 27 August 2022. Retrieved 8 August 2022. . Retrieved 8 August 2022 8 August ^ Source: PPPs and exchange rates. \"Conversion rates ‚Äì Purchasing power parities (PPP) ‚Äì OECD Data\". Data.oecd.org. Archived from the original on 4 November 2017. Retrieved 9 March 2022. . Retrieved 9 March 2022 9 March ^ \"Gross domestic product (GDP) at current market prices by metropolitan regions\". ec.europa.eu. 10 March 2023. Archived from the original on 15 February 2023. Retrieved 13 June 2023. . Retrieved 13 June 2023 13 June ^ \"The world's most, and least, expensive cities\". The Economist. ISSN 0013-0613. Archived from the original on 1 December 2022. Retrieved 1 December 2022. . Retrieved 1 December 2022 1 December ^ \"List: The world's 20 busiest airports (2017)\". USA Today. Archived from the original on 25 June 2018. Retrieved 2 May 2018. . Retrieved 2 May 2018 2 May ^ \"ACI reveals the world's busiest passenger and cargo airports\". Airport World. 9 April 2018. Archived from the original on 28 June 2018. Retrieved 2 May 2018. . Retrieved 2 May 2018 2 May ^ a b Zhang, Yiqian (26 November 2019). \"Paris leads the way for sustainable urban mobility\". ICLEI ‚Äì Sustainable Mobility, 2024. Archived from the original on 7 January 2024. Retrieved 7 January 2024. . Retrieved 7 January 2024 7 January ^ a b \"Paris, France Honored with the 2023 Sustainable Transport Award\". Institute for Transportation & Development policy. 10 January 2023. Archived from the original on 7 January 2024. Retrieved 7 January 2024. . Retrieved 7 January 2024 7 January ^ \"The Art Newspaper\", 27 March 2023 ^ \"Paris, Banks of the Seine\". UNESCO World Heritage Centre. United Nations Educational, Scientific, and Cultural Organization. Archived from the original on 9 May 2019. Retrieved 17 October 2021. . Retrieved 17 October 2021 17 October ^ N√®gre 1990, p. 155. ^ a b c Falileyev 2010, s.v. Parisii and Lutetia. ^ Lambert 1994, p. 38. ^ Delamarre 2003, p. 211. ^ a b Delamarre 2003, p. 247. ^ Busse 2006, p. 199. ^ Dottin 1920, p. 535. ^ Arbois de Jubainville & Dottin 1889, p. 132. ^ Cunliffe 2004, p. 201. ^ Lawrence & Gondrand 2010, p. 25. ^ Schmidt 2009, pp. 65‚Äì70. ^ Schmidt 2009, pp. 88‚Äì104. ^ Schmidt 2009, pp. 154‚Äì167. ^ Meunier 2014, p. 12. ^ a b Schmidt 2009, pp. 210‚Äì211. ^ Patrick Boucheron, et al., eds. France in the World: A New Global History (2019) pp 81‚Äì86. ^ Jones 1994, p. 48. ^ a b Lawrence & Gondrand 2010, p. 27. ^ Bussmann 1985, p. 22. ^ de Vitriaco & Hinnebusch 1972, p. 262. ^ Sarmant 2012, pp. 36‚Äì40. ^ Sarmant 2012, pp. 28‚Äì29. ^ \"Paris history facts\". Paris Digest. 2018. Archived from the original on 6 September 2018. Retrieved 6 September 2018. . Retrieved 6 September 2018 6 September ^ John Kelly, \"The Great Mortality\" (2005). pp 42 ^ Du Fresne de Beaucourt, G., Histoire de Charles VII, Tome I: Le Dauphin (1403‚Äì1422), Librairie de la Soci√©t√© bibliographiqque, 35 Rue de Grenelle, Paris, 1881, pp. 32 & 48 ^ Fierro 1996, pp. 52‚Äì53. ^ \"Massacre of Saint Bartholomew's Day\". Encyclop√¶dia Britannica Online. Archived from the original on 4 May 2015. Retrieved 23 November 2014. . Retrieved 23 November 2014 23 November ^ Bayrou 1994, pp. 121‚Äì130. ^ Fierro 1996, p. 577. ^ Fierro 1996, p. 582. ^ Combeau 2003, pp. 42‚Äì43. ^ Fierro 1996, pp. 590‚Äì591. ^ Durant, Will; Durant, Ariel (1975). The Story of Civilization XI The Age of Napoleon. Simon & Schuster. p. 3. ISBN 978-0-671-21988-8. Archived from the original on 29 December 2016. Retrieved 11 February 2016. . Retrieved 11 February 2016 11 February ^ Combeau 2003, pp. 45‚Äì47. ^ Sarmant 2012, pp. 129‚Äì133. ^ Sarmant 2012, p. 120. ^ Paine 1998, p. 453. ^ Fierro 1996, p. 674. ^ Sarmant 2012, p. 144. ^ Sarmant 2012, p. 147. ^ a b c Sarmant 2012, p. 148. ^ a b De Moncan 2012, pp. 7‚Äì35. ^ Rougerie 2014, p. 118. ^ Fraser & Spalding 2011, p. 117. ^ Fierro 1996, pp. 490‚Äì491. ^ Combeau 2003, p. 61. ^ Fierro 1996, p. 497. ^ Franck, Dan (1 December 2007). Bohemian Paris: Picasso, Modigliani, Matisse, and the Birth of Modern Art. Open Road + Grove/Atlantic. ISBN 978-0-8021-9740-5. Archived from the original on 18 November 2015 ‚Äì via Google Books. ^ Fierro 1996, p. 491. ^ Fierro 1996, p. 750. ^ William A. Shack, Harlem in Montmartre, A Paris Jazz Story between the Great Wars, University of California Press, 2001. ISBN 978-0-520-22537-4, ^ Meisler, Stanley (April 2005). \"The Surreal World of Salvador Dal√≠\". Smithsonian.com. Smithsonian Magazine. Archived from the original on 18 May 2014. Retrieved 12 July 2014. . Retrieved 12 July 2014 12 July ^ Goebel, Anti-Imperial Metropolis Archived 4 September 2015 at the Wayback Machine. ^ Sarmant 2012, p. 217. ^ Fierro 1996, p. 637. ^ Sarmant 2012, p. 218. ^ Fierro 1996, pp. 242‚Äì243. ^ Kim Willsher (17 October 2011). \"France remembers Algerian massacre 50 years on\". The Guardian. Archived from the original on 26 October 2014. Retrieved 26 October 2014. . Retrieved 26 October 2014 26 October ^ Fierro 1996, p. 658. ^ Sarmant 2012, p. 226. ^ Fierro 1996, p. 260. ^ Sarmant 2012, p. 222. ^ Combeau 2003, pp. 107‚Äì108. ^ Bell & de-Shalit 2011, p. 247. ^ Sarmant 2012, pp. 226‚Äì230. ^ \"City Mayors: Bertrand Delanoe ‚Äì Mayor of Paris\". www.citymayors.com. Archived from the original on 22 July 2012. Retrieved 16 August 2023. . Retrieved 16 August 2023 16 August ^ \"Les berges de Seine rendues aux Parisiens\". Le Moniteur (in French). 19 June 2013. Archived from the original on 20 December 2014. Retrieved 2 December 2014. . Retrieved 2 December 2014 2 December ^ Lichfield, John (29 April 2009). \"Sarko's ‚Ç¨35bn rail plan for a 'Greater Paris'\". The Independent. London. Archived from the original on 2 May 2009. Retrieved 12 June 2009. . Retrieved 12 June 2009 12 June ^ \"‚Ç¨26.5bn Grand Paris metro expansion programme confirmed\". Railway Gazette International. 12 March 2013. Archived from the original on 18 March 2013. Retrieved 24 April 2013. . Retrieved 24 April 2013 24 April ^ \"Le Metro du Grand Paris\" (in French). Site of Grand Paris Express. Archived from the original on 14 July 2011. Retrieved 27 November 2014. . Retrieved 27 November 2014 27 November ^ Library, C.N.N. (21 January 2015). \"2015 Charlie Hebdo Attacks Fast Facts\". CNN. Archived from the original on 23 June 2017. Retrieved 20 June 2017. . Retrieved 20 June 2017 20 June ^ \"Attentats terroristes : les questions que vous nous avez le plus pos√©es\". Le Monde (in French). 15 January 2015. Archived from the original on 14 January 2015. Retrieved 15 January 2015. . Retrieved 15 January 2015 15 January ^ \"Les politiques s'affichent √† la marche r√©publicaine\". Le Figaro (in French). 11 January 2015. Archived from the original on 11 January 2015. Retrieved 11 January 2015. . Retrieved 11 January 2015 11 January ^ \"Islamic State claims Paris attacks that killed 127\". Reuters. 14 November 2015. Archived from the original on 14 November 2015. Retrieved 14 November 2015. . Retrieved 14 November 2015 14 November ^ \"Paris attacks death toll rises to 130\". RT√â.ie. 20 November 2015. Archived from the original on 23 April 2019. Retrieved 8 November 2021. . Retrieved 8 November 2021 8 November ^ \"'Today is an historic day,' says Ban, as 175 countries sign Paris climate accord\". United Nations. 22 April 2016. Archived from the original on 29 June 2017. Retrieved 26 June 2023. . Retrieved 26 June 2023 26 June ^ a b \"Paris\". Encyclop√¶dia Britannica Online. Archived from the original on 7 July 2013. Retrieved 4 July 2013. . Retrieved 4 July 2013 4 July ^ Blackmore & McConnachie 2004, p. 153. ^ a b Lawrence & Gondrand 2010, p. 69. ^ \"Key figures for Paris\". Mairie de Paris. Paris.fr. 15 November 2007. Archived from the original on 6 March 2009. Retrieved 5 May 2009. . Retrieved 5 May 2009 5 May ^ Google Maps Archived 11 January 2019 at the Wayback Machine, Retrieved 6 July 2013 ^ \"Climate\". Paris.com. Archived from the original on 8 March 2013. Retrieved 29 June 2013. . Retrieved 29 June 2013 29 June ^ Lawrence & Gondrand 2010, p. 309. ^ Goldstein 2005, p. 8. ^ \"Climate in Paris\". ParisInfo. Paris Convention and Visitors Bureau. Archived from the original on 5 December 2014. Retrieved 29 June 2013. . Retrieved 29 June 2013 29 June ^ Courtney Traub (31 January 2018). \"Visiting Paris in the Winter: A Complete Guide\". tripsavvy. Archived from the original on 11 October 2017. Retrieved 27 February 2018. . Retrieved 27 February 2018 27 February ^ Kelby Carr (30 November 2017). \"Weather in France ‚Äì Climate and Temperatures of French Cities\". tripsavvy. Archived from the original on 28 February 2018. Retrieved 27 February 2018. . Retrieved 27 February 2018 27 February ^ \"42.6 ¬∞C √† Paris : record absolu de chaleur battu !\". meteofrance.fr. M√©t√©o France. Archived from the original on 25 July 2019. Retrieved 25 July 2019. . Retrieved 25 July 2019 25 July ^ \"G√©ographie de la capitale ‚Äì Le climat\" (in French). Institut National de la Statistique et des √âtudes √âconomiques. Archived from the original on 3 October 2006. Retrieved 24 May 2006 ‚Äì via Paris.fr. . Retrieved 24 May 2006 24 May ^ \"Paris‚ÄìMontsouris (984)\" (PDF). Fiche Climatologique: Statistiques 1991‚Äì2020 et records (in French). Meteo France. Archived from the original (PDF) on 27 February 2018. Retrieved 13 July 2022. (PDF) (PDF) . Retrieved 13 July 2022 13 July ^ \"Normes et records 1961‚Äì1990: Paris-Montsouris (75) ‚Äì altitude 75m\" (in French). Infoclimat. Archived from the original on 24 August 2017. Retrieved 19 May 2015. . Retrieved 19 May 2015 19 May ^ \"Paris, France ‚Äì Climate data\". Weather Atlas. Archived from the original on 12 March 2017. Retrieved 9 March 2017. . Retrieved 9 March 2017 9 March ^ a b Fierro 1996, p. 334. ^ \"Anne Hidalgo is new Mayor of Paris\". City of Paris. Archived from the original on 20 December 2014. Retrieved 29 November 2014. . Retrieved 29 November 2014 29 November ^ Willsher, Kim (28 June 2020). \"Greens surge in French local elections as Anne Hidalgo holds Paris\". The Guardian. ISSN 0261-3077. Archived from the original on 30 June 2020. Retrieved 1 July 2020. . Retrieved 1 July 2020 1 July ^ a b \"Code √©lectoral ‚Äì Article L260\" [Election Code ‚Äì Article L260] (in French). Legifrance. 13 March 1983. Archived from the original on 25 December 2014. Retrieved 7 November 2014. . Retrieved 7 November 2014 7 November ^ \"Election Preview: France Municipal Elections 2014 ‚Äì Part I\". World Elections. 22 March 2014. Archived from the original on 11 October 2016. Retrieved 4 January 2017. . Retrieved 4 January 2017 4 January ^ Shales 2007, p. 16. ^ \"Regroupement des 4 premiers arrondissements : le secteur Paris Centre sera cr√©√© le 11 juillet\". Paris.fr. 12 June 2020. Archived from the original on 14 November 2023. Retrieved 15 November 2023. . Retrieved 15 November 2023 15 November ^ a b c \"Code g√©n√©ral des collectivit√©s territoriales ‚Äì Article L5219-1\" [General Code of Territorial Communities ‚Äì Article L5219-1] (in French). Legifrance. Archived from the original on 1 January 2016. Retrieved 29 November 2015. . Retrieved 29 November 2015 29 November ^ \"D√©cret n¬∞ 2015-1212 du 30 septembre 2015 constatant le p√©rim√®tre fixant le si√®ge et d√©signant le comptable public de la m√©tropole du Grand Paris\" [Decree n¬∞ 2015-1212 of 30 September 2015 noting the perimeter fixing the seat and designating the public accountant of the metropolis of Greater Paris] (in French). Legifrance. Archived from the original on 28 February 2018. Retrieved 27 February 2018. . Retrieved 27 February 2018 27 February ^ a b Nathalie Moutarde (17 July 2015). \"La m√©tropole du Grand Paris verra le jour le 1er janvier 2016\" [The metropolis of Greater Paris will be born 1 January 2016]. Le Moniteur (in French). Archived from the original on 8 December 2015. Retrieved 3 December 2015. . Retrieved 3 December 2015 3 December ^ Manon Rescan (22 January 2016). \"Du Grand Paris √† la M√©tropole du Grand Paris\" [From Greater Paris to Greater Paris Metropolis]. Le Monde (in French). Archived from the original on 10 October 2017. Retrieved 30 January 2016. . Retrieved 30 January 2016 30 January ^ \"R√©gionales 2015 : les chiffres cl√©s du scrutin\" [Results of 2015 Regional Elections] (in French). Regional Council of √éle-de-France. 15 December 2015. Archived from the original on 19 December 2015. Retrieved 16 December 2015. . Retrieved 16 December 2015 16 December ^ \"Le Palais de L'√âlys√©e et son histoire\" [The Elys√©e Palace and its history] (in French). Elysee.fr. Archived from the original on 19 May 2017. Retrieved 16 June 2013. . Retrieved 16 June 2013 16 June ^ \"Matignon Hotel\". Embassy of France, Washington. 1 December 2007. Archived from the original on 5 April 2017. Retrieved 19 June 2013. . Retrieved 19 June 2013 19 June ^ Knapp & Wright 2006, pp. 93‚Äì94. ^ Borrus 2012, p. 288. ^ \"A la d√©couverte du Petit Luxembourg\" [Discovering Petit Luxembourg] (in French). Senat.fr. Archived from the original on 17 June 2013. Retrieved 3 May 2013. . Retrieved 3 May 2013 3 May ^ \"Introduction\". Cour de Cassation [Court of Cassation] (in French). Archived from the original on 15 May 2013. Retrieved 27 April 2013. . Retrieved 27 April 2013 27 April ^ \"Histoire & Patrimoine\" [History & Heritage] (in French). Conseil d'Etat. Archived from the original on 10 April 2013. Retrieved 27 April 2013. . Retrieved 27 April 2013 27 April ^ \"Le si√®ge du Conseil constitutionnel\" [The seat of the Constitutional Council] (PDF) (in French). Conseil Constitutionnel. 16 September 2011. Archived from the original (PDF) on 23 March 2014. Retrieved 26 April 2013. (PDF) (PDF) . Retrieved 26 April 2013 26 April ^ a b \"Pr√©sentation g√©n√©rale\" [General Presentation] (in French). Police nationale ‚Äî Minist√®re de l'int√®rieur [National Police ‚Äî Ministry of the Interior]. Archived from the original on 8 March 2013. Retrieved 22 November 2014. . Retrieved 22 November 2014 22 November ^ \"Accueil\" [Home] (in French). Gendarmerie nationale ‚Äî Minist√®re de l'int√®rieur [National Gendarmerie ‚Äî Ministry of the Interior]. Archived from the original on 26 December 2010. Retrieved 22 November 2014. . Retrieved 22 November 2014 22 November ^ \"France\". Travel.State.Gov. U.S. Department of State. Archived from the original on 4 April 2017. Retrieved 4 April 2017. . Retrieved 4 April 2017 4 April ^ Barthelemy, Marc; Bordin, Patricia; Berestycki, Henri; Gribaudi, Maurizio (8 July 2013). \"Paris Street Evolution\". Scientific Reports. 3 (1): 2153. doi:10.1038/srep02153. ISSN 2045-2322. PMC 3703887. PMID 23835429. S2CID 11824030. 3703887 ^ De Moncan, Patrice, Le Paris de Haussmann, Les √âditions de Mecene, Paris, ISBN 978-2-907970-98-3 ^ Braimoh & Vlek 2008, p. 12. ^ a b \"Plan des hauteurs\". Mairie de Paris (in French). Paris.fr. Archived from the original on 10 April 2014. Retrieved 1 November 2014. . Retrieved 1 November 2014 1 November ^ \"Plan Local d'Urbanisme ‚Äì R√®glement √† la parcelle\". Mairie de Paris. Archived from the original on 22 August 2010. Retrieved 31 August 2010. . Retrieved 31 August 2010 31 August ^ Challenges, www. Challenges.fr, 3 July 2018. ^ \"Chiffres Cl√©fs Logements (2011) ‚Äì D√©partement de Paris (75)\". INSEE. 2011. Archived from the original on 4 September 2015. Retrieved 1 November 2014. . Retrieved 1 November 2014 1 November ^ a b \"Un territoire ancien et de petite taille\" (PDF) (in French). www.notaires.paris-idf.fr. February 2012. p. 11. Archived from the original (PDF) on 1 November 2014. Retrieved 1 November 2014. (PDF) (PDF) . Retrieved 1 November 2014 1 November ^ Le Logement Parisien en Chiffres, Agence Departmentale de l'information sur le lodgment de Paris, October 2017. ^ Le Monde, 18 March 2019. ^ \"Une br√®ve histoire de l'am√©nagement de Paris et sa r√©gion Du District √† la R√©gion √éle-de-France\" (PDF) (in French). DRIEA √éle-de-France. Archived (PDF) from the original on 1 January 2017. Retrieved 26 November 2014. (PDF) (PDF) . Retrieved 26 November 2014 26 November ^ Masson 1984, p. 536. ^ Yarri 2008, p. 407. ^ Gordon 2006, pp. 46‚Äì47. ^ Castells 1983, p. 75. ^ Tomas et al. 2003, p. 237. ^ a b \"Les Politiques Nationales du Logement et le Logement dans les Villes Nouvelles\" (PDF). Laburba.fr. p. 6. Archived from the original (PDF) on 26 March 2016. Retrieved 25 November 2014. (PDF) (PDF) . Retrieved 25 November 2014 25 November ^ \"Atlas des Zones urbaines sensibles (Zus)\". SIG du secretariat g√©n√©rale du SIV (in French). Minist√®re de l'Egalit√© des Territoires et du Logement. Archived from the original on 16 August 2017. Retrieved 10 November 2014. . Retrieved 10 November 2014 10 November ^ \"Une forte h√©t√©rog√©n√©it√© des revenus en √éle-de-France\" (in French). INSEE. Archived from the original on 29 December 2014. Retrieved 26 November 2014. . Retrieved 26 November 2014 26 November ^ INSEE. \"Individus localis√©s √† la r√©gion en 2019 - Recensement de la population - Fichiers d√©tail\" (in French). Retrieved 15 February 2023. . Retrieved 15 February 2023 15 February ^ INSEE. \"IMG1B - Population immigr√©e par sexe, √¢ge et pays de naissance en 2019 - R√©gion d'√éle-de-France (11)\" (in French). Retrieved 15 February 2023. . Retrieved 15 February 2023 15 February ^ \"Paris Population Shrank By 122,000 Over Past Decade\",\"Forbes Magazine\", 24 February 2023 ^ \"Le Parisien, \"Paris n'attire plus comme autrefois: ann√©e apres ann√©e, Paris perd des habitants\": Le Parisien, 30 December 2021 ^ Le Monde, 22 January 2019 ^ \"Paris perd ses habitants, la faute √† la d√©mographie et aux... meubl√©s touristiques pour la Ville.\" Le Parisien, 28 December 2017 ^ \"Statistics on European cities\". Eurostat. Archived from the original on 14 November 2014. Retrieved 28 November 2014. . Retrieved 28 November 2014 28 November ^ Des villages de Cassini aux communes d'aujourd'hui: Commune data sheet Paris, EHESS (in French). (in French) ^ \"Le Parisien\", \"Paris n'attire plus comme autrefois: ann√©e apres ann√©e, Paris perd des habitants\": Le Parisien, 30 December 2021 ^ Institut National de la Statistique et des √âtudes √âconomiques. \"Population en historique depuis 1968: Commune de Paris (75056)\" (in French). Archived from the original on 15 February 2021. Retrieved 11 September 2020. . Retrieved 11 September 2020 11 September ^ INSEE. \"√âvolution et structure de la population en 2017: Unit√© urbaine 2020 de Paris (00851)\" (in French). Archived from the original on 17 June 2022. Retrieved 17 June 2022. . Retrieved 17 June 2022 17 June ^ a b \"Urban Europe ‚Äî Statistics on cities, towns and suburbs\". 2016. Archived from the original on 12 October 2020. Retrieved 11 September 2020. . Retrieved 11 September 2020 11 September ^ \"Functional areas ‚Äì Definition\". INSEE. Archived from the original on 9 April 2022. Retrieved 17 June 2022. . Retrieved 17 June 2022 17 June ^ INSEE. \"√âvolution et structure de la population en 2017: Aire d'attraction des villes 2020 de Paris (001)\" (in French). Archived from the original on 17 June 2022. Retrieved 17 June 2022. . Retrieved 17 June 2022 17 June ^ INSEE. \"√âvolution et structure de la population en 2017: France enti√®re\" (in French). Archived from the original on 17 January 2021. Retrieved 11 September 2020. . Retrieved 11 September 2020 11 September ^ \"Population statistics at regional level\". Eurostat. 25 March 2015. Archived from the original on 7 April 2015. Retrieved 3 April 2015. . Retrieved 3 April 2015 3 April ^ \"Les immigr√©s par sexe, √¢ge et pays de naissance ‚Äì D√©partement de Paris (75)\" [Immigrants by sex, age and country of birth ‚Äì Department of Paris (75)]. Insee (in French). Archived from the original on 1 January 2016. Retrieved 19 November 2015. . Retrieved 19 November 2015 19 November ^ \"Les immigr√©s par sexe, √¢ge et pays de naissance ‚Äì R√©gion d'√éle-de-France (11)\" [Immigrants by sex, age and country of birth ‚Äì √éle-de-France region (11)]. Insee (in French). Archived from the original on 1 January 2016. Retrieved 19 November 2015. . Retrieved 19 November 2015 19 November ^ \"Population par sexe, √¢ge et nationalit√© ‚Äì R√©gion d'√éle-de-France (11)\" [Population by sex, age and nationality ‚Äì √éle-de-France region (11)]. Insee (in French). Archived from the original on 1 January 2016. Retrieved 20 November 2015. . Retrieved 20 November 2015 20 November ^ \"Population par sexe, √¢ge et nationalit√© ‚Äì D√©partement de Paris (75)\" [Population by sex, age and nationality ‚Äì Department of Paris (75)]. Insee (in French). Archived from the original on 1 January 2016. Retrieved 20 November 2015. . Retrieved 20 November 2015 20 November ^ \"Localisation des immigr√©s et des descendants d'immigr√©s\" [Location of immigrants and descendants of immigrants]. Insee (in French). Archived from the original on 12 October 2023. Retrieved 28 September 2023. . Retrieved 28 September 2023 28 September ^ Ivereigh, Austen (2016). Catholicism and Politics in Argentina, 1810‚Äì1960. Springer. p. 76. ISBN 978-1-349-13618-6. Buenos Aires was the second largest Catholic city in the world (after Paris) ^ Burchardt, Marian; Michalowski, Ines (26 November 2014). After Integration: Islam, Conviviality and Contentious Politics in Europe. Springer. ISBN 978-3-658-02594-6. Archived from the original on 1 October 2017. Retrieved 30 September 2017. . Retrieved 30 September 2017 30 September ^ \"que pese l'Islam en France\". Le Monde (in French). 21 January 2015. Archived from the original on 27 November 2015. Retrieved 13 November 2015. . Retrieved 13 November 2015 13 November ^ \"How does France count its muslim population?\". Le Figaro. Archived from the original on 5 November 2015. Retrieved 30 October 2015. . Retrieved 30 October 2015 30 October ^ \"Interview with Dalil Boubakeur\". Le Soir (in French). Archived from the original on 28 January 2015. Retrieved 13 November 2015. . Retrieved 13 November 2015 13 November ^ Riou, Mathilde (29 April 2013). \"Le manque de mosqu√©e en Ile-de-France\". France 3. Archived from the original on 17 November 2017. Retrieved 17 November 2017. . Retrieved 17 November 2017 17 November ^ Berman Jewish Databank. \"World Jewish Population 2014\". Archived from the original on 4 November 2015. Retrieved 13 November 2015. . Retrieved 13 November 2015 13 November ^ \"La D√©fense, Europe's largest business district\". France.fr. Archived from the original on 30 May 2013. Retrieved 8 January 2013. . Retrieved 8 January 2013 8 January ^ \"Largest banks worldwide as of December 2021, by assets\". statista.com. Statista. 29 August 2022. Archived from the original on 10 August 2019. Retrieved 21 March 2023. . Retrieved 21 March 2023 21 March ^ \"De Las Cases √† Jean Jaur√®s : Cr√©dit Agricole S.A. √† travers ses si√®ges\". Cr√©dit Agricole. 2011. Archived from the original on 25 July 2023. Retrieved 25 July 2023. . Retrieved 25 July 2023 25 July ^ \"Department of Paris; Complete Dossier\" (in French). INSEE. Archived from the original on 7 March 2016. Retrieved 25 November 2015. . Retrieved 25 November 2015 25 November ^ \"√éle-de-France Region ‚Äì Complete dossier\" (in French). INSEE. Archived from the original on 16 March 2016. Retrieved 25 November 2015. . Retrieved 25 November 2015 25 November ^ \"EMP2 ‚Äì Emplois au lieu de travail par sexe, statut et secteur d'activit√© √©conomique ‚Äì R√©gion d'√éle-de-France (11)\" (in French). INSEE. Archived from the original on 1 January 2016. Retrieved 26 November 2015. . Retrieved 26 November 2015 26 November ^ \"La nomenclature agr√©g√©e ‚Äì NA, 2008\" (in French). INSEE. Archived from the original on 19 December 2015. Retrieved 26 November 2015. . Retrieved 26 November 2015 26 November ^ a b \"En √éle-de-France, 39 poles d'emploi structurent l'economie r√©gionale\". INSEE. Archived from the original on 1 January 2016. Retrieved 7 December 2015. . Retrieved 7 December 2015 7 December ^ \"Gross domestic product (GDP) at current market prices by NUTS 3 regions\". ec.europa.eu. Archived from the original on 1 January 2024. Retrieved 1 January 2024. . Retrieved 1 January 2024 1 January ^ \"Regional gross domestic product (PPS per inhabitant) by NUTS 2 regions\". ec.europa.eu. 21 February 2023. Archived from the original on 13 June 2023. Retrieved 13 June 2023. . Retrieved 13 June 2023 13 June ^ \"L'√éle-de-France, une des r√©gions les plus riches d'Europe\". Insee. Archived from the original on 4 September 2015. Retrieved 11 November 2014. . Retrieved 11 November 2014 11 November ^ \"The Most Dynamic Cities of 2025\". Foreign Policy. Archived from the original on 28 August 2012. Retrieved 2 November 2014. . Retrieved 2 November 2014 2 November ^ \"GDP in value (current prices) ‚Äì Metropolitan France\". www.insee.fr. 15 February 2023. Archived from the original on 16 August 2023. Retrieved 13 June 2023. . Retrieved 13 June 2023 13 June ^ \"GDP in value (current prices) ‚Äì √éle-de-France\". www.insee.fr. 15 February 2023. Archived from the original on 16 August 2023. Retrieved 13 June 2023. . Retrieved 13 June 2023 13 June ^ a b c d e f g h i j k l \"L'Industrie en √éle-de-France, Principaux Indicateurs R√©gionaux\" (PDF). INSEE. Archived (PDF) from the original on 23 February 2015. Retrieved 24 November 2014. (PDF) (PDF) . Retrieved 24 November 2014 24 November ^ Economist Intelligence Unit Worldwide Cost of Living Survey, based in September 2016 data, retrieved July 2017. ^ \"Classement.Singapour, Hong Kong, Paris : le trio des villes les plus ch√®res du monde\". courrierinternational.com. Courrier International. 20 March 2019. Archived from the original on 27 March 2019. Retrieved 23 March 2019.. . Retrieved 23 March 2019 23 March ^ Medeiros, Jo√£o (29 June 2017). \"Station F, the world's largest startup campus opens in Paris\". Wired. Archived from the original on 21 August 2017. Retrieved 21 August 2017. . Retrieved 21 August 2017 21 August ^ a b c d e \"√éle-de-France ‚Äì A la Page N¬∫288 ‚Äì INSEE 2007\" (PDF) (Press release). November 2007. Archived (PDF) from the original on 29 December 2014. Retrieved 24 November 2014. (PDF) (PDF) . Retrieved 24 November 2014 24 November ^ \"Structure et distribution des revenus, in√©galit√© des niveaux de vie en 2013\". insee.fr. Archived from the original on 20 June 2017. Retrieved 4 April 2017. . Retrieved 4 April 2017 4 April ^ \"Neighborhoods of Paris with more than 40 percent living below poverty line\" (in French). Metronews. Archived from the original on 6 April 2014. Retrieved 28 November 2013. . Retrieved 28 November 2013 28 November ^ Reuters, \"France unemployment hits 13-year low\", 18 February 2022 ^ INSEE data published 1 April 2022 ^ \"Euromonitor International reveals world's Top 100 City Destinations for 2024\". Euromonitor International. Retrieved 4 April 2025. . Retrieved 4 April 2025 4 April ^ a b \"Bilan de l'ann√©e touristique 2022 √† Paris √éle-de-France (mars 2023)\" [Review of the 2022 tourist year in Paris √éle-de-France (March 2023)]. pro.visitparisregion.com. 20 March 2023. Archived from the original on 25 March 2023. ^ a b c d \"Tourism in Paris ‚Äì Key Figures 2020\". press.parisinfo.com. Paris Convention and Visitors Bureau. Archived from the original on 10 September 2021. Retrieved 10 September 2021. . Retrieved 10 September 2021 10 September ^ Rosen, Eric (4 September 2019). \"The World's Most-Visited City Is Bangkok\". Forbes. Archived from the original on 14 September 2019. Retrieved 21 September 2019. . Retrieved 21 September 2019 21 September ^ \"Tourism in Paris ‚Äì Key Figures 2016\". Paris Convention and Visitors Bureau. 9 August 2017. Archived from the original on 19 February 2018. Retrieved 18 February 2018. . Retrieved 18 February 2018 18 February ^ Vidalon, Dominique (5 July 2017). \"hoteliers-welcome-paris-decision-forcing-airbnb-hosts-to-register-rentals-idUSL8N1JW2DD\". Reuters. ^ Fortune Magazine, 5 July 2017. ^ Wyatt, Caroline (20 December 2006). \"'Paris Syndrome' strikes Japanese\". BBC News. Archived from the original on 31 October 2009. Retrieved 4 November 2009. . Retrieved 4 November 2009 4 November ^ Montclos 2003. ^ a b c d e f g h i Michelin 2011. ^ Perry 1995, p. 19. ^ \"Visitor Figures 2021\", \"The Art Newspaper\", 5 January 2022. ^ \"Le Tourisme a Paris ‚Äì Chiffres Cles -Edition 2021,\"the Office of Tourism and Congresses of the City of Paris.(published 2022) ^ \"Municipal museums\". Maire de Paris. Archived from the original on 23 November 2014. Retrieved 23 November 2014. . Retrieved 23 November 2014 23 November ^ Lawrence & Gondrand 2010, p. 178. ^ Schumacher 1996, p. 60. ^ Fierro 1996, p. 1173. ^ Who's Where. 1961. p. 304. Archived from the original on 7 September 2013. Retrieved 2 July 2013. . Retrieved 2 July 2013 2 July ^ Fierro 1996, pp. 1005‚Äì1006. ^ \"scan of the book at the Biblioth√®que nationale de France\". Gallica.bnf.fr. 15 October 2007. Archived from the original on 12 June 2013. Retrieved 24 March 2014. . Retrieved 24 March 2014 24 March ^ Fierro 1996, p. 488. ^ \"Notre Dame Renovations\". Adoremus Organization. Archived from the original on 7 February 2013. Retrieved 4 July 2013. . Retrieved 4 July 2013 4 July ^ \"Les Miserables\". Preface. Gutenberg Organization. 1862. Archived from the original on 11 October 2013. Retrieved 4 July 2013. . Retrieved 4 July 2013 4 July ^ \"Jules Verne\". Encyclopaedia Britannica. Retrieved 18 April 2024. . Retrieved 18 April 2024 18 April ^ \"Official site of the Nobel Prize\". Archived from the original on 16 December 2014. Retrieved 24 November 2014. . Retrieved 24 November 2014 24 November ^ Fierro 1996, p. 840. ^ \"The French Still Flock to Bookstores\", New York Times, 20 June 2012 ^ Damschroeder & Williams 1990, p. 157. ^ Georges Bizet: Carmen Archived 26 March 2023 at the Wayback Machine, Susan McClary, p. 120 ^ Dubal, David (2003). The Essential Canon of Classical Music. Macmillan. p. 346. ISBN 978-1-4668-0726-6. Archived from the original on 1 February 2023. Retrieved 9 January 2016. . Retrieved 9 January 2016 9 January ^ Dregni 2004, p. 19. ^ a b Dregni 2008, p. 32. ^ a b Mroue 2006, p. 260. ^ a b c \"Best Gypsy jazz bars in Paris\". The Guardian. 3 March 2010. Archived from the original on 20 March 2014. Retrieved 3 July 2013. . Retrieved 3 July 2013 3 July ^ Bezbakh 2004, p. 872. ^ \"Rock en Seine '13\". Efestivals.co.uk. Archived from the original on 13 May 2013. Retrieved 23 April 2013. . Retrieved 23 April 2013 23 April ^ Andante (2004). \"Orchestre de Paris\". Andante.com. Archived from the original on 12 March 2007. Retrieved 3 July 2013. . Retrieved 3 July 2013 3 July ^ Huey, Steve. √âdith Piaf biography at AllMusic. Retrieved 22 December 2015. ^ \"Hip-Hop √† la Fran√ßaise\". The New York Times. 15 October 2013. Archived from the original on 9 December 2015. Retrieved 28 November 2015. . Retrieved 28 November 2015 28 November ^ Universalis, Encyclop√¶dia (27 March 2002). \"PR√âSENTATION DU CIN√âMATOGRAPHE LUMI√àRE\". Encyclop√¶dia Universalis. Archived from the original on 11 October 2017. Retrieved 14 May 2022. . Retrieved 14 May 2022 14 May ^ \"The Grand Rex ... and its Etoiles\". RFI. 24 October 2010. Archived from the original on 7 October 2015. Retrieved 5 October 2015. . Retrieved 5 October 2015 5 October ^ \"Le Cin√©ma √† Paris\". Paris.fr. Archived from the original on 16 October 2015. Retrieved 5 October 2015. . Retrieved 5 October 2015 5 October ^ \"2 Tamil Films in 1st SAFF in Paris\". The Times of India. 27 December 2012. Archived from the original on 2 July 2013. Retrieved 2 July 2013. . Retrieved 2 July 2013 2 July ^ Fierro 1996, pp. 1136‚Äì1138. ^ a b Fierro 1996, p. 1137. ^ Domin√© 2014. ^ Le Monde, 2 February 2015 ^ \"Michelin Guide\". Michelin Guide. Archived from the original on 25 November 2014. Retrieved 23 November 2014. . Retrieved 23 November 2014 23 November ^ Fierro 1996, p. 715. ^ Fierro 1996, p. 773. ^ Carr-Allinson, Rowena. \"11 Ways to Look like a Local in Paris\". iExplore.com. Inside-Out Media. Archived from the original on 24 September 2016. Retrieved 16 September 2016. . Retrieved 16 September 2016 16 September ^ Bradford, Julie (2014). Fashion Journalism. Routledge. p. 129. ISBN 978-1-136-47536-8. Archived from the original on 1 January 2016. Retrieved 25 October 2015. . Retrieved 25 October 2015 25 October ^ Dillon, Susan (2011). The Fundamentals of Fashion Management. A&C Black. p. 115. ISBN 978-2-940411-58-0. Archived from the original on 1 January 2016. Retrieved 25 October 2015. . Retrieved 25 October 2015 25 October ^ \"Global ranking of manufacturers of luxury goods\". Insidermonkey.com. Archived from the original on 19 January 2015. Retrieved 16 January 2015. . Retrieved 16 January 2015 16 January ^ Department of Photographs, Photography and Surrealism, Heilbrunn Timeline of Art History Archived 13 February 2015 at the Wayback Machine, The Metropolitan Museum of Art, New York, 2000. ^ Hazan 2011, p. 362. ^ \"Le Figaro\". Encyclop√¶dia Britannica. 2 October 2023. Archived from the original on 13 November 2014. Retrieved 25 July 2023. . Retrieved 25 July 2023 25 July ^ \"French and Francophone Publications\". French.about.com. Archived from the original on 13 May 2013. Retrieved 3 July 2013. . Retrieved 3 July 2013 3 July ^ \"Paris's Top Newspapers\". About-France.com. Archived from the original on 28 June 2013. Retrieved 3 July 2013. . Retrieved 3 July 2013 3 July ^ \"Agence France-Presse\". Agence France-Presse website. 16 January 2012. Archived from the original on 8 July 2013. Retrieved 3 July 2013. . Retrieved 3 July 2013 3 July ^ \"France 24\". France24.com. Archived from the original on 15 October 2014. Retrieved 3 July 2013. . Retrieved 3 July 2013 3 July ^ \"France Diplomatie\". Diplomatie.gouv.fr. Archived from the original on 29 June 2013. Retrieved 3 July 2013. . Retrieved 3 July 2013 3 July ^ \"French and Francophone TV Stations\". French.about.com. Archived from the original on 20 May 2013. Retrieved 3 July 2013. . Retrieved 3 July 2013 3 July ^ \"France's Radio Stations\". Listenlive.eu. Archived from the original on 10 October 2017. Retrieved 3 July 2013. . Retrieved 3 July 2013 3 July ^ \"La Poste\". Laposte.com. Archived from the original on 12 July 2013. Retrieved 3 July 2013. . Retrieved 3 July 2013 3 July ^ a b BlackmoreMcConnachie 2004, p. 204. ^ \"How to find us\". Biblioth√®que nationale de France. Archived from the original on 16 October 2005. ^ a b Woodward, Richard B. (5 March 2006). \"At These Parisian Landmarks, Shhh Is the Word\". The New York Times. Archived from the original on 14 December 2014. Retrieved 4 July 2013. . Retrieved 4 July 2013 4 July ^ \"Paris-Sorbonne libraries\". Paris-Sorbonne University. Archived from the original on 3 July 2013. Retrieved 4 July 2013. . Retrieved 4 July 2013 4 July ^ \"French Libraries and Archives\". University of Notre Dame, Hesburgh Libraries. Archived from the original on 17 October 2013. Retrieved 5 July 2013. . Retrieved 5 July 2013 5 July ^ a b Lawrence & Gondrand 2010, pp. 300‚Äì301. ^ \"Locations of League: Paris\". TotalRugbyLeague. 25 March 2025. Retrieved 24 April 2025. . Retrieved 24 April 2025 24 April ^ Darbyshire, Drew (8 April 2025). \"Wigan Warriors and Catalans Dragons progress Paris plans for 2026\". Wigan Today. Retrieved 15 May 2025. . Retrieved 15 May 2025 15 May ^ \"EURO 2016: All you need to know\". UEFA. 1 January 2023. Retrieved 6 June 2024. . Retrieved 6 June 2024 6 June ^ \"Arsenal aim to upset the odds\". BBC Sport. 16 June 2006. Archived from the original on 12 September 2017. Retrieved 21 April 2013. . Retrieved 21 April 2013 21 April ^ \"2013 route\". Le Tour. Archived from the original on 17 May 2013. Retrieved 21 April 2013. . Retrieved 21 April 2013 21 April ^ \"Roland-Garros\". Roland Garros. Archived from the original on 15 April 2013. Retrieved 21 April 2013. . Retrieved 21 April 2013 21 April ^ \"Stade Pierre de Coubertin (Paris)\". √âquipement-Paris. Archived from the original on 13 July 2017. Retrieved 4 April 2017. . Retrieved 4 April 2017 4 April ^ \"Paris Football Team | The Paris Football Team is an American football franchise of the European League of Football, based in Paris, France\". Archived from the original on 23 September 2022. Retrieved 23 September 2022. . Retrieved 23 September 2022 23 September ^ Syndicat des Transports d'√éle-de-France (STIF). \"Le web des voyageurs franciliens\" (in French). Archived from the original on 11 April 2006. Retrieved 10 April 2006. . Retrieved 10 April 2006 10 April ^ \"Optile en bref\". Optile. Archived from the original on 8 December 2015. Retrieved 27 November 2015. . Retrieved 27 November 2015 27 November ^ Vigneau, Laurent (30 May 2018). \"On foot or by bike? While Paris walks, Amsterdam pedals\". Medium. La Fabrique de la Cit√©. Archived from the original on 7 August 2020. Retrieved 13 May 2020. . Retrieved 13 May 2020 13 May ^ \"Bikes overtake cars as means of transport in Paris\". AFP. The Local. 12 April 2024. Archived from the original on 15 May 2024. Retrieved 15 May 2024. . Retrieved 15 May 2024 15 May ^ Frost, Rosie (12 April 2024). \"Cycling is now more popular than driving in the centre of Paris, study finds\". Euronews. Archived from the original on 19 June 2024. Retrieved 15 May 2024. . Retrieved 15 May 2024 15 May ^ \"5 reasons the world looks to Europe's cities\". European Investment Bank. Archived from the original on 7 June 2021. Retrieved 7 June 2021. . Retrieved 7 June 2021 7 June ^ McMahon, Jeff. \"How Bike Lanes Are Transforming Paris\". Forbes. Archived from the original on 7 June 2021. Retrieved 7 June 2021. . Retrieved 7 June 2021 7 June ^ Maassen, Anne. \"Paris' Vision for a '15-Minute City' Sparks a Global Movement\". World Resource Institute. Retrieved 4 April 2025. . Retrieved 4 April 2025 4 April ^ Walker, Jim. \"Why walking and public transport must be integrated\". The International Association for public transport. Retrieved 4 April 2025. . Retrieved 4 April 2025 4 April ^ \"Mobility changes in Greater Paris -Grand Paris- Historical trends, current and emerging developments\". Apur, the Paris Urbanism Agency. Retrieved 4 April 2025. . Retrieved 4 April 2025 4 April ^ Limb, Lottie (16 June 2024). \"The time of the whole car city is over': How is Paris encouraging walking and cycling?\". Euronews. Retrieved 4 April 2025. . Retrieved 4 April 2025 4 April ^ Peters, Adele. \"How Paris became a 15-minute city\". Fast Company. Retrieved 4 April 2025. . Retrieved 4 April 2025 4 April ^ \"M√©tro2030, notre nouveau m√©tro de Paris\". RATP. Archived from the original on 1 January 2016. Retrieved 27 November 2015. . Retrieved 27 November 2015 27 November ^ \"2023 Airport Traffic Report\" (PDF). Port Authority of New York and New Jersey. April 2024. p. 32. (PDF) ^ \"Bulletin statistique, trafic a√©rien commercial ‚Äì ann√©e 2014\" (PDF). Direction g√©n√©rale de l'Aviation civile. p. 15. Archived (PDF) from the original on 29 March 2017. Retrieved 28 November 2015. (PDF) (PDF) . Retrieved 28 November 2015 28 November ^ \"Trafic a√©roportuaire 1986‚Äì2013\". Direction g√©n√©rale de l'Aviation civile. pp. 15‚Äì17. Archived from the original on 5 April 2017. Retrieved 27 November 2015. 15‚Äì . Retrieved 27 November 2015 27 November ^ Lawrence & Gondrand 2010, pp. 278‚Äì283. ^ Jefferson 2009, p. 114. ^ Hart 2004, p. 355. ^ Rand 2010, p. 165. ^ \"La production √©lectrique en IdF\" (PDF). La DRIEE ‚Äì Prefet de la r√©gion d'√éle-de-France. Archived (PDF) from the original on 7 October 2015. Retrieved 11 November 2015. (PDF) (PDF) . Retrieved 11 November 2015 11 November ^ \"Paris to be heated with US wood pellets\". Global Wood Markets Info. 11 March 2016. Archived from the original on 12 March 2016. Retrieved 11 March 2016. . Retrieved 11 March 2016 11 March ^ \"Historique des √©gouts\" (in French). Paris.fr. Archived from the original on 10 April 2014. Retrieved 18 June 2013. . Retrieved 18 June 2013 18 June ^ Burchell 1971, p. 93. ^ \"Les √©gouts parisiens\". Mairie de Paris (in French). Archived from the original on 3 October 2006. Retrieved 15 May 2006. . Retrieved 15 May 2006 15 May ^ Air pollution in Paris Archived 24 September 2012 at the Wayback Machine according to L'internaute ^ \"Air pollution in Europe: These are the worst-hit cities to live in\". euronews. 24 December 2021. Archived from the original on 1 April 2022. Retrieved 1 April 2022. . Retrieved 1 April 2022 1 April ^ Jarrass√© 2007, p. 6. ^ Lawrence & Gondrand 2010, p. 125. ^ Lawrence & Gondrand 2010, p. 208. ^ \"Le Jardin de Plantes\". Archived from the original on 15 June 2013. Retrieved 22 June 2013. . Retrieved 22 June 2013 22 June ^ Jarrass√© 2007, pp. 122‚Äì161. ^ Jarrass√© 2007, pp. 242‚Äì256. ^ Whaley 2012, p. 101. ^ Broadwell 2007, p. 92. ^ Ayers 2004, p. 271. ^ \"Les 20 cimeti√®res Parisiens\". Paris.fr. Archived from the original on 5 April 2017. Retrieved 4 April 2017. . Retrieved 4 April 2017 4 April ^ \"Les c√©l√©brit√©s du cimeti√®re du P√®re Lachaise √† Paris\". www.oui.sncf (in French). 7 November 2018. Archived from the original on 14 April 2020. Retrieved 20 April 2020. . Retrieved 20 April 2020 20 April ^ \"Indicateurs d√©partementaux et r√©gionaux sur les dipl√¥mes et la formation en 2009\". INSEE. Archived from the original on 10 September 2013. Retrieved 29 June 2013. . Retrieved 29 June 2013 29 June ^ La Pr√©fecture de la R√©gion d'√éle-de-France. \"L'enseignement\" (in French). Archived from the original on 24 August 2007. Retrieved 9 October 2007. . Retrieved 9 October 2007 9 October ^ Combeau 2013, pp. 213‚Äì214. ^ \"Contact and Maps\" (in French). √âcole Normale Sup√©rieure. Archived from the original on 7 June 2013. Retrieved 18 June 2013. . Retrieved 18 June 2013 18 June ^ Plan√™te grandes √©coles (16 April 2024). \"Classement QS 2024 : Sciences Po devient la 2√®me meilleure universit√© mondiale en \"Politics\"\" (in French). Retrieved 8 May 2024. . Retrieved 8 May 2024 8 May ^ Financial Times. \"European Business School Rankings 2023\". Retrieved 8 May 2024. . Retrieved 8 May 2024 8 May ^ ARWU. \"2023 Academic Ranking of World Universities\". Retrieved 8 May 2024. . Retrieved 8 May 2024 8 May ^ a b \"Rapport Annuel 2008\" (in French). Rapport Activite. Archived from the original on 27 March 2014. Retrieved 21 April 2013. . Retrieved 21 April 2013 21 April ^ \"Hotel Dieu\". London Science Museum. Archived from the original on 8 May 2013. Retrieved 21 April 2013. . Retrieved 21 April 2013 21 April ^ |Where we are |publisher oecd.org |accessed on 30 August 2016. ^ a b \"Les pactes d'amiti√© et de coop√©ration\" (in French). Paris. September 2015. Archived from the original on 8 March 2021. Retrieved 14 December 2021. . Retrieved 14 December 2021 14 December ^ \"Twinning Rome ‚Äì Paris\" (PDF) (in French). 30 January 1956. Archived (PDF) from the original on 13 November 2018. Retrieved 28 February 2018. \"Roma ‚Äì Relazioni Internazionali Bilaterali\" (in Italian). Commune Roma. Archived from the original on 9 July 2016. Retrieved 10 September 2016. (PDF) (PDF) . Retrieved 28 February 2018 28 February . Retrieved 10 September 2016 10 September ^ \"Dichiarazione congiunta Roma ‚Äì Parigi ‚Äì (2014)\" (PDF). Roma ‚Äì Relazioni Internazionali Bilaterali (in French). Rome: Commune Roma. 1 October 2014. Archived from the original on 9 July 2016. Retrieved 10 September 2016. (PDF) . Retrieved 10 September 2016 10 September ^ \"Twinning with Rome\". Archived from the original on 5 September 2012. Retrieved 27 May 2010. . Retrieved 27 May 2010 27 May ^ \"Les pactes d'amiti√© et de coop√©ration\". Mairie de Paris. Archived from the original on 11 October 2007. Retrieved 14 October 2007. . Retrieved 14 October 2007 14 October ^ \"International relations: special partners\". Mairie de Paris. Archived from the original on 6 August 2007. Retrieved 14 October 2007. . Retrieved 14 October 2007 14 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 22 August 2020 22 August . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October Imperial Masquerade: The Paris of Napoleon III 195‚Äì . Retrieved 31 May 2020 31 May . Retrieved 6 July 2018 6 July . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October Histoire de Paris . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 18 November 2020 18 November . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 12 October 2016 12 October {{cite book}}: ISBN / Date incompatibility (help) . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October {{cite book}}: ISBN / Date incompatibility (help) . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October The making of revolutionary Paris . Retrieved 7 September 2017 7 September . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 22 August 2020 22 August . Retrieved 25 October 2015 25 October The Cambridge Illustrated History of France . Retrieved 25 October 2015 25 October Paris . Retrieved 25 October 2015 25 October The Government and Politics of France Paris (City Guide) . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October The French Connection . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October \"Paris\" 805‚Äì . Retrieved 10 April 2017 10 April . Retrieved 25 October 2015 25 October . Retrieved 25 October 2015 25 October . Retrieved 18 November 2020 18 November . Retrieved 25 October 2015 25 October Paris Official website Official website (in French) Under construction Proposed Tvm Tvm sister projects Definitions from Wiktionary Media from Commons News from Wikinews Quotations from Wikiquote Texts from Wikisource Textbooks from Wikibooks Resources from Wikiversity Travel guides from Wikivoyage Data from Wikidata ISNI VIAF FAST WorldCat Germany United States United States France BnF data Japan Italy Italy Australia Czech Republic Czech Republic Spain Norway Taiwan Latvia Chile Argentina Israel Catalonia MusicBrainz area CiNii KulturNav Victoria IdRef Historical Dictionary of Switzerland NARA 2 SNAC",
                  "site_name": "Wikipedia",
                  "site_long_name": "en.wikipedia.org",
                  "age": "2025-06-05T14:02:53.000Z",
                  "language": "en",
                  "image_urls": [
                        "https://maps.wikimedia.org/img/osm-intl,10,a,a,270x200.png?lang=en&domain=en.wikipedia.org&title=Paris&revid=1294086036&groups=_7db7e2f3cf6bfb1f0bc5fadc1f5b339b712de126"
                  ],
                  "links": [
                        "https://en.wikipedia.org/#bodyContent",
                        "https://en.wikipedia.org/wiki/Main_Page",
                        "/wiki/Wikipedia:Contents",
                        "/wiki/Portal:Current_events",
                        "/wiki/Special:Random",
                        "/wiki/Wikipedia:About",
                        "//en.wikipedia.org/wiki/Wikipedia:Contact_us",
                        "/wiki/Help:Contents",
                        "/wiki/Help:Introduction",
                        "/wiki/Wikipedia:Community_portal",
                        "/wiki/Special:RecentChanges",
                        "/wiki/Wikipedia:File_upload_wizard",
                        "/wiki/Special:SpecialPages",
                        "/wiki/Special:Search",
                        "https://donate.wikimedia.org/?wmf_source=donate&wmf_medium=sidebar&wmf_campaign=en.wikipedia.org&uselang=en",
                        "/w/index.php?title=Special:CreateAccount&returnto=Paris",
                        "/w/index.php?title=Special:UserLogin&returnto=Paris",
                        "/wiki/Special:MyContributions",
                        "/wiki/Special:MyTalk",
                        "https://en.wikipedia.org/#",
                        "https://en.wikipedia.org/#Etymology",
                        "https://en.wikipedia.org/#History",
                        "https://en.wikipedia.org/#Origins",
                        "https://en.wikipedia.org/#High_and_Late_Middle_Ages_to_Louis_XIV",
                        "https://en.wikipedia.org/#18th_and_19th_centuries",
                        "https://en.wikipedia.org/#20th_and_21st_centuries",
                        "https://en.wikipedia.org/#Geography",
                        "https://en.wikipedia.org/#Location",
                        "https://en.wikipedia.org/#Climate",
                        "https://en.wikipedia.org/#Administration",
                        "https://en.wikipedia.org/#City_government",
                        "https://en.wikipedia.org/#M%C3%A9tropole_du_Grand_Paris",
                        "https://en.wikipedia.org/#Regional_government",
                        "https://en.wikipedia.org/#National_government",
                        "https://en.wikipedia.org/#Police_force",
                        "https://en.wikipedia.org/#Cityscape",
                        "https://en.wikipedia.org/#Urbanism_and_architecture",
                        "https://en.wikipedia.org/#Housing",
                        "https://en.wikipedia.org/#Suburbs",
                        "https://en.wikipedia.org/#Demographics",
                        "https://en.wikipedia.org/#Migration",
                        "https://en.wikipedia.org/#Religion",
                        "https://en.wikipedia.org/#Economy",
                        "https://en.wikipedia.org/#Employment_and_income",
                        "https://en.wikipedia.org/#Tourism",
                        "https://en.wikipedia.org/#Culture",
                        "https://en.wikipedia.org/#Painting_and_sculpture",
                        "https://en.wikipedia.org/#Museums",
                        "https://en.wikipedia.org/#Theatre",
                        "https://en.wikipedia.org/#Literature",
                        "https://en.wikipedia.org/#Music",
                        "https://en.wikipedia.org/#Cinema",
                        "https://en.wikipedia.org/#Restaurants_and_cuisine",
                        "https://en.wikipedia.org/#Fashion",
                        "https://en.wikipedia.org/#Photography",
                        "https://en.wikipedia.org/#Media",
                        "https://en.wikipedia.org/#Holidays_and_festivals",
                        "https://en.wikipedia.org/#Libraries",
                        "https://en.wikipedia.org/#Sports",
                        "https://en.wikipedia.org/#Infrastructure",
                        "https://en.wikipedia.org/#Transport",
                        "https://en.wikipedia.org/#Walking",
                        "https://en.wikipedia.org/#Railways",
                        "https://en.wikipedia.org/#Air",
                        "https://en.wikipedia.org/#Motorways",
                        "https://en.wikipedia.org/#Waterways",
                        "https://en.wikipedia.org/#Cycling",
                        "https://en.wikipedia.org/#Electricity",
                        "https://en.wikipedia.org/#Water_and_sanitation",
                        "https://en.wikipedia.org/#Parks_and_gardens",
                        "https://en.wikipedia.org/#Cemeteries",
                        "https://en.wikipedia.org/#Education",
                        "https://en.wikipedia.org/#Healthcare",
                        "https://en.wikipedia.org/#International_relations",
                        "https://en.wikipedia.org/#International_organisations",
                        "https://en.wikipedia.org/#Twin_towns_%E2%80%93_sister_cities",
                        "https://en.wikipedia.org/#Other_relationships",
                        "https://en.wikipedia.org/#See_also",
                        "https://en.wikipedia.org/#Notes",
                        "https://en.wikipedia.org/#References",
                        "https://en.wikipedia.org/#Citations",
                        "https://en.wikipedia.org/#Sources",
                        "https://en.wikipedia.org/#Further_reading",
                        "https://en.wikipedia.org/#External_links",
                        "https://ace.wikipedia.org/wiki/Paris",
                        "https://kbd.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://ady.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://af.wikipedia.org/wiki/Parys",
                        "https://als.wikipedia.org/wiki/Paris",
                        "https://am.wikipedia.org/wiki/%E1%8D%93%E1%88%AA%E1%88%B5",
                        "https://smn.wikipedia.org/wiki/Pariisi",
                        "https://anp.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
                        "https://ang.wikipedia.org/wiki/Paris",
                        "https://ar.wikipedia.org/wiki/%D8%A8%D8%A7%D8%B1%D9%8A%D8%B3",
                        "https://an.wikipedia.org/wiki/Par%C3%ADs",
                        "https://arc.wikipedia.org/wiki/%DC%A6%DC%90%DC%AA%DC%9D%DC%A3",
                        "https://hyw.wikipedia.org/wiki/%D5%93%D5%A1%D6%80%D5%AB%D5%A6",
                        "https://roa-rup.wikipedia.org/wiki/Parij",
                        "https://frp.wikipedia.org/wiki/Paris",
                        "https://as.wikipedia.org/wiki/%E0%A6%AA%E0%A7%87%E0%A7%B0%E0%A6%BF%E0%A6%9B",
                        "https://ast.wikipedia.org/wiki/Par%C3%ADs",
                        "https://atj.wikipedia.org/wiki/Paris",
                        "https://awa.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A5%80%E0%A4%B8",
                        "https://gn.wikipedia.org/wiki/Par%C4%A9",
                        "https://av.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://ay.wikipedia.org/wiki/Paris",
                        "https://az.wikipedia.org/wiki/Paris",
                        "https://azb.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%DB%8C%D8%B3",
                        "https://ban.wikipedia.org/wiki/Paris",
                        "https://bm.wikipedia.org/wiki/Paris",
                        "https://bn.wikipedia.org/wiki/%E0%A6%AA%E0%A7%8D%E0%A6%AF%E0%A6%BE%E0%A6%B0%E0%A6%BF%E0%A6%B8",
                        "https://zh-min-nan.wikipedia.org/wiki/Pa-l%C3%AD",
                        "https://ba.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://be.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D1%8B%D0%B6",
                        "https://be-tarask.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D1%8B%D0%B6",
                        "https://bh.wikipedia.org/wiki/%E0%A4%AA%E0%A5%88%E0%A4%B0%E0%A4%BF%E0%A4%B8",
                        "https://bcl.wikipedia.org/wiki/Paris",
                        "https://bi.wikipedia.org/wiki/Paris",
                        "https://bg.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://bar.wikipedia.org/wiki/Paris",
                        "https://bo.wikipedia.org/wiki/%E0%BD%95%E0%BC%8B%E0%BD%A2%E0%BD%B2%E0%BC%8D",
                        "https://bs.wikipedia.org/wiki/Pariz",
                        "https://br.wikipedia.org/wiki/Pariz",
                        "https://bxr.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D1%81",
                        "https://ca.wikipedia.org/wiki/Par%C3%ADs",
                        "https://cv.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://ceb.wikipedia.org/wiki/Paris",
                        "https://cs.wikipedia.org/wiki/Pa%C5%99%C3%AD%C5%BE",
                        "https://ch.wikipedia.org/wiki/Paris",
                        "https://cbk-zam.wikipedia.org/wiki/Paris",
                        "https://ny.wikipedia.org/wiki/Paris",
                        "https://sn.wikipedia.org/wiki/Paris",
                        "https://tum.wikipedia.org/wiki/Paris",
                        "https://co.wikipedia.org/wiki/Parighji",
                        "https://cy.wikipedia.org/wiki/Paris",
                        "https://dag.wikipedia.org/wiki/Paris",
                        "https://da.wikipedia.org/wiki/Paris",
                        "https://ary.wikipedia.org/wiki/%D8%A8%D8%A7%D8%B1%D9%8A%D8%B2",
                        "https://se.wikipedia.org/wiki/Paris",
                        "https://pdc.wikipedia.org/wiki/Paris",
                        "https://de.wikipedia.org/wiki/Paris",
                        "https://nv.wikipedia.org/wiki/W%C3%B3t%CA%BC%C3%A1%C3%A1h_Y%C3%AD%CA%BC%C3%A1h%C3%AD",
                        "https://dsb.wikipedia.org/wiki/Paris",
                        "https://dty.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
                        "https://dz.wikipedia.org/wiki/Paris",
                        "https://et.wikipedia.org/wiki/Pariis",
                        "https://el.wikipedia.org/wiki/%CE%A0%CE%B1%CF%81%CE%AF%CF%83%CE%B9",
                        "https://eml.wikipedia.org/wiki/Par%C3%AC",
                        "https://myv.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6_%D0%BE%D1%88",
                        "https://es.wikipedia.org/wiki/Par%C3%ADs",
                        "https://eo.wikipedia.org/wiki/Parizo",
                        "https://ext.wikipedia.org/wiki/Par%C3%ADs",
                        "https://eu.wikipedia.org/wiki/Paris",
                        "https://ee.wikipedia.org/wiki/Paris",
                        "https://fa.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%DB%8C%D8%B3",
                        "https://hif.wikipedia.org/wiki/Paris",
                        "https://fo.wikipedia.org/wiki/Paris",
                        "https://fr.wikipedia.org/wiki/Paris",
                        "https://fy.wikipedia.org/wiki/Parys",
                        "https://ff.wikipedia.org/wiki/Pari",
                        "https://fur.wikipedia.org/wiki/Par%C3%AEs",
                        "https://ga.wikipedia.org/wiki/P%C3%A1ras",
                        "https://gv.wikipedia.org/wiki/Paarys",
                        "https://gag.wikipedia.org/wiki/Parij",
                        "https://gd.wikipedia.org/wiki/Paris",
                        "https://gl.wikipedia.org/wiki/Par%C3%ADs",
                        "https://inh.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B0%D0%B6",
                        "https://gan.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E",
                        "https://glk.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%D9%8A%D8%B3",
                        "https://gu.wikipedia.org/wiki/%E0%AA%AA%E0%AB%87%E0%AA%B0%E0%AA%BF%E0%AA%B8",
                        "https://got.wikipedia.org/wiki/%F0%90%8D%80%F0%90%8C%B0%F0%90%8D%82%F0%90%8C%B9%F0%90%8D%83",
                        "https://gom.wikipedia.org/wiki/Paris",
                        "https://guw.wikipedia.org/wiki/Paris",
                        "https://hak.wikipedia.org/wiki/P%C3%A2-l%C3%AC",
                        "https://ko.wikipedia.org/wiki/%ED%8C%8C%EB%A6%AC_(%ED%94%84%EB%9E%91%EC%8A%A4)",
                        "https://ha.wikipedia.org/wiki/Faris",
                        "https://haw.wikipedia.org/wiki/Palika",
                        "https://hy.wikipedia.org/wiki/%D5%93%D5%A1%D6%80%D5%AB%D5%A6",
                        "https://hi.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
                        "https://hsb.wikipedia.org/wiki/Paris",
                        "https://hr.wikipedia.org/wiki/Pariz",
                        "https://io.wikipedia.org/wiki/Paris",
                        "https://ilo.wikipedia.org/wiki/Paris",
                        "https://id.wikipedia.org/wiki/Paris",
                        "https://ia.wikipedia.org/wiki/Paris",
                        "https://ie.wikipedia.org/wiki/Paris",
                        "https://iu.wikipedia.org/wiki/%E1%90%B1%E1%90%85%E1%95%86%E1%94%85",
                        "https://os.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://xh.wikipedia.org/wiki/Paris",
                        "https://zu.wikipedia.org/wiki/IParisi",
                        "https://is.wikipedia.org/wiki/Par%C3%ADs",
                        "https://it.wikipedia.org/wiki/Parigi",
                        "https://he.wikipedia.org/wiki/%D7%A4%D7%A8%D7%99%D7%96",
                        "https://jv.wikipedia.org/wiki/Paris",
                        "https://kbp.wikipedia.org/wiki/Paarii",
                        "https://kl.wikipedia.org/wiki/Paris",
                        "https://kn.wikipedia.org/wiki/%E0%B2%AA%E0%B3%8D%E0%B2%AF%E0%B2%BE%E0%B2%B0%E0%B2%BF%E0%B2%B8%E0%B3%8D",
                        "https://pam.wikipedia.org/wiki/Paris",
                        "https://krc.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://ka.wikipedia.org/wiki/%E1%83%9E%E1%83%90%E1%83%A0%E1%83%98%E1%83%96%E1%83%98",
                        "https://ks.wikipedia.org/wiki/%D9%BE%DB%8C%D8%B1%D9%90%D8%B3",
                        "https://csb.wikipedia.org/wiki/Pariz",
                        "https://kk.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://kw.wikipedia.org/wiki/Paris",
                        "https://rw.wikipedia.org/wiki/Paris",
                        "https://rn.wikipedia.org/wiki/Paris",
                        "https://sw.wikipedia.org/wiki/Paris",
                        "https://kv.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://kg.wikipedia.org/wiki/Paris",
                        "https://avk.wikipedia.org/wiki/Paris",
                        "https://ht.wikipedia.org/wiki/Pari",
                        "https://gcr.wikipedia.org/wiki/Pari",
                        "https://ku.wikipedia.org/wiki/Par%C3%AEs",
                        "https://ky.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://mrj.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://lld.wikipedia.org/wiki/Paris",
                        "https://lad.wikipedia.org/wiki/Paris",
                        "https://lo.wikipedia.org/wiki/%E0%BA%9B%E0%BA%B2%E0%BA%A3%E0%BA%B5",
                        "https://ltg.wikipedia.org/wiki/Pari%C5%BEa",
                        "https://la.wikipedia.org/wiki/Lutetia",
                        "https://lv.wikipedia.org/wiki/Par%C4%ABze",
                        "https://lb.wikipedia.org/wiki/Par%C3%A4is",
                        "https://lez.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://lt.wikipedia.org/wiki/Pary%C5%BEius",
                        "https://lij.wikipedia.org/wiki/Pariggi",
                        "https://li.wikipedia.org/wiki/Paries",
                        "https://ln.wikipedia.org/wiki/Pari",
                        "https://lfn.wikipedia.org/wiki/Paris",
                        "https://olo.wikipedia.org/wiki/Parii%C5%BEu",
                        "https://jbo.wikipedia.org/wiki/paris",
                        "https://lg.wikipedia.org/wiki/Paris",
                        "https://lmo.wikipedia.org/wiki/Paris",
                        "https://hu.wikipedia.org/wiki/P%C3%A1rizs",
                        "https://mai.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
                        "https://mk.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B7",
                        "https://mg.wikipedia.org/wiki/Paris",
                        "https://ml.wikipedia.org/wiki/%E0%B4%AA%E0%B4%BE%E0%B4%B0%E0%B4%BF%E0%B4%B8%E0%B5%8D",
                        "https://mt.wikipedia.org/wiki/Pari%C4%A1i",
                        "https://mi.wikipedia.org/wiki/Par%C4%AB",
                        "https://mr.wikipedia.org/wiki/%E0%A4%AA%E0%A5%85%E0%A4%B0%E0%A4%BF%E0%A4%B8",
                        "https://xmf.wikipedia.org/wiki/%E1%83%9E%E1%83%90%E1%83%A0%E1%83%98%E1%83%96%E1%83%98",
                        "https://arz.wikipedia.org/wiki/%D8%A8%D8%A7%D8%B1%D9%8A%D8%B3",
                        "https://mzn.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%DB%8C%D8%B3",
                        "https://ms.wikipedia.org/wiki/Paris",
                        "https://min.wikipedia.org/wiki/Paris",
                        "https://cdo.wikipedia.org/wiki/B%C4%83-l%C3%A0%CC%A4",
                        "https://mwl.wikipedia.org/wiki/Paris",
                        "https://mdf.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B7",
                        "https://mn.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D1%81",
                        "https://my.wikipedia.org/wiki/%E1%80%95%E1%80%AB%E1%80%9B%E1%80%AE%E1%80%99%E1%80%BC%E1%80%AD%E1%80%AF%E1%80%B7",
                        "https://fj.wikipedia.org/wiki/Parisi",
                        "https://nl.wikipedia.org/wiki/Parijs",
                        "https://nds-nl.wikipedia.org/wiki/Paries",
                        "https://ne.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
                        "https://new.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
                        "https://ja.wikipedia.org/wiki/%E3%83%91%E3%83%AA",
                        "https://nap.wikipedia.org/wiki/Parigge",
                        "https://ce.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://frr.wikipedia.org/wiki/Pariis",
                        "https://no.wikipedia.org/wiki/Paris",
                        "https://nn.wikipedia.org/wiki/Paris",
                        "https://nrm.wikipedia.org/wiki/Paris",
                        "https://nov.wikipedia.org/wiki/Paris",
                        "https://oc.wikipedia.org/wiki/Par%C3%ADs",
                        "https://mhr.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://or.wikipedia.org/wiki/%E0%AC%AA%E0%AD%8D%E0%AD%9F%E0%AC%BE%E0%AC%B0%E0%AC%BF%E0%AC%B8",
                        "https://om.wikipedia.org/wiki/Paaris",
                        "https://uz.wikipedia.org/wiki/Parij",
                        "https://pa.wikipedia.org/wiki/%E0%A8%AA%E0%A9%88%E0%A8%B0%E0%A8%BF%E0%A8%B8",
                        "https://pnb.wikipedia.org/wiki/%D9%BE%DB%8C%D8%B1%D8%B3",
                        "https://pap.wikipedia.org/wiki/Paris",
                        "https://ps.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%DB%8C%D8%B3",
                        "https://jam.wikipedia.org/wiki/Paris",
                        "https://koi.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://km.wikipedia.org/wiki/%E1%9E%94%E1%9F%89%E1%9E%B6%E1%9E%9A%E1%9E%B8%E1%9E%9F",
                        "https://pcd.wikipedia.org/wiki/Paris",
                        "https://pms.wikipedia.org/wiki/Paris",
                        "https://pwn.wikipedia.org/wiki/paris",
                        "https://tpi.wikipedia.org/wiki/Paris",
                        "https://nds.wikipedia.org/wiki/Paris",
                        "https://pl.wikipedia.org/wiki/Pary%C5%BC",
                        "https://pnt.wikipedia.org/wiki/%CE%A0%CE%B1%CF%81%CE%AF%CF%83%CE%B9",
                        "https://pt.wikipedia.org/wiki/Paris",
                        "https://kaa.wikipedia.org/wiki/Parij",
                        "https://crh.wikipedia.org/wiki/Paris",
                        "https://ty.wikipedia.org/wiki/Paris",
                        "https://ro.wikipedia.org/wiki/Paris",
                        "https://rmy.wikipedia.org/wiki/Paris",
                        "https://rm.wikipedia.org/wiki/Paris",
                        "https://qu.wikipedia.org/wiki/Paris",
                        "https://rue.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D1%96%D0%B6",
                        "https://ru.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://sah.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://sm.wikipedia.org/wiki/Parisi",
                        "https://sg.wikipedia.org/wiki/Paris",
                        "https://sat.wikipedia.org/wiki/%E1%B1%AF%E1%B1%AE%E1%B1%A8%E1%B1%A4%E1%B1%A5",
                        "https://sc.wikipedia.org/wiki/Parigi",
                        "https://sco.wikipedia.org/wiki/Paris",
                        "https://stq.wikipedia.org/wiki/Paris_(St%C3%A4%C3%A4d)",
                        "https://st.wikipedia.org/wiki/Paris",
                        "https://sq.wikipedia.org/wiki/Parisi",
                        "https://scn.wikipedia.org/wiki/Pariggi",
                        "https://si.wikipedia.org/wiki/%E0%B6%B4%E0%B7%90%E0%B6%BB%E0%B7%92%E0%B7%83%E0%B7%8A",
                        "https://simple.wikipedia.org/wiki/Paris",
                        "https://sd.wikipedia.org/wiki/%D9%BE%D9%8A%D8%B1%D8%B3",
                        "https://sk.wikipedia.org/wiki/Par%C3%AD%C5%BE",
                        "https://sl.wikipedia.org/wiki/Pariz",
                        "https://cu.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6%D1%8C",
                        "https://szl.wikipedia.org/wiki/Pary%C5%BC",
                        "https://so.wikipedia.org/wiki/Baariis",
                        "https://ckb.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%DB%8C%D8%B3",
                        "https://srn.wikipedia.org/wiki/Paris",
                        "https://sr.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B7",
                        "https://sh.wikipedia.org/wiki/Pariz",
                        "https://su.wikipedia.org/wiki/Paris",
                        "https://fi.wikipedia.org/wiki/Pariisi",
                        "https://sv.wikipedia.org/wiki/Paris",
                        "https://tl.wikipedia.org/wiki/Paris",
                        "https://ta.wikipedia.org/wiki/%E0%AE%AA%E0%AE%BE%E0%AE%B0%E0%AE%BF%E0%AE%9A%E0%AF%81",
                        "https://shi.wikipedia.org/wiki/Bariz",
                        "https://kab.wikipedia.org/wiki/Paris_(Fransa)",
                        "https://roa-tara.wikipedia.org/wiki/Parigge",
                        "https://tt.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://te.wikipedia.org/wiki/%E0%B0%AA%E0%B0%BE%E0%B0%B0%E0%B0%BF%E0%B0%B8%E0%B1%8D",
                        "https://tet.wikipedia.org/wiki/Par%C3%ADs",
                        "https://th.wikipedia.org/wiki/%E0%B8%9B%E0%B8%B2%E0%B8%A3%E0%B8%B5%E0%B8%AA",
                        "https://tg.wikipedia.org/wiki/%D0%9F%D0%BE%D1%80%D0%B8%D1%81",
                        "https://to.wikipedia.org/wiki/Palesi",
                        "https://chy.wikipedia.org/wiki/Paris",
                        "https://tr.wikipedia.org/wiki/Paris",
                        "https://tk.wikipedia.org/wiki/Pari%C5%BE",
                        "https://tw.wikipedia.org/wiki/Paris",
                        "https://kcg.wikipedia.org/wiki/Pari%CC%B1t",
                        "https://tyv.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://udm.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://uk.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
                        "https://ur.wikipedia.org/wiki/%D9%BE%DB%8C%D8%B1%D8%B3",
                        "https://ug.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%D9%89%DA%98",
                        "https://za.wikipedia.org/wiki/Bahliz",
                        "https://vec.wikipedia.org/wiki/Parize",
                        "https://vep.wikipedia.org/wiki/Pari%C5%BE",
                        "https://vi.wikipedia.org/wiki/Paris",
                        "https://vo.wikipedia.org/wiki/Paris",
                        "https://fiu-vro.wikipedia.org/wiki/Pariis",
                        "https://wa.wikipedia.org/wiki/Paris",
                        "https://zh-classical.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E",
                        "https://vls.wikipedia.org/wiki/Parys",
                        "https://war.wikipedia.org/wiki/Paris",
                        "https://wo.wikipedia.org/wiki/Pari",
                        "https://wuu.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E",
                        "https://yi.wikipedia.org/wiki/%D7%A4%D7%90%D7%A8%D7%99%D7%96",
                        "https://yo.wikipedia.org/wiki/Parisi",
                        "https://zh-yue.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E",
                        "https://diq.wikipedia.org/wiki/Paris",
                        "https://zea.wikipedia.org/wiki/Paries",
                        "https://bat-smg.wikipedia.org/wiki/Par%C4%AB%C5%BEios",
                        "https://zh.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E",
                        "https://bew.wikipedia.org/wiki/Par%C3%A8s",
                        "https://fon.wikipedia.org/wiki/Paris",
                        "https://kge.wikipedia.org/wiki/Paris",
                        "https://knc.wikipedia.org/wiki/Paris",
                        "https://nup.wikipedia.org/wiki/Paris",
                        "https://rsk.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B7",
                        "https://tly.wikipedia.org/wiki/Paris",
                        "https://zgh.wikipedia.org/wiki/%E2%B4%B1%E2%B4%B0%E2%B5%94%E2%B5%89%E2%B5%A3",
                        "https://www.wikidata.org/wiki/Special:EntityPage/Q90#sitelinks-wikipedia",
                        "https://en.wikipedia.org/wiki/Paris",
                        "/wiki/Talk:Paris",
                        "https://en.wikipedia.org/w/index.php?title=Paris&action=edit",
                        "https://en.wikipedia.org/w/index.php?title=Paris&action=history",
                        "/wiki/Special:WhatLinksHere/Paris",
                        "/wiki/Special:RecentChangesLinked/Paris",
                        "//en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard",
                        "https://en.wikipedia.org/w/index.php?title=Paris&oldid=1294086036",
                        "https://en.wikipedia.org/w/index.php?title=Paris&action=info",
                        "/w/index.php?title=Special:CiteThisPage&page=Paris&id=1294086036&wpFormIdentifier=titleform",
                        "/w/index.php?title=Special:UrlShortener&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FParis",
                        "/w/index.php?title=Special:QrCode&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FParis",
                        "/w/index.php?title=Special:DownloadAsPdf&page=Paris&action=show-download-screen",
                        "https://en.wikipedia.org/w/index.php?title=Paris&printable=yes",
                        "https://commons.wikimedia.org/wiki/Paris",
                        "https://en.wikinews.org/wiki/Category:Paris",
                        "https://en.wikiquote.org/wiki/Paris",
                        "https://en.wikivoyage.org/wiki/Paris",
                        "https://www.wikidata.org/wiki/Special:EntityPage/Q90",
                        "https://en.wikipedia.org/wiki/Geographic_coordinate_system",
                        "https://geohack.toolforge.org/geohack.php?pagename=Paris&params=48_51_24_N_2_21_8_E_type:city(2,100,000)_region:FR-75C",
                        "/wiki/Wikipedia:Good_articles*",
                        "/wiki/Wikipedia:Protection_policy#semi",
                        "https://en.wikipedia.org/wiki/Paris_(disambiguation)",
                        "https://en.wikipedia.org/wiki/Parisien_(disambiguation)",
                        "https://en.wikipedia.org/wiki/Capital_city",
                        "https://en.wikipedia.org/wiki/Communes_of_France",
                        "https://en.wikipedia.org/wiki/Departments_of_France",
                        "/wiki/File:La_Tour_Eiffel_vue_de_la_Tour_Saint-Jacques,_Paris_ao%C3%BBt_2014_(2).jpg",
                        "https://en.wikipedia.org/wiki/Eiffel_Tower",
                        "https://en.wikipedia.org/wiki/Seine",
                        "https://en.wikipedia.org/wiki/Tour_Saint-Jacques",
                        "/wiki/File:Notre-Dame_de_Paris_2013-07-24.jpg",
                        "https://en.wikipedia.org/wiki/Notre-Dame_de_Paris",
                        "/wiki/File:Basilique_du_Sacr%C3%A9-C%C5%93ur_de_Montmartre,_Paris_18e_140223_2.jpg",
                        "https://en.wikipedia.org/wiki/Basilique_du_Sacr%C3%A9-C%C5%93ur",
                        "/wiki/File:Facade_of_the_Panth%C3%A9on,_Paris_24_January_2016.jpg",
                        "https://en.wikipedia.org/wiki/Panth%C3%A9on",
                        "/wiki/File:Arc_de_Triomphe_HDR_2007.jpg",
                        "https://en.wikipedia.org/wiki/Arc_de_Triomphe",
                        "/wiki/File:Paris_Opera_full_frontal_architecture,_May_2009_sky.JPG",
                        "https://en.wikipedia.org/wiki/Palais_Garnier",
                        "/wiki/File:Louvre_Courtyard,_Looking_West.jpg",
                        "https://en.wikipedia.org/wiki/Louvre",
                        "/wiki/File:Flag_of_Paris_with_coat_of_arms.svg",
                        "https://en.wikipedia.org/wiki/Flag_of_Paris",
                        "/wiki/File:Grandes_Armes_de_Paris.svg",
                        "https://en.wikipedia.org/wiki/Coat_of_arms_of_Paris",
                        "https://en.wikipedia.org/wiki/Fluctuat_nec_mergitur",
                        "/wiki/File:France_location_map-Regions_and_departements-2016.svg",
                        "/wiki/File:Ile-de-France_region_location_map.svg",
                        "https://en.wikipedia.org/wiki/France",
                        "https://en.wikipedia.org/wiki/Regions_of_France",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France",
                        "https://en.wikipedia.org/wiki/Arrondissements_of_France",
                        "https://en.wikipedia.org/wiki/Communes_of_France#Intercommunality",
                        "https://en.wikipedia.org/wiki/Grand_Paris",
                        "https://en.wikipedia.org/wiki/Administrative_division",
                        "https://en.wikipedia.org/wiki/Arrondissements_of_Paris",
                        "https://en.wikipedia.org/wiki/Anne_Hidalgo",
                        "https://en.wikipedia.org/#cite_note-1",
                        "https://en.wikipedia.org/wiki/Socialist_Party_(France)",
                        "https://en.wikipedia.org/#cite_note-Comparateur_de_territoires.INSEE-2",
                        "https://en.wikipedia.org/#cite_note-pop2025-3",
                        "https://en.wikipedia.org/wiki/List_of_European_cities_by_population_within_city_limits",
                        "https://en.wikipedia.org/wiki/List_of_communes_in_France_with_over_20,000_inhabitants",
                        "https://en.wikipedia.org/wiki/Urban_area",
                        "https://en.wikipedia.org/wiki/Metropolitan_area",
                        "https://en.wikipedia.org/wiki/Demonym",
                        "https://en.wikipedia.org/wiki/English_language",
                        "https://en.wikipedia.org/wiki/French_language",
                        "https://en.wikipedia.org/wiki/Time_zone",
                        "/wiki/UTC%2B01:00",
                        "https://en.wikipedia.org/wiki/Central_European_Time",
                        "https://en.wikipedia.org/wiki/Daylight_saving_time",
                        "/wiki/UTC%2B02:00",
                        "https://en.wikipedia.org/wiki/Central_European_Summer_Time",
                        "https://en.wikipedia.org/wiki/INSEE_code",
                        "https://www.insee.fr/fr/statistiques/1405599?geo=COM-75056",
                        "https://paris.fr",
                        "/wiki/Help:IPA/French",
                        "https://upload.wikimedia.org/wikipedia/commons/transcoded/f/fd/Paris_Pronunciation_in_French_by_James_Tamim.ogg/Paris_Pronunciation_in_French_by_James_Tamim.ogg.mp3",
                        "/wiki/File:Paris_Pronunciation_in_French_by_James_Tamim.ogg",
                        "https://en.wikipedia.org/#cite_note-pop2019-4",
                        "https://en.wikipedia.org/wiki/List_of_cities_in_the_European_Union_by_population_within_city_limits",
                        "https://en.wikipedia.org/wiki/European_Union",
                        "https://en.wikipedia.org/wiki/List_of_cities_proper_by_population_density",
                        "https://en.wikipedia.org/#cite_note-5",
                        "https://en.wikipedia.org/wiki/Finance",
                        "https://en.wikipedia.org/wiki/Diplomacy",
                        "https://en.wikipedia.org/wiki/Commerce",
                        "https://en.wikipedia.org/wiki/Culture",
                        "https://en.wikipedia.org/wiki/Fashion_capital",
                        "https://en.wikipedia.org/wiki/Gastronomy",
                        "https://en.wikipedia.org/wiki/French_art",
                        "https://en.wikipedia.org/wiki/Science_and_technology_in_France",
                        "https://en.wikipedia.org/#cite_note-6",
                        "https://en.wikipedia.org/wiki/Gross_domestic_product",
                        "https://en.wikipedia.org/wiki/Purchasing_power_parity",
                        "https://en.wikipedia.org/#cite_note-7",
                        "https://en.wikipedia.org/#cite_note-8",
                        "https://en.wikipedia.org/wiki/Economist_Intelligence_Unit",
                        "https://en.wikipedia.org/#cite_note-9",
                        "https://en.wikipedia.org/wiki/Charles_de_Gaulle_Airport",
                        "https://en.wikipedia.org/wiki/List_of_the_busiest_airports_in_Europe",
                        "https://en.wikipedia.org/wiki/Orly_Airport",
                        "https://en.wikipedia.org/#cite_note-10",
                        "https://en.wikipedia.org/#cite_note-11",
                        "https://en.wikipedia.org/wiki/Sustainable_transportation",
                        "https://en.wikipedia.org/#cite_note-ICLEI-12",
                        "https://en.wikipedia.org/wiki/Sustainable_Transport_Award",
                        "https://en.wikipedia.org/#cite_note-Award-13",
                        "https://en.wikipedia.org/#cite_note-14",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_d%27Orsay",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_Marmottan_Monet",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_l%27Orangerie",
                        "https://en.wikipedia.org/wiki/Impressionism",
                        "https://en.wikipedia.org/wiki/Pompidou_Centre",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_National_d%27Art_Moderne",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_Rodin",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_Picasso",
                        "https://en.wikipedia.org/wiki/Modern_art",
                        "https://en.wikipedia.org/wiki/Contemporary_art",
                        "https://en.wikipedia.org/wiki/UNESCO_World_Heritage_Site",
                        "https://en.wikipedia.org/#cite_note-unesco-15",
                        "https://en.wikipedia.org/wiki/United_Nations",
                        "https://en.wikipedia.org/wiki/OECD",
                        "https://en.wikipedia.org/wiki/OECD_Development_Centre",
                        "https://en.wikipedia.org/wiki/International_Bureau_of_Weights_and_Measures",
                        "https://en.wikipedia.org/wiki/International_Energy_Agency",
                        "https://en.wikipedia.org/wiki/International_Federation_for_Human_Rights",
                        "https://en.wikipedia.org/wiki/European_Space_Agency",
                        "https://en.wikipedia.org/wiki/European_Banking_Authority",
                        "https://en.wikipedia.org/wiki/European_Securities_and_Markets_Authority",
                        "https://en.wikipedia.org/wiki/Paris_Saint-Germain_F.C.",
                        "https://en.wikipedia.org/wiki/Rugby_union",
                        "https://en.wikipedia.org/wiki/Stade_Fran%C3%A7ais",
                        "https://en.wikipedia.org/wiki/Stade_de_France",
                        "https://en.wikipedia.org/wiki/1998_FIFA_World_Cup",
                        "https://en.wikipedia.org/wiki/Saint-Denis,_Seine-Saint-Denis",
                        "https://en.wikipedia.org/wiki/French_Open",
                        "https://en.wikipedia.org/wiki/Grand_Slam_(tennis)",
                        "https://en.wikipedia.org/wiki/Stade_Roland_Garros",
                        "https://en.wikipedia.org/wiki/1900_Summer_Olympics",
                        "https://en.wikipedia.org/wiki/1924_Summer_Olympics",
                        "https://en.wikipedia.org/wiki/2024_Summer_Olympics",
                        "https://en.wikipedia.org/wiki/1938_FIFA_World_Cup",
                        "https://en.wikipedia.org/wiki/2019_FIFA_Women%27s_World_Cup",
                        "https://en.wikipedia.org/wiki/2007_Rugby_World_Cup",
                        "https://en.wikipedia.org/wiki/2023_Rugby_World_Cup",
                        "https://en.wikipedia.org/wiki/1954_Rugby_League_World_Cup",
                        "https://en.wikipedia.org/wiki/1972_Rugby_League_World_Cup",
                        "https://en.wikipedia.org/wiki/Rugby_League_World_Cup",
                        "https://en.wikipedia.org/wiki/1960_European_Nations%27_Cup",
                        "https://en.wikipedia.org/wiki/UEFA_Euro_1984",
                        "https://en.wikipedia.org/wiki/UEFA_Euro_2016",
                        "https://en.wikipedia.org/wiki/Tour_de_France",
                        "https://en.wikipedia.org/wiki/Avenue_des_Champs-%C3%89lys%C3%A9es",
                        "https://en.wiktionary.org/wiki/Paris",
                        "https://en.wikipedia.org/wiki/Oppidum",
                        "https://en.wikipedia.org/wiki/Julius_Caesar",
                        "https://en.wikipedia.org/wiki/Lutetia",
                        "https://en.wikipedia.org/wiki/Parisii_(France)",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEN%C3%A8gre1990155-16",
                        "https://en.wikipedia.org/#cite_note-Falileyev-17",
                        "https://en.wikipedia.org/wiki/Celtic_languages",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTELambert199438-18",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEDelamarre2003211-19",
                        "https://en.wikipedia.org/wiki/Gauls",
                        "https://en.wikipedia.org/wiki/La_T%C3%A8ne_culture",
                        "https://en.wikipedia.org/wiki/Roman_period",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEDelamarre2003247-20",
                        "https://en.wikipedia.org/wiki/Ethnonym",
                        "https://en.wikipedia.org/wiki/Xavier_Delamarre",
                        "https://en.wikipedia.org/wiki/Alfred_Holder",
                        "https://en.wikipedia.org/wiki/Welsh_language",
                        "https://en.wikipedia.org/wiki/Proto-Celtic",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEBusse2006199-21",
                        "https://en.wikipedia.org/wiki/Pierre-Yves_Lambert",
                        "https://en.wikipedia.org/wiki/Old_Irish",
                        "https://en.wikipedia.org/wiki/Paris_(mythology)",
                        "https://en.wikipedia.org/wiki/Greek_mythology",
                        "https://upload.wikimedia.org/wikipedia/commons/transcoded/c/cb/Parisien2.ogg/Parisien2.ogg.mp3",
                        "/wiki/File:Parisien2.ogg",
                        "https://upload.wikimedia.org/wikipedia/commons/transcoded/b/b9/Parigot.ogg/Parigot.ogg.mp3",
                        "/wiki/File:Parigot.ogg",
                        "https://en.wikipedia.org/#cite_note-22",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEDottin1920535-23",
                        "https://en.wikipedia.org/wiki/History_of_Paris",
                        "https://en.wikipedia.org/wiki/Timeline_of_Paris",
                        "https://en.wikipedia.org/wiki/Parisii_(Gaul)",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEArbois_de_JubainvilleDottin1889132-24",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTECunliffe2004201-25",
                        "https://en.wikipedia.org/wiki/%C3%8Ele_de_la_Cit%C3%A9",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand201025-26",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESchmidt200965%E2%80%9370-27",
                        "/wiki/File:ParisiiCoins.jpg",
                        "https://en.wikipedia.org/wiki/Gallic_Wars",
                        "https://en.wikipedia.org/wiki/Paris_Basin",
                        "https://en.wikipedia.org/wiki/Roman_Republic",
                        "https://en.wikipedia.org/wiki/Rive_Gauche",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESchmidt200988%E2%80%93104-28",
                        "https://en.wikipedia.org/wiki/Amphitheatre",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESchmidt2009154%E2%80%93167-29",
                        "https://en.wikipedia.org/wiki/Western_Roman_Empire",
                        "https://en.wikipedia.org/wiki/Latin_language",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEMeunier201412-30",
                        "https://en.wikipedia.org/wiki/Christianity",
                        "https://en.wikipedia.org/wiki/Saint_Denis_of_Paris",
                        "https://en.wikipedia.org/wiki/Montmartre",
                        "https://en.wikipedia.org/wiki/Basilica_of_Saint-Denis",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESchmidt2009210%E2%80%93211-31",
                        "https://en.wikipedia.org/wiki/Clovis_I",
                        "https://en.wikipedia.org/wiki/Merovingian_dynasty",
                        "https://en.wikipedia.org/#cite_note-32",
                        "https://en.wikipedia.org/wiki/Franks",
                        "https://en.wikipedia.org/wiki/Francien_language",
                        "https://en.wikipedia.org/wiki/Siege_of_Paris_(845)",
                        "https://en.wikipedia.org/wiki/Siege_of_Paris_(885%E2%80%93886)",
                        "https://en.wikipedia.org/wiki/Count_of_Paris",
                        "https://en.wikipedia.org/wiki/Odo_of_France",
                        "https://en.wikipedia.org/wiki/West_Francia",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEJones199448-33",
                        "https://en.wikipedia.org/wiki/House_of_Capet",
                        "https://en.wikipedia.org/wiki/Hugh_Capet",
                        "https://en.wikipedia.org/wiki/Duke_of_the_Franks",
                        "https://en.wikipedia.org/wiki/Paris_in_the_Middle_Ages",
                        "https://en.wikipedia.org/wiki/Paris_in_the_16th_century",
                        "https://en.wikipedia.org/wiki/Paris_in_the_17th_century",
                        "/wiki/File:Palais_de_la_Cite.jpg",
                        "https://en.wikipedia.org/wiki/Palais_de_la_Cit%C3%A9",
                        "https://en.wikipedia.org/wiki/Sainte-Chapelle",
                        "https://en.wikipedia.org/wiki/Tr%C3%A8s_Riches_Heures_du_duc_de_Berry",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand201027-34",
                        "https://en.wikipedia.org/wiki/Louis_VII_of_France",
                        "https://en.wikipedia.org/wiki/Maurice_de_Sully",
                        "https://en.wikipedia.org/wiki/Notre_Dame_de_Paris",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEBussmann198522-35",
                        "https://en.wikipedia.org/wiki/Les_Halles",
                        "https://en.wikipedia.org/wiki/Place_de_l%27H%C3%B4tel-de-Ville_%E2%80%93_Esplanade_de_la_Lib%C3%A9ration",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEde_VitriacoHinnebusch1972262-36",
                        "https://en.wikipedia.org/wiki/Philip_II_of_France",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant201236%E2%80%9340-37",
                        "https://en.wikipedia.org/wiki/University_of_Paris",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant201228%E2%80%9329-38",
                        "https://en.wikipedia.org/#cite_note-ParisDigest-39",
                        "https://en.wikipedia.org/#cite_note-40",
                        "/wiki/File:P1030887_Paris_IV_h%C3%B4tel_de_Sens_rwk.JPG",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Sens",
                        "https://en.wikipedia.org/wiki/Hundred_Years%27_War",
                        "https://en.wikipedia.org/wiki/Burgundian_State",
                        "https://en.wikipedia.org/wiki/Henry_V_of_England",
                        "https://en.wikipedia.org/#cite_note-41",
                        "https://en.wikipedia.org/wiki/Joan_of_Arc",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro199652%E2%80%9353-42",
                        "https://en.wikipedia.org/wiki/French_Wars_of_Religion",
                        "https://en.wikipedia.org/wiki/Catholic_League_(French)",
                        "https://en.wikipedia.org/wiki/St._Bartholomew%27s_Day_massacre",
                        "https://en.wikipedia.org/#cite_note-43",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEBayrou1994121%E2%80%93130-44",
                        "https://en.wikipedia.org/wiki/Henry_IV_of_France",
                        "https://en.wikipedia.org/wiki/Pont_Neuf",
                        "https://en.wikipedia.org/wiki/Tuileries_Palace",
                        "https://en.wikipedia.org/wiki/Place_des_Vosges",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996577-45",
                        "https://en.wikipedia.org/wiki/Cardinal_Richelieu",
                        "https://en.wikipedia.org/wiki/Louis_XIII_of_France",
                        "https://en.wikipedia.org/wiki/College_of_Sorbonne",
                        "https://en.wikipedia.org/wiki/Palais-Royal",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996582-46",
                        "/wiki/File:Plan_de_Paris_en_1657.JPG",
                        "https://en.wikipedia.org/wiki/Jan_Janssonius",
                        "https://en.wikipedia.org/wiki/Fronde",
                        "https://en.wikipedia.org/wiki/Louis_XIV_of_France",
                        "https://en.wikipedia.org/wiki/Palace_of_Versailles",
                        "https://en.wikipedia.org/wiki/Com%C3%A9die-Fran%C3%A7aise",
                        "https://en.wikipedia.org/wiki/French_Academy_of_Sciences",
                        "https://en.wikipedia.org/wiki/City_walls_of_Paris",
                        "https://en.wikipedia.org/wiki/Boulevards_of_Paris#The_grands_boulevards",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTECombeau200342%E2%80%9343-47",
                        "https://en.wikipedia.org/wiki/Coll%C3%A8ge_des_Quatre-Nations",
                        "https://en.wikipedia.org/wiki/Place_Vend%C3%B4me",
                        "https://en.wikipedia.org/wiki/Place_des_Victoires",
                        "https://en.wikipedia.org/wiki/Les_Invalides",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996590%E2%80%93591-48",
                        "https://en.wikipedia.org/wiki/Paris_in_the_18th_century",
                        "https://en.wikipedia.org/wiki/Paris_during_the_Second_Empire",
                        "https://en.wikipedia.org/wiki/Haussmann%27s_renovation_of_Paris",
                        "https://en.wikipedia.org/#cite_note-49",
                        "https://en.wikipedia.org/wiki/Champs-%C3%89lys%C3%A9es",
                        "https://en.wikipedia.org/wiki/Place_Charles_de_Gaulle",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTECombeau200345%E2%80%9347-50",
                        "https://en.wikipedia.org/wiki/Faubourg_Saint-Antoine",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012129%E2%80%93133-51",
                        "/wiki/File:Prise_de_la_Bastille.jpg",
                        "https://en.wikipedia.org/wiki/Bastille",
                        "https://en.wikipedia.org/wiki/Jean-Pierre_Hou%C3%ABl",
                        "/wiki/File:Pantheon_2,_Paris_May_11,_2013.jpg",
                        "https://en.wikipedia.org/wiki/Age_of_Enlightenment",
                        "https://en.wikipedia.org/wiki/Denis_Diderot",
                        "https://en.wikipedia.org/wiki/Jean_le_Rond_d%27Alembert",
                        "https://en.wikipedia.org/wiki/Encyclop%C3%A9die",
                        "https://en.wikipedia.org/wiki/Montgolfier_Brothers",
                        "https://en.wikipedia.org/wiki/Hot_air_balloon",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012120-52",
                        "https://en.wikipedia.org/wiki/Andr%C3%A9-Jacques_Garnerin",
                        "https://en.wikipedia.org/wiki/French_Revolution",
                        "https://en.wikipedia.org/wiki/Storming_of_the_Bastille",
                        "https://en.wikipedia.org/wiki/Paris_Commune_(1789%E2%80%931795)",
                        "https://en.wikipedia.org/wiki/Mayor_(France)",
                        "https://en.wikipedia.org/wiki/Jean_Sylvain_Bailly",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEPaine1998453-53",
                        "https://en.wikipedia.org/wiki/Louis_XVI",
                        "https://en.wikipedia.org/wiki/Women%27s_march_on_Versailles",
                        "https://en.wikipedia.org/wiki/Guillotine",
                        "https://en.wikipedia.org/wiki/Reign_of_Terror",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996674-54",
                        "https://en.wikipedia.org/wiki/Biens_nationaux",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012144-55",
                        "https://en.wikipedia.org/wiki/Coup_of_18_Brumaire",
                        "https://en.wikipedia.org/wiki/Napoleon_Bonaparte",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012147-56",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012148-57",
                        "https://en.wikipedia.org/wiki/Canal_de_l%27Ourcq",
                        "https://en.wikipedia.org/wiki/P%C3%A8re_Lachaise_Cemetery",
                        "https://en.wikipedia.org/wiki/Pont_des_Arts",
                        "/wiki/File:Louis-Emile_Durandelle,_The_Eiffel_Tower_-_State_of_the_Construction,_1888.jpg",
                        "https://en.wikipedia.org/wiki/Bourbon_Restoration_in_France",
                        "https://en.wikipedia.org/wiki/July_Revolution",
                        "https://en.wikipedia.org/wiki/July_Column",
                        "https://en.wikipedia.org/wiki/Place_de_la_Bastille",
                        "https://en.wikipedia.org/wiki/Louis_Philippe_I",
                        "https://en.wikipedia.org/wiki/Provinces_of_France",
                        "https://en.wikipedia.org/wiki/French_Revolution_of_1848",
                        "https://en.wikipedia.org/wiki/Napoleon_III",
                        "https://en.wikipedia.org/wiki/Georges-Eug%C3%A8ne_Haussmann",
                        "https://en.wikipedia.org/wiki/Bois_de_Boulogne",
                        "https://en.wikipedia.org/wiki/Bois_de_Vincennes",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEDe_Moncan20127%E2%80%9335-58",
                        "https://en.wikipedia.org/wiki/Franco-Prussian_War",
                        "https://en.wikipedia.org/wiki/Prussian_Army",
                        "https://en.wikipedia.org/wiki/Paris_Commune",
                        "https://en.wikipedia.org/wiki/Semaine_sanglante",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTERougerie2014118-59",
                        "https://en.wikipedia.org/wiki/Exposition_Universelle_(1889)",
                        "https://en.wikipedia.org/wiki/Exposition_Universelle_(1900)",
                        "https://en.wikipedia.org/wiki/Pont_Alexandre_III",
                        "https://en.wikipedia.org/wiki/Grand_Palais",
                        "https://en.wikipedia.org/wiki/Petit_Palais",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFraserSpalding2011117-60",
                        "https://en.wikipedia.org/wiki/Naturalism_(literature)",
                        "https://en.wikipedia.org/wiki/%C3%89mile_Zola",
                        "https://en.wikipedia.org/wiki/Symbolism_(arts)",
                        "https://en.wikipedia.org/wiki/Charles_Baudelaire",
                        "https://en.wikipedia.org/wiki/Paul_Verlaine",
                        "https://en.wikipedia.org/wiki/Courbet",
                        "https://en.wikipedia.org/wiki/Manet",
                        "https://en.wikipedia.org/wiki/Claude_Monet",
                        "https://en.wikipedia.org/wiki/Renoir",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996490%E2%80%93491-61",
                        "https://en.wikipedia.org/wiki/Paris_in_the_Belle_%C3%89poque",
                        "https://en.wikipedia.org/wiki/Paris_during_the_First_World_War",
                        "https://en.wikipedia.org/wiki/Paris_between_the_Wars_(1919%E2%80%931939)",
                        "https://en.wikipedia.org/wiki/Paris_in_World_War_II",
                        "https://en.wikipedia.org/wiki/History_of_Paris_(1946%E2%80%932000)",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTECombeau200361-62",
                        "https://en.wikipedia.org/wiki/Pablo_Picasso",
                        "https://en.wikipedia.org/wiki/Amedeo_Modigliani",
                        "https://en.wikipedia.org/wiki/Henri_Matisse",
                        "https://en.wikipedia.org/wiki/Fauvism",
                        "https://en.wikipedia.org/wiki/Cubism",
                        "https://en.wikipedia.org/wiki/Abstract_art",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996497-63",
                        "https://en.wikipedia.org/#cite_note-64",
                        "https://en.wikipedia.org/wiki/Marcel_Proust",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996491-65",
                        "https://en.wikipedia.org/wiki/First_World_War",
                        "https://en.wikipedia.org/wiki/First_Battle_of_the_Marne",
                        "https://en.wikipedia.org/wiki/Zeppelin",
                        "https://en.wikipedia.org/wiki/Paris_Gun",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996750-66",
                        "https://en.wikipedia.org/wiki/Ernest_Hemingway",
                        "https://en.wikipedia.org/wiki/Igor_Stravinsky",
                        "https://en.wikipedia.org/wiki/James_Joyce",
                        "https://en.wikipedia.org/wiki/Josephine_Baker",
                        "https://en.wikipedia.org/wiki/Eva_Kotchever",
                        "https://en.wikipedia.org/wiki/Henry_Miller",
                        "https://en.wikipedia.org/wiki/Ana%C3%AFs_Nin",
                        "https://en.wikipedia.org/wiki/Sidney_Bechet",
                        "https://en.wikipedia.org/#cite_note-67",
                        "https://en.wikipedia.org/wiki/Salvador_Dal%C3%AD",
                        "https://en.wikipedia.org/#cite_note-Meisler-68",
                        "https://en.wikipedia.org/wiki/Paris_Peace_Conference,_1919",
                        "https://en.wikipedia.org/wiki/French_colonial_empire",
                        "https://en.wikipedia.org/wiki/Ho_Chi_Minh",
                        "https://en.wikipedia.org/wiki/Zhou_Enlai",
                        "https://en.wikipedia.org/wiki/L%C3%A9opold_S%C3%A9dar_Senghor",
                        "https://en.wikipedia.org/#cite_note-69",
                        "/wiki/File:The_Liberation_of_Paris,_25_-_26_August_1944_HU66477.jpg",
                        "https://en.wikipedia.org/wiki/Charles_de_Gaulle",
                        "https://en.wikipedia.org/wiki/Open_city",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012217-70",
                        "https://en.wikipedia.org/wiki/Vel%27_d%27Hiv_Roundup",
                        "https://en.wikipedia.org/wiki/Auschwitz_concentration_camp",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996637-71",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012218-72",
                        "https://en.wikipedia.org/wiki/2nd_Armored_Division_(France)",
                        "https://en.wikipedia.org/wiki/4th_Infantry_Division_(United_States)",
                        "https://en.wikipedia.org/wiki/United_States_Army",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Ville,_Paris",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996242%E2%80%93243-73",
                        "https://en.wikipedia.org/wiki/Algerian_War",
                        "https://en.wikipedia.org/wiki/National_Liberation_Front_(Algeria)",
                        "https://en.wikipedia.org/wiki/Paris_massacre_of_1961",
                        "https://en.wikipedia.org/wiki/Organisation_arm%C3%A9e_secr%C3%A8te",
                        "https://en.wikipedia.org/#cite_note-74",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996658-75",
                        "https://en.wikipedia.org/wiki/Sorbonne_(building)",
                        "https://en.wikipedia.org/wiki/Latin_Quarter,_Paris",
                        "https://en.wikipedia.org/wiki/May_1968_events_in_France",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012226-76",
                        "https://en.wikipedia.org/wiki/Jacques_Chirac",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996260-77",
                        "https://en.wikipedia.org/wiki/Tour_Montparnasse",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012222-78",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTECombeau2003107%E2%80%93108-79",
                        "https://en.wikipedia.org/wiki/R%C3%A9seau_Express_R%C3%A9gional",
                        "https://en.wikipedia.org/wiki/P%C3%A9riph%C3%A9rique_(Paris)",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEBellde-Shalit2011247-80",
                        "https://en.wikipedia.org/wiki/French_Fifth_Republic",
                        "https://en.wikipedia.org/wiki/Georges_Pompidou",
                        "https://en.wikipedia.org/wiki/Centre_Georges_Pompidou",
                        "https://en.wikipedia.org/wiki/Val%C3%A9ry_Giscard_d%27Estaing",
                        "https://en.wikipedia.org/wiki/Fran%C3%A7ois_Mitterrand",
                        "https://en.wikipedia.org/wiki/Op%C3%A9ra_Bastille",
                        "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_nationale_de_France",
                        "https://en.wikipedia.org/wiki/Arche_de_la_D%C3%A9fense",
                        "https://en.wikipedia.org/wiki/La_D%C3%A9fense",
                        "https://en.wikipedia.org/wiki/Louvre_Pyramid",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_du_Quai_Branly_%E2%80%93_Jacques_Chirac",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012226%E2%80%93230-81",
                        "https://en.wikipedia.org/wiki/Bertrand_Delano%C3%AB",
                        "https://en.wikipedia.org/#cite_note-82",
                        "https://en.wikipedia.org/wiki/V%C3%A9lib%27",
                        "https://en.wikipedia.org/wiki/Promenade_des_Berges_de_la_Seine",
                        "https://en.wikipedia.org/#cite_note-83",
                        "/wiki/File:Marche_hommage_Charlie_hebdo_et_aux_victimes_des_attentats_de_janvier_2015_(17).jpg",
                        "https://en.wikipedia.org/wiki/Place_de_la_R%C3%A9publique",
                        "https://en.wikipedia.org/wiki/Republican_marches",
                        "https://en.wikipedia.org/wiki/Charlie_Hebdo_shooting",
                        "https://en.wikipedia.org/wiki/Nicolas_Sarkozy",
                        "https://en.wikipedia.org/#cite_note-Lichfield-84",
                        "https://en.wikipedia.org/wiki/Grand_Paris_Express",
                        "https://en.wikipedia.org/wiki/TGV",
                        "https://en.wikipedia.org/#cite_note-metro-85",
                        "https://en.wikipedia.org/#cite_note-86",
                        "https://en.wikipedia.org/wiki/Al-Qaeda_in_the_Arabian_Peninsula",
                        "https://en.wikipedia.org/wiki/January_2015_%C3%8Ele-de-France_attacks",
                        "https://en.wikipedia.org/#cite_note-87",
                        "https://en.wikipedia.org/#cite_note-88",
                        "https://en.wikipedia.org/#cite_note-89",
                        "https://en.wikipedia.org/wiki/November_2015_Paris_attacks",
                        "https://en.wikipedia.org/#cite_note-90",
                        "https://en.wikipedia.org/#cite_note-91",
                        "https://en.wikipedia.org/wiki/Paris_Agreement",
                        "https://en.wikipedia.org/wiki/United_Nations_Framework_Convention_on_Climate_Change",
                        "https://en.wikipedia.org/wiki/Effects_of_climate_change",
                        "https://en.wikipedia.org/#cite_note-92",
                        "https://en.wikipedia.org/wiki/Geography_of_Paris",
                        "/wiki/File:Paris,_France_ESA24382977.jpeg",
                        "https://en.wikipedia.org/wiki/Sentinel-2",
                        "https://en.wikipedia.org/wiki/%C3%8Ele_Saint-Louis",
                        "https://en.wikipedia.org/wiki/English_Channel",
                        "https://en.wikipedia.org/#cite_note-City-93",
                        "https://en.wikipedia.org/wiki/Above_mean_sea_level",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEBlackmoreMcConnachie2004153-94",
                        "https://en.wikipedia.org/wiki/Boulevard_P%C3%A9riph%C3%A9rique",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand201069-95",
                        "https://en.wikipedia.org/#cite_note-96",
                        "https://en.wikipedia.org/wiki/Kilometre_zero#France",
                        "https://en.wikipedia.org/wiki/Calais",
                        "https://en.wikipedia.org/wiki/Brussels",
                        "https://en.wikipedia.org/wiki/Marseille",
                        "https://en.wikipedia.org/wiki/Nantes",
                        "https://en.wikipedia.org/wiki/Rouen",
                        "https://en.wikipedia.org/#cite_note-97",
                        "https://en.wikipedia.org/wiki/Climate_of_Paris",
                        "/wiki/File:Paris_raining_autumn_cityscape_(8252181936).jpg",
                        "https://en.wikipedia.org/wiki/Oceanic_climate",
                        "https://en.wikipedia.org/wiki/K%C3%B6ppen_climate_classification",
                        "https://en.wikipedia.org/#cite_note-98",
                        "/wiki/Wikipedia:Verifiability",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010309-99",
                        "https://en.wikipedia.org/wiki/2003_European_heat_wave",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEGoldstein20058-100",
                        "https://en.wikipedia.org/#cite_note-101",
                        "https://en.wikipedia.org/#cite_note-102",
                        "https://en.wikipedia.org/#cite_note-103",
                        "https://en.wikipedia.org/#cite_note-104",
                        "https://en.wikipedia.org/#cite_note-climate-105",
                        "https://en.wikipedia.org/wiki/Parc_Montsouris",
                        "https://en.wikipedia.org/wiki/Precipitation",
                        "https://en.wikipedia.org/wiki/Relative_humidity",
                        "https://en.wikipedia.org/wiki/Sunshine_duration",
                        "https://en.wikipedia.org/wiki/Ultraviolet_index",
                        "https://en.wikipedia.org/wiki/Meteo_France",
                        "https://en.wikipedia.org/#cite_note-106",
                        "https://en.wikipedia.org/#cite_note-Infoclimat-107",
                        "https://en.wikipedia.org/#cite_note-Weather_Atlas-108",
                        "https://en.wikipedia.org/wiki/Administration_of_Paris",
                        "https://en.wikipedia.org/wiki/Mayor_of_Paris",
                        "/wiki/File:Paris_plan_jms.png",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996334-109",
                        "https://en.wikipedia.org/wiki/2014_Paris_municipal_election",
                        "https://en.wikipedia.org/#cite_note-auto2-110",
                        "https://en.wikipedia.org/wiki/2020_Paris_municipal_election",
                        "https://en.wikipedia.org/#cite_note-111",
                        "/wiki/File:Paris,_H%C3%B4tel_de_Ville_--_2014_--_1714.jpg",
                        "https://en.wikipedia.org/wiki/Indirect_election",
                        "https://en.wikipedia.org/wiki/Conseil_de_Paris",
                        "https://en.wikipedia.org/wiki/Closed_list",
                        "https://en.wikipedia.org/wiki/Proportional_representation",
                        "https://en.wikipedia.org/wiki/Two-round_system",
                        "https://en.wikipedia.org/#cite_note-Election_Code_%E2%80%93_Article_L260-112",
                        "https://en.wikipedia.org/wiki/Majority",
                        "https://en.wikipedia.org/wiki/Plurality_(voting)",
                        "https://en.wikipedia.org/wiki/Highest_averages_method",
                        "https://en.wikipedia.org/#cite_note-Pariscouncil-113",
                        "https://en.wikipedia.org/wiki/Conseil_d%27arrondissement",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEShales200716-114",
                        "https://en.wikipedia.org/wiki/Paris_Centre",
                        "https://en.wikipedia.org/#cite_note-115",
                        "/wiki/File:%C3%89tablissements_publics_territoriaux_du_Grand_Paris_et_trois_d%C3%A9partements.svg",
                        "https://en.wikipedia.org/#cite_note-MGP-116",
                        "https://en.wikipedia.org/wiki/Hauts-de-Seine",
                        "https://en.wikipedia.org/wiki/Seine-Saint-Denis",
                        "https://en.wikipedia.org/wiki/Val-de-Marne",
                        "https://en.wikipedia.org/wiki/Argenteuil",
                        "https://en.wikipedia.org/wiki/Val_d%27Oise",
                        "https://en.wikipedia.org/wiki/Paray-Vieille-Poste",
                        "https://en.wikipedia.org/wiki/Essonne",
                        "https://en.wikipedia.org/#cite_note-117",
                        "https://en.wikipedia.org/#cite_note-lemoniteur1-118",
                        "https://en.wikipedia.org/wiki/Patrick_Ollier",
                        "https://en.wikipedia.org/#cite_note-119",
                        "https://en.wikipedia.org/wiki/Region",
                        "https://en.wikipedia.org/wiki/%C3%8Ele_de_France",
                        "https://en.wikipedia.org/wiki/Regional_Council_of_%C3%8Ele-de-France",
                        "https://en.wikipedia.org/wiki/Val%C3%A9rie_P%C3%A9cresse",
                        "https://en.wikipedia.org/#cite_note-120",
                        "/wiki/File:Secretary_Pompeo_Arrives_to_Meet_with_French_Foreign_Minister_Le_Drian_in_Paris_(50610423656).jpg",
                        "https://en.wikipedia.org/wiki/%C3%89lys%C3%A9e_Palace",
                        "https://en.wikipedia.org/wiki/President_of_France",
                        "https://en.wikipedia.org/wiki/Government_of_France",
                        "https://en.wikipedia.org/#cite_note-121",
                        "https://en.wikipedia.org/wiki/Prime_Minister_of_France",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_Matignon",
                        "https://en.wikipedia.org/#cite_note-122",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEKnappWright200693%E2%80%9394-123",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEBorrus2012288-124",
                        "https://en.wikipedia.org/wiki/French_Parliament",
                        "https://en.wikipedia.org/wiki/Senate_(France)",
                        "https://en.wikipedia.org/wiki/Palais_du_Luxembourg",
                        "https://en.wikipedia.org/wiki/National_Assembly_(France)",
                        "https://en.wikipedia.org/wiki/Palais_Bourbon",
                        "https://en.wikipedia.org/wiki/List_of_presidents_of_the_Senate_of_France",
                        "https://en.wikipedia.org/wiki/Petit_Luxembourg",
                        "https://en.wikipedia.org/#cite_note-125",
                        "/wiki/File:Conseil_d%27Etat_Paris_WA.jpg",
                        "https://en.wikipedia.org/wiki/Conseil_d%27%C3%89tat_(France)",
                        "https://en.wikipedia.org/wiki/Court_of_Cassation_(France)",
                        "https://en.wikipedia.org/wiki/Palais_de_Justice,_Paris",
                        "https://en.wikipedia.org/#cite_note-126",
                        "https://en.wikipedia.org/wiki/Council_of_State_(France)",
                        "https://en.wikipedia.org/wiki/1st_arrondissement_of_Paris",
                        "https://en.wikipedia.org/#cite_note-127",
                        "https://en.wikipedia.org/wiki/Constitutional_Council_of_France",
                        "https://en.wikipedia.org/#cite_note-128",
                        "https://en.wikipedia.org/wiki/UNESCO",
                        "https://en.wikipedia.org/wiki/Organisation_for_Economic_Co-operation_and_Development",
                        "https://en.wikipedia.org/wiki/International_Chamber_of_Commerce",
                        "https://en.wikipedia.org/wiki/Paris_Club",
                        "https://en.wikipedia.org/wiki/Organisation_internationale_de_la_Francophonie",
                        "https://en.wikipedia.org/wiki/European_Union_Institute_for_Security_Studies",
                        "https://en.wikipedia.org/wiki/Bureau_of_International_Expositions",
                        "/wiki/File:Gendarmerie_BMW_R1100RT.jpg",
                        "https://en.wikipedia.org/wiki/National_Gendarmerie",
                        "https://en.wikipedia.org/wiki/Prefecture_of_Police_of_Paris",
                        "https://en.wikipedia.org/wiki/Minister_of_the_Interior_(France)",
                        "https://en.wikipedia.org/wiki/National_Police_(France)",
                        "https://en.wikipedia.org/wiki/Paris_Fire_Brigade",
                        "https://en.wikipedia.org/wiki/Place_Louis_L%C3%A9pine",
                        "https://en.wikipedia.org/#cite_note-Presentation_Generale-129",
                        "https://en.wikipedia.org/wiki/Compagnies_R%C3%A9publicaines_de_S%C3%A9curit%C3%A9",
                        "https://en.wikipedia.org/wiki/French_Armed_Forces",
                        "https://en.wikipedia.org/#cite_note-130",
                        "https://en.wikipedia.org/#cite_note-131",
                        "/wiki/File:Tour_Eiffel_360_Panorama.jpg",
                        "https://en.wikipedia.org/wiki/Architecture_of_Paris",
                        "https://en.wikipedia.org/wiki/Religious_buildings_in_Paris",
                        "https://en.wikipedia.org/wiki/List_of_tallest_buildings_and_structures_in_the_Paris_region",
                        "/wiki/File:Rue_de_Rivoli_at_night,_Paris_August_2013.jpg",
                        "https://en.wikipedia.org/wiki/Rue_de_Rivoli",
                        "/wiki/File:Paris_Place_des_Vosges_02.jpg",
                        "https://en.wikipedia.org/#cite_note-132",
                        "https://en.wikipedia.org/wiki/%C3%8Ele_aux_Cygnes",
                        "https://en.wikipedia.org/wiki/Paris_stone",
                        "https://en.wikipedia.org/#cite_note-133",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEBraimohVlek200812-134",
                        "https://en.wikipedia.org/#cite_note-plan_hauteurs-135",
                        "https://en.wikipedia.org/#cite_note-136",
                        "https://en.wikipedia.org/wiki/Tour_First",
                        "https://en.wikipedia.org/wiki/Courbevoie",
                        "/wiki/File:Front_de_Seine_-_Paris_15.jpg",
                        "https://en.wikipedia.org/wiki/Front_de_Seine",
                        "https://en.wikipedia.org/wiki/Avenue_Montaigne",
                        "https://en.wikipedia.org/#cite_note-137",
                        "https://en.wikipedia.org/#cite_note-insee_logement-138",
                        "https://en.wikipedia.org/#cite_note-notaires_idf-139",
                        "https://en.wikipedia.org/#cite_note-140",
                        "/wiki/File:Paris_19th_Arrondissement_Residential_Area.jpg",
                        "https://en.wikipedia.org/#cite_note-141",
                        "/wiki/File:Paris,_France,_September_24,_2016_SkySat.jpg",
                        "https://en.wikipedia.org/wiki/SkySat",
                        "/wiki/File:West_of_Paris_seen_from_Tour_Montparnasse_-_2019-09-18.jpg",
                        "https://en.wikipedia.org/wiki/Seine_(department)",
                        "https://en.wikipedia.org/#cite_note-142",
                        "https://en.wikipedia.org/wiki/Paul_Delouvrier",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEMasson1984536-143",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEYarri2008407-144",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEGordon200646%E2%80%9347-145",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTECastells198375-146",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTETomasBlancBonillaIERP2003237-147",
                        "https://en.wikipedia.org/#cite_note-villes_nouvelles-148",
                        "https://en.wikipedia.org/wiki/Goutte_d%27Or",
                        "https://en.wikipedia.org/wiki/Belleville,_Paris",
                        "https://en.wikipedia.org/wiki/Department_(France)",
                        "https://en.wikipedia.org/wiki/Val-d%27Oise",
                        "https://en.wikipedia.org/wiki/%C3%89vry_(Essonne)",
                        "https://en.wikipedia.org/wiki/Corbeil-Essonnes",
                        "https://en.wikipedia.org/wiki/Essonne_(d%C3%A9partement)",
                        "https://en.wikipedia.org/wiki/Les_Mureaux",
                        "https://en.wikipedia.org/wiki/Mantes-la-Jolie",
                        "https://en.wikipedia.org/wiki/Yvelines",
                        "https://en.wikipedia.org/#cite_note-149",
                        "https://en.wikipedia.org/wiki/Urban_sociology",
                        "https://en.wikipedia.org/wiki/Saint-Maur-des-Foss%C3%A9s",
                        "https://en.wikipedia.org/wiki/Enghien-les-Bains",
                        "https://en.wikipedia.org/#cite_note-150",
                        "https://en.wikipedia.org/wiki/Demographics_of_Paris",
                        "/wiki/File:Paris_population_pyramid.svg",
                        "https://en.wikipedia.org/#cite_note-immig-151",
                        "https://en.wikipedia.org/#cite_note-152",
                        "https://en.wikipedia.org/wiki/Metropolitan_France",
                        "https://en.wikipedia.org/wiki/Algeria",
                        "https://en.wikipedia.org/wiki/Algerians_in_France",
                        "https://en.wikipedia.org/wiki/Morocco",
                        "https://en.wikipedia.org/wiki/Moroccans_in_France",
                        "https://en.wikipedia.org/wiki/Portugal",
                        "https://en.wikipedia.org/wiki/Portuguese_in_France",
                        "https://en.wikipedia.org/wiki/Tunisia",
                        "https://en.wikipedia.org/wiki/Tunisians_in_France",
                        "/wiki/File:Unofficial_flag_of_Guadeloupe_(local).svg",
                        "https://en.wikipedia.org/wiki/Guadeloupe",
                        "/wiki/File:Flag-of-Martinique.svg",
                        "https://en.wikipedia.org/wiki/Martinique",
                        "https://en.wikipedia.org/wiki/China",
                        "https://en.wikipedia.org/wiki/Chinese_community_in_Paris",
                        "https://en.wikipedia.org/wiki/Turkey",
                        "https://en.wikipedia.org/wiki/Turks_in_France",
                        "https://en.wikipedia.org/wiki/Mali",
                        "https://en.wikipedia.org/wiki/Malians_in_France",
                        "https://en.wikipedia.org/wiki/Ivory_Coast",
                        "https://en.wikipedia.org/wiki/Ivorians_in_France",
                        "https://en.wikipedia.org/wiki/Senegal",
                        "https://en.wikipedia.org/wiki/Senegalese_people_in_France",
                        "https://en.wikipedia.org/wiki/Italy",
                        "https://en.wikipedia.org/wiki/Italians_in_France",
                        "https://en.wikipedia.org/wiki/Romania",
                        "https://en.wikipedia.org/wiki/Romanians_in_France",
                        "https://en.wikipedia.org/wiki/Democratic_Republic_of_the_Congo",
                        "https://en.wikipedia.org/wiki/Congolese_people_in_France",
                        "https://en.wikipedia.org/wiki/Spain",
                        "https://en.wikipedia.org/wiki/Spanish_immigration_to_France",
                        "https://en.wikipedia.org/wiki/Sri_Lanka",
                        "https://en.wikipedia.org/wiki/Sri_Lankans_in_France",
                        "https://en.wikipedia.org/wiki/Cameroon",
                        "https://en.wikipedia.org/wiki/Cameroonians_in_France",
                        "https://en.wikipedia.org/wiki/Republic_of_the_Congo",
                        "https://en.wikipedia.org/wiki/Haiti",
                        "https://en.wikipedia.org/wiki/Haitians_in_France",
                        "https://en.wikipedia.org/wiki/Poland",
                        "https://en.wikipedia.org/wiki/Poles_in_France",
                        "https://en.wikipedia.org/wiki/Vietnam",
                        "https://en.wikipedia.org/wiki/Vietnamese_people_in_France",
                        "https://en.wikipedia.org/wiki/Cambodia",
                        "https://en.wikipedia.org/wiki/Cambodians_in_France",
                        "/wiki/File:Blason_R%C3%A9union_DOM.svg",
                        "https://en.wikipedia.org/wiki/R%C3%A9union",
                        "https://en.wikipedia.org/wiki/India",
                        "https://en.wikipedia.org/wiki/Indians_in_France",
                        "https://en.wikipedia.org/wiki/Serbia",
                        "https://en.wikipedia.org/wiki/Serbs_in_France",
                        "https://en.wikipedia.org/wiki/Lebanon",
                        "https://en.wikipedia.org/wiki/Lebanese_people_in_France",
                        "https://en.wikipedia.org/wiki/Madagascar",
                        "https://en.wikipedia.org/wiki/Malagasy_people_in_France",
                        "https://en.wikipedia.org/wiki/Germany",
                        "https://en.wikipedia.org/wiki/Germans_in_France",
                        "https://en.wikipedia.org/wiki/Pakistan",
                        "https://en.wikipedia.org/wiki/Pakistanis_in_France",
                        "https://en.wikipedia.org/wiki/Russia",
                        "https://en.wikipedia.org/wiki/Russians_in_France",
                        "https://en.wikipedia.org/wiki/Mauritius",
                        "https://en.wikipedia.org/wiki/Mauritians_in_France",
                        "https://en.wikipedia.org/wiki/Guinea",
                        "https://en.wikipedia.org/wiki/Guineans_in_France",
                        "https://en.wikipedia.org/wiki/Brazil",
                        "https://en.wikipedia.org/wiki/Brazilians_in_France",
                        "https://en.wikipedia.org/wiki/United_Kingdom",
                        "https://en.wikipedia.org/wiki/British_migration_to_France",
                        "https://en.wikipedia.org/wiki/United_States",
                        "https://en.wikipedia.org/wiki/Americans_in_France",
                        "https://en.wikipedia.org/wiki/Institut_national_de_la_statistique_et_des_%C3%A9tudes_%C3%A9conomiques",
                        "https://en.wikipedia.org/#cite_note-153",
                        "https://en.wikipedia.org/#cite_note-154",
                        "https://en.wikipedia.org/#cite_note-Le_Monde,_22_January_2019-155",
                        "https://en.wikipedia.org/#cite_note-ReferenceA-156",
                        "https://en.wikipedia.org/wiki/Berlin",
                        "https://en.wikipedia.org/wiki/Madrid",
                        "https://en.wikipedia.org/wiki/Rome",
                        "https://en.wikipedia.org/wiki/Eurostat",
                        "https://en.wikipedia.org/#cite_note-157",
                        "https://en.wikipedia.org/#cite_note-158",
                        "https://en.wikipedia.org/wiki/De-industrialisation",
                        "https://en.wikipedia.org/wiki/Gentrification",
                        "https://en.wikipedia.org/#cite_note-159",
                        "https://en.wikipedia.org/#cite_note-pophis-160",
                        "https://en.wikipedia.org/wiki/Unit%C3%A9_urbaine",
                        "https://en.wikipedia.org/wiki/List_of_urban_areas_in_the_European_Union",
                        "https://en.wikipedia.org/#cite_note-pop_UU-161",
                        "https://en.wikipedia.org/#cite_note-urbaneurope-162",
                        "https://en.wikipedia.org/wiki/Paris_Metropolitan_Area",
                        "https://en.wikipedia.org/#cite_note-FU-163",
                        "https://en.wikipedia.org/#cite_note-pop_AU-164",
                        "https://en.wikipedia.org/#cite_note-165",
                        "https://en.wikipedia.org/wiki/List_of_metropolitan_areas_in_Europe",
                        "https://en.wikipedia.org/wiki/Eurozone",
                        "https://en.wikipedia.org/#cite_note-166",
                        "https://en.wikipedia.org/wiki/Europe",
                        "https://en.wikipedia.org/wiki/Maghreb",
                        "https://en.wikipedia.org/wiki/Sub-Saharan_Africa",
                        "https://en.wikipedia.org/wiki/Egypt",
                        "https://en.wikipedia.org/wiki/Asia",
                        "https://en.wikipedia.org/wiki/Americas",
                        "https://en.wikipedia.org/wiki/Oceania",
                        "https://en.wikipedia.org/#cite_note-167",
                        "https://en.wikipedia.org/#cite_note-168",
                        "https://en.wikipedia.org/#cite_note-169",
                        "https://en.wikipedia.org/#cite_note-170",
                        "https://en.wikipedia.org/#cite_note-171",
                        "/wiki/File:Le_sacre_coeur.jpg",
                        "https://en.wikipedia.org/wiki/Sacr%C3%A9-C%C5%93ur,_Paris",
                        "https://en.wikipedia.org/wiki/Catholic_Church",
                        "https://en.wikipedia.org/#cite_note-172",
                        "https://en.wikipedia.org/#cite_note-173",
                        "https://en.wikipedia.org/wiki/Institut_fran%C3%A7ais_d%27opinion_publique",
                        "https://en.wikipedia.org/#cite_note-174",
                        "https://en.wikipedia.org/#cite_note-175",
                        "https://en.wikipedia.org/#cite_note-176",
                        "https://en.wikipedia.org/#cite_note-177",
                        "https://en.wikipedia.org/wiki/Israel",
                        "https://en.wikipedia.org/#cite_note-178",
                        "https://en.wikipedia.org/wiki/Economy_of_Paris",
                        "/wiki/File:La_D%C3%A9fense_depuis_l%27Arc_de_Triomphe_Janvier_2023_(cropped).jpg",
                        "https://en.wikipedia.org/#cite_note-France.fr-179",
                        "/wiki/File:Italiens12.jpg",
                        "https://en.wikipedia.org/wiki/Headquarters",
                        "https://en.wikipedia.org/wiki/BNP_Paribas",
                        "https://en.wikipedia.org/wiki/Boulevard_des_Italiens",
                        "https://en.wikipedia.org/#cite_note-180",
                        "/wiki/File:Hotel_de_la_vaupaliere54.jpg",
                        "https://en.wikipedia.org/wiki/Axa",
                        "/wiki/File:Campus_Evergreen.jpg",
                        "https://en.wikipedia.org/wiki/Cr%C3%A9dit_Agricole",
                        "https://en.wikipedia.org/wiki/Montrouge",
                        "https://en.wikipedia.org/#cite_note-sieges-181",
                        "https://en.wikipedia.org/#cite_note-182",
                        "https://en.wikipedia.org/wiki/Paris_Region",
                        "https://en.wikipedia.org/#cite_note-183",
                        "https://en.wikipedia.org/#cite_note-184",
                        "https://en.wikipedia.org/#cite_note-185",
                        "https://en.wikipedia.org/#cite_note-INSEE-186",
                        "https://en.wikipedia.org/wiki/Neuilly-sur-Seine",
                        "https://en.wikipedia.org/wiki/Levallois-Perret",
                        "https://en.wikipedia.org/wiki/Boulogne-Billancourt",
                        "https://en.wikipedia.org/wiki/Issy-les-Moulineaux",
                        "https://en.wikipedia.org/wiki/Fortune_Global_500",
                        "https://en.wikipedia.org/wiki/Soci%C3%A9t%C3%A9_G%C3%A9n%C3%A9rale",
                        "https://en.wikipedia.org/wiki/Euro",
                        "https://en.wikipedia.org/#cite_note-187",
                        "https://en.wikipedia.org/#cite_note-188",
                        "https://en.wikipedia.org/#cite_note-189",
                        "https://en.wikipedia.org/#cite_note-McKinsey-190",
                        "https://en.wikipedia.org/#cite_note-191",
                        "https://en.wikipedia.org/#cite_note-192",
                        "https://en.wikipedia.org/wiki/Financial_services",
                        "https://en.wikipedia.org/#cite_note-INSEE_201210-193",
                        "https://en.wikipedia.org/wiki/Val_de_Seine",
                        "https://en.wikipedia.org/wiki/Service_Sector",
                        "https://en.wikipedia.org/#cite_note-194",
                        "https://en.wikipedia.org/wiki/Singapore",
                        "https://en.wikipedia.org/wiki/Hong_Kong",
                        "https://en.wikipedia.org/#cite_note-195",
                        "https://en.wikipedia.org/wiki/Station_F",
                        "https://en.wikipedia.org/wiki/Business_incubator",
                        "https://en.wikipedia.org/#cite_note-196",
                        "/wiki/File:Median_income_of_Paris_and_inner_ring_(2018)_named.svg",
                        "https://en.wikipedia.org/#cite_note-AlapageINSEE-197",
                        "https://en.wikipedia.org/wiki/Aulnay-sous-Bois",
                        "https://en.wikipedia.org/wiki/March%C3%A9_international_de_Rungis",
                        "https://en.wikipedia.org/#cite_note-wealth_distribution-198",
                        "https://en.wikipedia.org/wiki/Poverty_line",
                        "https://en.wikipedia.org/#cite_note-199",
                        "https://en.wikipedia.org/#cite_note-200",
                        "https://en.wikipedia.org/#cite_note-201",
                        "https://en.wikipedia.org/wiki/Tourism_in_Paris",
                        "https://en.wikipedia.org/wiki/Landmarks_in_Paris",
                        "https://en.wikipedia.org/wiki/Historical_quarters_of_Paris",
                        "https://en.wikipedia.org/wiki/List_of_tourist_attractions_in_Paris",
                        "/wiki/File:Visiter_le_Louvre_en_%C3%A9t%C3%A9_!_(4787187477).jpg",
                        "https://en.wikipedia.org/wiki/List_of_most-visited_art_museums",
                        "https://en.wikipedia.org/wiki/Euromonitor",
                        "https://en.wikipedia.org/#cite_note-202",
                        "https://en.wikipedia.org/#cite_note-pro.visitparisregion.com-203",
                        "https://en.wikipedia.org/#cite_note-KeyFigures-204",
                        "https://en.wikipedia.org/#cite_note-205",
                        "https://en.wikipedia.org/#cite_note-TIP2016-206",
                        "https://en.wikipedia.org/wiki/Louvre_Museum",
                        "https://en.wikipedia.org/wiki/Centre_Pompidou",
                        "https://en.wikipedia.org/wiki/Airbnb",
                        "https://en.wikipedia.org/#cite_note-207",
                        "https://en.wikipedia.org/#cite_note-208",
                        "/wiki/Wikipedia:Citing_sources#What_information_to_include",
                        "https://en.wikipedia.org/wiki/Paris_syndrome",
                        "https://en.wikipedia.org/#cite_note-209",
                        "https://en.wikipedia.org/wiki/Art_in_Paris",
                        "/wiki/File:Pierre-Auguste_Renoir,_Le_Moulin_de_la_Galette.jpg",
                        "https://en.wikipedia.org/wiki/Auguste_Renoir",
                        "https://en.wikipedia.org/wiki/Bal_du_moulin_de_la_Galette",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEMontclos2003-210",
                        "https://en.wikipedia.org/wiki/French_Baroque_and_Classicism",
                        "https://en.wikipedia.org/wiki/Fran%C3%A7ois_Girardon",
                        "https://en.wikipedia.org/wiki/Antoine_Coysevox",
                        "https://en.wikipedia.org/wiki/Nicolas_Coustou",
                        "https://en.wikipedia.org/wiki/Pierre_Mignard",
                        "https://en.wikipedia.org/wiki/Acad%C3%A9mie_royale_de_peinture_et_de_sculpture",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEMichelin2011-211",
                        "https://en.wikipedia.org/wiki/Henri_de_Toulouse-Lautrec",
                        "https://en.wikipedia.org/wiki/%C3%89douard_Manet",
                        "https://en.wikipedia.org/wiki/Berthe_Morisot",
                        "https://en.wikipedia.org/wiki/Paul_Gauguin",
                        "https://en.wikipedia.org/wiki/Pierre-Auguste_Renoir",
                        "https://en.wikipedia.org/wiki/Romanticism",
                        "https://en.wikipedia.org/wiki/Th%C3%A9odore_G%C3%A9ricault",
                        "https://en.wikipedia.org/wiki/Art_Nouveau",
                        "https://en.wikipedia.org/wiki/Art_Deco",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEPerry199519-212",
                        "https://en.wikipedia.org/wiki/Vincent_van_Gogh",
                        "https://en.wikipedia.org/wiki/Paul_C%C3%A9zanne",
                        "https://en.wikipedia.org/wiki/Jean_Metzinger",
                        "https://en.wikipedia.org/wiki/Albert_Gleizes",
                        "https://en.wikipedia.org/wiki/Henri_Rousseau",
                        "https://en.wikipedia.org/wiki/Marc_Chagall",
                        "https://en.wikipedia.org/wiki/Fr%C3%A9d%C3%A9ric_Auguste_Bartholdi",
                        "https://en.wikipedia.org/wiki/Statue_of_Liberty",
                        "https://en.wikipedia.org/wiki/Auguste_Rodin",
                        "https://en.wikipedia.org/wiki/Camille_Claudel",
                        "https://en.wikipedia.org/wiki/Antoine_Bourdelle",
                        "https://en.wikipedia.org/wiki/Paul_Landowski",
                        "https://en.wikipedia.org/wiki/Christ_the_Redeemer_(statue)",
                        "https://en.wikipedia.org/wiki/Rio_de_Janeiro",
                        "https://en.wikipedia.org/wiki/Aristide_Maillol",
                        "https://en.wikipedia.org/wiki/Belle_%C3%89poque",
                        "https://en.wikipedia.org/wiki/School_of_Paris",
                        "https://en.wikipedia.org/wiki/List_of_museums_in_Paris",
                        "/wiki/File:MuseeOrsay_20070324.jpg",
                        "https://en.wikipedia.org/#cite_note-ReferenceC-213",
                        "https://en.wikipedia.org/wiki/List_of_most-visited_museums",
                        "https://en.wikipedia.org/wiki/Mona_Lisa",
                        "https://en.wikipedia.org/wiki/Venus_de_Milo",
                        "https://en.wikipedia.org/wiki/Liberty_Leading_the_People",
                        "https://en.wikipedia.org/wiki/National_Museum_of_Natural_History,_France",
                        "https://en.wikipedia.org/wiki/French_Impressionists",
                        "https://en.wikipedia.org/wiki/Cit%C3%A9_des_sciences_et_de_l%27industrie",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_des_Arts_et_M%C3%A9tiers",
                        "https://en.wikipedia.org/wiki/Fondation_Louis_Vuitton",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_Carnavalet",
                        "https://en.wikipedia.org/#cite_note-214",
                        "/wiki/File:Mus%C3%A9e_du_quai_Branly.jpg",
                        "https://en.wikipedia.org/wiki/Water_Lilies_(Monet_series)",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_national_du_Moyen_%C3%82ge",
                        "https://en.wikipedia.org/wiki/Medieval_art",
                        "https://en.wikipedia.org/wiki/Guimet_Museum",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_national_Eug%C3%A8ne_Delacroix",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_l%27Arm%C3%A9e",
                        "https://en.wikipedia.org/wiki/Ministry_of_Culture_(France)",
                        "https://en.wikipedia.org/wiki/Carnavalet_Museum",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_d%27Art_Moderne_de_la_Ville_de_Paris",
                        "https://en.wikipedia.org/wiki/Palais_de_Tokyo",
                        "https://en.wikipedia.org/wiki/Maison_de_Victor_Hugo",
                        "https://en.wikipedia.org/wiki/Maison_de_Balzac",
                        "https://en.wikipedia.org/wiki/Catacombs_of_Paris",
                        "https://en.wikipedia.org/#cite_note-215",
                        "https://en.wikipedia.org/wiki/Louis_Vuitton_Foundation",
                        "https://en.wikipedia.org/wiki/Frank_Gehry",
                        "https://en.wikipedia.org/wiki/Op%C3%A9ra_National_de_Paris",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010178-216",
                        "https://en.wikipedia.org/wiki/Th%C3%A9%C3%A2tre-Italien",
                        "https://en.wikipedia.org/wiki/Th%C3%A9%C3%A2tre_Lyrique",
                        "https://en.wikipedia.org/wiki/Th%C3%A9%C3%A2tre_de_la_Ville",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTESchumacher199660-217",
                        "https://en.wikipedia.org/wiki/Philharmonie_de_Paris",
                        "https://en.wikipedia.org/wiki/Th%C3%A9%C3%A2tre_des_Champs-%C3%89lys%C3%A9es",
                        "https://en.wikipedia.org/wiki/Ballets_Russes",
                        "/wiki/File:CFfacadePlacedelOpera.png",
                        "https://en.wikipedia.org/wiki/Com%C3%A9die_Fran%C3%A7aise",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro19961173-218",
                        "https://en.wikipedia.org/wiki/Od%C3%A9on-Th%C3%A9%C3%A2tre_de_l%27Europe",
                        "https://en.wikipedia.org/wiki/Th%C3%A9%C3%A2tre_de_la_Ga%C3%AEt%C3%A9-Montparnasse",
                        "https://en.wikipedia.org/#cite_note-219",
                        "https://en.wikipedia.org/wiki/Cabaret",
                        "https://en.wikipedia.org/wiki/Moulin_Rouge",
                        "https://en.wikipedia.org/wiki/Cancan",
                        "https://en.wikipedia.org/wiki/Mistinguett",
                        "https://en.wikipedia.org/wiki/%C3%89dith_Piaf",
                        "https://en.wikipedia.org/wiki/Olympia_Paris",
                        "https://en.wikipedia.org/wiki/Folies_Berg%C3%A8re",
                        "https://en.wikipedia.org/wiki/Dalida",
                        "https://en.wikipedia.org/wiki/Edith_Piaf",
                        "https://en.wikipedia.org/wiki/Marlene_Dietrich",
                        "https://en.wikipedia.org/wiki/Miles_Davis",
                        "https://en.wikipedia.org/wiki/Judy_Garland",
                        "https://en.wikipedia.org/wiki/Grateful_Dead",
                        "https://en.wikipedia.org/wiki/Casino_de_Paris",
                        "https://en.wikipedia.org/wiki/Maurice_Chevalier",
                        "https://en.wikipedia.org/wiki/Tino_Rossi",
                        "https://en.wikipedia.org/wiki/Le_Lido",
                        "https://en.wikipedia.org/wiki/Crazy_Horse_(cabaret)",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro19961005%E2%80%931006-220",
                        "https://en.wikipedia.org/wiki/Writers_in_Paris",
                        "/wiki/File:Victor_Hugo_by_%C3%89tienne_Carjat_1876_-_full.jpg",
                        "https://en.wikipedia.org/wiki/Victor_Hugo",
                        "https://en.wikipedia.org/wiki/Gasparinus_de_Bergamo",
                        "https://en.wikipedia.org/wiki/Johann_Heynlin",
                        "https://en.wikipedia.org/wiki/Nicolas_Boileau",
                        "https://en.wikipedia.org/wiki/Pierre_Corneille",
                        "https://en.wikipedia.org/wiki/La_Fontaine",
                        "https://en.wikipedia.org/wiki/Moli%C3%A8re",
                        "https://en.wikipedia.org/wiki/Jean_Racine",
                        "https://en.wikipedia.org/wiki/Charles_Perrault",
                        "https://en.wikipedia.org/#cite_note-221",
                        "https://en.wikipedia.org/wiki/Acad%C3%A9mie_fran%C3%A7aise",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996488-222",
                        "https://en.wikipedia.org/wiki/Voltaire",
                        "https://en.wikipedia.org/wiki/Jean-Jacques_Rousseau",
                        "https://en.wikipedia.org/wiki/Pierre_de_Marivaux",
                        "https://en.wikipedia.org/wiki/Pierre_Beaumarchais",
                        "https://en.wikipedia.org/wiki/St%C3%A9phane_Mallarm%C3%A9",
                        "https://en.wikipedia.org/wiki/M%C3%A9rim%C3%A9e",
                        "https://en.wikipedia.org/wiki/Alfred_de_Musset",
                        "https://en.wikipedia.org/wiki/Alexandre_Dumas",
                        "https://en.wikipedia.org/wiki/Gustave_Flaubert",
                        "https://en.wikipedia.org/wiki/Guy_de_Maupassant",
                        "https://en.wikipedia.org/wiki/Honor%C3%A9_de_Balzac",
                        "https://en.wikipedia.org/wiki/The_Hunchback_of_Notre-Dame",
                        "https://en.wikipedia.org/#cite_note-223",
                        "https://en.wikipedia.org/wiki/Les_Mis%C3%A9rables",
                        "https://en.wikipedia.org/#cite_note-224",
                        "https://en.wikipedia.org/wiki/Jules_Verne",
                        "https://en.wikipedia.org/#cite_note-225",
                        "https://en.wikipedia.org/wiki/Colette",
                        "https://en.wikipedia.org/wiki/Andr%C3%A9_Gide",
                        "https://en.wikipedia.org/wiki/Fran%C3%A7ois_Mauriac",
                        "https://en.wikipedia.org/wiki/Andr%C3%A9_Malraux",
                        "https://en.wikipedia.org/wiki/Albert_Camus",
                        "https://en.wikipedia.org/wiki/Simone_de_Beauvoir",
                        "https://en.wikipedia.org/wiki/Jean-Paul_Sartre",
                        "https://en.wikipedia.org/wiki/Samuel_Beckett",
                        "https://en.wikipedia.org/wiki/Miguel_%C3%81ngel_Asturias",
                        "https://en.wikipedia.org/wiki/Alejo_Carpentier",
                        "https://en.wikipedia.org/wiki/Arturo_Uslar_Pietri",
                        "https://en.wikipedia.org/wiki/Nobel_Prize_in_Literature",
                        "https://en.wikipedia.org/wiki/Patrick_Modiano",
                        "https://en.wikipedia.org/#cite_note-226",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996840-227",
                        "https://en.wikipedia.org/#cite_note-228",
                        "https://en.wikipedia.org/wiki/Music_in_Paris",
                        "https://en.wikipedia.org/wiki/History_of_music_in_Paris",
                        "/wiki/File:Olympia_facade.jpg",
                        "https://en.wikipedia.org/wiki/Olympia_(Paris)",
                        "https://en.wikipedia.org/wiki/Polyphony",
                        "https://en.wikipedia.org/wiki/Trouv%C3%A8res",
                        "https://en.wikipedia.org/wiki/Troubadours",
                        "https://en.wikipedia.org/wiki/Francis_I_of_France",
                        "https://en.wikipedia.org/wiki/Renaissance_music",
                        "https://en.wikipedia.org/wiki/Lute",
                        "https://en.wikipedia.org/wiki/Baroque_music",
                        "https://en.wikipedia.org/wiki/Jean-Baptiste_Lully",
                        "https://en.wikipedia.org/wiki/Jean-Philippe_Rameau",
                        "https://en.wikipedia.org/wiki/Fran%C3%A7ois_Couperin",
                        "https://en.wikipedia.org/wiki/Conservatoire_de_Paris",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEDamschroederWilliams1990157-229",
                        "https://en.wikipedia.org/wiki/Romantic_music",
                        "https://en.wikipedia.org/wiki/Hector_Berlioz",
                        "https://en.wikipedia.org/wiki/Charles_Gounod",
                        "https://en.wikipedia.org/wiki/Camille_Saint-Sa%C3%ABns",
                        "https://en.wikipedia.org/wiki/L%C3%A9o_Delibes",
                        "https://en.wikipedia.org/wiki/Jules_Massenet",
                        "https://en.wikipedia.org/wiki/Georges_Bizet",
                        "https://en.wikipedia.org/wiki/Carmen",
                        "https://en.wikipedia.org/wiki/Western_canon",
                        "https://en.wikipedia.org/#cite_note-McClary-230",
                        "https://en.wikipedia.org/#cite_note-231",
                        "https://en.wikipedia.org/wiki/Impressionism_in_music",
                        "https://en.wikipedia.org/wiki/Claude_Debussy",
                        "https://en.wikipedia.org/wiki/Erik_Satie",
                        "https://en.wikipedia.org/wiki/Maurice_Ravel",
                        "https://en.wikipedia.org/wiki/Fr%C3%A9d%C3%A9ric_Chopin",
                        "https://en.wikipedia.org/wiki/Franz_Liszt",
                        "https://en.wikipedia.org/wiki/Jacques_Offenbach",
                        "https://en.wikipedia.org/wiki/Niccol%C3%B2_Paganini",
                        "https://en.wikipedia.org/wiki/Bal-musette",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEDregni200419-232",
                        "https://en.wikipedia.org/wiki/Bourr%C3%A9e",
                        "https://en.wikipedia.org/wiki/Cabrette",
                        "https://en.wikipedia.org/wiki/Bellows",
                        "https://en.wikipedia.org/wiki/Bagpipe",
                        "https://en.wikipedia.org/wiki/Vielle_%C3%A0_roue",
                        "https://en.wikipedia.org/wiki/Hurdy-gurdy",
                        "https://en.wikipedia.org/wiki/Accordion",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEDregni200832-233",
                        "https://en.wikipedia.org/wiki/Jazz",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEMroue2006260-234",
                        "https://en.wikipedia.org/wiki/Gypsy_jazz",
                        "https://en.wikipedia.org/wiki/Django_Reinhardt",
                        "https://en.wikipedia.org/wiki/St%C3%A9phane_Grappelli",
                        "https://en.wikipedia.org/wiki/Quintette_du_Hot_Club_de_France",
                        "https://en.wikipedia.org/#cite_note-Gjazz-235",
                        "/wiki/File:Moulin_Rouge,_Paris_April_2011.jpg",
                        "https://en.wikipedia.org/wiki/Saint-Germain-des-Pres",
                        "https://en.wikipedia.org/wiki/Le_Tabou",
                        "https://en.wikipedia.org/wiki/Claude_Luter",
                        "https://en.wikipedia.org/wiki/Boris_Vian",
                        "https://en.wikipedia.org/wiki/Sydney_Bechet",
                        "https://en.wikipedia.org/wiki/Mezz_Mezzrow",
                        "https://en.wikipedia.org/wiki/Henri_Salvador",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEBezbakh2004872-236",
                        "https://en.wikipedia.org/wiki/Manouche",
                        "https://en.wikipedia.org/wiki/Paris_Jazz_Festival",
                        "https://en.wikipedia.org/wiki/Rock_en_Seine",
                        "https://en.wikipedia.org/#cite_note-237",
                        "https://en.wikipedia.org/wiki/Orchestre_de_Paris",
                        "https://en.wikipedia.org/#cite_note-andante-238",
                        "https://en.wikipedia.org/wiki/Chanson",
                        "https://en.wikipedia.org/#cite_note-yahoomusicbio-239",
                        "https://en.wikipedia.org/wiki/French_hip_hop",
                        "https://en.wikipedia.org/#cite_note-240",
                        "https://en.wikipedia.org/wiki/List_of_films_set_in_Paris",
                        "/wiki/File:Cin%C3%A9matographe_Lumi%C3%A8re.jpg",
                        "https://en.wikipedia.org/wiki/Auguste_and_Louis_Lumi%C3%A8re",
                        "https://en.wikipedia.org/wiki/L%27Arroseur_Arros%C3%A9",
                        "https://en.wikipedia.org/#cite_note-241",
                        "https://en.wikipedia.org/wiki/Grand_Rex",
                        "https://en.wikipedia.org/#cite_note-242",
                        "https://en.wikipedia.org/#cite_note-243",
                        "https://en.wikipedia.org/wiki/Cinema_of_France",
                        "https://en.wikipedia.org/wiki/Claude_Lelouch",
                        "https://en.wikipedia.org/wiki/Jean-Luc_Godard",
                        "https://en.wikipedia.org/wiki/Luc_Besson",
                        "https://en.wikipedia.org/wiki/Claude_Zidi",
                        "https://en.wikipedia.org/#cite_note-244",
                        "https://en.wikipedia.org/wiki/French_cuisine",
                        "/wiki/File:Le_Zimmer,_restaurant_in_Paris.jpg",
                        "https://en.wikipedia.org/wiki/Place_du_Ch%C3%A2telet",
                        "https://en.wikipedia.org/wiki/Haute_cuisine",
                        "https://en.wikipedia.org/wiki/Antoine_Beauvilliers",
                        "https://en.wikipedia.org/wiki/Le_Grand_V%C3%A9four",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro19961136%E2%80%931138-245",
                        "https://en.wikipedia.org/wiki/Au_Rocher_de_Cancale",
                        "https://en.wikipedia.org/wiki/Caf%C3%A9_Anglais",
                        "https://en.wikipedia.org/wiki/Maison_dor%C3%A9e_(Paris)",
                        "https://en.wikipedia.org/wiki/Maxim%27s_Paris",
                        "https://en.wikipedia.org/wiki/Ledoyen",
                        "https://en.wikipedia.org/wiki/Tour_d%27Argent",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro19961137-246",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEDomin%C3%A92014-247",
                        "https://en.wikipedia.org/wiki/Michelin_Guide",
                        "https://en.wikipedia.org/wiki/L%27Ambroisie",
                        "https://en.wikipedia.org/wiki/L%27Astrance",
                        "https://en.wikipedia.org/wiki/Pierre_Gagnaire",
                        "https://en.wikipedia.org/wiki/Alain_Ducasse",
                        "https://en.wikipedia.org/wiki/Yannick_All%C3%A9no",
                        "https://en.wikipedia.org/wiki/Alain_Passard",
                        "https://en.wikipedia.org/#cite_note-248",
                        "https://en.wikipedia.org/#cite_note-249",
                        "/wiki/File:Lesdeuxmagots.jpg",
                        "https://en.wikipedia.org/wiki/Les_Deux_Magots",
                        "https://en.wikipedia.org/wiki/Coffeehouse",
                        "https://en.wikipedia.org/wiki/Caf%C3%A9_Procope",
                        "https://en.wikipedia.org/wiki/Caf%C3%A9_de_la_Rotonde",
                        "https://en.wikipedia.org/wiki/Le_D%C3%B4me_Caf%C3%A9",
                        "https://en.wikipedia.org/wiki/Caf%C3%A9_de_Flore",
                        "https://en.wikipedia.org/wiki/Bistro",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996715-250",
                        "https://en.wikipedia.org/wiki/Brasserie",
                        "https://en.wikipedia.org/wiki/Paris_Exposition_of_1867",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996773-251",
                        "https://en.wikipedia.org/wiki/Fashion_in_Paris",
                        "/wiki/File:Magdalena_Frackowiak.jpg",
                        "https://en.wikipedia.org/wiki/Magdalena_Frackowiak",
                        "https://en.wikipedia.org/wiki/Paris_Fashion_Week",
                        "https://en.wikipedia.org/wiki/Haute_couture",
                        "https://en.wikipedia.org/#cite_note-252",
                        "https://en.wikipedia.org/wiki/Christian_Dior_S.A.",
                        "https://en.wikipedia.org/wiki/Chanel",
                        "https://en.wikipedia.org/wiki/Karl_Lagerfeld",
                        "https://en.wikipedia.org/wiki/Jean-Paul_Gaultier",
                        "https://en.wikipedia.org/wiki/Yves_Saint_Laurent_(designer)",
                        "https://en.wikipedia.org/wiki/Givenchy",
                        "https://en.wikipedia.org/wiki/Christian_Lacroix",
                        "https://en.wikipedia.org/wiki/Carrousel_du_Louvre",
                        "https://en.wikipedia.org/#cite_note-253",
                        "https://en.wikipedia.org/#cite_note-254",
                        "https://en.wikipedia.org/wiki/Cosmetics",
                        "https://en.wikipedia.org/wiki/L%27Or%C3%A9al",
                        "https://en.wikipedia.org/wiki/Louis_Vuitton",
                        "https://en.wikipedia.org/wiki/Herm%C3%A9s",
                        "https://en.wikipedia.org/wiki/Cartier_(jeweler)",
                        "https://en.wikipedia.org/#cite_note-255",
                        "https://en.wikipedia.org/wiki/Nic%C3%A9phore_Ni%C3%A9pce",
                        "https://en.wikipedia.org/wiki/Louis_Daguerre",
                        "https://en.wikipedia.org/wiki/Daguerrotype",
                        "https://en.wikipedia.org/wiki/%C3%89tienne-Jules_Marey",
                        "https://en.wikipedia.org/wiki/Man_Ray",
                        "https://en.wikipedia.org/wiki/Maurice_Tabard",
                        "https://en.wikipedia.org/#cite_note-256",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEHazan2011362-257",
                        "https://en.wikipedia.org/wiki/Eug%C3%A8ne_Atget",
                        "https://en.wikipedia.org/wiki/Robert_Doisneau",
                        "https://en.wikipedia.org/wiki/Marcel_Bovis",
                        "https://en.wikipedia.org/wiki/Jacques-Henri_Lartigue",
                        "https://en.wikipedia.org/wiki/Henri_Cartier-Bresson",
                        "https://en.wikipedia.org/wiki/Poster_art",
                        "https://en.wikipedia.org/wiki/Jules_Ch%C3%A9ret",
                        "https://en.wikipedia.org/wiki/Eug%C3%A8ne_Grasset",
                        "https://en.wikipedia.org/wiki/Adolphe_Willette",
                        "https://en.wikipedia.org/wiki/Pierre_Bonnard",
                        "https://en.wikipedia.org/wiki/Georges_de_Feure",
                        "https://en.wikipedia.org/wiki/Henri-Gabriel_Ibels",
                        "https://en.wikipedia.org/wiki/Paul_Gavarni",
                        "https://en.wikipedia.org/wiki/Alphonse_Mucha",
                        "/wiki/File:Si%C3%A8ge_Figaro,_14_boulevard_Haussmann,_Paris_9e.jpg",
                        "https://en.wikipedia.org/wiki/Le_Figaro",
                        "https://en.wikipedia.org/wiki/Newspaper_of_record",
                        "https://en.wikipedia.org/#cite_note-258",
                        "https://en.wikipedia.org/wiki/Le_Monde",
                        "https://en.wikipedia.org/wiki/Lib%C3%A9ration",
                        "https://en.wikipedia.org/wiki/Le_Nouvel_Observateur",
                        "https://en.wikipedia.org/wiki/Le_Canard_encha%C3%AEn%C3%A9",
                        "https://en.wikipedia.org/wiki/La_Croix_(newspaper)",
                        "https://en.wikipedia.org/wiki/Le_Parisien",
                        "https://en.wikipedia.org/wiki/Saint-Ouen,_Seine-Saint-Denis",
                        "https://en.wikipedia.org/wiki/Les_%C3%89chos_(France)",
                        "https://en.wikipedia.org/wiki/Reuters",
                        "https://en.wikipedia.org/wiki/L%27%C3%89quipe",
                        "https://en.wikipedia.org/#cite_note-259",
                        "https://en.wikipedia.org/#cite_note-260",
                        "https://en.wikipedia.org/wiki/Agence_France-Presse",
                        "https://en.wikipedia.org/#cite_note-261",
                        "https://en.wikipedia.org/wiki/France_24",
                        "https://en.wikipedia.org/#cite_note-262",
                        "https://en.wikipedia.org/wiki/Ministry_of_Foreign_and_European_Affairs_(France)",
                        "https://en.wikipedia.org/#cite_note-263",
                        "https://en.wikipedia.org/wiki/TF1",
                        "https://en.wikipedia.org/wiki/France_2",
                        "https://en.wikipedia.org/wiki/France_3",
                        "https://en.wikipedia.org/wiki/Canal%2B_(French_TV_channel)",
                        "https://en.wikipedia.org/wiki/France_5",
                        "https://en.wikipedia.org/wiki/M6_(TV_channel)",
                        "https://en.wikipedia.org/wiki/Arte",
                        "https://en.wikipedia.org/wiki/D8_(TV_channel)",
                        "https://en.wikipedia.org/wiki/W9_(TV_channel)",
                        "https://en.wikipedia.org/wiki/NT1_(TV_channel)",
                        "https://en.wikipedia.org/wiki/NRJ_12",
                        "https://en.wikipedia.org/wiki/La_Cha%C3%AEne_parlementaire",
                        "https://en.wikipedia.org/wiki/France_4",
                        "https://en.wikipedia.org/wiki/BFM_TV",
                        "https://en.wikipedia.org/wiki/Gulli",
                        "https://en.wikipedia.org/#cite_note-264",
                        "https://en.wikipedia.org/wiki/Radio_France",
                        "https://en.wikipedia.org/wiki/16th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/Radio_France_Internationale",
                        "https://en.wikipedia.org/#cite_note-265",
                        "https://en.wikipedia.org/wiki/La_Poste_(France)",
                        "https://en.wikipedia.org/#cite_note-266",
                        "https://en.wikipedia.org/wiki/Bastille_Day",
                        "https://en.wikipedia.org/wiki/Place_de_la_Concorde",
                        "https://en.wikipedia.org/wiki/Flypast",
                        "https://en.wikipedia.org/wiki/Patrouille_de_France",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEBlackmoreMcConnachie2004204-267",
                        "https://en.wikipedia.org/wiki/Paris-Plages",
                        "https://en.wikipedia.org/wiki/European_Heritage_Days",
                        "https://en.wikipedia.org/wiki/F%C3%AAte_de_la_Musique",
                        "https://en.wikipedia.org/wiki/Nuit_Blanche",
                        "https://en.wikipedia.org/wiki/Paris_Carnival",
                        "https://en.wikipedia.org/wiki/Libraries_in_Paris",
                        "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_de_l%27Arsenal",
                        "https://en.wikipedia.org/#cite_note-268",
                        "/wiki/File:Salle_de_lecture_Bibliotheque_Sainte-Genevieve_n01.jpg",
                        "https://en.wikipedia.org/wiki/Sainte-Genevi%C3%A8ve_Library",
                        "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_Forney",
                        "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_historique_de_la_ville_de_Paris",
                        "https://en.wikipedia.org/wiki/Henri_Labrouste",
                        "https://en.wikipedia.org/#cite_note-Woodward2006-269",
                        "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_Mazarine",
                        "https://en.wikipedia.org/wiki/M%C3%A9diath%C3%A8que_Musicale_Mahler",
                        "https://en.wikipedia.org/wiki/Dominique_Perrault",
                        "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_de_la_Sorbonne",
                        "https://en.wikipedia.org/wiki/Institut_d%27Art_et_d%27Arch%C3%A9ologie",
                        "https://en.wikipedia.org/#cite_note-270",
                        "https://en.wikipedia.org/#cite_note-nd.edu-271",
                        "https://en.wikipedia.org/wiki/Football_in_Paris",
                        "/wiki/File:Le_Paris_Saint-Germain_re%C3%A7oit_l%27AS_Monaco_au_Parc_en_Coupe_de_France_le_26_avril_2017.jpg",
                        "https://en.wikipedia.org/wiki/Parc_des_Princes",
                        "https://en.wikipedia.org/wiki/Association_football",
                        "https://en.wikipedia.org/wiki/Racing_92",
                        "https://en.wikipedia.org/wiki/Nanterre",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010300%E2%80%93301-272",
                        "https://en.wikipedia.org/wiki/France_national_football_team",
                        "https://en.wikipedia.org/wiki/France_national_rugby_union_team",
                        "https://en.wikipedia.org/wiki/Six_Nations_Championship",
                        "https://en.wikipedia.org/wiki/Paris_FC",
                        "https://en.wikipedia.org/wiki/Red_Star_FC",
                        "https://en.wikipedia.org/wiki/US_Cr%C3%A9teil-Lusitanos",
                        "https://en.wikipedia.org/wiki/Racing_Club_de_France_Football",
                        "https://en.wikipedia.org/wiki/Stade_Fran%C3%A7ais_(association_football)",
                        "https://en.wikipedia.org/wiki/Rugby_league",
                        "https://en.wikipedia.org/wiki/Australia_national_rugby_league_team",
                        "https://en.wikipedia.org/wiki/Rugby_Football_League",
                        "https://en.wikipedia.org/wiki/Parc_des_Princes#Second_stadium_(1932%E2%80%931972)",
                        "https://en.wikipedia.org/wiki/1954_Rugby_League_World_Cup_final",
                        "https://en.wikipedia.org/wiki/France_national_rugby_league_team",
                        "https://en.wikipedia.org/wiki/Great_Britain_national_rugby_league_team",
                        "https://en.wikipedia.org/wiki/Paris_Saint-Germain_Rugby_League",
                        "https://en.wikipedia.org/wiki/Super_League",
                        "https://en.wikipedia.org/#cite_note-273",
                        "https://en.wikipedia.org/wiki/Catalans_Dragons",
                        "https://en.wikipedia.org/wiki/British_rugby_league_system",
                        "https://en.wikipedia.org/wiki/Wigan_Warriors",
                        "https://en.wikipedia.org/#cite_note-274",
                        "https://en.wikipedia.org/wiki/1992_Summer_Olympics",
                        "https://en.wikipedia.org/wiki/2008_Summer_Olympics",
                        "https://en.wikipedia.org/wiki/2012_Summer_Olympics",
                        "https://en.wikipedia.org/wiki/Barcelona",
                        "https://en.wikipedia.org/wiki/Beijing",
                        "https://en.wikipedia.org/wiki/London",
                        "https://en.wikipedia.org/wiki/1938_FIFA_World_Cup_final",
                        "https://en.wikipedia.org/wiki/Stade_Olympique_Yves-du-Manoir",
                        "https://en.wikipedia.org/wiki/1998_FIFA_World_Cup_final",
                        "https://en.wikipedia.org/wiki/2007_Rugby_World_Cup_Final",
                        "https://en.wikipedia.org/wiki/2023_Rugby_World_Cup_final",
                        "https://en.wikipedia.org/wiki/1960_European_Nations%27_Cup_final",
                        "https://en.wikipedia.org/wiki/UEFA_Euro_1984_final",
                        "https://en.wikipedia.org/wiki/UEFA_Euro_2016_final",
                        "https://en.wikipedia.org/#cite_note-275",
                        "https://en.wikipedia.org/wiki/UEFA_Champions_League_Finals",
                        "https://en.wikipedia.org/wiki/2000_UEFA_Champions_League_Final",
                        "https://en.wikipedia.org/wiki/2006_UEFA_Champions_League_Final",
                        "https://en.wikipedia.org/wiki/2022_UEFA_Champions_League_Final",
                        "https://en.wikipedia.org/#cite_note-276",
                        "/wiki/File:Tour_de_france_2010_-_Champs_Elys%C3%A9es_n10.jpg",
                        "https://en.wikipedia.org/wiki/Champs_%C3%89lys%C3%A9es",
                        "https://en.wikipedia.org/wiki/Road_bicycle_racing",
                        "https://en.wikipedia.org/wiki/Champs-%C3%89lys%C3%A9es_stage_in_the_Tour_de_France",
                        "https://en.wikipedia.org/#cite_note-277",
                        "https://en.wikipedia.org/wiki/Tennis",
                        "https://en.wikipedia.org/#cite_note-278",
                        "https://en.wikipedia.org/wiki/AccorHotels_Arena",
                        "https://en.wikipedia.org/wiki/Paris_Masters",
                        "https://en.wikipedia.org/wiki/2017_IIHF_World_Championship",
                        "https://en.wikipedia.org/wiki/Cologne",
                        "https://en.wikipedia.org/wiki/EuroBasket_1951",
                        "https://en.wikipedia.org/wiki/EuroBasket_1999",
                        "https://en.wikipedia.org/wiki/Basketball",
                        "https://en.wikipedia.org/wiki/Levallois_Sporting_Club_Basket",
                        "https://en.wikipedia.org/wiki/Paris_Basket_Racing",
                        "https://en.wikipedia.org/wiki/Metropolitans_92",
                        "https://en.wikipedia.org/wiki/Stade_Pierre_de_Coubertin_(Paris)",
                        "https://en.wikipedia.org/#cite_note-279",
                        "https://en.wikipedia.org/wiki/Nanterre_92",
                        "https://en.wikipedia.org/wiki/Paris_Basketball",
                        "https://en.wikipedia.org/wiki/2023%E2%80%9324_EuroCup_Basketball",
                        "https://en.wikipedia.org/wiki/Handball",
                        "https://en.wikipedia.org/wiki/Paris_Saint-Germain_Handball",
                        "https://en.wikipedia.org/wiki/LNH_Division_1",
                        "https://en.wikipedia.org/wiki/American_football",
                        "https://en.wikipedia.org/wiki/Paris_Musketeers",
                        "https://en.wikipedia.org/#cite_note-280",
                        "https://en.wikipedia.org/wiki/European_League_of_Football",
                        "https://en.wikipedia.org/wiki/Transport_in_Paris",
                        "/wiki/File:Eurostar_Paris_Gare_du_Nord_Station,_8_October_2011.jpg",
                        "https://en.wikipedia.org/wiki/Gare_du_Nord",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_Mobilit%C3%A9s",
                        "https://en.wikipedia.org/#cite_note-stif-281",
                        "https://en.wikipedia.org/wiki/RATP_Group",
                        "https://en.wikipedia.org/wiki/Bus_(RATP)",
                        "https://en.wikipedia.org/wiki/SNCF",
                        "https://en.wikipedia.org/wiki/Optile",
                        "https://en.wikipedia.org/#cite_note-282",
                        "https://en.wikipedia.org/wiki/Sustainable_transport",
                        "https://en.wikipedia.org/#cite_note-283",
                        "https://en.wikipedia.org/#cite_note-284",
                        "https://en.wikipedia.org/#cite_note-285",
                        "https://en.wikipedia.org/#cite_note-286",
                        "https://en.wikipedia.org/#cite_note-287",
                        "https://en.wikipedia.org/wiki/15-minute_city",
                        "https://en.wikipedia.org/wiki/Carlos_Moreno_(urbanist)",
                        "https://en.wikipedia.org/#cite_note-288",
                        "https://en.wikipedia.org/#cite_note-289",
                        "https://en.wikipedia.org/#cite_note-290",
                        "https://en.wikipedia.org/wiki/Walkable",
                        "https://en.wikipedia.org/wiki/Walkability",
                        "https://en.wikipedia.org/#cite_note-291",
                        "https://en.wikipedia.org/#cite_note-292",
                        "https://en.wikipedia.org/wiki/List_of_Paris_railway_stations",
                        "https://en.wikipedia.org/wiki/Transilien",
                        "https://en.wikipedia.org/wiki/Tramways_in_%C3%8Ele-de-France",
                        "/wiki/File:Paris_-_Station_de_m%C3%A9tro_Abbesses_-_PA00086748_-_001.jpg",
                        "https://en.wikipedia.org/wiki/Gare_de_l%27Est",
                        "https://en.wikipedia.org/wiki/Gare_de_Lyon",
                        "https://en.wikipedia.org/wiki/Gare_d%27Austerlitz",
                        "https://en.wikipedia.org/wiki/Gare_Montparnasse",
                        "https://en.wikipedia.org/wiki/Gare_Saint-Lazare",
                        "https://en.wikipedia.org/wiki/Gare_de_Bercy",
                        "https://en.wikipedia.org/wiki/High-speed_rail",
                        "https://en.wikipedia.org/wiki/Eurostar",
                        "https://en.wikipedia.org/wiki/Intercity_Express",
                        "https://en.wikipedia.org/wiki/Frecciarossa",
                        "https://en.wikipedia.org/wiki/Intercit%C3%A9s",
                        "https://en.wikipedia.org/wiki/Intercit%C3%A9s_de_nuit",
                        "https://en.wikipedia.org/wiki/Nightjet",
                        "https://en.wikipedia.org/wiki/Transport_express_r%C3%A9gional",
                        "https://en.wikipedia.org/wiki/Commuter_rail",
                        "https://en.wikipedia.org/#cite_note-293",
                        "https://en.wikipedia.org/wiki/RER_A",
                        "/wiki/File:CDG_P1020431.JPG",
                        "https://en.wikipedia.org/#cite_note-294",
                        "https://en.wikipedia.org/wiki/World%27s_busiest_city_airport_systems_by_passenger_traffic",
                        "https://en.wikipedia.org/wiki/Beauvais%E2%80%93Till%C3%A9_Airport",
                        "https://en.wikipedia.org/#cite_note-295",
                        "https://en.wikipedia.org/wiki/General_aviation",
                        "https://en.wikipedia.org/wiki/Paris%E2%80%93Le_Bourget_Airport",
                        "https://en.wikipedia.org/#cite_note-296",
                        "https://en.wikipedia.org/wiki/List_of_busiest_airports_by_international_passenger_traffic",
                        "https://en.wikipedia.org/wiki/Flag_carrier",
                        "https://en.wikipedia.org/wiki/Air_France",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010278%E2%80%93283-297",
                        "https://en.wikipedia.org/wiki/Low-cost_carriers",
                        "/wiki/File:Boulevard_P%C3%A9riph%C3%A9rique_vu_depuis_Boulevard_Auteuil_-_Paris_XVI_(FR75)_-_2021-08-11_-_3.jpg",
                        "https://en.wikipedia.org/wiki/Motorway",
                        "https://en.wikipedia.org/wiki/A86_autoroute",
                        "https://en.wikipedia.org/wiki/Francilienne",
                        "https://en.wikipedia.org/wiki/Autonomous_Port_of_Paris",
                        "https://en.wikipedia.org/wiki/Loire",
                        "https://en.wikipedia.org/wiki/Rhine",
                        "https://en.wikipedia.org/wiki/Rh%C3%B4ne",
                        "https://en.wikipedia.org/wiki/Meuse",
                        "https://en.wikipedia.org/wiki/Scheldt",
                        "https://en.wikipedia.org/wiki/Canal_Saint-Martin",
                        "https://en.wikipedia.org/wiki/Canal_Saint-Denis",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEJefferson2009114-298",
                        "/wiki/File:Station_Velib_DSC_3497.JPG",
                        "https://en.wikipedia.org/wiki/Cycling_in_Paris",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEHart2004355-299",
                        "https://en.wikipedia.org/wiki/Community_bicycle_program",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTERand2010165-300",
                        "https://en.wikipedia.org/#cite_note-prod_electrique_IDF-301",
                        "https://en.wikipedia.org/wiki/District_heating",
                        "https://en.wikipedia.org/wiki/Saint-Ouen-sur-Seine",
                        "https://en.wikipedia.org/wiki/Wood_pellets",
                        "https://en.wikipedia.org/#cite_note-302",
                        "/wiki/File:Ile_de_la_Cite_from_Pont_de_la_Tournelle.jpg",
                        "https://en.wikipedia.org/wiki/Bateau_Mouche",
                        "https://en.wikipedia.org/wiki/Bi%C3%A8vre_(river)",
                        "https://en.wikipedia.org/#cite_note-303",
                        "https://en.wikipedia.org/wiki/Eug%C3%A8ne_Belgrand",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEBurchell197193-304",
                        "https://en.wikipedia.org/#cite_note-sewers-305",
                        "https://en.wikipedia.org/wiki/Air_pollution",
                        "https://en.wikipedia.org/wiki/Particulates",
                        "https://en.wikipedia.org/#cite_note-306",
                        "https://en.wikipedia.org/#cite_note-307",
                        "https://en.wikipedia.org/wiki/List_of_parks_and_gardens_in_Paris",
                        "https://en.wikipedia.org/wiki/History_of_Parks_and_Gardens_of_Paris",
                        "/wiki/File:Parc_des_Buttes-Chaumont,_22_April_2007.jpg",
                        "https://en.wikipedia.org/wiki/Parc_des_Buttes-Chaumont",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEJarrass%C3%A920076-308",
                        "https://en.wikipedia.org/wiki/Tuileries_Garden",
                        "https://en.wikipedia.org/wiki/Andr%C3%A9_Le_N%C3%B4tre",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010125-309",
                        "https://en.wikipedia.org/wiki/Luxembourg_Garden",
                        "https://en.wikipedia.org/wiki/Luxembourg_Palace",
                        "https://en.wikipedia.org/wiki/Marie_de%27_Medici",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010208-310",
                        "https://en.wikipedia.org/wiki/Jardin_des_plantes",
                        "https://en.wikipedia.org/#cite_note-311",
                        "https://en.wikipedia.org/wiki/Jean-Charles_Adolphe_Alphand",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEJarrass%C3%A92007122%E2%80%93161-312",
                        "https://en.wikipedia.org/wiki/Parc_de_la_Villette",
                        "https://en.wikipedia.org/wiki/Parc_Andr%C3%A9_Citro%C3%ABn",
                        "https://en.wikipedia.org/wiki/Parc_de_Bercy",
                        "https://en.wikipedia.org/wiki/Parc_Clichy-Batignolles_%E2%80%93_Martin-Luther-King",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEJarrass%C3%A92007242%E2%80%93256-313",
                        "/wiki/File:Catacombes_De_Paris.jpg",
                        "https://en.wikipedia.org/wiki/Holy_Innocents%27_Cemetery",
                        "https://en.wikipedia.org/wiki/Mines_of_Paris",
                        "https://en.wikipedia.org/wiki/Place_Denfert-Rochereau",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEWhaley2012101-314",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEBroadwell200792-315",
                        "https://en.wikipedia.org/wiki/Napoleon",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTEAyers2004271-316",
                        "https://en.wikipedia.org/wiki/Montmartre_Cemetery",
                        "https://en.wikipedia.org/wiki/Montparnasse_Cemetery",
                        "https://en.wikipedia.org/wiki/Passy_Cemetery",
                        "https://en.wikipedia.org/wiki/Saint-Ouen_Cemetery",
                        "https://en.wikipedia.org/wiki/Cimeti%C3%A8re_parisien_de_Pantin",
                        "https://en.wikipedia.org/wiki/Pantin",
                        "https://en.wikipedia.org/wiki/Bobigny",
                        "https://en.wikipedia.org/wiki/Ivry-sur-Seine",
                        "https://en.wikipedia.org/wiki/Bagneux,_Hauts-de-Seine",
                        "https://en.wikipedia.org/#cite_note-Parisian_Cemeteries-317",
                        "https://en.wikipedia.org/wiki/Oscar_Wilde",
                        "https://en.wikipedia.org/wiki/Jim_Morrison",
                        "https://en.wikipedia.org/wiki/Serge_Gainsbourg",
                        "https://en.wikipedia.org/#cite_note-318",
                        "https://en.wikipedia.org/wiki/Education_in_Paris",
                        "/wiki/File:Chapelle_Sainte-Ursule_de_la_Sorbonne,_Paris_001.jpg",
                        "https://en.wikipedia.org/wiki/Sorbonne_University",
                        "https://en.wikipedia.org/wiki/Licence_(France)",
                        "https://en.wikipedia.org/#cite_note-319",
                        "https://en.wikipedia.org/#cite_note-idf_education-320",
                        "https://en.wikipedia.org/wiki/List_of_universities_and_institutions_in_the_Paris_region",
                        "https://en.wikipedia.org/wiki/May_68",
                        "https://en.wikipedia.org/#cite_note-FOOTNOTECombeau2013213%E2%80%93214-321",
                        "https://en.wikipedia.org/wiki/Grandes_%C3%A9coles",
                        "https://en.wikipedia.org/wiki/Grands_%C3%A9tablissements",
                        "https://en.wikipedia.org/wiki/%C3%89cole_Normale_Sup%C3%A9rieure",
                        "https://en.wikipedia.org/wiki/Paris_Sciences_et_Lettres_University",
                        "https://en.wikipedia.org/wiki/5th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/#cite_note-322",
                        "https://en.wikipedia.org/wiki/Conservatoire_national_des_arts_et_m%C3%A9tiers",
                        "https://en.wikipedia.org/wiki/Polytechnic_Institute_of_Paris",
                        "https://en.wikipedia.org/wiki/Paris_Cit%C3%A9_University",
                        "https://en.wikipedia.org/wiki/Paris-Saclay_University",
                        "https://en.wikipedia.org/wiki/Sciences_Po",
                        "https://en.wikipedia.org/#cite_note-323",
                        "https://en.wikipedia.org/wiki/HEC_Paris",
                        "https://en.wikipedia.org/wiki/ESSEC_Business_School",
                        "https://en.wikipedia.org/wiki/ESCP_Business_School",
                        "https://en.wikipedia.org/wiki/INSEAD",
                        "https://en.wikipedia.org/#cite_note-324",
                        "https://en.wikipedia.org/#cite_note-325",
                        "/wiki/File:H%C3%B4tel-Dieu_de_Paris,_February_7,_2013.jpg",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel-Dieu_de_Paris",
                        "https://en.wikipedia.org/wiki/Assistance_publique_%E2%80%93_H%C3%B4pitaux_de_Paris",
                        "https://en.wikipedia.org/#cite_note-hospital-326",
                        "https://en.wikipedia.org/#cite_note-327",
                        "https://en.wikipedia.org/wiki/Piti%C3%A9-Salp%C3%AAtri%C3%A8re_Hospital",
                        "https://en.wikipedia.org/wiki/H%C3%B4pital_Cochin",
                        "https://en.wikipedia.org/wiki/Bichat%E2%80%93Claude_Bernard_Hospital",
                        "https://en.wikipedia.org/wiki/H%C3%B4pital_Europ%C3%A9en_Georges-Pompidou",
                        "https://en.wikipedia.org/wiki/Bic%C3%AAtre_Hospital",
                        "https://en.wikipedia.org/wiki/Beaujon_Hospital",
                        "https://en.wikipedia.org/wiki/Curie_Institute_(Paris)",
                        "https://en.wikipedia.org/wiki/Lariboisi%C3%A8re_Hospital",
                        "https://en.wikipedia.org/wiki/Necker%E2%80%93Enfants_Malades_Hospital",
                        "https://en.wikipedia.org/wiki/H%C3%B4pital_Saint-Louis",
                        "https://en.wikipedia.org/wiki/H%C3%B4pital_de_la_Charit%C3%A9",
                        "https://en.wikipedia.org/wiki/American_Hospital_of_Paris",
                        "https://en.wikipedia.org/#cite_note-328",
                        "https://en.wikipedia.org/wiki/List_of_twin_towns_and_sister_cities_in_France",
                        "https://en.wikipedia.org/wiki/Sister_city",
                        "https://en.wikipedia.org/#cite_note-IR-329",
                        "https://en.wikipedia.org/#cite_note-330",
                        "https://en.wikipedia.org/#cite_note-331",
                        "https://en.wikipedia.org/#cite_note-332",
                        "https://en.wikipedia.org/#cite_note-Paris1-333",
                        "https://en.wikipedia.org/#cite_note-Paris2-334",
                        "https://en.wikipedia.org/wiki/Algiers",
                        "https://en.wikipedia.org/wiki/Amman",
                        "https://en.wikipedia.org/wiki/Amsterdam",
                        "https://en.wikipedia.org/wiki/Athens",
                        "https://en.wikipedia.org/wiki/Beirut",
                        "https://en.wikipedia.org/wiki/Brazzaville",
                        "https://en.wikipedia.org/wiki/Buenos_Aires",
                        "https://en.wikipedia.org/wiki/Cairo",
                        "https://en.wikipedia.org/wiki/Casablanca",
                        "https://en.wikipedia.org/wiki/Chicago",
                        "https://en.wikipedia.org/wiki/Copenhagen",
                        "https://en.wikipedia.org/wiki/Dakar",
                        "https://en.wikipedia.org/wiki/Doha",
                        "https://en.wikipedia.org/wiki/Geneva",
                        "https://en.wikipedia.org/wiki/Istanbul",
                        "https://en.wikipedia.org/wiki/Jakarta",
                        "https://en.wikipedia.org/wiki/Jericho",
                        "https://en.wikipedia.org/wiki/Kinshasa",
                        "https://en.wikipedia.org/wiki/Kyoto",
                        "https://en.wikipedia.org/wiki/Lisbon",
                        "https://en.wikipedia.org/wiki/Mexico_City",
                        "https://en.wikipedia.org/wiki/Montevideo",
                        "https://en.wikipedia.org/wiki/Montreal",
                        "https://en.wikipedia.org/wiki/Moscow",
                        "https://en.wikipedia.org/wiki/Phnom_Penh",
                        "https://en.wikipedia.org/wiki/Porto_Alegre",
                        "https://en.wikipedia.org/wiki/Prague",
                        "https://en.wikipedia.org/wiki/Quebec_City",
                        "https://en.wikipedia.org/wiki/Rabat",
                        "https://en.wikipedia.org/wiki/Ramallah",
                        "https://en.wikipedia.org/wiki/Riyadh",
                        "https://en.wikipedia.org/wiki/Saint_Petersburg",
                        "https://en.wikipedia.org/wiki/Sanaa",
                        "https://en.wikipedia.org/wiki/San_Francisco",
                        "https://en.wikipedia.org/wiki/Santiago",
                        "https://en.wikipedia.org/wiki/S%C3%A3o_Paulo",
                        "https://en.wikipedia.org/wiki/Seoul",
                        "https://en.wikipedia.org/wiki/Sofia",
                        "https://en.wikipedia.org/wiki/Sydney",
                        "https://en.wikipedia.org/wiki/Tbilisi",
                        "https://en.wikipedia.org/wiki/Tel_Aviv",
                        "https://en.wikipedia.org/wiki/Tokyo",
                        "https://en.wikipedia.org/wiki/Tunis",
                        "https://en.wikipedia.org/wiki/Warsaw",
                        "https://en.wikipedia.org/wiki/Washington,_D.C.",
                        "https://en.wikipedia.org/wiki/Yerevan",
                        "/wiki/Portal:France",
                        "/wiki/Portal:Cities",
                        "https://en.wikipedia.org/wiki/Art_Nouveau_in_Paris",
                        "https://en.wikipedia.org/wiki/Art_Deco_in_Paris",
                        "https://en.wikipedia.org/wiki/C40_Cities_Climate_Leadership_Group",
                        "https://en.wikipedia.org/wiki/International_Exposition_of_Modern_Industrial_and_Decorative_Arts",
                        "https://en.wikipedia.org/wiki/Megacity",
                        "https://en.wikipedia.org/wiki/Outline_of_France",
                        "https://en.wikipedia.org/wiki/Outline_of_Paris",
                        "https://en.wikipedia.org/wiki/Parish_and_Civil_Registers_in_Paris",
                        "https://en.wikipedia.org/#cite_ref-22",
                        "https://en.wikipedia.org/#cite_ref-1",
                        "https://static.data.gouv.fr/resources/repertoire-national-des-elus-1/20221216-172042/rne-maire.csv",
                        "https://web.archive.org/web/20230227222303/https://static.data.gouv.fr/resources/repertoire-national-des-elus-1/20221216-172042/rne-maire.csv",
                        "https://en.wikipedia.org/#cite_ref-Comparateur_de_territoires.INSEE_2-0",
                        "https://en.wikipedia.org/#cite_ref-Comparateur_de_territoires.INSEE_2-1",
                        "https://en.wikipedia.org/#cite_ref-Comparateur_de_territoires.INSEE_2-2",
                        "https://en.wikipedia.org/#cite_ref-Comparateur_de_territoires.INSEE_2-3",
                        "https://en.wikipedia.org/#cite_ref-Comparateur_de_territoires.INSEE_2-4",
                        "https://www.insee.fr/fr/statistiques/1405599?geo=REG-11+AAV2020-001+UU2020-00851+DEP-75",
                        "https://en.wikipedia.org/#cite_ref-pop2025_3-0",
                        "https://en.wikipedia.org/#cite_ref-pop2025_3-1",
                        "https://en.wikipedia.org/#cite_ref-pop2025_3-2",
                        "https://en.wikipedia.org/#cite_ref-pop2025_3-3",
                        "https://www.insee.fr/fr/statistiques/8331297",
                        "https://en.wikipedia.org/#cite_ref-pop2019_4-0",
                        "https://www.insee.fr/fr/statistiques/6005800?geo=COM-75056",
                        "https://web.archive.org/web/20220122150105/https://www.insee.fr/fr/statistiques/6005800?geo=COM-75056",
                        "https://en.wikipedia.org/#cite_ref-5",
                        "https://www.worldatlas.com/articles/the-world-s-most-densely-populated-cities.html",
                        "https://web.archive.org/web/20220319082523/https://www.worldatlas.com/articles/the-world-s-most-densely-populated-cities.html",
                        "https://en.wikipedia.org/#cite_ref-6",
                        "https://www.britannica.com/place/Paris",
                        "https://web.archive.org/web/20220827145809/https://www.britannica.com/place/Paris",
                        "https://en.wikipedia.org/#cite_ref-7",
                        "https://data.oecd.org/conversion/purchasing-power-parities-ppp.htm",
                        "https://web.archive.org/web/20171104144219/https://data.oecd.org/conversion/purchasing-power-parities-ppp.htm",
                        "https://en.wikipedia.org/#cite_ref-8",
                        "https://ec.europa.eu/eurostat/databrowser/view/MET_10R_3GDP/default/table?lang=en",
                        "https://web.archive.org/web/20230215185052/https://ec.europa.eu/eurostat/databrowser/view/met_10r_3gdp/default/table?lang=en",
                        "https://en.wikipedia.org/#cite_ref-9",
                        "https://www.economist.com/graphic-detail/2022/11/30/the-worlds-most-and-least-expensive-cities",
                        "https://en.wikipedia.org/wiki/ISSN_(identifier)",
                        "https://search.worldcat.org/issn/0013-0613",
                        "https://web.archive.org/web/20221201044121/https://www.economist.com/graphic-detail/2022/11/30/the-worlds-most-and-least-expensive-cities",
                        "https://en.wikipedia.org/#cite_ref-10",
                        "https://www.usatoday.com/story/travel/flights/todayinthesky/2018/04/09/list-worlds-20-busiest-airports-2017/498552002/",
                        "https://web.archive.org/web/20180625213204/https://www.usatoday.com/story/travel/flights/todayinthesky/2018/04/09/list-worlds-20-busiest-airports-2017/498552002/",
                        "https://en.wikipedia.org/#cite_ref-11",
                        "http://www.airport-world.com/news/general-news/6601-aci-figures-reveal-the-world-s-busiest-passenger-and-cargo-airports.html",
                        "https://web.archive.org/web/20180628125151/http://www.airport-world.com/news/general-news/6601-aci-figures-reveal-the-world-s-busiest-passenger-and-cargo-airports.html",
                        "https://en.wikipedia.org/#cite_ref-ICLEI_12-0",
                        "https://en.wikipedia.org/#cite_ref-ICLEI_12-1",
                        "https://sustainablemobility.iclei.org/paris-leads-the-way-for-sustainable-mobility/",
                        "https://web.archive.org/web/20240107143059/https://sustainablemobility.iclei.org/paris-leads-the-way-for-sustainable-mobility/",
                        "https://en.wikipedia.org/#cite_ref-Award_13-0",
                        "https://en.wikipedia.org/#cite_ref-Award_13-1",
                        "https://www.itdp.org/2023/01/10/paris-2023-sustainable-transport-award/",
                        "https://web.archive.org/web/20240107142955/https://www.itdp.org/2023/01/10/paris-2023-sustainable-transport-award/",
                        "https://en.wikipedia.org/#cite_ref-14",
                        "https://en.wikipedia.org/#cite_ref-unesco_15-0",
                        "http://whc.unesco.org/en/list/600",
                        "https://web.archive.org/web/20190509014712/http://whc.unesco.org/en/list/600/",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEN%C3%A8gre1990155_16-0",
                        "https://en.wikipedia.org/#CITEREFN%C3%A8gre1990",
                        "https://en.wikipedia.org/#cite_ref-Falileyev_17-0",
                        "https://en.wikipedia.org/#cite_ref-Falileyev_17-1",
                        "https://en.wikipedia.org/#cite_ref-Falileyev_17-2",
                        "https://en.wikipedia.org/#CITEREFFalileyev2010",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELambert199438_18-0",
                        "https://en.wikipedia.org/#CITEREFLambert1994",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEDelamarre2003211_19-0",
                        "https://en.wikipedia.org/#CITEREFDelamarre2003",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEDelamarre2003247_20-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEDelamarre2003247_20-1",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBusse2006199_21-0",
                        "https://en.wikipedia.org/#CITEREFBusse2006",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEDottin1920535_23-0",
                        "https://en.wikipedia.org/#CITEREFDottin1920",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEArbois_de_JubainvilleDottin1889132_24-0",
                        "https://en.wikipedia.org/#CITEREFArbois_de_JubainvilleDottin1889",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTECunliffe2004201_25-0",
                        "https://en.wikipedia.org/#CITEREFCunliffe2004",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand201025_26-0",
                        "https://en.wikipedia.org/#CITEREFLawrenceGondrand2010",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESchmidt200965%E2%80%9370_27-0",
                        "https://en.wikipedia.org/#CITEREFSchmidt2009",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESchmidt200988%E2%80%93104_28-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESchmidt2009154%E2%80%93167_29-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMeunier201412_30-0",
                        "https://en.wikipedia.org/#CITEREFMeunier2014",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESchmidt2009210%E2%80%93211_31-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESchmidt2009210%E2%80%93211_31-1",
                        "https://en.wikipedia.org/#cite_ref-32",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEJones199448_33-0",
                        "https://en.wikipedia.org/#CITEREFJones1994",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand201027_34-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand201027_34-1",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBussmann198522_35-0",
                        "https://en.wikipedia.org/#CITEREFBussmann1985",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEde_VitriacoHinnebusch1972262_36-0",
                        "https://en.wikipedia.org/#CITEREFde_VitriacoHinnebusch1972",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant201236%E2%80%9340_37-0",
                        "https://en.wikipedia.org/#CITEREFSarmant2012",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant201228%E2%80%9329_38-0",
                        "https://en.wikipedia.org/#cite_ref-ParisDigest_39-0",
                        "https://www.parisdigest.com/history/paris_history.htm",
                        "https://web.archive.org/web/20180906195637/https://www.parisdigest.com/history/paris_history.htm",
                        "https://en.wikipedia.org/#cite_ref-40",
                        "https://en.wikipedia.org/#cite_ref-41",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro199652%E2%80%9353_42-0",
                        "https://en.wikipedia.org/#CITEREFFierro1996",
                        "https://en.wikipedia.org/#cite_ref-43",
                        "https://www.britannica.com/EBchecked/topic/516821/Massacre-of-Saint-Bartholomews-Day",
                        "https://web.archive.org/web/20150504150458/https://www.britannica.com/EBchecked/topic/516821/Massacre-of-Saint-Bartholomews-Day",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBayrou1994121%E2%80%93130_44-0",
                        "https://en.wikipedia.org/#CITEREFBayrou1994",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996577_45-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996582_46-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTECombeau200342%E2%80%9343_47-0",
                        "https://en.wikipedia.org/#CITEREFCombeau2003",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996590%E2%80%93591_48-0",
                        "https://en.wikipedia.org/#cite_ref-49",
                        "https://books.google.com/books?id=yKsYAAAAYAAJ",
                        "https://en.wikipedia.org/wiki/ISBN_(identifier)",
                        "/wiki/Special:BookSources/978-0-671-21988-8",
                        "https://web.archive.org/web/20161229054200/https://books.google.com/books/about/The_Story_of_Civilization_The_age_of_Nap.html?id=yKsYAAAAYAAJ",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTECombeau200345%E2%80%9347_50-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012129%E2%80%93133_51-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012120_52-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEPaine1998453_53-0",
                        "https://en.wikipedia.org/#CITEREFPaine1998",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996674_54-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012144_55-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012147_56-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012148_57-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012148_57-1",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012148_57-2",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEDe_Moncan20127%E2%80%9335_58-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEDe_Moncan20127%E2%80%9335_58-1",
                        "https://en.wikipedia.org/#CITEREFDe_Moncan2012",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTERougerie2014118_59-0",
                        "https://en.wikipedia.org/#CITEREFRougerie2014",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFraserSpalding2011117_60-0",
                        "https://en.wikipedia.org/#CITEREFFraserSpalding2011",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996490%E2%80%93491_61-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTECombeau200361_62-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996497_63-0",
                        "https://en.wikipedia.org/#cite_ref-64",
                        "https://web.archive.org/web/20151118065327/https://books.google.com/books/about/Bohemian_Paris.html?id=3hYBzRzZ0kcC",
                        "/wiki/Special:BookSources/978-0-8021-9740-5",
                        "https://books.google.com/books?id=3hYBzRzZ0kcC",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996491_65-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996750_66-0",
                        "https://en.wikipedia.org/#cite_ref-67",
                        "/wiki/Special:BookSources/978-0-520-22537-4",
                        "https://en.wikipedia.org/#cite_ref-Meisler_68-0",
                        "http://www.smithsonianmag.com/arts-culture/the-surreal-world-of-salvador-dali-78993324/",
                        "https://web.archive.org/web/20140518170614/http://www.smithsonianmag.com/arts-culture/the-surreal-world-of-salvador-dali-78993324/",
                        "https://en.wikipedia.org/#cite_ref-69",
                        "http://www.cambridge.org/us/academic/subjects/history/twentieth-century-european-history/anti-imperial-metropolis-interwar-paris-and-seeds-third-world-nationalism?format=HB#contentsTabAnchor",
                        "https://web.archive.org/web/20150904011013/http://www.cambridge.org/us/academic/subjects/history/twentieth-century-european-history/anti-imperial-metropolis-interwar-paris-and-seeds-third-world-nationalism?format=HB#contentsTabAnchor",
                        "https://en.wikipedia.org/wiki/Wayback_Machine",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012217_70-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996637_71-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012218_72-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996242%E2%80%93243_73-0",
                        "https://en.wikipedia.org/#cite_ref-74",
                        "https://www.theguardian.com/world/2011/oct/17/france-remembers-algerian-massacre",
                        "https://web.archive.org/web/20141026114936/http://www.theguardian.com/world/2011/oct/17/france-remembers-algerian-massacre",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996658_75-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012226_76-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996260_77-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012222_78-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTECombeau2003107%E2%80%93108_79-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBellde-Shalit2011247_80-0",
                        "https://en.wikipedia.org/#CITEREFBellde-Shalit2011",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012226%E2%80%93230_81-0",
                        "https://en.wikipedia.org/#cite_ref-82",
                        "http://www.citymayors.com/mayors/paris_mayor.html",
                        "https://archive.today/20120722044933/http://www.citymayors.com/mayors/paris_mayor.html",
                        "https://en.wikipedia.org/#cite_ref-83",
                        "https://web.archive.org/web/20141220195103/http://www.lemoniteur.fr/133-amenagement/article/actualite/21534070-les-berges-de-seine-rendues-aux-parisiens",
                        "http://www.lemoniteur.fr/133-amenagement/article/actualite/21534070-les-berges-de-seine-rendues-aux-parisiens",
                        "https://en.wikipedia.org/#cite_ref-Lichfield_84-0",
                        "https://www.independent.co.uk/news/world/europe/sarkos-euro35bn-rail-plan-for-a-greater-paris-1676196.html",
                        "https://en.wikipedia.org/wiki/The_Independent",
                        "https://web.archive.org/web/20090502102151/http://www.independent.co.uk/news/world/europe/sarkos-euro35bn-rail-plan-for-a-greater-paris-1676196.html",
                        "https://en.wikipedia.org/#cite_ref-metro_85-0",
                        "http://www.railwaygazette.com/news/single-view/view/EUR265bn-grand-paris-metro-expansion-programme-confirmed.html",
                        "https://web.archive.org/web/20130318205908/http://www.railwaygazette.com/news/single-view/view/EUR265bn-grand-paris-metro-expansion-programme-confirmed.html",
                        "https://en.wikipedia.org/#cite_ref-86",
                        "http://www.societedugrandparis.fr/#projet",
                        "https://web.archive.org/web/20110714020412/http://www.societedugrandparis.fr/#projet",
                        "https://en.wikipedia.org/#cite_ref-87",
                        "http://www.cnn.com/2015/01/21/europe/2015-paris-terror-attacks-fast-facts/index.html",
                        "https://web.archive.org/web/20170623154608/http://www.cnn.com/2015/01/21/europe/2015-paris-terror-attacks-fast-facts/index.html",
                        "https://en.wikipedia.org/#cite_ref-88",
                        "http://www.lemonde.fr/les-decodeurs/article/2015/01/14/attentats-terroristes-les-questions-que-vous-nous-avez-le-plus-posees_4554653_4355770.html",
                        "https://web.archive.org/web/20150114153341/http://www.lemonde.fr/les-decodeurs/article/2015/01/14/attentats-terroristes-les-questions-que-vous-nous-avez-le-plus-posees_4554653_4355770.html",
                        "https://en.wikipedia.org/#cite_ref-89",
                        "http://www.lefigaro.fr/politique/le-scan/citations/2015/01/11/25002-20150111ARTFIG00086-les-politiques-s-affichent-a-la-marche-republicaine.php",
                        "https://web.archive.org/web/20150111213532/http://www.lefigaro.fr/politique/le-scan/citations/2015/01/11/25002-20150111ARTFIG00086-les-politiques-s-affichent-a-la-marche-republicaine.php",
                        "https://en.wikipedia.org/#cite_ref-90",
                        "https://www.reuters.com/article/us-france-shooting-idUSKCN0T22IU20151114",
                        "https://web.archive.org/web/20151114014250/http://www.reuters.com/article/2015/11/14/us-france-shooting-idUSKCN0T22IU20151114",
                        "https://en.wikipedia.org/#cite_ref-91",
                        "https://www.rte.ie/news/2015/1120/747897-paris/",
                        "https://en.wikipedia.org/wiki/RT%C3%89.ie",
                        "https://web.archive.org/web/20190423123908/https://www.rte.ie/news/2015/1120/747897-paris/",
                        "https://en.wikipedia.org/#cite_ref-92",
                        "https://www.un.org/apps/news/story.asp?NewsID=53756#.VxqAYGNpr-Y",
                        "https://web.archive.org/web/20170629105154/http://www.un.org/apps/news/story.asp?NewsID=53756#.VxqAYGNpr-Y",
                        "https://en.wikipedia.org/#cite_ref-City_93-0",
                        "https://en.wikipedia.org/#cite_ref-City_93-1",
                        "https://www.britannica.com/EBchecked/topic/443621/Paris",
                        "https://web.archive.org/web/20130707083834/https://www.britannica.com/EBchecked/topic/443621/Paris",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBlackmoreMcConnachie2004153_94-0",
                        "https://en.wikipedia.org/#CITEREFBlackmoreMcConnachie2004",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand201069_95-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand201069_95-1",
                        "https://en.wikipedia.org/#cite_ref-96",
                        "https://web.archive.org/web/20090306220509/http://www.paris.fr/portail/english/Portal.lut?page_id=8125&document_type_id=5&document_id=29918&portlet_id=18748",
                        "http://www.paris.fr/portail/english/Portal.lut?page_id=8125&document_type_id=5&document_id=29918&portlet_id=18748",
                        "https://en.wikipedia.org/#cite_ref-97",
                        "https://www.google.com/maps/place/48¬∞51'24.1%22N+2¬∞21'02.9%22E/@48.8567,2.3508,24716m/data=!3m1!1e3!4m5!3m4!1s0x0:0x0!8m2!3d48.8567!4d2.3508?hl=en",
                        "https://web.archive.org/web/20190111052823/https://www.google.com/maps/place/48",
                        "https://en.wikipedia.org/#cite_ref-98",
                        "https://web.archive.org/web/20130308094732/http://www.paris.com/tourism/climate",
                        "http://www.paris.com/tourism/climate",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010309_99-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEGoldstein20058_100-0",
                        "https://en.wikipedia.org/#CITEREFGoldstein2005",
                        "https://en.wikipedia.org/#cite_ref-101",
                        "https://web.archive.org/web/20141205162747/http://en.parisinfo.com/practical-paris/useful-info/climate",
                        "http://en.parisinfo.com/practical-paris/useful-info/climate",
                        "https://en.wikipedia.org/#cite_ref-102",
                        "https://www.tripsavvy.com/visiting-paris-in-the-winter-1618789",
                        "https://web.archive.org/web/20171011030400/https://www.tripsavvy.com/visiting-paris-in-the-winter-1618789",
                        "https://en.wikipedia.org/#cite_ref-103",
                        "https://www.tripsavvy.com/weather-in-france-1517972#step4",
                        "https://web.archive.org/web/20180228100742/https://www.tripsavvy.com/weather-in-france-1517972#step4",
                        "https://en.wikipedia.org/#cite_ref-104",
                        "http://www.meteofrance.fr/actualites/74506889-42-4-c-a-paris-record-absolu-de-chaleur-battu",
                        "https://web.archive.org/web/20190725135102/http://www.meteofrance.fr/actualites/74506889-42-4-c-a-paris-record-absolu-de-chaleur-battu",
                        "https://en.wikipedia.org/#cite_ref-climate_105-0",
                        "https://web.archive.org/web/20061003225432/http://www.paris.fr/portail/accueil/Portal.lut?page_id=4946&document_type_id=5&document_id=3076&portlet_id=10579",
                        "http://www.paris.fr/portail/accueil/Portal.lut?page_id=4946&document_type_id=5&document_id=3076&portlet_id=10579",
                        "https://en.wikipedia.org/#cite_ref-106",
                        "https://web.archive.org/web/20180227003336/https://donneespubliques.meteofrance.fr/FichesClim/FICHECLIM_75114001.pdf",
                        "https://donneespubliques.meteofrance.fr/FichesClim/FICHECLIM_75114001.pdf",
                        "https://en.wikipedia.org/#cite_ref-Infoclimat_107-0",
                        "https://web.archive.org/web/20170824091330/http://www.infoclimat.fr/climatologie-07156-paris-montsouris.html",
                        "http://www.infoclimat.fr/climatologie-07156-paris-montsouris.html",
                        "https://en.wikipedia.org/#cite_ref-Weather_Atlas_108-0",
                        "https://www.weather-atlas.com/en/france/paris-climate",
                        "https://web.archive.org/web/20170312033016/http://www.weather-atlas.com/en/france/paris-climate",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996334_109-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996334_109-1",
                        "https://en.wikipedia.org/#cite_ref-auto2_110-0",
                        "https://web.archive.org/web/20141220194454/http://www.paris.fr/english/english/anne-hidalgo-paris-s-new-mayor/rub_8118_actu_142533_port_19237",
                        "http://www.paris.fr/english/english/anne-hidalgo-paris-s-new-mayor/rub_8118_actu_142533_port_19237",
                        "https://en.wikipedia.org/#cite_ref-111",
                        "https://www.theguardian.com/world/2020/jun/28/voters-stay-away-from-second-round-french-local-elections",
                        "https://en.wikipedia.org/wiki/The_Guardian",
                        "https://search.worldcat.org/issn/0261-3077",
                        "https://web.archive.org/web/20200630223850/https://www.theguardian.com/world/2020/jun/28/voters-stay-away-from-second-round-french-local-elections",
                        "https://en.wikipedia.org/#cite_ref-Election_Code_%E2%80%93_Article_L260_112-0",
                        "https://en.wikipedia.org/#cite_ref-Election_Code_%E2%80%93_Article_L260_112-1",
                        "http://www.legifrance.gouv.fr/affichCodeArticle.do?cidTexte=LEGITEXT000006070239&idArticle=LEGIARTI000006353607&dateTexte=20141108",
                        "https://web.archive.org/web/20141225102129/http://www.legifrance.gouv.fr/affichCodeArticle.do?cidTexte=LEGITEXT000006070239&idArticle=LEGIARTI000006353607&dateTexte=20141108",
                        "https://en.wikipedia.org/#cite_ref-Pariscouncil_113-0",
                        "https://welections.wordpress.com/2014/03/22/election-preview-france-municipal-elections-2014-part-i/",
                        "https://web.archive.org/web/20161011211513/https://welections.wordpress.com/2014/03/22/election-preview-france-municipal-elections-2014-part-i/",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEShales200716_114-0",
                        "https://en.wikipedia.org/#CITEREFShales2007",
                        "https://en.wikipedia.org/#cite_ref-115",
                        "https://www.paris.fr/pages/regroupement-des-4-premiers-arrondissements-le-secteur-paris-centre-sera-cree-le-6-avril-7384",
                        "https://web.archive.org/web/20231114161037/https://www.paris.fr/pages/regroupement-des-4-premiers-arrondissements-le-secteur-paris-centre-sera-cree-le-6-avril-7384",
                        "https://en.wikipedia.org/#cite_ref-MGP_116-0",
                        "https://en.wikipedia.org/#cite_ref-MGP_116-1",
                        "https://en.wikipedia.org/#cite_ref-MGP_116-2",
                        "http://www.legifrance.gouv.fr/affichCodeArticle.do?cidTexte=LEGITEXT000006070633&idArticle=LEGIARTI000028528695&dateTexte=vig",
                        "https://web.archive.org/web/20160101095821/http://www.legifrance.gouv.fr/affichCodeArticle.do?cidTexte=LEGITEXT000006070633&idArticle=LEGIARTI000028528695&dateTexte=vig",
                        "https://en.wikipedia.org/#cite_ref-117",
                        "https://www.legifrance.gouv.fr/eli/decret/2015/9/30/RDFB1519847D/jo/texte",
                        "https://web.archive.org/web/20180228100706/https://www.legifrance.gouv.fr/eli/decret/2015/9/30/RDFB1519847D/jo/texte",
                        "https://en.wikipedia.org/#cite_ref-lemoniteur1_118-0",
                        "https://en.wikipedia.org/#cite_ref-lemoniteur1_118-1",
                        "http://www.lemoniteur.fr/article/la-metropole-du-grand-paris-verra-le-jour-le-1er-janvier-2016-29110917",
                        "https://web.archive.org/web/20151208162156/http://www.lemoniteur.fr/article/la-metropole-du-grand-paris-verra-le-jour-le-1er-janvier-2016-29110917",
                        "https://en.wikipedia.org/#cite_ref-119",
                        "https://wayback.archive-it.org/all/20171010075732/http://www.lemonde.fr/politique/article/2016/01/22/du-grand-paris-a-la-metropole-du-grand-paris_4851596_823448.html?xtmc=du_grand_paris_a_la_metropole_du_grand_paris&xtcr=1",
                        "http://www.lemonde.fr/politique/article/2016/01/22/du-grand-paris-a-la-metropole-du-grand-paris_4851596_823448.html?xtmc=du_grand_paris_a_la_metropole_du_grand_paris&xtcr=1",
                        "https://en.wikipedia.org/#cite_ref-120",
                        "http://www.iledefrance.fr/fil-actus-region/regionales-2015-chiffres-cles-du-scrutin",
                        "https://web.archive.org/web/20151219075856/http://www.iledefrance.fr/fil-actus-region/regionales-2015-chiffres-cles-du-scrutin",
                        "https://en.wikipedia.org/#cite_ref-121",
                        "http://www.elysee.fr/la-presidence/le-palais-de-l-elysee-et-son-histoire-2/",
                        "https://web.archive.org/web/20170519171226/http://www.elysee.fr/la-presidence/le-palais-de-l-elysee-et-son-histoire-2",
                        "https://en.wikipedia.org/#cite_ref-122",
                        "http://franceintheus.org/spip.php?article633",
                        "https://web.archive.org/web/20170405081105/http://franceintheus.org/spip.php?article633",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEKnappWright200693%E2%80%9394_123-0",
                        "https://en.wikipedia.org/#CITEREFKnappWright2006",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBorrus2012288_124-0",
                        "https://en.wikipedia.org/#CITEREFBorrus2012",
                        "https://en.wikipedia.org/#cite_ref-125",
                        "http://www.senat.fr/presidence/hotel.html",
                        "https://web.archive.org/web/20130617015850/http://www.senat.fr/presidence/hotel.html",
                        "https://en.wikipedia.org/#cite_ref-126",
                        "http://www.courdecassation.fr/institution_1/visite_cour_11/introduction_74.html",
                        "https://web.archive.org/web/20130515150732/http://courdecassation.fr/institution_1/visite_cour_11/introduction_74.html",
                        "https://en.wikipedia.org/#cite_ref-127",
                        "https://web.archive.org/web/20130410103133/http://www.conseil-etat.fr/fr/histoire-patrimoine-1",
                        "http://www.conseil-etat.fr/fr/histoire-patrimoine-1/",
                        "https://en.wikipedia.org/#cite_ref-128",
                        "https://web.archive.org/web/20140323125504/http://www.conseil-constitutionnel.fr/conseil-constitutionnel/root/bank/pdf/conseil-constitutionnel-5206.pdf",
                        "http://www.conseil-constitutionnel.fr/conseil-constitutionnel/root/bank/pdf/conseil-constitutionnel-5206.pdf",
                        "https://en.wikipedia.org/#cite_ref-Presentation_Generale_129-0",
                        "https://en.wikipedia.org/#cite_ref-Presentation_Generale_129-1",
                        "http://www.police-nationale.interieur.gouv.fr/Presentation-generale",
                        "https://web.archive.org/web/20130308061047/http://www.police-nationale.interieur.gouv.fr/Presentation-generale",
                        "https://en.wikipedia.org/#cite_ref-130",
                        "http://www.gendarmerie.interieur.gouv.fr",
                        "https://web.archive.org/web/20101226055256/http://www.gendarmerie.interieur.gouv.fr/",
                        "https://en.wikipedia.org/#cite_ref-131",
                        "https://travel.state.gov/content/passports/en/country/france.html",
                        "https://web.archive.org/web/20170404010203/https://travel.state.gov/content/passports/en/country/france.html",
                        "https://en.wikipedia.org/#cite_ref-132",
                        "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3703887",
                        "https://en.wikipedia.org/wiki/Doi_(identifier)",
                        "https://doi.org/10.1038%2Fsrep02153",
                        "https://search.worldcat.org/issn/2045-2322",
                        "https://en.wikipedia.org/wiki/PMC_(identifier)",
                        "https://en.wikipedia.org/wiki/PMID_(identifier)",
                        "https://pubmed.ncbi.nlm.nih.gov/23835429",
                        "https://en.wikipedia.org/wiki/S2CID_(identifier)",
                        "https://api.semanticscholar.org/CorpusID:11824030",
                        "https://en.wikipedia.org/#cite_ref-133",
                        "/wiki/Special:BookSources/978-2-907970-98-3",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBraimohVlek200812_134-0",
                        "https://en.wikipedia.org/#CITEREFBraimohVlek2008",
                        "https://en.wikipedia.org/#cite_ref-plan_hauteurs_135-0",
                        "https://en.wikipedia.org/#cite_ref-plan_hauteurs_135-1",
                        "https://web.archive.org/web/20140410225515/http://www.paris.fr/viewmultimediadocument?multimediadocument-id=21647",
                        "http://www.paris.fr/viewmultimediadocument?multimediadocument-id=21647",
                        "https://en.wikipedia.org/#cite_ref-136",
                        "http://paris-a-la-carte-version-pl.paris.fr/carto/mapping/",
                        "https://web.archive.org/web/20100822194654/http://paris-a-la-carte-version-pl.paris.fr/carto/mapping",
                        "https://en.wikipedia.org/#cite_ref-137",
                        "https://en.wikipedia.org/#cite_ref-insee_logement_138-0",
                        "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=LOG&millesime=2011&typgeo=DEP&search=75",
                        "https://web.archive.org/web/20150904011013/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=LOG&millesime=2011&typgeo=DEP&search=75",
                        "https://en.wikipedia.org/#cite_ref-notaires_idf_139-0",
                        "https://en.wikipedia.org/#cite_ref-notaires_idf_139-1",
                        "https://web.archive.org/web/20141101214159/http://www.notaires.paris-idf.fr/sites/default/files/deux_decennies_dimmobilier_final.pdf",
                        "http://www.notaires.paris-idf.fr/sites/default/files/deux_decennies_dimmobilier_final.pdf",
                        "https://en.wikipedia.org/#cite_ref-140",
                        "https://en.wikipedia.org/#cite_ref-141",
                        "https://en.wikipedia.org/#cite_ref-142",
                        "http://www.driea.ile-de-france.developpement-durable.gouv.fr/IMG/pdf/Chapitre5_de_Breve_histoire_de_amenagement_de_Paris_DREIF_Auteur_Claude_Cottour_cle0344bc.pdf",
                        "https://web.archive.org/web/20170101005621/http://www.driea.ile-de-france.developpement-durable.gouv.fr/IMG/pdf/Chapitre5_de_Breve_histoire_de_amenagement_de_Paris_DREIF_Auteur_Claude_Cottour_cle0344bc.pdf",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMasson1984536_143-0",
                        "https://en.wikipedia.org/#CITEREFMasson1984",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEYarri2008407_144-0",
                        "https://en.wikipedia.org/#CITEREFYarri2008",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEGordon200646%E2%80%9347_145-0",
                        "https://en.wikipedia.org/#CITEREFGordon2006",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTECastells198375_146-0",
                        "https://en.wikipedia.org/#CITEREFCastells1983",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTETomasBlancBonillaIERP2003237_147-0",
                        "https://en.wikipedia.org/#CITEREFTomasBlancBonillaIERP2003",
                        "https://en.wikipedia.org/#cite_ref-villes_nouvelles_148-0",
                        "https://en.wikipedia.org/#cite_ref-villes_nouvelles_148-1",
                        "https://web.archive.org/web/20160326035711/http://www.laburba.fr/app/download/7815645/Article%2Bvilles%2Bnouvelles.pdf",
                        "http://www.laburba.fr/app/download/7815645/Article+villes+nouvelles.pdf",
                        "https://en.wikipedia.org/#cite_ref-149",
                        "https://web.archive.org/web/20170816133325/http://sig.ville.gouv.fr/atlas/ZUS/",
                        "http://sig.ville.gouv.fr/atlas/ZUS/",
                        "https://en.wikipedia.org/#cite_ref-150",
                        "http://www.insee.fr/fr/themes/document.asp?reg_id=20&ref_id=20529&page=alapage/alap414/alap414_carte.htm#carte1",
                        "https://web.archive.org/web/20141229014922/http://www.insee.fr/fr/themes/document.asp?reg_id=20&ref_id=20529&page=alapage%2Falap414%2Falap414_carte.htm#carte1",
                        "https://en.wikipedia.org/#cite_ref-immig_151-0",
                        "https://www.insee.fr/fr/statistiques/6456040?sommaire=6456104",
                        "https://en.wikipedia.org/#cite_ref-152",
                        "https://en.wikipedia.org/wiki/INSEE",
                        "https://www.insee.fr/fr/statistiques/6455264?sommaire=6455286&geo=REG-11#ancre-IMG1B_V2_ENS",
                        "https://en.wikipedia.org/#cite_ref-153",
                        "https://en.wikipedia.org/#cite_ref-154",
                        "https://en.wikipedia.org/#cite_ref-Le_Monde,_22_January_2019_155-0",
                        "https://en.wikipedia.org/#cite_ref-ReferenceA_156-0",
                        "https://en.wikipedia.org/#cite_ref-157",
                        "http://epp.eurostat.ec.europa.eu/statistics_explained/index.php/Statistics_on_European_cities",
                        "https://web.archive.org/web/20141114142816/http://epp.eurostat.ec.europa.eu/statistics_explained/index.php/Statistics_on_European_cities",
                        "https://en.wikipedia.org/#cite_ref-158",
                        "http://cassini.ehess.fr/fr/html/fiche.php?select_resultat=26207",
                        "https://en.wikipedia.org/wiki/School_for_Advanced_Studies_in_the_Social_Sciences",
                        "https://en.wikipedia.org/#cite_ref-159",
                        "https://en.wikipedia.org/#cite_ref-pophis_160-0",
                        "https://www.insee.fr/fr/statistiques/4515315?geo=COM-75056",
                        "https://web.archive.org/web/20210215061844/https://www.insee.fr/fr/statistiques/4515315?geo=COM-75056",
                        "https://en.wikipedia.org/#cite_ref-pop_UU_161-0",
                        "https://www.insee.fr/fr/statistiques/4515315?geo=UU2020-00851",
                        "https://web.archive.org/web/20220617121211/https://www.insee.fr/fr/statistiques/4515315?geo=UU2020-00851",
                        "https://en.wikipedia.org/#cite_ref-urbaneurope_162-0",
                        "https://en.wikipedia.org/#cite_ref-urbaneurope_162-1",
                        "https://ec.europa.eu/eurostat/en/web/products-statistical-books/-/KS-01-16-691",
                        "https://web.archive.org/web/20201012194422/https://ec.europa.eu/eurostat/en/web/products-statistical-books/-/KS-01-16-691",
                        "https://en.wikipedia.org/#cite_ref-FU_163-0",
                        "https://www.insee.fr/en/metadonnees/definition/c2173",
                        "https://web.archive.org/web/20220409035813/https://www.insee.fr/en/metadonnees/definition/c2173",
                        "https://en.wikipedia.org/#cite_ref-pop_AU_164-0",
                        "https://www.insee.fr/fr/statistiques/4515315?geo=AAV2020-001",
                        "https://web.archive.org/web/20220617120814/https://www.insee.fr/fr/statistiques/4515315?geo=AAV2020-001",
                        "https://en.wikipedia.org/#cite_ref-165",
                        "https://www.insee.fr/fr/statistiques/4515315?geo=FE-1",
                        "https://web.archive.org/web/20210117195634/https://www.insee.fr/fr/statistiques/4515315?geo=FE-1",
                        "https://en.wikipedia.org/#cite_ref-166",
                        "https://web.archive.org/web/20150407164439/http://ec.europa.eu/eurostat/statistics-explained/index.php/Population_statistics_at_regional_level",
                        "http://ec.europa.eu/eurostat/statistics-explained/index.php/Population_statistics_at_regional_level",
                        "https://en.wikipedia.org/#cite_ref-167",
                        "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=IMG1B&millesime=2012&niveau=2&nivgeo=DEP&codgeo=75",
                        "https://en.wikipedia.org/wiki/Insee",
                        "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=IMG1B&millesime=2012&niveau=2&nivgeo=DEP&codgeo=75",
                        "https://en.wikipedia.org/#cite_ref-168",
                        "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=IMG1B&millesime=2012&niveau=2&nivgeo=REG&codgeo=11",
                        "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=IMG1B&millesime=2012&niveau=2&nivgeo=REG&codgeo=11",
                        "https://en.wikipedia.org/#cite_ref-169",
                        "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=NAT1&millesime=2012&niveau=3&nivgeo=REG&codgeo=11",
                        "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=NAT1&millesime=2012&niveau=3&nivgeo=REG&codgeo=11",
                        "https://en.wikipedia.org/#cite_ref-170",
                        "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=NAT1&millesime=2012&niveau=3&nivgeo=DEP&codgeo=75",
                        "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=NAT1&millesime=2012&niveau=3&nivgeo=DEP&codgeo=75",
                        "https://en.wikipedia.org/#cite_ref-171",
                        "https://www.insee.fr/fr/statistiques/6793282?sommaire=6793391",
                        "https://web.archive.org/web/20231012045430/https://www.insee.fr/fr/statistiques/6793282?sommaire=6793391",
                        "https://en.wikipedia.org/#cite_ref-172",
                        "/wiki/Special:BookSources/978-1-349-13618-6",
                        "https://en.wikipedia.org/#cite_ref-173",
                        "https://books.google.com/books?id=mPibBQAAQBAJ&pg=PA188",
                        "/wiki/Special:BookSources/978-3-658-02594-6",
                        "https://web.archive.org/web/20171001032126/https://books.google.fr/books?id=mPibBQAAQBAJ&pg=PA188",
                        "https://en.wikipedia.org/#cite_ref-174",
                        "http://www.lemonde.fr/les-decodeurs/article/2015/01/21/que-pese-l-islam-en-france_4559859_4355770.html",
                        "https://web.archive.org/web/20151127053220/http://www.lemonde.fr/les-decodeurs/article/2015/01/21/que-pese-l-islam-en-france_4559859_4355770.html",
                        "https://en.wikipedia.org/#cite_ref-175",
                        "http://plus.lefigaro.fr/note/how-does-france-count-its-muslim-population-20110407-435643",
                        "https://web.archive.org/web/20151105002152/http://plus.lefigaro.fr/note/how-does-france-count-its-muslim-population-20110407-435643",
                        "https://en.wikipedia.org/#cite_ref-176",
                        "http://archive.francesoir.fr/actualite/societe/dalil-boubakeur-%E2%80%9Cil-faut-doubler-nombre-mosquees-en-france%E2%80%9D-54083.html",
                        "https://web.archive.org/web/20150128112504/http://archive.francesoir.fr/actualite/societe/dalil-boubakeur-%E2%80%9Cil-faut-doubler-nombre-mosquees-en-france%E2%80%9D-54083.html",
                        "https://en.wikipedia.org/#cite_ref-177",
                        "http://france3-regions.francetvinfo.fr/paris-ile-de-france/2013/04/29/le-manque-de-mosquee-en-ile-de-france-243225.html",
                        "https://web.archive.org/web/20171117174949/http://france3-regions.francetvinfo.fr/paris-ile-de-france/2013/04/29/le-manque-de-mosquee-en-ile-de-france-243225.html",
                        "https://en.wikipedia.org/#cite_ref-178",
                        "http://www.jewishdatabank.org/Studies/details.cfm?StudyID=776",
                        "https://web.archive.org/web/20151104100328/http://jewishdatabank.org/Studies/details.cfm?StudyID=776",
                        "https://en.wikipedia.org/#cite_ref-France.fr_179-0",
                        "https://web.archive.org/web/20130530043643/http://www.france.fr/en/paris-capital-region/la-defense-europes-largest-business-district",
                        "https://www.france.fr/en/paris/list/paris-what-to-do-what-to-see",
                        "https://en.wikipedia.org/#cite_ref-180",
                        "https://www.statista.com/statistics/269845/largest-banks-in-the-world-by-total-assets/",
                        "https://web.archive.org/web/20190810163936/https://www.statista.com/statistics/269845/largest-banks-in-the-world-by-total-assets/",
                        "https://en.wikipedia.org/#cite_ref-sieges_181-0",
                        "https://www.credit-agricole.com/pdfPreview/189647",
                        "https://web.archive.org/web/20230725035725/https://www.credit-agricole.com/pdfPreview/189647",
                        "https://en.wikipedia.org/#cite_ref-182",
                        "http://www.insee.fr/fr/themes/dossier_complet.asp?codgeo=COM-75056",
                        "https://web.archive.org/web/20160307200924/http://www.insee.fr/fr/themes/dossier_complet.asp?codgeo=COM-75056",
                        "https://en.wikipedia.org/#cite_ref-183",
                        "http://www.insee.fr/fr/themes/dossier_complet.asp?codgeo=REG-11",
                        "https://web.archive.org/web/20160316053531/http://www.insee.fr/fr/themes/dossier_complet.asp?codgeo=REG-11",
                        "https://en.wikipedia.org/#cite_ref-184",
                        "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=EMP2&millesime=2012&niveau=3&nivgeo=REG&codgeo=11",
                        "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=EMP2&millesime=2012&niveau=3&nivgeo=REG&codgeo=11",
                        "https://en.wikipedia.org/#cite_ref-185",
                        "http://www.insee.fr/fr/methodes/default.asp?page=nomenclatures/agregatnaf2008/agregatnaf2008.htm",
                        "https://web.archive.org/web/20151219154702/http://www.insee.fr/fr/methodes/default.asp?page=nomenclatures%2Fagregatnaf2008%2Fagregatnaf2008.htm",
                        "https://en.wikipedia.org/#cite_ref-INSEE_186-0",
                        "https://en.wikipedia.org/#cite_ref-INSEE_186-1",
                        "http://www.insee.fr/fr/themes/document.asp?ref_id=20718",
                        "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/document.asp?ref_id=20718",
                        "https://en.wikipedia.org/#cite_ref-187",
                        "https://ec.europa.eu/eurostat/databrowser/view/nama_10r_3gdp/default/table",
                        "https://web.archive.org/web/20240101045308/https://ec.europa.eu/eurostat/databrowser/view/nama_10r_3gdp/default/table",
                        "https://en.wikipedia.org/#cite_ref-188",
                        "https://ec.europa.eu/eurostat/databrowser/view/TGS00005/default/table?lang=en",
                        "https://web.archive.org/web/20230613192346/https://ec.europa.eu/eurostat/databrowser/view/TGS00005/default/table?lang=en",
                        "https://en.wikipedia.org/#cite_ref-189",
                        "http://www.insee.fr/fr/themes/document.asp?reg_id=20&ref_id=21341#trois",
                        "https://web.archive.org/web/20150904011013/http://www.insee.fr/fr/themes/document.asp?reg_id=20&ref_id=21341#trois",
                        "https://en.wikipedia.org/#cite_ref-McKinsey_190-0",
                        "https://foreignpolicy.com/articles/2012/08/13/the_most_dynamic_cities_of_2025",
                        "https://web.archive.org/web/20120828041241/http://www.foreignpolicy.com/articles/2012/08/13/the_most_dynamic_cities_of_2025",
                        "https://en.wikipedia.org/#cite_ref-191",
                        "https://www.insee.fr/en/statistiques/serie/010751746",
                        "https://web.archive.org/web/20230816202919/https://www.insee.fr/en/statistiques/serie/010751746",
                        "https://en.wikipedia.org/#cite_ref-192",
                        "https://www.insee.fr/en/statistiques/serie/010751748",
                        "https://web.archive.org/web/20230816222906/https://www.insee.fr/en/statistiques/serie/010751748",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-0",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-1",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-2",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-3",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-4",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-5",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-6",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-7",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-8",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-9",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-10",
                        "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-11",
                        "http://www.ile-de-france.gouv.fr/content/download/5429/38877/file/L‚Äôindustrie%20en%20Ile-de-France%20‚Äì%20Principaux%20indicateurs%20r√©gionaux.pdf",
                        "https://web.archive.org/web/20150223184616/http://www.ile-de-france.gouv.fr/content/download/5429/38877/file/L%E2%80%99industrie%20en%20Ile-de-France%20%E2%80%93%20Principaux%20indicateurs%20r%C3%A9gionaux.pdf",
                        "https://en.wikipedia.org/#cite_ref-194",
                        "https://en.wikipedia.org/#cite_ref-195",
                        "https://www.courrierinternational.com/article/classement-singapour-hong-kong-paris-le-trio-des-villes-les-plus-cheres-du-monde",
                        "https://en.wikipedia.org/wiki/Courrier_International",
                        "https://web.archive.org/web/20190327081301/https://www.courrierinternational.com/article/classement-singapour-hong-kong-paris-le-trio-des-villes-les-plus-cheres-du-monde",
                        "https://en.wikipedia.org/#cite_ref-196",
                        "https://www.wired.co.uk/article/station-f",
                        "https://web.archive.org/web/20170821085053/http://www.wired.co.uk/article/station-f",
                        "https://en.wikipedia.org/#cite_ref-AlapageINSEE_197-0",
                        "https://en.wikipedia.org/#cite_ref-AlapageINSEE_197-1",
                        "https://en.wikipedia.org/#cite_ref-AlapageINSEE_197-2",
                        "https://en.wikipedia.org/#cite_ref-AlapageINSEE_197-3",
                        "https://en.wikipedia.org/#cite_ref-AlapageINSEE_197-4",
                        "http://www.insee.fr/fr/insee_regions/idf/themes/alapage/alap288/alapage288.pdf",
                        "https://web.archive.org/web/20141229014929/http://www.insee.fr/fr/insee_regions/idf/themes/alapage/alap288/alapage288.pdf",
                        "https://en.wikipedia.org/#cite_ref-wealth_distribution_198-0",
                        "https://www.insee.fr/fr/statistiques/2388413",
                        "https://web.archive.org/web/20170620170141/https://www.insee.fr/fr/statistiques/2388413",
                        "https://en.wikipedia.org/#cite_ref-199",
                        "https://web.archive.org/web/20140406124836/http://www.metronews.fr/paris/des-quartiers-de-paris-compteraient-plus-de-40-de-pauvres/mnaB!OVs3O27zkRe6/",
                        "http://www.metronews.fr/paris/des-quartiers-de-paris-compteraient-plus-de-40-de-pauvres/mnaB!OVs3O27zkRe6/",
                        "https://en.wikipedia.org/#cite_ref-200",
                        "https://en.wikipedia.org/#cite_ref-201",
                        "https://en.wikipedia.org/#cite_ref-202",
                        "https://www.euromonitor.com/press/press-releases/december-2024/euromonitor-international-reveals-worlds-top-100-city-destinations-for-2024",
                        "https://en.wikipedia.org/#cite_ref-pro.visitparisregion.com_203-0",
                        "https://en.wikipedia.org/#cite_ref-pro.visitparisregion.com_203-1",
                        "https://pro.visitparisregion.com/chiffres-du-tourisme/conjoncture/bilans/bilan-de-l-annee-touristique-2022-a-paris-ile-de-france-mars-2023",
                        "https://web.archive.org/web/20230325170709/https://pro.visitparisregion.com/chiffres-du-tourisme/conjoncture/bilans/bilan-de-l-annee-touristique-2022-a-paris-ile-de-france-mars-2023",
                        "https://en.wikipedia.org/#cite_ref-KeyFigures_204-0",
                        "https://en.wikipedia.org/#cite_ref-KeyFigures_204-1",
                        "https://en.wikipedia.org/#cite_ref-KeyFigures_204-2",
                        "https://en.wikipedia.org/#cite_ref-KeyFigures_204-3",
                        "https://web.archive.org/web/20210910112723/https://press.parisinfo.com/key-figures",
                        "https://press.parisinfo.com/key-figures",
                        "https://en.wikipedia.org/#cite_ref-205",
                        "https://www.forbes.com/sites/ericrosen/2019/09/04/the-worlds-most-visited-city-is-bangkok/",
                        "https://en.wikipedia.org/wiki/Forbes",
                        "https://web.archive.org/web/20190914054101/https://www.forbes.com/sites/ericrosen/2019/09/04/the-worlds-most-visited-city-is-bangkok/",
                        "https://en.wikipedia.org/#cite_ref-TIP2016_206-0",
                        "https://press.parisinfo.com/key-figures/key-figures/Tourism-in-Paris-Key-Figures-2016",
                        "https://web.archive.org/web/20180219151215/https://press.parisinfo.com/key-figures/key-figures/Tourism-in-Paris-Key-Figures-2016",
                        "https://en.wikipedia.org/#cite_ref-207",
                        "https://www.reuters.com/article/business/hoteliers-welcome-paris-decision-forcing-airbnb-hosts-to-register-rentals-idUSL8N1JW2DD/",
                        "https://en.wikipedia.org/#cite_ref-208",
                        "https://en.wikipedia.org/#cite_ref-209",
                        "http://news.bbc.co.uk/2/hi/6197921.stm",
                        "https://en.wikipedia.org/wiki/BBC_News",
                        "https://web.archive.org/web/20091031110724/http://news.bbc.co.uk/2/hi/6197921.stm",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMontclos2003_210-0",
                        "https://en.wikipedia.org/#CITEREFMontclos2003",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-1",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-2",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-3",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-4",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-5",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-6",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-7",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-8",
                        "https://en.wikipedia.org/#CITEREFMichelin2011",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEPerry199519_212-0",
                        "https://en.wikipedia.org/#CITEREFPerry1995",
                        "https://en.wikipedia.org/#cite_ref-ReferenceC_213-0",
                        "https://en.wikipedia.org/#cite_ref-214",
                        "https://en.wikipedia.org/#cite_ref-215",
                        "http://www.paris.fr/musees",
                        "https://web.archive.org/web/20141123165959/http://www.paris.fr/musees",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010178_216-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTESchumacher199660_217-0",
                        "https://en.wikipedia.org/#CITEREFSchumacher1996",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro19961173_218-0",
                        "https://en.wikipedia.org/#cite_ref-219",
                        "https://books.google.com/books?id=Tj4WAQAAIAAJ",
                        "https://web.archive.org/web/20130907162159/http://books.google.com/books?id=Tj4WAQAAIAAJ",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro19961005%E2%80%931006_220-0",
                        "https://en.wikipedia.org/#cite_ref-221",
                        "http://gallica.bnf.fr/ark:/12148/bpt6k108017c.r=Labyrinte+de+Versailles+Perrault.langEN",
                        "https://web.archive.org/web/20130612140924/http://gallica.bnf.fr/ark:/12148/bpt6k108017c.r=Labyrinte+de+Versailles+Perrault.langEN",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996488_222-0",
                        "https://en.wikipedia.org/#cite_ref-223",
                        "http://www.adoremus.org/1099-Rose.html",
                        "https://web.archive.org/web/20130207134139/http://www.adoremus.org/1099-Rose.html",
                        "https://en.wikipedia.org/#cite_ref-224",
                        "http://www.gutenberg.org/files/135/135-h/135-h.htm",
                        "https://web.archive.org/web/20131011091018/http://www.gutenberg.org/files/135/135-h/135-h.htm",
                        "https://en.wikipedia.org/#cite_ref-225",
                        "https://www.britannica.com/biography/Jules-Verne",
                        "https://en.wikipedia.org/#cite_ref-226",
                        "https://www.nobelprize.org/nobel_prizes/literature/laureates/2014/bio-bibl.html",
                        "https://web.archive.org/web/20141216224108/http://www.nobelprize.org/nobel_prizes/literature/laureates/2014/bio-bibl.html",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996840_227-0",
                        "https://en.wikipedia.org/#cite_ref-228",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEDamschroederWilliams1990157_229-0",
                        "https://en.wikipedia.org/#CITEREFDamschroederWilliams1990",
                        "https://en.wikipedia.org/#cite_ref-McClary_230-0",
                        "https://books.google.com/books?id=UNGaPmlHFzgC&pg=PA120",
                        "https://web.archive.org/web/20230326164803/https://books.google.com/books?id=UNGaPmlHFzgC&pg=PA120",
                        "https://en.wikipedia.org/#cite_ref-231",
                        "https://books.google.com/books?id=p27gT7VcuNUC&pg=PA146",
                        "/wiki/Special:BookSources/978-1-4668-0726-6",
                        "https://web.archive.org/web/20230201223150/https://books.google.com/books?id=p27gT7VcuNUC&pg=PA146",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEDregni200419_232-0",
                        "https://en.wikipedia.org/#CITEREFDregni2004",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEDregni200832_233-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEDregni200832_233-1",
                        "https://en.wikipedia.org/#CITEREFDregni2008",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMroue2006260_234-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEMroue2006260_234-1",
                        "https://en.wikipedia.org/#CITEREFMroue2006",
                        "https://en.wikipedia.org/#cite_ref-Gjazz_235-0",
                        "https://en.wikipedia.org/#cite_ref-Gjazz_235-1",
                        "https://en.wikipedia.org/#cite_ref-Gjazz_235-2",
                        "https://www.theguardian.com/travel/2010/mar/03/jazz-bars-paris-django-reinhardt",
                        "https://web.archive.org/web/20140320040950/http://www.theguardian.com/travel/2010/mar/03/jazz-bars-paris-django-reinhardt",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBezbakh2004872_236-0",
                        "https://en.wikipedia.org/#CITEREFBezbakh2004",
                        "https://en.wikipedia.org/#cite_ref-237",
                        "http://www.efestivals.co.uk/festivals/rockenseine/2013/",
                        "https://web.archive.org/web/20130513220755/http://www.efestivals.co.uk/festivals/rockenseine/2013",
                        "https://en.wikipedia.org/#cite_ref-andante_238-0",
                        "https://web.archive.org/web/20070312035555/http://www.andante.com/article/article.cfm?id=23207",
                        "http://www.andante.com/article/article.cfm?id=23207",
                        "https://en.wikipedia.org/#cite_ref-yahoomusicbio_239-0",
                        "https://www.allmusic.com/artist/mn0000150629/biography",
                        "https://en.wikipedia.org/wiki/AllMusic_(identifier)",
                        "https://en.wikipedia.org/#cite_ref-240",
                        "https://www.nytimes.com/roomfordebate/2013/10/14/is-france-becoming-too-american/hip-hop-a-la-francaise-29",
                        "https://en.wikipedia.org/wiki/The_New_York_Times",
                        "https://web.archive.org/web/20151209163816/http://www.nytimes.com/roomfordebate/2013/10/14/is-france-becoming-too-american/hip-hop-a-la-francaise-29",
                        "https://en.wikipedia.org/#cite_ref-241",
                        "https://www.universalis.fr/encyclopedie/presentation-du-cinematographe-lumiere/",
                        "https://web.archive.org/web/20171011041100/https://www.universalis.fr/encyclopedie/presentation-du-cinematographe-lumiere/",
                        "https://en.wikipedia.org/#cite_ref-242",
                        "http://www.english.rfi.fr/visiting-france/20101024-grand-rex-and-its-etoiles",
                        "https://web.archive.org/web/20151007024417/http://www.english.rfi.fr/visiting-france/20101024-grand-rex-and-its-etoiles",
                        "https://en.wikipedia.org/#cite_ref-243",
                        "http://www.paris.fr/services-et-infos-pratiques/culture-et-patrimoine/cinema/le-cinema-a-paris-2347",
                        "https://web.archive.org/web/20151016022258/http://www.paris.fr/services-et-infos-pratiques/culture-et-patrimoine/cinema/le-cinema-a-paris-2347",
                        "https://en.wikipedia.org/#cite_ref-244",
                        "https://timesofindia.indiatimes.com/entertainment/regional/tamil/news-interviews/2-Tamil-Films-in-1st-SAFF-in-Paris/articleshow/17781374.cms",
                        "https://en.wikipedia.org/wiki/The_Times_of_India",
                        "https://archive.today/20130702190758/http://articles.timesofindia.indiatimes.com/2012-12-27/news-interviews/36021870_1_tamil-films-screen-films-south-asian-films",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro19961136%E2%80%931138_245-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro19961137_246-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro19961137_246-1",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEDomin%C3%A92014_247-0",
                        "https://en.wikipedia.org/#CITEREFDomin%C3%A92014",
                        "https://en.wikipedia.org/#cite_ref-248",
                        "https://en.wikipedia.org/#cite_ref-249",
                        "https://restaurant.michelin.fr",
                        "https://web.archive.org/web/20141125110232/http://restaurant.michelin.fr/",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996715_250-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996773_251-0",
                        "https://en.wikipedia.org/#cite_ref-252",
                        "http://www.iexplore.com/destinations/paris/how-to-look-like-a-local-in-paris",
                        "https://web.archive.org/web/20160924211810/http://www.iexplore.com/destinations/paris/how-to-look-like-a-local-in-paris",
                        "https://en.wikipedia.org/#cite_ref-253",
                        "https://books.google.com/books?id=H2xeBAAAQBAJ&pg=PA129",
                        "https://en.wikipedia.org/wiki/Routledge",
                        "/wiki/Special:BookSources/978-1-136-47536-8",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=H2xeBAAAQBAJ&pg=PA129",
                        "https://en.wikipedia.org/#cite_ref-254",
                        "https://books.google.com/books?id=3XFMAQAAQBAJ&pg=PA115",
                        "/wiki/Special:BookSources/978-2-940411-58-0",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=3XFMAQAAQBAJ&pg=PA115",
                        "https://en.wikipedia.org/#cite_ref-255",
                        "http://www.insidermonkey.com/blog/top-8-luxury-brands-in-the-world-317665/7/",
                        "https://web.archive.org/web/20150119134339/http://www.insidermonkey.com/blog/top-8-luxury-brands-in-the-world-317665/7/",
                        "https://en.wikipedia.org/#cite_ref-256",
                        "http://www.metmuseum.org/toah/hd/phsr/hd_phsr.htm",
                        "https://web.archive.org/web/20150213005005/http://www.metmuseum.org/toah/hd/phsr/hd_phsr.htm",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEHazan2011362_257-0",
                        "https://en.wikipedia.org/#CITEREFHazan2011",
                        "https://en.wikipedia.org/#cite_ref-258",
                        "https://www.britannica.com/EBchecked/topic/206556/Le-Figaro",
                        "https://web.archive.org/web/20141113062553/http://www.britannica.com/EBchecked/topic/206556/Le-Figaro",
                        "https://en.wikipedia.org/#cite_ref-259",
                        "http://french.about.com/od/newspapers/French_and_Francophone_Newspapers_and_Magazines.htm",
                        "https://web.archive.org/web/20130513093151/http://french.about.com/od/newspapers/French_and_Francophone_Newspapers_and_Magazines.htm",
                        "https://en.wikipedia.org/#cite_ref-260",
                        "http://about-france.com/french-newspapers.htm",
                        "https://web.archive.org/web/20130628080310/http://about-france.com/french-newspapers.htm",
                        "https://en.wikipedia.org/#cite_ref-261",
                        "http://www.afp.com/en/",
                        "https://web.archive.org/web/20130708144823/http://www.afp.com/en",
                        "https://en.wikipedia.org/#cite_ref-262",
                        "http://www.france24.com/en/",
                        "https://wayback.archive-it.org/all/20141015174237/http://www.france24.com/en/",
                        "https://en.wikipedia.org/#cite_ref-263",
                        "http://www.diplomatie.gouv.fr/en/",
                        "https://web.archive.org/web/20130629133112/http://www.diplomatie.gouv.fr/en/",
                        "https://en.wikipedia.org/#cite_ref-264",
                        "http://french.about.com/od/tv/French_and_Francophone_Television_Stations_Watch_French_TV.htm",
                        "https://web.archive.org/web/20130520074251/http://french.about.com/od/tv/French_and_Francophone_Television_Stations_Watch_French_TV.htm",
                        "https://en.wikipedia.org/#cite_ref-265",
                        "https://wayback.archive-it.org/all/20171010073101/http://www.listenlive.eu/france.html",
                        "http://www.listenlive.eu/france.html",
                        "https://en.wikipedia.org/#cite_ref-266",
                        "https://web.archive.org/web/20130712042008/http://www.laposte.com/",
                        "http://www.laposte.com",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBlackmoreMcConnachie2004204_267-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBlackmoreMcConnachie2004204_267-1",
                        "https://en.wikipedia.org/#cite_ref-268",
                        "https://web.archive.org/web/20051016135133/http://www.bnf.fr/pages/zNavigat/frame/version_anglaise.htm?ancre=english.htm",
                        "http://www.bnf.fr/pages/zNavigat/frame/version_anglaise.htm?ancre=english.htm",
                        "https://en.wikipedia.org/#cite_ref-Woodward2006_269-0",
                        "https://en.wikipedia.org/#cite_ref-Woodward2006_269-1",
                        "https://www.nytimes.com/2006/03/05/travel/05journeys.html",
                        "https://web.archive.org/web/20141214124549/http://www.nytimes.com/2006/03/05/travel/05journeys.html",
                        "https://en.wikipedia.org/#cite_ref-270",
                        "http://www.english.paris-sorbonne.fr/libraries/",
                        "https://web.archive.org/web/20130703101116/http://www.english.paris-sorbonne.fr/libraries/",
                        "https://en.wikipedia.org/#cite_ref-nd.edu_271-0",
                        "http://www.library.nd.edu/help/study-abroad/France.shtml",
                        "https://web.archive.org/web/20131017053726/http://library.nd.edu/help/study-abroad/France.shtml",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010300%E2%80%93301_272-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010300%E2%80%93301_272-1",
                        "https://en.wikipedia.org/#cite_ref-273",
                        "https://www.totalrl.com/locations-of-league-paris/",
                        "https://en.wikipedia.org/#cite_ref-274",
                        "https://www.wigantoday.net/sport/rugby-league/wigan-warriors/wigan-warriors-and-catalans-dragons-progress-paris-plans-for-2026-5074136",
                        "https://en.wikipedia.org/#cite_ref-275",
                        "https://www.uefa.com/uefaeuro/history/news/025a-0ec0db63e375-e3d06be8c923-1000--euro-2016-all-you-need-to-know/",
                        "https://en.wikipedia.org/wiki/UEFA",
                        "https://en.wikipedia.org/#cite_ref-276",
                        "http://news.bbc.co.uk/sport1/hi/football/europe/4750383.stm",
                        "https://web.archive.org/web/20170912155904/http://news.bbc.co.uk/sport1/hi/football/europe/4750383.stm",
                        "https://en.wikipedia.org/#cite_ref-277",
                        "https://web.archive.org/web/20130517063542/http://www.letour.fr/le-tour/2013/us/overall-route.html",
                        "http://www.letour.fr/le-tour/2013/us/overall-route.html",
                        "https://en.wikipedia.org/#cite_ref-278",
                        "http://www.rolandgarros.com/en_FR/",
                        "https://web.archive.org/web/20130415075857/http://www.rolandgarros.com/en_FR/",
                        "https://en.wikipedia.org/#cite_ref-279",
                        "https://web.archive.org/web/20170713191550/http://equipement.paris.fr/stade-pierre-de-coubertin-3024",
                        "http://equipement.paris.fr/stade-pierre-de-coubertin-3024",
                        "https://en.wikipedia.org/#cite_ref-280",
                        "https://www.parisfootballteam.com/",
                        "https://web.archive.org/web/20220923203752/https://www.parisfootballteam.com/",
                        "https://en.wikipedia.org/#cite_ref-stif_281-0",
                        "https://web.archive.org/web/20060411124843/http://www.stif-idf.fr/",
                        "http://www.stif-idf.fr",
                        "https://en.wikipedia.org/#cite_ref-282",
                        "http://www.optile.com/notre-mission/",
                        "https://web.archive.org/web/20151208081030/http://www.optile.com/notre-mission/",
                        "https://en.wikipedia.org/#cite_ref-283",
                        "https://medium.com/la-fabrique-de-la-cit%C3%A9/on-foot-or-by-bike-while-paris-walks-amsterdam-pedals-17d64623b464",
                        "https://web.archive.org/web/20200807154741/https://medium.com/la-fabrique-de-la-cit%C3%A9/on-foot-or-by-bike-while-paris-walks-amsterdam-pedals-17d64623b464",
                        "https://en.wikipedia.org/#cite_ref-284",
                        "https://web.archive.org/web/20240515153251/https://www.thelocal.fr/20240412/bikes-overtake-cars-as-means-of-transport-in-paris",
                        "https://en.wikipedia.org/wiki/The_Local",
                        "https://www.thelocal.fr/20240412/bikes-overtake-cars-as-means-of-transport-in-paris",
                        "https://en.wikipedia.org/#cite_ref-285",
                        "https://web.archive.org/web/20240619165308/https://www.euronews.com/green/2024/04/12/cycling-is-now-more-popular-than-driving-in-the-centre-of-paris-study-finds",
                        "https://www.euronews.com/green/2024/04/12/cycling-is-now-more-popular-than-driving-in-the-centre-of-paris-study-finds",
                        "https://en.wikipedia.org/#cite_ref-286",
                        "https://www.eib.org/en/stories/future-european-cities",
                        "https://web.archive.org/web/20210607154103/https://www.eib.org/en/stories/future-european-cities",
                        "https://en.wikipedia.org/#cite_ref-287",
                        "https://www.forbes.com/sites/jeffmcmahon/2019/12/28/how-bike-lanes-are-transforming-paris/",
                        "https://web.archive.org/web/20210607154047/https://www.forbes.com/sites/jeffmcmahon/2019/12/28/how-bike-lanes-are-transforming-paris/",
                        "https://en.wikipedia.org/#cite_ref-288",
                        "https://www.wri.org/insights/paris-15-minute-city",
                        "https://en.wikipedia.org/#cite_ref-289",
                        "https://www.uitp.org/news/why-walking-and-public-transport-must-be-integrated/",
                        "https://en.wikipedia.org/#cite_ref-290",
                        "https://www.apur.org/en/our-works/mobility-changes-greater-paris-grand-paris-historical-trends-current-and-emerging-developments",
                        "https://en.wikipedia.org/#cite_ref-291",
                        "https://www.euronews.com/green/2024/06/16/the-time-of-the-whole-car-city-is-over-how-is-paris-encouraging-walking-and-cycling",
                        "https://en.wikipedia.org/#cite_ref-292",
                        "https://www.fastcompany.com/91119919/how-paris-became-a-15-minute-city",
                        "https://en.wikipedia.org/#cite_ref-293",
                        "https://web.archive.org/web/20160101095822/http://www.ratp.fr/en/ratp/c_5043/metro/",
                        "http://www.ratp.fr/en/ratp/c_5043/metro/",
                        "https://en.wikipedia.org/#cite_ref-294",
                        "https://www.panynj.gov/content/dam/airports/statistics/statistics-general-info/annual-atr/ATR_2023.pdf",
                        "https://en.wikipedia.org/#cite_ref-295",
                        "http://www.developpement-durable.gouv.fr/sites/default/files/Bulletin_Statistique_2014.pdf",
                        "https://web.archive.org/web/20170329083555/http://www.developpement-durable.gouv.fr/sites/default/files/Bulletin_Statistique_2014.pdf",
                        "https://en.wikipedia.org/#cite_ref-296",
                        "http://www.side.developpement-durable.gouv.fr/EXPLOITATION/DEFAULT/doc/IFD/IFD_REFDOC_TEMIS_0077449/trafic-aeroportuaire-1986-2012-flux-de-trafic-commercial-1986-2012",
                        "https://web.archive.org/web/20170405170444/http://www.side.developpement-durable.gouv.fr/EXPLOITATION/DEFAULT/doc/IFD/IFD_REFDOC_TEMIS_0077449/trafic-aeroportuaire-1986-2012-flux-de-trafic-commercial-1986-2012",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010278%E2%80%93283_297-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEJefferson2009114_298-0",
                        "https://en.wikipedia.org/#CITEREFJefferson2009",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEHart2004355_299-0",
                        "https://en.wikipedia.org/#CITEREFHart2004",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTERand2010165_300-0",
                        "https://en.wikipedia.org/#CITEREFRand2010",
                        "https://en.wikipedia.org/#cite_ref-prod_electrique_IDF_301-0",
                        "http://www.driee.ile-de-france.developpement-durable.gouv.fr/IMG/pdf/Seminaire_du_6_mars_2012_-_Presentations_Approvisionnement_electrique_du_Grand_Paris__cle2dcb2f-1.pdf",
                        "https://web.archive.org/web/20151007034916/http://www.driee.ile-de-france.developpement-durable.gouv.fr/IMG/pdf/Seminaire_du_6_mars_2012_-_Presentations_Approvisionnement_electrique_du_Grand_Paris__cle2dcb2f-1.pdf",
                        "https://en.wikipedia.org/#cite_ref-302",
                        "http://www.globalwoodmarketsinfo.com/paris-to-import-wood-pellets-from-the-us/",
                        "https://web.archive.org/web/20160312072201/http://www.globalwoodmarketsinfo.com/paris-to-import-wood-pellets-from-the-us/",
                        "https://en.wikipedia.org/#cite_ref-303",
                        "https://web.archive.org/web/20140410232647/http://www.paris.fr/pratique/musees-expos/musee-des-egouts/visite-publique-des-egouts-de-paris/rub_9691_stand_5943_port_23931",
                        "http://www.paris.fr/pratique/musees-expos/musee-des-egouts/visite-publique-des-egouts-de-paris/rub_9691_stand_5943_port_23931",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBurchell197193_304-0",
                        "https://en.wikipedia.org/#CITEREFBurchell1971",
                        "https://en.wikipedia.org/#cite_ref-sewers_305-0",
                        "https://web.archive.org/web/20061003225317/http://www.paris.fr/portail/Environnement/Portal.lut?page_id=1313&document_type_id=5&document_id=2158&portlet_id=3139",
                        "http://www.paris.fr/portail/Environnement/Portal.lut?page_id=1313&document_type_id=5&document_id=2158&portlet_id=3139",
                        "https://en.wikipedia.org/#cite_ref-306",
                        "http://www.linternaute.com/actualite/monde/classement-des-villes-selon-pollution-de-l-air/",
                        "https://web.archive.org/web/20120924012702/http://www.linternaute.com/actualite/monde/classement-des-villes-selon-pollution-de-l-air/",
                        "https://en.wikipedia.org/#cite_ref-307",
                        "https://www.euronews.com/green/2021/12/24/air-pollution-new-report-shows-which-european-cities-have-the-worst-air-quality",
                        "https://web.archive.org/web/20220401104131/https://www.euronews.com/green/2021/12/24/air-pollution-new-report-shows-which-european-cities-have-the-worst-air-quality",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEJarrass%C3%A920076_308-0",
                        "https://en.wikipedia.org/#CITEREFJarrass%C3%A92007",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010125_309-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010208_310-0",
                        "https://en.wikipedia.org/#cite_ref-311",
                        "http://www.mnhn.fr/museum/foffice/tous/tous/guidePratique/lieuxVisiter/LieuxAVisiter/FLieuAVisiter.xsp?AE_ID=214&INFO_ID=21&LIEU_ID=158&MAN_ID=273&SITE_ID=10&i=1&idx=6&nav=liste",
                        "https://web.archive.org/web/20130615203149/http://www.mnhn.fr/museum/foffice/tous/tous/guidePratique/lieuxVisiter/LieuxAVisiter/FLieuAVisiter.xsp?i=1&nav=liste&INFO_ID=21&SITE_ID=10&AE_ID=214&LIEU_ID=158&idx=6&MAN_ID=273",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEJarrass%C3%A92007122%E2%80%93161_312-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEJarrass%C3%A92007242%E2%80%93256_313-0",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEWhaley2012101_314-0",
                        "https://en.wikipedia.org/#CITEREFWhaley2012",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEBroadwell200792_315-0",
                        "https://en.wikipedia.org/#CITEREFBroadwell2007",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTEAyers2004271_316-0",
                        "https://en.wikipedia.org/#CITEREFAyers2004",
                        "https://en.wikipedia.org/#cite_ref-Parisian_Cemeteries_317-0",
                        "http://www.paris.fr/cimetieres",
                        "https://web.archive.org/web/20170405170430/http://www.paris.fr/cimetieres",
                        "https://en.wikipedia.org/#cite_ref-318",
                        "https://www.oui.sncf/article/les-tombes-de-celebrites-au-cimetiere-du-pere-lachaise-106832",
                        "https://web.archive.org/web/20200414034945/https://www.oui.sncf/article/les-tombes-de-celebrites-au-cimetiere-du-pere-lachaise-106832",
                        "https://en.wikipedia.org/#cite_ref-319",
                        "http://www.insee.fr/fr/themes/detail.asp?reg_id=99&ref_id=base-indic-cc-dipl-form",
                        "https://web.archive.org/web/20130910144530/http://www.insee.fr/fr/themes/detail.asp?reg_id=99&ref_id=base-indic-cc-dipl-form",
                        "https://en.wikipedia.org/#cite_ref-idf_education_320-0",
                        "https://web.archive.org/web/20070824203147/http://www.idf.pref.gouv.fr/donnees/enseignement.htm",
                        "http://www.idf.pref.gouv.fr/donnees/enseignement.htm",
                        "https://en.wikipedia.org/#cite_ref-FOOTNOTECombeau2013213%E2%80%93214_321-0",
                        "https://en.wikipedia.org/#CITEREFCombeau2013",
                        "https://en.wikipedia.org/#cite_ref-322",
                        "https://web.archive.org/web/20130607052638/http://www.ens.fr/spip.php?article171&lang=en",
                        "http://www.ens.fr/spip.php?article171&lang=en",
                        "https://en.wikipedia.org/#cite_ref-323",
                        "https://www.planetegrandesecoles.com/classement-qs-2024-politics",
                        "https://en.wikipedia.org/#cite_ref-324",
                        "https://en.wikipedia.org/wiki/Financial_Times",
                        "https://rankings.ft.com/rankings/2954/european-business-school-rankings-2023",
                        "https://en.wikipedia.org/#cite_ref-325",
                        "https://en.wikipedia.org/wiki/Academic_Ranking_of_World_Universities",
                        "https://www.shanghairanking.com/rankings/arwu/2023",
                        "https://en.wikipedia.org/#cite_ref-hospital_326-0",
                        "https://en.wikipedia.org/#cite_ref-hospital_326-1",
                        "https://web.archive.org/web/20140327062949/http://rapport-activite.aphp.fr/activite_ambulatoire.php",
                        "http://rapport-activite.aphp.fr/activite_ambulatoire.php",
                        "https://en.wikipedia.org/#cite_ref-327",
                        "http://www.sciencemuseum.org.uk/broughttolife/people/hoteldieu.aspx",
                        "https://web.archive.org/web/20130508100917/http://www.sciencemuseum.org.uk/broughttolife/people/hoteldieu.aspx",
                        "https://en.wikipedia.org/#cite_ref-328",
                        "https://www.oecd.org/en/careers/submit.htm",
                        "https://en.wikipedia.org/#cite_ref-IR_329-0",
                        "https://en.wikipedia.org/#cite_ref-IR_329-1",
                        "https://api-site.paris.fr/images/74497",
                        "https://web.archive.org/web/20210308095626/https://api-site.paris.fr/images/74497",
                        "https://en.wikipedia.org/#cite_ref-330",
                        "http://www.comune.roma.it/PCR/resources/cms/documents/Gemellaggio_Roma_Parigi.pdf",
                        "https://web.archive.org/web/20181113084709/https://www.comune.roma.it/PCR/resources/cms/documents/Gemellaggio_Roma_Parigi.pdf",
                        "http://www.comune.roma.it/pcr/it/relaz_int_sadi.page",
                        "https://web.archive.org/web/20160709150804/http://www.comune.roma.it/pcr/it/relaz_int_sadi.page",
                        "https://en.wikipedia.org/#cite_ref-331",
                        "https://en.wikipedia.org/#cite_ref-332",
                        "https://archive.today/20120905235843/http://www.paris.fr/portail/english/Portal.lut?page_id=8139&document_type_id=5&document_id=29903&portlet_id=18784",
                        "http://www.paris.fr/portail/english/Portal.lut?page_id=8139&document_type_id=5&document_id=29903&portlet_id=18784",
                        "https://en.wikipedia.org/#cite_ref-Paris1_333-0",
                        "https://web.archive.org/web/20071011162140/http://paris.fr/portail/accueil/Portal.lut?page_id=6587&document_type_id=5&document_id=16468&portlet_id=14974",
                        "http://www.paris.fr/portail/accueil/Portal.lut?page_id=6587&document_type_id=5&document_id=16468&portlet_id=14974",
                        "https://en.wikipedia.org/#cite_ref-Paris2_334-0",
                        "https://archive.today/20070806151309/http://www.paris.fr/en/city_government/international/special_partners.asp",
                        "http://www.paris.fr/en/city_government/international/special_partners.asp",
                        "https://books.google.com/books?id=5w0jAQAAIAAJ",
                        "/wiki/Special:BookSources/978-2-03-585012-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=5w0jAQAAIAAJ",
                        "https://books.google.com/books?id=QSIDAAAAMAAJ&pg=RA1-PA132",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=QSIDAAAAMAAJ&pg=RA1-PA132",
                        "https://books.google.com/books?id=0eJxj9Xos_UC",
                        "/wiki/Special:BookSources/978-3-930698-96-7",
                        "https://web.archive.org/web/20210123205256/https://books.google.com/books?id=0eJxj9Xos_UC",
                        "https://en.wikipedia.org/wiki/Fran%C3%A7ois_Bayrou",
                        "https://books.google.com/books?id=bZVLPwAACAAJ",
                        "/wiki/Special:BookSources/978-2-7028-3282-0",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=bZVLPwAACAAJ",
                        "https://books.google.com/books?id=zoWtMt2hJIYC&pg=PT242",
                        "/wiki/Special:BookSources/978-0-14-191288-2",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=zoWtMt2hJIYC&pg=PT242",
                        "https://books.google.com/books?id=iRrglOH4kKkC&pg=PA247",
                        "/wiki/Special:BookSources/978-1-4008-3972-8",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=iRrglOH4kKkC&pg=PA247",
                        "https://books.google.com/books?id=3jU3Td7GI4oC&pg=PA85",
                        "/wiki/Special:BookSources/978-1-4094-8725-8",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=3jU3Td7GI4oC&pg=PA85",
                        "https://books.google.com/books?id=7vFnAAAAMAAJ",
                        "/wiki/Special:BookSources/978-0-8223-0214-8",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=7vFnAAAAMAAJ",
                        "/wiki/Special:BookSources/978-2-03-505369-5",
                        "https://books.google.com/books?id=-nEcC1zeg-MC&pg=PA394",
                        "/wiki/Special:BookSources/978-1-84353-078-7",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=-nEcC1zeg-MC&pg=PA394",
                        "https://books.google.com/books?id=8ixR236aqQoC&pg=PA153",
                        "/wiki/Special:BookSources/978-1-84353-317-7",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=8ixR236aqQoC&pg=PA153",
                        "/wiki/Special:BookSources/978-2-7071-3904-7",
                        "https://books.google.com/books?id=TgkaWS7yDl8C&pg=PA233",
                        "/wiki/Special:BookSources/978-0-8018-6810-8",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=TgkaWS7yDl8C&pg=PA233",
                        "https://books.google.com/books?id=PB5d0pRRn6IC&pg=PT43",
                        "/wiki/Special:BookSources/978-1-118-33143-9",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=PB5d0pRRn6IC&pg=PT43",
                        "https://books.google.com/books?id=i8KuR2TxJY4C&pg=PA288",
                        "/wiki/Special:BookSources/978-1-60376-267-0",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=i8KuR2TxJY4C&pg=PA288",
                        "https://books.google.com/books?id=uV7Jp9Iz1hsC&pg=PA212",
                        "/wiki/Special:BookSources/978-1-4020-6778-5",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=uV7Jp9Iz1hsC&pg=PA212",
                        "https://books.google.com/books?id=N9cPFcaOKBwC&pg=PA92",
                        "/wiki/Special:BookSources/978-1-4257-9022-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=N9cPFcaOKBwC&pg=PA92",
                        "https://archive.org/details/imperialmasquera00burc",
                        "https://books.google.com/books?id=f899xH_quaMC",
                        "/wiki/Special:BookSources/978-1-85109-440-0",
                        "https://web.archive.org/web/20200819063413/https://books.google.com/books?id=f899xH_quaMC",
                        "https://books.google.com/books?id=1nYnAQAAMAAJ",
                        "/wiki/Special:BookSources/978-0-86350-038-1",
                        "https://web.archive.org/web/20200522201443/https://books.google.com/books?id=1nYnAQAAMAAJ",
                        "https://books.google.com/books?id=HmemAAAAIAAJ",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=HmemAAAAIAAJ",
                        "https://books.google.com/books?id=AppsDAKOW3QC&pg=PA259",
                        "/wiki/Special:BookSources/978-1-59884-254-8",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=AppsDAKOW3QC&pg=PA259",
                        "https://books.google.com/books?id=rUbZLcYsA_QC&pg=PA75",
                        "/wiki/Special:BookSources/978-0-520-05617-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=rUbZLcYsA_QC&pg=PA75",
                        "https://books.google.com/books?id=NtitRt1uUXMC&pg=PA101",
                        "/wiki/Special:BookSources/978-0-521-65098-4",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=NtitRt1uUXMC&pg=PA101",
                        "https://archive.org/details/histoiredeparis0000comb",
                        "/wiki/Special:BookSources/978-2-13-060852-3",
                        "https://books.google.com/books?id=uVmfGAAACAAJ",
                        "/wiki/Special:BookSources/978-2-13-053865-3",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=uVmfGAAACAAJ",
                        "https://books.google.com/books?id=_bwH0j_EOtIC&pg=PA205",
                        "/wiki/Special:BookSources/978-1-4179-4646-4",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=_bwH0j_EOtIC&pg=PA205",
                        "https://books.google.com/books?id=3lkEgdtOvGEC&q=Iron+Age+Communities+in+Britain&pg=PA201",
                        "/wiki/Special:BookSources/978-0-415-34779-2",
                        "https://web.archive.org/web/20210417203913/https://books.google.com/books?id=3lkEgdtOvGEC&q=Iron+Age+Communities+in+Britain&pg=PA201",
                        "https://books.google.com/books?id=PbNpLIZzFKoC&pg=PT95",
                        "/wiki/Special:BookSources/978-1-4396-4101-9",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=PbNpLIZzFKoC&pg=PT95",
                        "https://books.google.com/books?id=yAw3PBpdEw4C&pg=PA157",
                        "/wiki/Special:BookSources/978-0-918728-99-9",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=yAw3PBpdEw4C&pg=PA157",
                        "/wiki/Special:BookSources/978-2-87772-369-5",
                        "/wiki/Special:BookSources/978-2-907970-91-4",
                        "/wiki/Special:BookSources/978-3-8331-1129-7",
                        "https://books.google.com/books?id=bcD41kgBYTMC&pg=PA16",
                        "/wiki/Special:BookSources/978-1-60976-878-2",
                        "https://web.archive.org/web/20161229020537/https://books.google.com/books?id=bcD41kgBYTMC&pg=PA16",
                        "https://archive.org/details/lalanguegauloise00dottuoft",
                        "/wiki/Special:BookSources/978-2-05-100208-0",
                        "/wiki/Template:Cite_book",
                        "/wiki/Help:CS1_errors#invalid_isbn_date",
                        "https://books.google.com/books?id=3t8SLVloJjsC&pg=PA19",
                        "/wiki/Special:BookSources/978-0-19-803743-9",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=3t8SLVloJjsC&pg=PA19",
                        "https://books.google.com/books?id=smcDVbulh1gC&pg=PA32",
                        "/wiki/Special:BookSources/978-0-19-804262-4",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=smcDVbulh1gC&pg=PA32",
                        "https://books.google.com/books?id=5gJoAAAAMAAJ",
                        "/wiki/Special:BookSources/978-2-910305-02-4",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=5gJoAAAAMAAJ",
                        "https://books.google.com/books?id=UHQEP3oJDsoC&pg=PA142",
                        "/wiki/Special:BookSources/978-0-8032-1653-2",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=UHQEP3oJDsoC&pg=PA142",
                        "https://books.google.com/books?id=BL1CAAAAYAAJ&pg=PA210",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=BL1CAAAAYAAJ&pg=PA210",
                        "https://books.google.com/books?id=LVpIIHrUOZEC&pg=PA68",
                        "/wiki/Special:BookSources/978-0-203-45974-4",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=LVpIIHrUOZEC&pg=PA68",
                        "/wiki/Special:BookSources/978-0-9557182-3-6",
                        "/wiki/Special:BookSources/978-1-74059-850-7",
                        "/wiki/Special:BookSources/978-0-7859-9300-1",
                        "https://books.google.com/books?id=I0KTnvvPwJ0C",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=I0KTnvvPwJ0C",
                        "/wiki/Special:BookSources/978-0-8021-3997-9",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=3hYBzRzZ0kcC",
                        "https://books.google.com/books?id=fUOY8941RjMC&pg=PA117",
                        "/wiki/Special:BookSources/978-0-7391-6749-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=fUOY8941RjMC&pg=PA117",
                        "https://books.google.com/books?id=mTmRa1s1Z48C&pg=PA103",
                        "/wiki/Special:BookSources/978-1-118-26621-2",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=mTmRa1s1Z48C&pg=PA103",
                        "https://archive.org/details/makingofrevoluti00davi",
                        "/wiki/Special:BookSources/978-0-520-24327-9",
                        "https://books.google.com/books?id=LNMmCgAAQBAJ",
                        "/wiki/Special:BookSources/978-1-107-07305-0",
                        "https://web.archive.org/web/20200522201207/https://books.google.com/books?id=LNMmCgAAQBAJ",
                        "https://books.google.com/books?id=CPZuf6gxIBAC&pg=PP8",
                        "/wiki/Special:BookSources/978-1-4042-0536-9",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=CPZuf6gxIBAC&pg=PP8",
                        "https://books.google.com/books?id=G2xKjURYgHgC",
                        "/wiki/Special:BookSources/978-0-415-20082-0",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=G2xKjURYgHgC",
                        "/wiki/Special:BookSources/978-0-415-28061-7",
                        "https://books.google.com/books?id=65r1hSAq-dQC&pg=PA144",
                        "/wiki/Special:BookSources/978-0-8018-6070-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=65r1hSAq-dQC&pg=PA144",
                        "https://books.google.com/books?id=vhelHHnagCsC&pg=PA83",
                        "/wiki/Special:BookSources/978-1-136-54768-3",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=vhelHHnagCsC&pg=PA83",
                        "https://books.google.com/books?id=JCPXfSUlUV8C&pg=PA25",
                        "/wiki/Special:BookSources/978-0-521-81126-2",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=JCPXfSUlUV8C&pg=PA25",
                        "https://books.google.com/books?id=4pNBaIocHNUC&pg=PA355",
                        "/wiki/Special:BookSources/978-1-85703-985-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=4pNBaIocHNUC&pg=PA355",
                        "https://books.google.com/books?id=re2wIpEB310C",
                        "/wiki/Special:BookSources/978-0-7391-1930-3",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=re2wIpEB310C",
                        "https://books.google.com/books?id=og_RDdEdHz4C&pg=PA362",
                        "/wiki/Special:BookSources/978-1-84467-800-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=og_RDdEdHz4C&pg=PA362",
                        "https://archive.org/details/bub_gb_L40DAAAAQAAJ",
                        "https://archive.org/details/bub_gb_L40DAAAAQAAJ/page/n77",
                        "https://books.google.com/books?id=X-E7P9dVSbgC&pg=PA432",
                        "/wiki/Special:BookSources/978-0-674-03864-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=X-E7P9dVSbgC&pg=PA432",
                        "https://archive.org/details/sevenagesofparis00alis",
                        "/wiki/Special:BookSources/978-0-679-45481-6",
                        "https://books.google.com/books?id=VAn8tHE3zB4C&pg=PA6",
                        "/wiki/Special:BookSources/978-2-7131-0202-8",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=VAn8tHE3zB4C&pg=PA6",
                        "https://books.google.com/books?id=0khM9JqazzUC",
                        "/wiki/Special:BookSources/978-1-4081-0381-4",
                        "https://web.archive.org/web/20210417210028/https://books.google.com/books?id=0khM9JqazzUC",
                        "https://books.google.com/books?id=zwlQyQ_WAtYC",
                        "/wiki/Special:BookSources/978-0-14-028292-4",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=zwlQyQ_WAtYC",
                        "https://archive.org/details/cambridgeillustr00jone",
                        "https://archive.org/details/cambridgeillustr00jone/page/48",
                        "/wiki/Special:BookSources/978-0-521-66992-4",
                        "https://books.google.com/books?id=5HxGAQAAIAAJ",
                        "/wiki/Special:BookSources/978-2-84096-476-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=5HxGAQAAIAAJ",
                        "https://archive.org/details/miniroughguideto00rach",
                        "/wiki/Special:BookSources/978-1-85828-679-2",
                        "https://books.google.com/books?id=_AADznCsgAsC&pg=PT177",
                        "/wiki/Special:BookSources/978-1-4129-6900-0",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=_AADznCsgAsC&pg=PT177",
                        "https://archive.org/details/governmentpoliti0000knap",
                        "/wiki/Special:BookSources/978-0-415-35732-6",
                        "https://en.wikipedia.org/wiki/Dover_Publications",
                        "/wiki/Special:BookSources/978-0-486-29078-2",
                        "/wiki/Special:BookSources/978-2-87772-089-2",
                        "https://archive.org/details/paris0000unse_b2o4",
                        "/wiki/Special:BookSources/978-981-282-079-2",
                        "https://books.google.com/books?id=Yy2-adLaGQkC&pg=PA55",
                        "/wiki/Special:BookSources/978-2-84287-096-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=Yy2-adLaGQkC&pg=PA55",
                        "https://books.google.com/books?id=gFDIS847zl8C&pg=PA11",
                        "/wiki/Special:BookSources/978-0-415-41762-4",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=gFDIS847zl8C&pg=PA11",
                        "https://books.google.com/books?id=0JJdEhSWS90C&pg=PA138",
                        "/wiki/Special:BookSources/978-81-317-3145-1",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=0JJdEhSWS90C&pg=PA138",
                        "https://books.google.com/books?id=h5XyAAAAMAAJ",
                        "https://web.archive.org/web/20210206020104/https://books.google.com/books?id=h5XyAAAAMAAJ",
                        "/wiki/Special:BookSources/978-2-7373-6217-0",
                        "https://books.google.com/books?id=P945gwAL-oAC&pg=PT105",
                        "/wiki/Special:BookSources/978-2-06-718220-2",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=P945gwAL-oAC&pg=PT105",
                        "https://books.google.com/books?id=OCJ2QgAACAAJ",
                        "/wiki/Special:BookSources/978-0-86565-226-2",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=OCJ2QgAACAAJ",
                        "https://books.google.com/books?id=1v45lM76wjsC&pg=PA64",
                        "/wiki/Special:BookSources/978-1-134-25561-0",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=1v45lM76wjsC&pg=PA64",
                        "https://books.google.com/books?id=-nUVnF1rPXoC&pg=PA8",
                        "/wiki/Special:BookSources/978-0-470-03712-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=-nUVnF1rPXoC&pg=PA8",
                        "https://en.wikipedia.org/wiki/Ernest_N%C3%A8gre",
                        "/wiki/Special:BookSources/978-2-600-02883-7",
                        "https://books.google.com/books?id=db4TSjy-9X4C",
                        "/wiki/Special:BookSources/978-1-74220-503-8",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=db4TSjy-9X4C",
                        "https://books.google.com/books?id=LVpYlyaqfoQC&pg=PA185",
                        "/wiki/Special:BookSources/978-0-203-42794-1",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=LVpYlyaqfoQC&pg=PA185",
                        "https://books.google.com/books?id=j8n5iKE9gdcC&pg=PA135",
                        "/wiki/Special:BookSources/978-0-8093-8588-1",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=j8n5iKE9gdcC&pg=PA135",
                        "/wiki/Special:BookSources/978-1-84595-065-1",
                        "https://books.google.com/books?id=YU_o6E572uIC&pg=PA453",
                        "/wiki/Special:BookSources/978-0-19-283557-4",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=YU_o6E572uIC&pg=PA453",
                        "https://books.google.com/books?id=umLmjHFZoT4C",
                        "/wiki/Special:BookSources/978-0-8018-7930-2",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=umLmjHFZoT4C",
                        "https://books.google.com/books?id=wg4NAQAAIAAJ&pg=PA19",
                        "/wiki/Special:BookSources/978-0-7190-4165-5",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=wg4NAQAAIAAJ&pg=PA19",
                        "https://books.google.com/books?id=ZFDKUW0z4bsC&pg=PA476",
                        "/wiki/Special:BookSources/978-1-111-83171-4",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=ZFDKUW0z4bsC&pg=PA476",
                        "https://archive.org/details/frenchconnection0000phil",
                        "/wiki/Special:BookSources/978-1-58685-529-1",
                        "https://books.google.com/books?id=DCYf7F5erwYC&pg=PA165",
                        "/wiki/Special:BookSources/978-0-9812952-0-6",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=DCYf7F5erwYC&pg=PA165",
                        "https://books.google.com/books?id=QTaRv7lr7uoC&pg=PT646",
                        "/wiki/Special:BookSources/978-0-330-52254-0",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=QTaRv7lr7uoC&pg=PT646",
                        "https://books.google.com/books?id=PNDki71jxYQC&pg=PA37",
                        "/wiki/Special:BookSources/978-1-4405-0740-3",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=PNDki71jxYQC&pg=PA37",
                        "https://books.google.com/books?id=ymIXLhegGnwC&pg=PA60",
                        "/wiki/Special:BookSources/978-0-415-13187-2",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=ymIXLhegGnwC&pg=PA60",
                        "/wiki/Special:BookSources/978-2-13-062078-5",
                        "https://books.google.com/books?id=uDxlAAAAMAAJ",
                        "/wiki/Special:BookSources/978-1-904341-28-4",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=uDxlAAAAMAAJ",
                        "https://books.google.com/books?id=9AAMEqfFtngC&pg=PA25",
                        "/wiki/Special:BookSources/978-0-8166-4520-6",
                        "https://web.archive.org/web/20210305041927/https://books.google.com/books?id=9AAMEqfFtngC&pg=PA25",
                        "https://books.google.com/books?id=ZM4XNQEACAAJ",
                        "/wiki/Special:BookSources/978-2-7558-0330-3",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=ZM4XNQEACAAJ",
                        "https://books.google.com/books?id=Li5xQgAACAAJ",
                        "/wiki/Special:BookSources/978-2-262-03015-5",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=Li5xQgAACAAJ",
                        "https://books.google.com/books?id=tanPYs6ArLIC&pg=PA60",
                        "/wiki/Special:BookSources/978-0-521-23014-8",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=tanPYs6ArLIC&pg=PA60",
                        "https://books.google.com/books?id=FYPU8V_oWz8C&pg=PA17",
                        "/wiki/Special:BookSources/978-1-84537-661-1",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=FYPU8V_oWz8C&pg=PA17",
                        "https://books.google.com/books?id=MtOmZc-Vd_gC&pg=PA4",
                        "/wiki/Special:BookSources/978-0-11-702360-4",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=MtOmZc-Vd_gC&pg=PA4",
                        "https://books.google.com/books?id=Vwhieeo_nfMC&pg=PR",
                        "/wiki/Special:BookSources/978-1-85973-973-0",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=Vwhieeo_nfMC&pg=PR",
                        "https://books.google.com/books?id=rCnYe0cPTq4C&pg=PA37",
                        "/wiki/Special:BookSources/978-0-7607-3890-0",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=rCnYe0cPTq4C&pg=PA37",
                        "https://books.google.com/books?id=aL4lsWdd-rAC",
                        "/wiki/Special:BookSources/978-1-85285-057-9",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=aL4lsWdd-rAC",
                        "https://books.google.com/books?id=cXuCjDbxC1YC&pg=PA281",
                        "/wiki/Special:BookSources/978-2-7605-2209-1",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=cXuCjDbxC1YC&pg=PA281",
                        "https://books.google.com/books?id=CTX7h9H8DJEC&pg=PA237",
                        "/wiki/Special:BookSources/978-2-86272-260-3",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=CTX7h9H8DJEC&pg=PA237",
                        "https://en.wikisource.org/wiki/1911_Encyclop%C3%A6dia_Britannica/Paris",
                        "https://en.wikipedia.org/wiki/Hugh_Chisholm",
                        "https://en.wikipedia.org/wiki/Encyclop%C3%A6dia_Britannica_Eleventh_Edition",
                        "https://books.google.com/books?id=Rlua0N-AQNgC&pg=PA262",
                        "https://web.archive.org/web/20170411065259/https://books.google.com/books?id=Rlua0N-AQNgC&pg=PA262",
                        "https://books.google.com/books?id=uIFwg5LOnnoC&pg=PR15",
                        "/wiki/Special:BookSources/978-0-7844-1010-3",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=uIFwg5LOnnoC&pg=PR15",
                        "https://books.google.com/books?id=JIksZtWqrd0C&pg=PT101",
                        "/wiki/Special:BookSources/978-1-136-81060-2",
                        "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=JIksZtWqrd0C&pg=PT101",
                        "https://archive.org/details/coronationrites00wooluoft",
                        "https://archive.org/details/coronationrites00wooluoft/page/106",
                        "https://books.google.com/books?id=Ce9VUj5pRMUC&q=delouvrier+%22villes+nouvelles%22",
                        "/wiki/Special:BookSources/978-90-420-2500-4",
                        "https://web.archive.org/web/20210417203904/https://books.google.com/books?id=Ce9VUj5pRMUC&q=delouvrier+%22villes+nouvelles%22",
                        "https://books.google.com/books?id=H8UiAQAAIAAJ",
                        "/wiki/Special:BookSources/978-2-13-053723-6",
                        "https://web.archive.org/web/20150928174957/https://books.google.com/books?id=H8UiAQAAIAAJ",
                        "https://en.wikipedia.org/wiki/Bibliography_of_Paris",
                        "https://en.wikipedia.org/wiki/Vincent_Cronin",
                        "https://archive.org/details/parisoneve19001900cron",
                        "https://en.wikipedia.org/wiki/HarperCollins",
                        "/wiki/Special:BookSources/978-0-312-04876-1",
                        "/wiki/Special:BookSources/978-0-00-215191-7",
                        "https://en.wikipedia.org/wiki/Fayard",
                        "/wiki/Special:BookSources/978-2-213-59874-1",
                        "/wiki/Special:BookSources/978-2-86930-648-6",
                        "https://archive.org/details/parisbiographyof00jone",
                        "https://en.wikipedia.org/wiki/Penguin_Books",
                        "/wiki/Special:BookSources/978-0-670-03393-5",
                        "/wiki/Special:BookSources/978-2-02-012864-3",
                        "/wiki/Special:BookSources/978-0-226-87023-6",
                        "/wiki/File:Wikisource-logo.svg",
                        "https://en.wikipedia.org/wiki/Wikisource",
                        "https://www.paris.fr/",
                        "https://www.wikidata.org/wiki/Q90#P856",
                        "/wiki/Template:Paris",
                        "/wiki/Template_talk:Paris",
                        "/wiki/Special:EditPage/Template:Paris",
                        "https://en.wikipedia.org/wiki/2nd_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/3rd_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/4th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/6th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/7th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/8th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/9th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/10th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/11th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/12th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/13th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/14th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/15th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/17th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/18th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/19th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/20th_arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/Paris_A%C3%A9roport",
                        "https://en.wikipedia.org/wiki/Roman_Catholic_Archdiocese_of_Paris",
                        "https://en.wikipedia.org/wiki/Paris_architecture_in_the_era_of_absolutism",
                        "https://en.wikipedia.org/wiki/List_of_bridges_in_Paris",
                        "https://en.wikipedia.org/wiki/Culture_of_Paris",
                        "https://en.wikipedia.org/wiki/V%C3%A9lib%27_M%C3%A9tropole",
                        "https://en.wikipedia.org/wiki/Museums_in_Paris",
                        "https://en.wikipedia.org/wiki/Squares_in_Paris",
                        "https://en.wikipedia.org/wiki/Topography_of_Paris",
                        "https://en.wikipedia.org/wiki/Paris_metropolitan_area",
                        "/wiki/Template:Cities_in_France",
                        "/wiki/Template_talk:Cities_in_France",
                        "/wiki/Special:EditPage/Template:Cities_in_France",
                        "https://en.wikipedia.org/wiki/Lyon",
                        "https://en.wikipedia.org/wiki/Toulouse",
                        "https://en.wikipedia.org/wiki/Nice",
                        "https://en.wikipedia.org/wiki/Montpellier",
                        "https://en.wikipedia.org/wiki/Strasbourg",
                        "https://en.wikipedia.org/wiki/Bordeaux",
                        "https://en.wikipedia.org/wiki/Lille",
                        "https://en.wikipedia.org/wiki/Rennes",
                        "https://en.wikipedia.org/wiki/Toulon",
                        "https://en.wikipedia.org/wiki/Reims",
                        "https://en.wikipedia.org/wiki/Saint-%C3%89tienne",
                        "https://en.wikipedia.org/wiki/Le_Havre",
                        "https://en.wikipedia.org/wiki/Villeurbanne",
                        "https://en.wikipedia.org/wiki/Dijon",
                        "https://en.wikipedia.org/wiki/Angers",
                        "https://en.wikipedia.org/wiki/Grenoble",
                        "https://en.wikipedia.org/wiki/Saint-Denis,_R%C3%A9union",
                        "https://en.wikipedia.org/wiki/N%C3%AEmes",
                        "https://en.wikipedia.org/wiki/Aix-en-Provence",
                        "https://en.wikipedia.org/wiki/Clermont-Ferrand",
                        "https://en.wikipedia.org/wiki/Le_Mans",
                        "https://en.wikipedia.org/wiki/Brest,_France",
                        "https://en.wikipedia.org/wiki/Tours",
                        "https://en.wikipedia.org/wiki/Amiens",
                        "https://en.wikipedia.org/wiki/Annecy",
                        "https://en.wikipedia.org/wiki/Limoges",
                        "https://en.wikipedia.org/wiki/Metz",
                        "https://en.wikipedia.org/wiki/Perpignan",
                        "https://en.wikipedia.org/wiki/Besan%C3%A7on",
                        "https://en.wikipedia.org/wiki/Orl%C3%A9ans",
                        "https://en.wikipedia.org/wiki/Montreuil,_Seine-Saint-Denis",
                        "https://en.wikipedia.org/wiki/Caen",
                        "https://en.wikipedia.org/wiki/Saint-Paul,_R%C3%A9union",
                        "https://en.wikipedia.org/wiki/Mulhouse",
                        "https://en.wikipedia.org/wiki/Nancy,_France",
                        "/wiki/Template:Visitor_attractions_in_Paris",
                        "/wiki/Template_talk:Visitor_attractions_in_Paris",
                        "/wiki/Special:EditPage/Template:Visitor_attractions_in_Paris",
                        "https://en.wikipedia.org/wiki/Arc_de_Triomphe_du_Carrousel",
                        "https://en.wikipedia.org/wiki/Ar%C3%A8nes_de_Lut%C3%A8ce",
                        "https://en.wikipedia.org/wiki/Palais_Brongniart",
                        "https://en.wikipedia.org/wiki/Conciergerie",
                        "https://en.wikipedia.org/wiki/Institut_de_France",
                        "https://en.wikipedia.org/wiki/Jeanne_d%27Arc_(Fr%C3%A9miet)",
                        "https://en.wikipedia.org/wiki/Napoleon%27s_tomb",
                        "https://en.wikipedia.org/wiki/Luxor_Obelisks",
                        "https://en.wikipedia.org/wiki/Place_Diana",
                        "https://en.wikipedia.org/wiki/Flame_of_Liberty",
                        "https://en.wikipedia.org/wiki/Porte_Saint-Denis",
                        "https://en.wikipedia.org/wiki/Porte_Saint-Martin",
                        "https://en.wikipedia.org/wiki/Army_Museum_(Paris)",
                        "https://en.wikipedia.org/wiki/Cit%C3%A9_des_Sciences_et_de_l%27Industrie",
                        "https://en.wikipedia.org/wiki/Galerie_nationale_du_Jeu_de_Paume",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_des_Arts_d%C3%A9coratifs,_Paris",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_d%27Art_et_d%27Histoire_du_Juda%C3%AFsme",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_d%27Art_Moderne_de_Paris",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_Bourdelle",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_la_Cin%C3%A9math%C3%A8que",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_Cognacq-Jay",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_Gr%C3%A9vin",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_Jacquemart-Andr%C3%A9",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_la_Vie_romantique",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_Montmartre",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_national_Gustave_Moreau",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_national_des_Monuments_Fran%C3%A7ais",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_Cluny",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_Pasteur",
                        "https://en.wikipedia.org/wiki/Palais_de_la_L%C3%A9gion_d%27Honneur",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_la_L%C3%A9gion_d%27honneur",
                        "https://en.wikipedia.org/wiki/List_of_religious_buildings_in_Paris",
                        "https://en.wikipedia.org/wiki/Alexander_Nevsky_Cathedral,_Paris",
                        "https://en.wikipedia.org/wiki/American_Cathedral_in_Paris",
                        "https://en.wikipedia.org/wiki/American_Church_in_Paris",
                        "https://en.wikipedia.org/wiki/Armenian_Cathedral_of_St._John_the_Baptist",
                        "https://en.wikipedia.org/wiki/Chapelle_expiatoire",
                        "https://en.wikipedia.org/wiki/Grand_Mosque_of_Paris",
                        "https://en.wikipedia.org/wiki/Grand_Synagogue_of_Paris",
                        "https://en.wikipedia.org/wiki/Synagogue_de_Nazareth",
                        "https://en.wikipedia.org/wiki/La_Madeleine,_Paris",
                        "https://en.wikipedia.org/wiki/Notre-Dame-de-Bonne-Nouvelle",
                        "https://en.wikipedia.org/wiki/Notre-Dame-de-Lorette,_Paris",
                        "https://en.wikipedia.org/wiki/Notre-Dame-des-Victoires,_Paris",
                        "https://en.wikipedia.org/wiki/Saint-Ambroise,_Paris",
                        "https://en.wikipedia.org/wiki/Saint-Augustin,_Paris",
                        "https://en.wikipedia.org/wiki/Saint-%C3%89tienne-du-Mont",
                        "https://en.wikipedia.org/wiki/Saint-Eustache,_Paris",
                        "https://en.wikipedia.org/wiki/Saint-Fran%C3%A7ois-Xavier,_Paris",
                        "https://en.wikipedia.org/wiki/Saint-Germain-des-Pr%C3%A9s_(abbey)",
                        "https://en.wikipedia.org/wiki/Saint-Germain_l%27Auxerrois",
                        "https://en.wikipedia.org/wiki/Saint-Gervais-Saint-Protais",
                        "https://en.wikipedia.org/wiki/Saint-Jean_de_Montmartre",
                        "https://en.wikipedia.org/wiki/Saint-Paul-Saint-Louis",
                        "https://en.wikipedia.org/wiki/Saint-Pierre_de_Montmartre",
                        "https://en.wikipedia.org/wiki/Saint-Roch,_Paris",
                        "https://en.wikipedia.org/wiki/Saint-Sulpice,_Paris",
                        "https://en.wikipedia.org/wiki/Saint-Vincent-de-Paul,_Paris",
                        "https://en.wikipedia.org/wiki/Sainte-Clotilde,_Paris",
                        "https://en.wikipedia.org/wiki/Sainte-Trinit%C3%A9,_Paris",
                        "https://en.wikipedia.org/wiki/Temple_du_Marais",
                        "https://en.wikipedia.org/wiki/Val-de-Gr%C3%A2ce_(church)",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Beauvais",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Charost",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Crillon",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_d%27Estr%C3%A9es",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_de_la_Pa%C3%AFva",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Pontalba",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Soubise",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Sully",
                        "https://en.wikipedia.org/wiki/H%C3%B4tel_Lambert",
                        "https://en.wikipedia.org/wiki/Avenue_de_l%27Op%C3%A9ra",
                        "https://en.wikipedia.org/wiki/Avenue_Foch",
                        "https://en.wikipedia.org/wiki/Avenue_George_V",
                        "https://en.wikipedia.org/wiki/Boulevard_de_la_Madeleine",
                        "https://en.wikipedia.org/wiki/Boulevard_de_S%C3%A9bastopol",
                        "https://en.wikipedia.org/wiki/Champ_de_Mars",
                        "https://en.wikipedia.org/wiki/Covered_passages_of_Paris",
                        "https://en.wikipedia.org/wiki/Galerie_V%C3%A9ro-Dodat",
                        "https://en.wikipedia.org/wiki/Passage_Choiseul",
                        "https://en.wikipedia.org/wiki/Passage_des_Panoramas",
                        "https://en.wikipedia.org/wiki/Galerie_Vivienne",
                        "https://en.wikipedia.org/wiki/Passage_du_Havre",
                        "https://en.wikipedia.org/wiki/Passage_Jouffroy",
                        "https://en.wikipedia.org/wiki/Passage_Brady",
                        "https://en.wikipedia.org/wiki/The_Marais",
                        "https://en.wikipedia.org/wiki/Montparnasse",
                        "https://en.wikipedia.org/wiki/Place_Dauphine",
                        "https://en.wikipedia.org/wiki/Place_de_la_Nation",
                        "https://en.wikipedia.org/wiki/Place_des_%C3%89meutes-de-Stonewall",
                        "https://en.wikipedia.org/wiki/Place_des_%C3%89tats-Unis",
                        "https://en.wikipedia.org/wiki/Place_des_Pyramides",
                        "https://en.wikipedia.org/wiki/Place_du_Carrousel",
                        "https://en.wikipedia.org/wiki/Place_du_Tertre",
                        "https://en.wikipedia.org/wiki/Place_Saint-Michel",
                        "https://en.wikipedia.org/wiki/Pont_d%27I%C3%A9na",
                        "https://en.wikipedia.org/wiki/Pont_de_Bir-Hakeim",
                        "https://en.wikipedia.org/wiki/Port_du_Louvre",
                        "https://en.wikipedia.org/wiki/Rue_Basse",
                        "https://en.wikipedia.org/wiki/Rue_Bonaparte",
                        "https://en.wikipedia.org/wiki/Rue_Charlemagne",
                        "https://en.wikipedia.org/wiki/Rue_d%27Argenteuil",
                        "https://en.wikipedia.org/wiki/Rue_de_la_Ferronnerie",
                        "https://en.wikipedia.org/wiki/Rue_de_la_Paix,_Paris",
                        "https://en.wikipedia.org/wiki/Rue_de_la_Sourdi%C3%A8re",
                        "https://en.wikipedia.org/wiki/Rue_de_Montmorency",
                        "https://en.wikipedia.org/wiki/Rue_de_Richelieu",
                        "https://en.wikipedia.org/wiki/Rue_de_Vaugirard",
                        "https://en.wikipedia.org/wiki/Rue_des_Francs-Bourgeois",
                        "https://en.wikipedia.org/wiki/Rue_des_Lombards",
                        "https://en.wikipedia.org/wiki/Rue_du_Faubourg_Saint-Honor%C3%A9",
                        "https://en.wikipedia.org/wiki/Rue_Elz%C3%A9vir",
                        "https://en.wikipedia.org/wiki/Rue_Foyatier",
                        "https://en.wikipedia.org/wiki/Rue_Moli%C3%A8re",
                        "https://en.wikipedia.org/wiki/Rue_Montorgueil",
                        "https://en.wikipedia.org/wiki/Rue_Radziwill",
                        "https://en.wikipedia.org/wiki/Rue_Rambuteau",
                        "https://en.wikipedia.org/wiki/Rue_Mond%C3%A9tour",
                        "https://en.wikipedia.org/wiki/Rue_Pastourelle",
                        "https://en.wikipedia.org/wiki/Rue_des_Rosiers",
                        "https://en.wikipedia.org/wiki/Rue_Saint-Honor%C3%A9",
                        "https://en.wikipedia.org/wiki/Rue_Saint-Denis_(Paris)",
                        "https://en.wikipedia.org/wiki/Rue_Sainte-Anne",
                        "https://en.wikipedia.org/wiki/Saint-Germain-des-Pr%C3%A9s",
                        "https://en.wikipedia.org/wiki/Trocad%C3%A9ro,_Paris",
                        "https://en.wikipedia.org/wiki/Viaduc_d%27Austerlitz",
                        "https://en.wikipedia.org/wiki/History_of_parks_and_gardens_of_Paris",
                        "https://en.wikipedia.org/wiki/Jardin_d%27Acclimatation",
                        "https://en.wikipedia.org/wiki/Parc_floral_de_Paris",
                        "https://en.wikipedia.org/wiki/Jardin_du_Luxembourg",
                        "https://en.wikipedia.org/wiki/Parc_Andr%C3%A9-Citro%C3%ABn",
                        "https://en.wikipedia.org/wiki/Parc_Clichy-Batignolles_%E2%80%93_Martin_Luther_King",
                        "https://en.wikipedia.org/wiki/Parc_de_Belleville",
                        "https://en.wikipedia.org/wiki/Parc_de_la_Butte-du-Chapeau-Rouge",
                        "https://en.wikipedia.org/wiki/Parc_des_Buttes_Chaumont",
                        "https://en.wikipedia.org/wiki/Parc_Georges-Brassens",
                        "https://en.wikipedia.org/wiki/Parc_Monceau",
                        "https://en.wikipedia.org/wiki/Coul%C3%A9e_verte_Ren%C3%A9-Dumont",
                        "https://en.wikipedia.org/wiki/Accor_Arena",
                        "https://en.wikipedia.org/wiki/Auteuil_Hippodrome",
                        "https://en.wikipedia.org/wiki/Halle_Georges_Carpentier",
                        "https://en.wikipedia.org/wiki/Longchamp_Racecourse",
                        "https://en.wikipedia.org/wiki/Piscine_Molitor",
                        "https://en.wikipedia.org/wiki/Porte_de_La_Chapelle_Arena",
                        "https://en.wikipedia.org/wiki/Stade_Jean-Bouin_(Paris)",
                        "https://en.wikipedia.org/wiki/Stade_Pershing",
                        "https://en.wikipedia.org/wiki/Stade_S%C3%A9bastien_Charl%C3%A9ty",
                        "https://en.wikipedia.org/wiki/V%C3%A9lodrome_de_Vincennes",
                        "https://en.wikipedia.org/wiki/Hippodrome_de_Vincennes",
                        "https://en.wikipedia.org/wiki/Oscar_Wilde%27s_tomb",
                        "https://en.wikipedia.org/wiki/Picpus_Cemetery",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2teau_d%27%C3%89couen",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Chantilly",
                        "https://en.wikipedia.org/wiki/Palace_of_Fontainebleau",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Malmaison",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Rambouillet",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Saint-Germain-en-Laye",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Sceaux",
                        "https://en.wikipedia.org/wiki/Gardens_of_Versailles",
                        "https://en.wikipedia.org/wiki/Grand_Trianon",
                        "https://en.wikipedia.org/wiki/Petit_Trianon",
                        "https://en.wikipedia.org/wiki/Fresh_pavilion",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Vincennes",
                        "https://en.wikipedia.org/wiki/Grande_Arche",
                        "https://en.wikipedia.org/wiki/Paris_La_D%C3%A9fense_Arena",
                        "https://en.wikipedia.org/wiki/Disneyland_Paris",
                        "https://en.wikipedia.org/wiki/Disneyland_Park_(Paris)",
                        "https://en.wikipedia.org/wiki/Walt_Disney_Studios_Park",
                        "https://en.wikipedia.org/wiki/Explorad%C3%B4me",
                        "https://en.wikipedia.org/wiki/Fort_Mont-Val%C3%A9rien",
                        "https://en.wikipedia.org/wiki/M%C3%A9morial_de_la_France_combattante",
                        "https://en.wikipedia.org/wiki/Suresnes_American_Cemetery_and_Memorial",
                        "https://en.wikipedia.org/wiki/France_Miniature",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_l%27air_et_de_l%27espace",
                        "https://en.wikipedia.org/wiki/Mus%C3%A9e_Fragonard_d%27Alfort",
                        "https://en.wikipedia.org/wiki/Parc_Ast%C3%A9rix",
                        "https://en.wikipedia.org/wiki/Parc_de_Saint-Cloud",
                        "https://en.wikipedia.org/wiki/Provins",
                        "https://en.wikipedia.org/wiki/La_Roche-Guyon",
                        "https://en.wikipedia.org/wiki/S%C3%A8vres_%E2%80%93_Cit%C3%A9_de_la_c%C3%A9ramique",
                        "https://en.wikipedia.org/wiki/Vaux-le-Vicomte",
                        "https://en.wikipedia.org/wiki/Bastille_Day_military_parade",
                        "https://en.wikipedia.org/wiki/D%C3%AEner_en_Blanc",
                        "https://en.wikipedia.org/wiki/Paris_Air_Show",
                        "https://en.wikipedia.org/wiki/Republican_Guard_(France)",
                        "https://en.wikipedia.org/wiki/Solidays",
                        "https://en.wikipedia.org/wiki/Axe_historique",
                        "https://en.wikipedia.org/wiki/Bateau-Lavoir",
                        "https://en.wikipedia.org/wiki/Bateaux_Mouches",
                        "https://en.wikipedia.org/wiki/Caf%C3%A9_des_2_Moulins",
                        "https://en.wikipedia.org/wiki/Fountains_in_Paris",
                        "https://en.wikipedia.org/wiki/La_Ruche_(residence)",
                        "https://en.wikipedia.org/wiki/Maxim%27s",
                        "https://en.wikipedia.org/wiki/Moulin_de_la_Galette",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_entrances_by_Hector_Guimard",
                        "https://en.wikipedia.org/wiki/Montmartre_Funicular",
                        "https://en.wikipedia.org/wiki/Paris_Mus%C3%A9es",
                        "https://en.wikipedia.org/wiki/Paris_Zoological_Park",
                        "https://en.wikipedia.org/wiki/Louvre_Inverted_Pyramid",
                        "https://en.wikipedia.org/wiki/World_Heritage_Centre",
                        "/wiki/Template:Paris_transport_network",
                        "/wiki/Template_talk:Paris_transport_network",
                        "/wiki/Special:EditPage/Template:Paris_transport_network",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_1",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_2",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_3",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_3bis",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_4",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_5",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_6",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_7",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_7bis",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_8",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_9",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_10",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_11",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_12",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_13",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_14",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_15",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_16",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_17",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_18",
                        "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_19",
                        "https://en.wikipedia.org/wiki/RER_B",
                        "https://en.wikipedia.org/wiki/RER_C",
                        "https://en.wikipedia.org/wiki/RER_D",
                        "https://en.wikipedia.org/wiki/RER_E",
                        "https://en.wikipedia.org/wiki/Transilien_Paris-Nord#Line_H",
                        "https://en.wikipedia.org/wiki/Transilien_Paris-Saint-Lazare#Line_J",
                        "https://en.wikipedia.org/wiki/Transilien_Paris-Nord#Line_K",
                        "https://en.wikipedia.org/wiki/Transilien_Paris-Saint-Lazare#Line_L",
                        "https://en.wikipedia.org/wiki/Transilien_Line_N",
                        "https://en.wikipedia.org/wiki/Transilien_Line_P",
                        "https://en.wikipedia.org/wiki/Transilien_Line_R",
                        "https://en.wikipedia.org/wiki/Transilien_Line_U",
                        "https://en.wikipedia.org/wiki/Transilien_Line_V",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_1",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_2",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_3a",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_3b",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_4",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_5",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_6",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_7",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_8",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_9",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_10",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_11",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_12",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_13",
                        "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_14",
                        "https://en.wikipedia.org/wiki/RATP_bus_network",
                        "https://en.wikipedia.org/wiki/Trans-Val-de-Marne",
                        "https://en.wikipedia.org/wiki/Noctilien",
                        "https://en.wikipedia.org/wiki/CDGVAL",
                        "https://en.wikipedia.org/wiki/Orlyval",
                        "https://en.wikipedia.org/wiki/CDG_Express",
                        "https://en.wikipedia.org/wiki/Merger_of_Paris_M%C3%A9tro_lines_3bis_and_7bis",
                        "https://en.wikipedia.org/wiki/Keolis",
                        "https://en.wikipedia.org/wiki/Transdev",
                        "https://en.wikipedia.org/wiki/Navigo_card",
                        "https://en.wikipedia.org/wiki/Public_transport_fares_in_the_%C3%8Ele-de-France",
                        "https://en.wikipedia.org/wiki/Versement_transport",
                        "https://en.wikipedia.org/wiki/List_of_Paris_M%C3%A9tro_stations",
                        "https://en.wikipedia.org/wiki/Architecture_of_the_Paris_M%C3%A9tro",
                        "https://en.wikipedia.org/wiki/Ghost_stations_of_the_Paris_M%C3%A9tro",
                        "https://en.wikipedia.org/wiki/List_of_R%C3%A9seau_Express_R%C3%A9gional_stations",
                        "https://en.wikipedia.org/wiki/List_of_Transilien_stations",
                        "https://en.wikipedia.org/wiki/List_of_tram_stops_in_%C3%8Ele-de-France",
                        "/wiki/Template:Paris_Metropolitan_Area",
                        "/wiki/Template_talk:Paris_Metropolitan_Area",
                        "/wiki/Special:EditPage/Template:Paris_Metropolitan_Area",
                        "/wiki/File:Paris-metropolitan-area-symbol.png",
                        "https://en.wikipedia.org/wiki/Asni%C3%A8res-sur-Seine",
                        "https://en.wikipedia.org/wiki/Aubervilliers",
                        "https://en.wikipedia.org/wiki/Champigny-sur-Marne",
                        "https://en.wikipedia.org/wiki/Colombes",
                        "https://en.wikipedia.org/wiki/Cr%C3%A9teil",
                        "https://en.wikipedia.org/wiki/Rueil-Malmaison",
                        "https://en.wikipedia.org/wiki/Versailles,_Yvelines",
                        "https://en.wikipedia.org/wiki/Vitry-sur-Seine",
                        "https://en.wikipedia.org/wiki/Antony,_Hauts-de-Seine",
                        "https://en.wikipedia.org/wiki/Le_Blanc-Mesnil",
                        "https://en.wikipedia.org/wiki/Bondy",
                        "https://en.wikipedia.org/wiki/Cergy",
                        "https://en.wikipedia.org/wiki/Chelles,_Seine-et-Marne",
                        "https://en.wikipedia.org/wiki/Clamart",
                        "https://en.wikipedia.org/wiki/Clichy,_Hauts-de-Seine",
                        "https://en.wikipedia.org/wiki/Drancy",
                        "https://en.wikipedia.org/wiki/%C3%89pinay-sur-Seine",
                        "https://en.wikipedia.org/wiki/%C3%89vry-Courcouronnes",
                        "https://en.wikipedia.org/wiki/Fontenay-sous-Bois",
                        "https://en.wikipedia.org/wiki/Maisons-Alfort",
                        "https://en.wikipedia.org/wiki/Massy,_Essonne",
                        "https://en.wikipedia.org/wiki/Meaux",
                        "https://en.wikipedia.org/wiki/Noisy-le-Grand",
                        "https://en.wikipedia.org/wiki/Sarcelles",
                        "https://en.wikipedia.org/wiki/Sartrouville",
                        "https://en.wikipedia.org/wiki/Sevran",
                        "https://en.wikipedia.org/wiki/Villejuif",
                        "https://en.wikipedia.org/wiki/Alfortville",
                        "https://en.wikipedia.org/wiki/Athis-Mons",
                        "https://en.wikipedia.org/wiki/Bagnolet",
                        "https://en.wikipedia.org/wiki/Bezons",
                        "https://en.wikipedia.org/wiki/Bois-Colombes",
                        "https://en.wikipedia.org/wiki/Br%C3%A9tigny-sur-Orge",
                        "https://en.wikipedia.org/wiki/Brunoy",
                        "https://en.wikipedia.org/wiki/Bussy-Saint-Georges",
                        "https://en.wikipedia.org/wiki/Cachan",
                        "https://en.wikipedia.org/wiki/Champs-sur-Marne",
                        "https://en.wikipedia.org/wiki/Charenton-le-Pont",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2tenay-Malabry",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2tillon,_Hauts-de-Seine",
                        "https://en.wikipedia.org/wiki/Chatou",
                        "https://en.wikipedia.org/wiki/Le_Chesnay-Rocquencourt",
                        "https://en.wikipedia.org/wiki/Choisy-le-Roi",
                        "https://en.wikipedia.org/wiki/Clichy-sous-Bois",
                        "https://en.wikipedia.org/wiki/Conflans-Sainte-Honorine",
                        "https://en.wikipedia.org/wiki/Cormeilles-en-Parisis",
                        "https://en.wikipedia.org/wiki/La_Courneuve",
                        "https://en.wikipedia.org/wiki/Creil",
                        "https://en.wikipedia.org/wiki/Draveil",
                        "https://en.wikipedia.org/wiki/Dreux",
                        "https://en.wikipedia.org/wiki/Eaubonne",
                        "https://en.wikipedia.org/wiki/%C3%89lancourt",
                        "https://en.wikipedia.org/wiki/Ermont",
                        "https://en.wikipedia.org/wiki/%C3%89tampes",
                        "https://en.wikipedia.org/wiki/Fontenay-aux-Roses",
                        "https://en.wikipedia.org/wiki/Franconville,_Val-d%27Oise",
                        "https://en.wikipedia.org/wiki/Fresnes,_Val-de-Marne",
                        "https://en.wikipedia.org/wiki/Gagny",
                        "https://en.wikipedia.org/wiki/La_Garenne-Colombes",
                        "https://en.wikipedia.org/wiki/Garges-l%C3%A8s-Gonesse",
                        "https://en.wikipedia.org/wiki/Gennevilliers",
                        "https://en.wikipedia.org/wiki/Gonesse",
                        "https://en.wikipedia.org/wiki/Goussainville,_Val-d%27Oise",
                        "https://en.wikipedia.org/wiki/Grigny,_Essonne",
                        "https://en.wikipedia.org/wiki/Guyancourt",
                        "https://en.wikipedia.org/wiki/L%27Ha%C3%BF-les-Roses",
                        "https://en.wikipedia.org/wiki/Herblay-sur-Seine",
                        "https://en.wikipedia.org/wiki/Houilles",
                        "https://en.wikipedia.org/wiki/Limeil-Br%C3%A9vannes",
                        "https://en.wikipedia.org/wiki/Livry-Gargan",
                        "https://en.wikipedia.org/wiki/Malakoff,_Hauts-de-Seine",
                        "https://en.wikipedia.org/wiki/Melun",
                        "https://en.wikipedia.org/wiki/Meudon",
                        "https://en.wikipedia.org/wiki/Montfermeil",
                        "https://en.wikipedia.org/wiki/Montigny-le-Bretonneux",
                        "https://en.wikipedia.org/wiki/Neuilly-sur-Marne",
                        "https://en.wikipedia.org/wiki/Nogent-sur-Marne",
                        "https://en.wikipedia.org/wiki/Noisy-le-Sec",
                        "https://en.wikipedia.org/wiki/Palaiseau",
                        "https://en.wikipedia.org/wiki/Le_Perreux-sur-Marne",
                        "https://en.wikipedia.org/wiki/Plaisir,_Yvelines",
                        "https://en.wikipedia.org/wiki/Le_Plessis-Robinson",
                        "https://en.wikipedia.org/wiki/Poissy",
                        "https://en.wikipedia.org/wiki/Pontault-Combault",
                        "https://en.wikipedia.org/wiki/Pontoise",
                        "https://en.wikipedia.org/wiki/Puteaux",
                        "https://en.wikipedia.org/wiki/Rambouillet",
                        "https://en.wikipedia.org/wiki/Ris-Orangis",
                        "https://en.wikipedia.org/wiki/Romainville",
                        "https://en.wikipedia.org/wiki/Rosny-sous-Bois",
                        "https://en.wikipedia.org/wiki/Saint-Cloud",
                        "https://en.wikipedia.org/wiki/Saint-Germain-en-Laye",
                        "https://en.wikipedia.org/wiki/Sainte-Genevi%C3%A8ve-des-Bois,_Essonne",
                        "https://en.wikipedia.org/wiki/Sannois",
                        "https://en.wikipedia.org/wiki/Savigny-sur-Orge",
                        "https://en.wikipedia.org/wiki/Savigny-le-Temple",
                        "https://en.wikipedia.org/wiki/Stains,_Seine-Saint-Denis",
                        "https://en.wikipedia.org/wiki/Sucy-en-Brie",
                        "https://en.wikipedia.org/wiki/Suresnes",
                        "https://en.wikipedia.org/wiki/Taverny",
                        "https://en.wikipedia.org/wiki/Thiais",
                        "https://en.wikipedia.org/wiki/Trappes",
                        "https://en.wikipedia.org/wiki/Tremblay-en-France",
                        "https://en.wikipedia.org/wiki/Les_Ulis",
                        "https://en.wikipedia.org/wiki/Vanves",
                        "https://en.wikipedia.org/wiki/Vigneux-sur-Seine",
                        "https://en.wikipedia.org/wiki/Villemomble",
                        "https://en.wikipedia.org/wiki/Villeneuve-Saint-Georges",
                        "https://en.wikipedia.org/wiki/Villeparisis",
                        "https://en.wikipedia.org/wiki/Villepinte,_Seine-Saint-Denis",
                        "https://en.wikipedia.org/wiki/Villiers-le-Bel",
                        "https://en.wikipedia.org/wiki/Villiers-sur-Marne",
                        "https://en.wikipedia.org/wiki/Vincennes",
                        "https://en.wikipedia.org/wiki/Viry-Ch%C3%A2tillon",
                        "https://en.wikipedia.org/wiki/Yerres",
                        "/wiki/Template:Administrative_division_of_%C3%8Ele-de-France",
                        "/wiki/Template_talk:Administrative_division_of_%C3%8Ele-de-France",
                        "/wiki/Special:EditPage/Template:Administrative_division_of_%C3%8Ele-de-France",
                        "https://en.wikipedia.org/wiki/Arrondissements_of_the_Essonne_department",
                        "https://en.wikipedia.org/wiki/Cantons_of_the_Essonne_department",
                        "https://en.wikipedia.org/wiki/Communes_of_the_Essonne_department",
                        "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Essonne_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Essonne_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/wiki/Arrondissements_of_the_Hauts-de-Seine_department",
                        "https://en.wikipedia.org/wiki/Cantons_of_the_Hauts-de-Seine_department",
                        "https://en.wikipedia.org/wiki/Communes_of_the_Hauts-de-Seine_department",
                        "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Hauts-de-Seine_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Hauts-de-Seine_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/wiki/Arrondissement_of_Paris",
                        "https://en.wikipedia.org/wiki/Quarters_of_Paris",
                        "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_Paris&action=edit&redlink=1",
                        "https://en.wikipedia.org/wiki/Seine-et-Marne",
                        "https://en.wikipedia.org/wiki/Arrondissements_of_the_Seine-et-Marne_department",
                        "https://en.wikipedia.org/wiki/Cantons_of_the_Seine-et-Marne_department",
                        "https://en.wikipedia.org/wiki/Communes_of_the_Seine-et-Marne_department",
                        "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Seine-et-Marne_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Seine-et-Marne_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/wiki/Arrondissements_of_the_Seine-Saint-Denis_department",
                        "https://en.wikipedia.org/wiki/Cantons_of_the_Seine-Saint-Denis_department",
                        "https://en.wikipedia.org/wiki/Communes_of_the_Seine-Saint-Denis_department",
                        "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Seine-Saint-Denis_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Seine-Saint-Denis_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/wiki/Arrondissements_of_the_Val-de-Marne_department",
                        "https://en.wikipedia.org/wiki/Cantons_of_the_Val-de-Marne_department",
                        "https://en.wikipedia.org/wiki/Communes_of_the_Val-de-Marne_department",
                        "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Val-de-Marne_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Val-de-Marne_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/wiki/Arrondissements_of_the_Val-d%27Oise_department",
                        "https://en.wikipedia.org/wiki/Cantons_of_the_Val-d%27Oise_department",
                        "https://en.wikipedia.org/wiki/Communes_of_the_Val-d%27Oise_department",
                        "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Val-d%27Oise_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Val-d%27Oise_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/wiki/Arrondissements_of_the_Yvelines_department",
                        "https://en.wikipedia.org/wiki/Cantons_of_the_Yvelines_department",
                        "https://en.wikipedia.org/wiki/Communes_of_the_Yvelines_department",
                        "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Yvelines_department&action=edit&redlink=1",
                        "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Yvelines_department&action=edit&redlink=1",
                        "/wiki/Template:Prefectures_of_French_departments",
                        "/wiki/Template_talk:Prefectures_of_French_departments",
                        "/wiki/Special:EditPage/Template:Prefectures_of_French_departments",
                        "https://en.wikipedia.org/wiki/Prefectures_in_France",
                        "https://en.wikipedia.org/wiki/Bourg-en-Bresse",
                        "https://en.wikipedia.org/wiki/Ain",
                        "https://en.wikipedia.org/wiki/Laon",
                        "https://en.wikipedia.org/wiki/Aisne",
                        "https://en.wikipedia.org/wiki/Moulins,_Allier",
                        "https://en.wikipedia.org/wiki/Allier",
                        "https://en.wikipedia.org/wiki/Digne-les-Bains",
                        "https://en.wikipedia.org/wiki/Alpes-de-Haute-Provence",
                        "https://en.wikipedia.org/wiki/Gap,_Hautes-Alpes",
                        "https://en.wikipedia.org/wiki/Hautes-Alpes",
                        "https://en.wikipedia.org/wiki/Alpes-Maritimes",
                        "https://en.wikipedia.org/wiki/Privas",
                        "https://en.wikipedia.org/wiki/Ard%C3%A8che",
                        "https://en.wikipedia.org/wiki/Charleville-M%C3%A9zi%C3%A8res",
                        "https://en.wikipedia.org/wiki/Ardennes_(department)",
                        "https://en.wikipedia.org/wiki/Foix",
                        "https://en.wikipedia.org/wiki/Ari%C3%A8ge_(department)",
                        "https://en.wikipedia.org/wiki/Troyes",
                        "https://en.wikipedia.org/wiki/Aube",
                        "https://en.wikipedia.org/wiki/Carcassonne",
                        "https://en.wikipedia.org/wiki/Aude",
                        "https://en.wikipedia.org/wiki/Rodez",
                        "https://en.wikipedia.org/wiki/Aveyron",
                        "https://en.wikipedia.org/wiki/Bouches-du-Rh%C3%B4ne",
                        "https://en.wikipedia.org/wiki/Calvados_(department)",
                        "https://en.wikipedia.org/wiki/Aurillac",
                        "https://en.wikipedia.org/wiki/Cantal",
                        "https://en.wikipedia.org/wiki/Angoul%C3%AAme",
                        "https://en.wikipedia.org/wiki/Charente",
                        "https://en.wikipedia.org/wiki/La_Rochelle",
                        "https://en.wikipedia.org/wiki/Charente-Maritime",
                        "https://en.wikipedia.org/wiki/Bourges",
                        "https://en.wikipedia.org/wiki/Cher_(department)",
                        "https://en.wikipedia.org/wiki/Tulle",
                        "https://en.wikipedia.org/wiki/Corr%C3%A8ze",
                        "https://en.wikipedia.org/wiki/Ajaccio",
                        "https://en.wikipedia.org/wiki/Corse-du-Sud",
                        "https://en.wikipedia.org/wiki/Bastia",
                        "https://en.wikipedia.org/wiki/Haute-Corse",
                        "https://en.wikipedia.org/wiki/C%C3%B4te-d%27Or",
                        "https://en.wikipedia.org/wiki/Saint-Brieuc",
                        "https://en.wikipedia.org/wiki/C%C3%B4tes-d%27Armor",
                        "https://en.wikipedia.org/wiki/Gu%C3%A9ret",
                        "https://en.wikipedia.org/wiki/Creuse",
                        "https://en.wikipedia.org/wiki/P%C3%A9rigueux",
                        "https://en.wikipedia.org/wiki/Dordogne",
                        "https://en.wikipedia.org/wiki/Doubs",
                        "https://en.wikipedia.org/wiki/Valence_(city)",
                        "https://en.wikipedia.org/wiki/Dr%C3%B4me",
                        "https://en.wikipedia.org/wiki/%C3%89vreux",
                        "https://en.wikipedia.org/wiki/Eure",
                        "https://en.wikipedia.org/wiki/Chartres",
                        "https://en.wikipedia.org/wiki/Eure-et-Loir",
                        "https://en.wikipedia.org/wiki/Quimper",
                        "https://en.wikipedia.org/wiki/Finist%C3%A8re",
                        "https://en.wikipedia.org/wiki/Gard",
                        "https://en.wikipedia.org/wiki/Haute-Garonne",
                        "https://en.wikipedia.org/wiki/Auch",
                        "https://en.wikipedia.org/wiki/Gers",
                        "https://en.wikipedia.org/wiki/Gironde",
                        "https://en.wikipedia.org/wiki/H%C3%A9rault",
                        "https://en.wikipedia.org/wiki/Ille-et-Vilaine",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2teauroux",
                        "https://en.wikipedia.org/wiki/Indre",
                        "https://en.wikipedia.org/wiki/Indre-et-Loire",
                        "https://en.wikipedia.org/wiki/Is%C3%A8re",
                        "https://en.wikipedia.org/wiki/Lons-le-Saunier",
                        "https://en.wikipedia.org/wiki/Jura_(department)",
                        "https://en.wikipedia.org/wiki/Mont-de-Marsan",
                        "https://en.wikipedia.org/wiki/Landes_(department)",
                        "https://en.wikipedia.org/wiki/Blois",
                        "https://en.wikipedia.org/wiki/Loir-et-Cher",
                        "https://en.wikipedia.org/wiki/Loire_(department)",
                        "https://en.wikipedia.org/wiki/Le_Puy-en-Velay",
                        "https://en.wikipedia.org/wiki/Haute-Loire",
                        "https://en.wikipedia.org/wiki/Loire-Atlantique",
                        "https://en.wikipedia.org/wiki/Loiret",
                        "https://en.wikipedia.org/wiki/Cahors",
                        "https://en.wikipedia.org/wiki/Lot_(department)",
                        "https://en.wikipedia.org/wiki/Agen",
                        "https://en.wikipedia.org/wiki/Lot-et-Garonne",
                        "https://en.wikipedia.org/wiki/Mende,_Loz%C3%A8re",
                        "https://en.wikipedia.org/wiki/Loz%C3%A8re",
                        "https://en.wikipedia.org/wiki/Maine-et-Loire",
                        "https://en.wikipedia.org/wiki/Saint-L%C3%B4",
                        "https://en.wikipedia.org/wiki/Manche",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2lons-en-Champagne",
                        "https://en.wikipedia.org/wiki/Marne_(department)",
                        "https://en.wikipedia.org/wiki/Chaumont,_Haute-Marne",
                        "https://en.wikipedia.org/wiki/Haute-Marne",
                        "https://en.wikipedia.org/wiki/Laval,_Mayenne",
                        "https://en.wikipedia.org/wiki/Mayenne",
                        "https://en.wikipedia.org/wiki/Meurthe-et-Moselle",
                        "https://en.wikipedia.org/wiki/Bar-le-Duc",
                        "https://en.wikipedia.org/wiki/Meuse_(department)",
                        "https://en.wikipedia.org/wiki/Vannes",
                        "https://en.wikipedia.org/wiki/Morbihan",
                        "https://en.wikipedia.org/wiki/Moselle_(department)",
                        "https://en.wikipedia.org/wiki/Nevers",
                        "https://en.wikipedia.org/wiki/Ni%C3%A8vre",
                        "https://en.wikipedia.org/wiki/Nord_(French_department)",
                        "https://en.wikipedia.org/wiki/Beauvais",
                        "https://en.wikipedia.org/wiki/Oise",
                        "https://en.wikipedia.org/wiki/Alen%C3%A7on",
                        "https://en.wikipedia.org/wiki/Orne",
                        "https://en.wikipedia.org/wiki/Arras",
                        "https://en.wikipedia.org/wiki/Pas-de-Calais",
                        "https://en.wikipedia.org/wiki/Puy-de-D%C3%B4me",
                        "https://en.wikipedia.org/wiki/Pau,_Pyr%C3%A9n%C3%A9es-Atlantiques",
                        "https://en.wikipedia.org/wiki/Pyr%C3%A9n%C3%A9es-Atlantiques",
                        "https://en.wikipedia.org/wiki/Tarbes",
                        "https://en.wikipedia.org/wiki/Hautes-Pyr%C3%A9n%C3%A9es",
                        "https://en.wikipedia.org/wiki/Pyr%C3%A9n%C3%A9es-Orientales",
                        "https://en.wikipedia.org/wiki/Bas-Rhin",
                        "https://en.wikipedia.org/wiki/Colmar",
                        "https://en.wikipedia.org/wiki/Haut-Rhin",
                        "https://en.wikipedia.org/wiki/Rh%C3%B4ne_(department)",
                        "https://en.wikipedia.org/wiki/Vesoul",
                        "https://en.wikipedia.org/wiki/Haute-Sa%C3%B4ne",
                        "https://en.wikipedia.org/wiki/M%C3%A2con",
                        "https://en.wikipedia.org/wiki/Sa%C3%B4ne-et-Loire",
                        "https://en.wikipedia.org/wiki/Sarthe",
                        "https://en.wikipedia.org/wiki/Chamb%C3%A9ry",
                        "https://en.wikipedia.org/wiki/Savoie",
                        "https://en.wikipedia.org/wiki/Haute-Savoie",
                        "https://en.wikipedia.org/wiki/Seine-Maritime",
                        "https://en.wikipedia.org/wiki/Niort",
                        "https://en.wikipedia.org/wiki/Deux-S%C3%A8vres",
                        "https://en.wikipedia.org/wiki/Somme_(department)",
                        "https://en.wikipedia.org/wiki/Albi",
                        "https://en.wikipedia.org/wiki/Tarn_(department)",
                        "https://en.wikipedia.org/wiki/Montauban",
                        "https://en.wikipedia.org/wiki/Tarn-et-Garonne",
                        "https://en.wikipedia.org/wiki/Var_(department)",
                        "https://en.wikipedia.org/wiki/Avignon",
                        "https://en.wikipedia.org/wiki/Vaucluse",
                        "https://en.wikipedia.org/wiki/La_Roche-sur-Yon",
                        "https://en.wikipedia.org/wiki/Vend%C3%A9e",
                        "https://en.wikipedia.org/wiki/Poitiers",
                        "https://en.wikipedia.org/wiki/Vienne_(department)",
                        "https://en.wikipedia.org/wiki/Haute-Vienne",
                        "https://en.wikipedia.org/wiki/%C3%89pinal",
                        "https://en.wikipedia.org/wiki/Vosges_(department)",
                        "https://en.wikipedia.org/wiki/Auxerre",
                        "https://en.wikipedia.org/wiki/Yonne",
                        "https://en.wikipedia.org/wiki/Belfort",
                        "https://en.wikipedia.org/wiki/Territoire_de_Belfort",
                        "https://en.wikipedia.org/wiki/Overseas_department",
                        "https://en.wikipedia.org/wiki/Basse-Terre",
                        "https://en.wikipedia.org/wiki/Fort-de-France",
                        "https://en.wikipedia.org/wiki/Cayenne",
                        "https://en.wikipedia.org/wiki/French_Guiana",
                        "https://en.wikipedia.org/wiki/Mamoudzou",
                        "https://en.wikipedia.org/wiki/Mayotte",
                        "/wiki/Template:Prefectures_of_regions_of_France",
                        "/wiki/Template_talk:Prefectures_of_regions_of_France",
                        "/wiki/Special:EditPage/Template:Prefectures_of_regions_of_France",
                        "https://en.wikipedia.org/wiki/Auvergne-Rh%C3%B4ne-Alpes",
                        "https://en.wikipedia.org/wiki/Bourgogne-Franche-Comt%C3%A9",
                        "https://en.wikipedia.org/wiki/Brittany_(administrative_region)",
                        "https://en.wikipedia.org/wiki/Centre-Val_de_Loire",
                        "https://en.wikipedia.org/wiki/Corsica",
                        "https://en.wikipedia.org/wiki/Grand_Est",
                        "https://en.wikipedia.org/wiki/Hauts-de-France",
                        "https://en.wikipedia.org/wiki/Normandy_(administrative_region)",
                        "https://en.wikipedia.org/wiki/Nouvelle-Aquitaine",
                        "https://en.wikipedia.org/wiki/Occitania_(administrative_region)",
                        "https://en.wikipedia.org/wiki/Pays_de_la_Loire",
                        "https://en.wikipedia.org/wiki/Provence-Alpes-C%C3%B4te_d%27Azur",
                        "https://en.wikipedia.org/wiki/Overseas_departments_and_regions_of_France",
                        "/wiki/Template:Departments_of_France",
                        "/wiki/Template_talk:Departments_of_France",
                        "/wiki/Special:EditPage/Template:Departments_of_France",
                        "https://en.wikipedia.org/wiki/Metropolis_of_Lyon",
                        "https://en.wikipedia.org/wiki/Saint_Pierre_and_Miquelon",
                        "/wiki/Wikipedia:Wikimedia_sister_projects",
                        "https://en.wikisource.org/wiki/Paris",
                        "https://en.wikibooks.org/wiki/Special:Search/Paris",
                        "https://en.wikiversity.org/wiki/Special:Search/Paris",
                        "https://www.wikidata.org/wiki/Special:Search/Paris",
                        "/wiki/Help:Authority_control",
                        "https://www.wikidata.org/wiki/Q90#identifiers",
                        "https://isni.org/isni/000000012114268X",
                        "https://viaf.org/viaf/158822968",
                        "https://id.worldcat.org/fast/1205283",
                        "https://id.oclc.org/worldcat/entity/E39PBJrmbyBWhYrMkc793vqWjC",
                        "https://d-nb.info/gnd/4044660-8",
                        "https://id.loc.gov/authorities/n79058874",
                        "https://catalogue.bnf.fr/ark:/12148/cb11865278m",
                        "https://data.bnf.fr/ark:/12148/cb11865278m",
                        "https://id.ndl.go.jp/auth/ndlna/00629026",
                        "https://opac.sbn.it/nome/LO1V149084",
                        "https://nla.gov.au/anbd.aut-an35995688",
                        "https://aleph.nkp.cz/F/?func=find-c&local_base=aut&ccl_term=ica=ge130380&CON_LNG=ENG",
                        "https://datos.bne.es/resource/XX451222",
                        "https://authority.bibsys.no/authority/rest/authorities/html/1009791",
                        "http://aleweb.ncl.edu.tw/F/?func=accref&acc_sequence=021097610&CON_LNG=ENG",
                        "https://kopkatalogs.lv/F?func=direct&local_base=lnc10&doc_number=000042629&P_CON_LNG=ENG",
                        "http://www.bncatalogo.cl/F?func=direct&local_base=red10&doc_number=000031011",
                        "https://catalogo.bn.gov.ar/F/?func=direct&local_base=BNA10&doc_number=000047813",
                        "https://www.nli.org.il/en/authorities/987007561794505171",
                        "https://cantic.bnc.cat/registre/981058613861806706",
                        "https://musicbrainz.org/area/dc10c22b-e510-4006-8b7f-fecb4f36436e",
                        "https://ci.nii.ac.jp/author/DA10980120?l=en",
                        "http://kulturnav.org/5fd4d231-00c4-4f69-abf6-cd63ffe60e2a",
                        "https://www.ngv.vic.gov.au/explore/collection/artist/13498/",
                        "https://www.idref.fr/026397765",
                        "https://hls-dhs-dss.ch/fr/articles/006604",
                        "https://catalog.archives.gov/id/10045153",
                        "https://catalog.archives.gov/id/10044289",
                        "https://snaccooperative.org/ark:/99166/w6n62wkx",
                        "/wiki/Help:Category",
                        "/wiki/Category:Paris",
                        "/wiki/Category:Capitals_in_Europe",
                        "/wiki/Category:Catholic_pilgrimage_sites",
                        "/wiki/Category:Cities_in_France",
                        "/wiki/Category:Cities_in_%C3%8Ele-de-France",
                        "/wiki/Category:Companions_of_the_Liberation",
                        "/wiki/Category:Departments_of_%C3%8Ele-de-France",
                        "/wiki/Category:Culture_of_Europe",
                        "/wiki/Category:Culture_of_France",
                        "/wiki/Category:Gallia_Lugdunensis",
                        "/wiki/Category:Populated_places_established_in_the_3rd_century_BC",
                        "/wiki/Category:Prefectures_in_France",
                        "/wiki/Category:Pages_using_gadget_WikiMiniAtlas",
                        "/wiki/Category:Pages_using_the_Phonos_extension",
                        "/wiki/Category:CS1_French-language_sources_(fr)",
                        "/wiki/Category:Webarchive_template_wayback_links",
                        "/wiki/Category:Articles_with_French-language_sources_(fr)",
                        "/wiki/Category:CS1_Italian-language_sources_(it)",
                        "/wiki/Category:Articles_with_short_description",
                        "/wiki/Category:Short_description_is_different_from_Wikidata",
                        "/wiki/Category:Good_articles",
                        "/wiki/Category:Wikipedia_indefinitely_semi-protected_pages",
                        "/wiki/Category:EngvarB_from_July_2018",
                        "/wiki/Category:Use_dmy_dates_from_August_2024",
                        "/wiki/Category:Pages_using_infobox_settlement_with_bad_settlement_type",
                        "/wiki/Category:Articles_containing_French-language_text",
                        "/wiki/Category:Pages_using_multiple_image_with_auto_scaled_images",
                        "/wiki/Category:Articles_containing_Latin-language_text",
                        "/wiki/Category:Pages_using_infobox_settlement_with_possible_motto_list",
                        "/wiki/Category:Coordinates_on_Wikidata",
                        "/wiki/Category:Pages_using_infobox_settlement_with_possible_demonym_list",
                        "/wiki/Category:Pages_using_infobox_settlement_with_image_map1_but_not_image_map",
                        "/wiki/Category:Pages_with_French_IPA",
                        "/wiki/Category:Pages_including_recorded_pronunciations",
                        "/wiki/Category:All_articles_with_failed_verification",
                        "/wiki/Category:Articles_with_failed_verification_from_November_2024",
                        "/wiki/Category:All_pages_needing_factual_verification",
                        "/wiki/Category:Wikipedia_articles_needing_factual_verification_from_June_2019",
                        "/wiki/Category:All_articles_with_incomplete_citations",
                        "/wiki/Category:Articles_with_incomplete_citations_from_November_2023",
                        "/wiki/Category:Articles_with_Italian-language_sources_(it)",
                        "/wiki/Category:CS1_errors:_ISBN_date",
                        "/wiki/Category:Wikipedia_articles_incorporating_a_citation_from_the_1911_Encyclopaedia_Britannica_with_Wikisource_reference",
                        "/wiki/Category:Pages_using_Sister_project_links_with_wikidata_namespace_mismatch",
                        "/wiki/Category:Pages_using_Sister_project_links_with_hidden_wikidata",
                        "/wiki/Category:Pages_using_the_Kartographer_extension",
                        "/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_4.0_International_License",
                        "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Terms_of_Use",
                        "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy",
                        "https://wikimediafoundation.org/",
                        "/wiki/Wikipedia:General_disclaimer",
                        "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Universal_Code_of_Conduct",
                        "https://developer.wikimedia.org",
                        "https://stats.wikimedia.org/#/en.wikipedia.org",
                        "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Cookie_statement",
                        "https://en.m.wikipedia.org/w/index.php?title=Paris&mobileaction=toggle_view_mobile",
                        "https://www.wikimedia.org/",
                        "https://www.mediawiki.org/"
                  ],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://en.wikipedia.org&size=96",
                  "snippets": [
                        "From the Capetian dynasty that began with the 987 election of Hugh Capet, Count of Paris and Duke of the Franks (duc des Francs), as king of a unified West Francia, Paris gradually became the largest and most prosperous city in France. By the end of the 12th century, Paris had become the political, economic, religious, and cultural capital of France.",
                        "With 200,000 inhabitants in 1328, Paris, then already the capital of France, was the most populous city of Europe. By comparison, London in 1300 had 80,000 inhabitants. By the early fourteenth century, so much filth had collected inside urban Europe that French and Italian cities were naming streets after human waste.",
                        "Due to the Parisian uprisings during the Fronde civil war, Louis XIV moved his court to a new palace, Versailles, in 1682. Although no longer the capital of France, arts and sciences in the city flourished with the Com√©die-Fran√ßaise, the Academy of Painting, and the French Academy of Sciences.",
                        "A new boulevard named the Champs-√âlys√©es extended the city west to √âtoile, while the working-class neighbourhood of the Faubourg Saint-Antoine on the eastern side of the city grew increasingly crowded with poor migrant workers from other regions of France. Paris was the centre of an explosion of philosophic and scientific activity, known as the Age of Enlightenment. Diderot and D'Alembert published their Encyclop√©die in 1751, before the Montgolfier Brothers launched the first manned flight in a hot air balloon on 21 November 1783. Paris was the financial capital of continental Europe, as well the primary European centre for book publishing, fashion and the manufacture of fine furniture and luxury goods.",
                        "Paris (French pronunciation: [pa Åi] ‚ìò) is the capital and largest city of France. With an estimated population of 2,048,472 residents in January 2025 in an area of more than 105 km2 (41 sq mi), Paris is the fourth-most populous city in the European Union and the 30th most densely populated ..."
                  ]
            },
            {
                  "title": "List of capitals of France - Wikipedia",
                  "url": "https://en.wikipedia.org/wiki/List_of_capitals_of_France",
                  "description": "This is a chronological list <strong>of</strong> <strong>capitals</strong> <strong>of</strong> <strong>France</strong>. <strong>The</strong> <strong>capital</strong> <strong>of</strong> <strong>France</strong> has been Paris since its liberation in 1944. ... Paris (987‚Äì1419), the residence of the Kings <strong>of</strong> <strong>France</strong>, although they were consecrated at Reims. Orl√©ans (1108), one of the few consecrations of a French monarch to ...",
                  "content": "List of capitals of France\nChronology References\nThis is a chronological list of capitals of France. The capital of France has been Paris since its liberation in 1944.[1] Provisional seats of the government:\nCatal√† ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ Espa√±ol Fran√ßais Polski Simple English Article Talk Read Edit View history Read Edit View history What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Download as PDF Printable version Wikidata item Tournai (before 486), current-day Belgium Soissons (486‚Äì936) Laon (936‚Äì987) Paris (987‚Äì1419), the residence of the Kings of France, although they were consecrated at Reims. Orl√©ans (1108), one of the few consecrations of a French monarch to occur outside of Reims occurred at Orl√©ans, when Louis VI the Fat was consecrated in Orl√©ans Cathedral by Daimbert, Archbishop of Sens; from 13 December 1560 to 31 January 1561, the French States-General also met in the city. Troyes (1419‚Äì1422), for a short time during the Hundred Years' War, the city was the seat of the royal government. Bourges (1422‚Äì1444), Charles VII was forced to flee from Paris. Tours (1444‚Äì1527), Louis XI made the Ch√¢teau de Plessis-lez-Tours his residence. Paris (1528‚Äì1589), Francis I had established his court in Paris. Tours (1589‚Äì1594), faction of parliamentarians, faithful to King Henry IV sat at Tours. Paris (1594‚Äì1682)[citation needed] Versailles (1682‚Äì1789), from 1682 to 1715, Louis XIV made Versailles his residence and the seat of the French court. Paris (1789‚Äì1871), on 5 and 6 October 1789, a throng from Paris invaded the castle and forced the royal family to move back to Paris. The National Constituent Assembly followed the King to Paris soon afterward; Versailles lost its role of capital city. Versailles (1871), the French Third Republic established Versailles as its provisional seat of government in March 1871 after the Paris Commune took control of Paris. Bordeaux (September 1914), the government was relocated from Paris to Bordeaux very briefly during World War I, when it was feared that Paris would soon fall into German hands. These fears were alleviated after the German Army was pushed back at the First Battle of the Marne. Tours (10‚Äì13 June 1940), the city served as the temporary capital of France during World War II after the government fled Paris due to the German advance. Bordeaux (June 1940), the government was relocated from Paris to Tours then Bordeaux very briefly during World War II, when it became apparent that Paris would soon fall into German hands. Clermont-Ferrand (29 June 1940), the government was relocated from Bordeaux to Clermont-Ferrand, during a single day, before going to Vichy, which had a larger hotel capacity. Vichy (1940‚Äì1944), the Third Republic was abolished in Vichy and replaced it with the French State. Brazzaville (1940‚Äì1943), with metropolitan France under Axis powers rule, Brazzaville was announced as the seat of the Free France government. Algiers (1943‚Äì1944), the city was made the seat of Free France, to be closer to the war in Europe. Paris (1945-present day). ^ (in French) \"Le retour √† la R√©publique\", www.cheminsdememoire.gouv.fr. France history-related lists Capitals by country France geography-related lists Articles with French-language sources (fr) Articles with short description Short description is different from Wikidata Articles needing additional references from July 2012 All articles needing additional references All articles with unsourced statements Articles with unsourced statements from October 2022\nCatal√† ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ Espa√±ol Fran√ßais Polski Simple English Edit links Article Talk Read Edit View history Read Edit View history What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Download as PDF Printable version Wikidata item verification improve this article adding citations to reliable sources \"List of capitals of France\" news newspapers books scholar JSTOR Learn how and when to remove this message France liberation [1] edit Tournai Soissons Laon Paris Reims Orl√©ans Louis VI the Fat Orl√©ans Cathedral Daimbert Sens French States-General Troyes Hundred Years' War Bourges Charles VII Tours Louis XI Ch√¢teau de Plessis-lez-Tours Francis I Henry IV citation needed Versailles Louis XIV National Constituent Assembly French Third Republic Paris Commune Bordeaux World War I First Battle of the Marne World War II Clermont-Ferrand Vichy French State Brazzaville metropolitan France Axis powers Free France Algiers Free France Paris edit ^ \"Le retour √† la R√©publique\" https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&oldid=1187979917 Categories France history-related lists Capitals by country France geography-related lists Articles with French-language sources (fr) Articles with short description Short description is different from Wikidata Articles needing additional references from July 2012 All articles needing additional references All articles with unsourced statements Articles with unsourced statements from October 2022\nToggle the table of contents List of capitals of France 6 languages Catal√† ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ Espa√±ol Fran√ßais Polski Simple English Edit links Article Talk English Read Edit View history Tools Read Edit View history What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Download as PDF Printable version Wikidata item Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. Find sources: \"List of capitals of France\" ‚Äì news ¬∑ newspapers ¬∑ books ¬∑ scholar ¬∑ JSTOR Find sources: \"List of capitals of France\" ‚Äì news ¬∑ newspapers ¬∑ books ¬∑ scholar ¬∑ JSTOR (July 2012) July 2012 (Learn how and when to remove this message) [ ] [edit] [ edit ] citation needed [edit] [ edit ] ^ (in French) \"Le retour √† la R√©publique\", www.cheminsdememoire.gouv.fr. (in French)",
                  "site_name": "Wikipedia",
                  "site_long_name": "en.wikipedia.org",
                  "age": "2023-12-02T17:44:00.000Z",
                  "language": "en",
                  "image_urls": [],
                  "links": [
                        "https://en.wikipedia.org/#bodyContent",
                        "https://en.wikipedia.org/wiki/Main_Page",
                        "/wiki/Wikipedia:Contents",
                        "/wiki/Portal:Current_events",
                        "/wiki/Special:Random",
                        "/wiki/Wikipedia:About",
                        "//en.wikipedia.org/wiki/Wikipedia:Contact_us",
                        "/wiki/Help:Contents",
                        "/wiki/Help:Introduction",
                        "/wiki/Wikipedia:Community_portal",
                        "/wiki/Special:RecentChanges",
                        "/wiki/Wikipedia:File_upload_wizard",
                        "/wiki/Special:SpecialPages",
                        "/wiki/Special:Search",
                        "https://donate.wikimedia.org/?wmf_source=donate&wmf_medium=sidebar&wmf_campaign=en.wikipedia.org&uselang=en",
                        "/w/index.php?title=Special:CreateAccount&returnto=List+of+capitals+of+France",
                        "/w/index.php?title=Special:UserLogin&returnto=List+of+capitals+of+France",
                        "/wiki/Special:MyContributions",
                        "/wiki/Special:MyTalk",
                        "https://en.wikipedia.org/#",
                        "https://en.wikipedia.org/#Chronology",
                        "https://en.wikipedia.org/#References",
                        "https://ca.wikipedia.org/wiki/Capitals_de_Fran%C3%A7a",
                        "https://el.wikipedia.org/wiki/%CE%A0%CF%81%CF%89%CF%84%CE%B5%CF%8D%CE%BF%CF%85%CF%83%CE%B1_%CF%84%CE%B7%CF%82_%CE%93%CE%B1%CE%BB%CE%BB%CE%AF%CE%B1%CF%82",
                        "https://es.wikipedia.org/wiki/Capital_de_Francia",
                        "https://fr.wikipedia.org/wiki/Capitale_de_la_France",
                        "https://pl.wikipedia.org/wiki/Stolica_Francji",
                        "https://simple.wikipedia.org/wiki/Capital_of_France",
                        "https://www.wikidata.org/wiki/Special:EntityPage/Q2743079#sitelinks-wikipedia",
                        "https://en.wikipedia.org/wiki/List_of_capitals_of_France",
                        "/wiki/Talk:List_of_capitals_of_France",
                        "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&action=edit",
                        "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&action=history",
                        "/wiki/Special:WhatLinksHere/List_of_capitals_of_France",
                        "/wiki/Special:RecentChangesLinked/List_of_capitals_of_France",
                        "//en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard",
                        "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&oldid=1187979917",
                        "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&action=info",
                        "/w/index.php?title=Special:CiteThisPage&page=List_of_capitals_of_France&id=1187979917&wpFormIdentifier=titleform",
                        "/w/index.php?title=Special:UrlShortener&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FList_of_capitals_of_France",
                        "/w/index.php?title=Special:QrCode&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FList_of_capitals_of_France",
                        "/w/index.php?title=Special:DownloadAsPdf&page=List_of_capitals_of_France&action=show-download-screen",
                        "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&printable=yes",
                        "https://www.wikidata.org/wiki/Special:EntityPage/Q2743079",
                        "/wiki/File:Question_book-new.svg",
                        "/wiki/Wikipedia:Verifiability",
                        "/wiki/Special:EditPage/List_of_capitals_of_France",
                        "/wiki/Help:Referencing_for_beginners",
                        "https://www.google.com/search?as_eq=wikipedia&q=%22List+of+capitals+of+France%22",
                        "https://www.google.com/search?tbm=nws&q=%22List+of+capitals+of+France%22+-wikipedia&tbs=ar:1",
                        "https://www.google.com/search?&q=%22List+of+capitals+of+France%22&tbs=bkt:s&tbm=bks",
                        "https://www.google.com/search?tbs=bks:1&q=%22List+of+capitals+of+France%22+-wikipedia",
                        "https://scholar.google.com/scholar?q=%22List+of+capitals+of+France%22",
                        "https://www.jstor.org/action/doBasicSearch?Query=%22List+of+capitals+of+France%22&acc=on&wc=on",
                        "/wiki/Help:Maintenance_template_removal",
                        "https://en.wikipedia.org/wiki/France",
                        "https://en.wikipedia.org/wiki/Liberation_of_Paris",
                        "https://en.wikipedia.org/#cite_note-1",
                        "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&action=edit&section=1",
                        "https://en.wikipedia.org/wiki/Tournai",
                        "https://en.wikipedia.org/wiki/Soissons",
                        "https://en.wikipedia.org/wiki/Laon",
                        "https://en.wikipedia.org/wiki/Paris",
                        "https://en.wikipedia.org/wiki/Reims",
                        "https://en.wikipedia.org/wiki/Orl%C3%A9ans",
                        "https://en.wikipedia.org/wiki/Louis_VI_the_Fat",
                        "https://en.wikipedia.org/wiki/Orl%C3%A9ans_Cathedral",
                        "https://en.wikipedia.org/wiki/Daimbert",
                        "https://en.wikipedia.org/wiki/Sens",
                        "https://en.wikipedia.org/wiki/Estates_General_(France)",
                        "https://en.wikipedia.org/wiki/Troyes",
                        "https://en.wikipedia.org/wiki/Hundred_Years%27_War",
                        "https://en.wikipedia.org/wiki/Bourges",
                        "https://en.wikipedia.org/wiki/Charles_VII_of_France",
                        "https://en.wikipedia.org/wiki/Tours",
                        "https://en.wikipedia.org/wiki/Louis_XI_of_France",
                        "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Plessis-lez-Tours",
                        "https://en.wikipedia.org/wiki/Francis_I_of_France",
                        "https://en.wikipedia.org/wiki/Henry_IV_of_France",
                        "/wiki/Wikipedia:Citation_needed",
                        "https://en.wikipedia.org/wiki/Versailles,_Yvelines",
                        "https://en.wikipedia.org/wiki/Louis_XIV",
                        "https://en.wikipedia.org/wiki/National_Constituent_Assembly_(France)",
                        "https://en.wikipedia.org/wiki/French_Third_Republic",
                        "https://en.wikipedia.org/wiki/Paris_Commune",
                        "https://en.wikipedia.org/wiki/Bordeaux",
                        "https://en.wikipedia.org/wiki/World_War_I",
                        "https://en.wikipedia.org/wiki/First_Battle_of_the_Marne",
                        "https://en.wikipedia.org/wiki/World_War_II",
                        "https://en.wikipedia.org/wiki/Clermont-Ferrand",
                        "https://en.wikipedia.org/wiki/Vichy",
                        "https://en.wikipedia.org/wiki/Vichy_France",
                        "https://en.wikipedia.org/wiki/Brazzaville",
                        "https://en.wikipedia.org/wiki/Metropolitan_France",
                        "https://en.wikipedia.org/wiki/Axis_powers",
                        "https://en.wikipedia.org/wiki/Free_France",
                        "https://en.wikipedia.org/wiki/Algiers",
                        "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&action=edit&section=2",
                        "https://en.wikipedia.org/#cite_ref-1",
                        "https://www.cheminsdememoire.gouv.fr/fr/revue/le-retour-la-republique",
                        "/wiki/Help:Category",
                        "/wiki/Category:France_history-related_lists",
                        "/wiki/Category:Capitals_by_country",
                        "/wiki/Category:France_geography-related_lists",
                        "/wiki/Category:Articles_with_French-language_sources_(fr)",
                        "/wiki/Category:Articles_with_short_description",
                        "/wiki/Category:Short_description_is_different_from_Wikidata",
                        "/wiki/Category:Articles_needing_additional_references_from_July_2012",
                        "/wiki/Category:All_articles_needing_additional_references",
                        "/wiki/Category:All_articles_with_unsourced_statements",
                        "/wiki/Category:Articles_with_unsourced_statements_from_October_2022",
                        "/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_4.0_International_License",
                        "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Terms_of_Use",
                        "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy",
                        "https://wikimediafoundation.org/",
                        "/wiki/Wikipedia:General_disclaimer",
                        "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Universal_Code_of_Conduct",
                        "https://developer.wikimedia.org",
                        "https://stats.wikimedia.org/#/en.wikipedia.org",
                        "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Cookie_statement",
                        "https://en.m.wikipedia.org/w/index.php?title=List_of_capitals_of_France&mobileaction=toggle_view_mobile",
                        "https://www.wikimedia.org/",
                        "https://www.mediawiki.org/"
                  ],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://en.wikipedia.org&size=96",
                  "snippets": [
                        "Tours (10‚Äì13 June 1940), the city served as the temporary capital of France during World War II after the government fled Paris due to the German advance.",
                        "Paris (1789‚Äì1871), on 5 and 6 October 1789, a throng from Paris invaded the castle and forced the royal family to move back to Paris. The National Constituent Assembly followed the King to Paris soon afterward; Versailles lost its role of capital city.",
                        "Troyes (1419‚Äì1422), for a short time during the Hundred Years' War, the city was the seat of the royal government. Bourges (1422‚Äì1444), Charles VII was forced to flee from Paris. Tours (1444‚Äì1527), Louis XI made the Ch√¢teau de Plessis-lez-Tours his residence. Paris (1528‚Äì1589), Francis I had established his court in Paris."
                  ]
            },
            {
                  "title": "Paris, France - Intercultural City - The Council of Europe",
                  "url": "https://www.coe.int/en/web/interculturalcities/paris",
                  "description": "Paris is the <strong>capital</strong> and most populous city <strong>of</strong> <strong>France</strong>. Situated on the Seine River, in the north of the country, it is in the centre of the √éle-de-<strong>France</strong> region, also known as the r√©gion parisienne, &quot;Paris Region&quot;. The City of Paris has an area of 105 km¬≤ and a population of 2,241,346 (2014 ...",
                  "content": null,
                  "site_name": "Coe",
                  "site_long_name": "coe.int",
                  "age": "2024-10-15T08:30:31.000Z",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://coe.int&size=96",
                  "snippets": [
                        "Paris is the capital and most populous city of France. Situated on the Seine River, in the north of the country, it is in the centre of the √éle-de-France region, also known as the r√©gion parisienne, \"Paris Region\". The City of Paris has an area of 105 km¬≤ and a population of 2,241,346 (2014 estimate)."
                  ]
            },
            {
                  "title": "Paris | Definition, Map, Population, Facts, & History | Britannica",
                  "url": "https://www.britannica.com/place/Paris",
                  "description": "Paris, city and <strong>capital</strong> <strong>of</strong> <strong>France</strong>, located along the Seine River, in the north-central part of the country. Paris is one of the world‚Äôs most important and attractive cities, famed for its gastronomy, haute couture, painting, literature, and intellectual community.",
                  "content": "Paris\nNews ‚Ä¢ Character of the city Landscape City site\nWhere is Paris located? What is the weather like in Paris? What is the landscape of Paris? Paris is the capital of what country?\nOur editors will review what you‚Äôve submitted and determine whether to revise the article. Paris is located in the north-central part of France along the Seine River. It is at the center of the √éle-de-France region. Paris weather can be very changeable. The wind can be sharp and cold in winter and spring. The annual average temperature is in the lower 50s ¬∞F (about 12 ¬∞C); the July average is in the upper 60s ¬∞F (about 19 ¬∞C), and the January average is in the upper 30s ¬∞F (about 3 ¬∞C). Paris occupies a depression hollowed out by the Seine. The surrounding heights have elevations that vary from 430 feet (130 meters), at the butte of Montmartre in the north, to 85 feet (26 meters), in the Grenelle area in the southwest. The city is surrounded by great forests of beech and oak, called the ‚Äúlungs of Paris,‚Äù as they help purify the air in the region. Paris is the national capital of France. Paris, city and capital of France, situated in the north-central part of the country. People were living on the site of the present-day city, located along the Seine River some 233 miles (375 km) upstream from the river‚Äôs mouth on the English Channel (La Manche), by about 7600 bce. The modern city has spread from the island (the √éle de la Cit√©) and far beyond both banks of the Seine. Paris occupies a central position in the rich agricultural region known as the Paris Basin, and it constitutes one of eight d√©partements of the √éle-de-France administrative region. It is by far the country‚Äôs most important centre of commerce and culture. Area city, 41 square miles (105 square km); metropolitan area, 890 square miles (2,300 square km). Pop. (2020 est.) city, 2,145,906; (2020 est.) urban agglomeration, 10,858,874. For centuries Paris has been one of the world‚Äôs most important and attractive cities. It is appreciated for the opportunities it offers for business and commerce, for study, for culture, and for entertainment; its gastronomy, haute couture, painting, literature, and intellectual community especially enjoy an enviable reputation. Its sobriquet ‚Äúthe City of Light‚Äù (‚Äúla Ville Lumi√®re‚Äù), earned during the Enlightenment, remains appropriate, for Paris has retained its importance as a centre for education and intellectual pursuits. Paris‚Äôs site at a crossroads of both water and land routes significant not only to France but also to Europe has had a continuing influence on its growth. Under Roman administration, in the 1st century bce, the original site on the √éle de la Cit√© was designated the capital of the Parisii tribe and territory. The Frankish king Clovis I had taken Paris from the Gauls by 494 ce and later made his capital there. Under Hugh Capet (ruled 987‚Äì996) and the Capetian dynasty the preeminence of Paris was firmly established, and Paris became the political and cultural hub as modern France took shape. France has long been a highly centralized country, and Paris has come to be identified with a powerful central state, drawing to itself much of the talent and vitality of the provinces. The three main parts of historical Paris are defined by the Seine. At its centre is the √éle de la Cit√©, which is the seat of religious and temporal authority (the word cit√© connotes the nucleus of the ancient city). The Seine‚Äôs Left Bank (Rive Gauche) has traditionally been the seat of intellectual life, and its Right Bank (Rive Droite) contains the heart of the city‚Äôs economic life, but the distinctions have become blurred in recent decades. The fusion of all these functions at the centre of France and, later, at the centre of an empire, resulted in a tremendously vital environment. In this environment, however, the emotional and intellectual climate that was created by contending powers often set the stage for great violence in both the social and political arenas‚Äîthe years 1358, 1382, 1588, 1648, 1789, 1830, 1848, and 1871 being notable for such events. In its centuries of growth Paris has for the most part retained the circular shape of the early city. Its boundaries have spread outward to engulf the surrounding towns (bourgs), usually built around monasteries or churches and often the site of a market. From the mid-14th to the mid-16th century, the city‚Äôs growth was mainly eastward; since then it has been westward. It comprises 20 arrondissements (municipal districts), each of which has its own mayor, town hall, and particular features. The numbering begins in the heart of Paris and continues in the spiraling shape of a snail shell, ending to the far east. Parisians refer to the arrondissements by number as the first (premier), second (deuxi√®me), third (troisi√®me), and so on. Adaptation to the problems of urbanization‚Äîsuch as immigration, housing, social infrastructure, public utilities, suburban development, and zoning‚Äîhas produced the vast urban agglomeration. Paris is positioned at the centre of the √éle-de-France region, which is crossed by the Seine, Oise, and Marne rivers. The city is ringed with great forests of beech and oak; they are called the ‚Äúlungs of Paris,‚Äù for they help to purify the air in the heavily industrialized region. The city proper is small; no corner is farther than about 6 miles (10 km) from the square in front of Notre-Dame Cathedral. It occupies a depression hollowed out by the Seine, and the surrounding heights have been respected as the limits of the city. Elevation varies from 430 feet (130 metres) at the butte of Montmartre, in the north, to 85 feet (26 metres) in the Grenelle area, in the southwest. The Seine flows for about 8 miles (13 km) through the centre of the city and 10 of the 20 arrondissements. It enters the city at the southeast corner, flows northwestward, and turns gradually southwestward, eventually leaving Paris at the southwest corner. As a result, what starts out as the stream‚Äôs east bank becomes its north bank and ends as the west bank, and the Parisians therefore adopted the simple, unchanging designation of Right Bank and Left Bank (when facing downstream). Specific places, however, are usually indicated by arrondissement or by quarter (quartier). At water level, some 30 feet (9 metres) below street level, the river is bordered‚Äîat least on those portions not transformed into expressways‚Äîby cobbled quays graced with trees and shrubs. From street level another line of trees leans toward the water. Between the two levels, the retaining walls, usually made of massive stone blocks, are decorated with the great iron rings once used to moor merchant vessels, and some are pierced by openings left by water gates for old palaces or inspection ports for subways, sewers, and underpasses. At intermittent points the walls are shawled in ivy. The garden effect of the Seine‚Äôs open waters and its tree-lined banks foster in part the appearance of Paris as a city well-endowed with green spaces. Tens of thousands of trees (mostly plane trees, with a scattering of chestnuts) line the streets as well, and numerous public parks, gardens, and squares dot the city. Most of the parks and gardens of the modern central city are on land that formerly was reserved for the kings on the old city‚Äôs outskirts. Under Napoleon III, who had been impressed by London‚Äôs parks while living in Britain, two ancient royal military preserves at the approaches to Paris were made into ‚ÄúEnglish‚Äù parks‚Äîthe Bois de Boulogne to the west and the Bois de Vincennes to the east. Moreover, during his reign a large area of land was laid out in promenades and garden squares. Under Mayor Jacques Chirac in the late 20th century, the municipal government initiated efforts to create new parks, and such projects continued into the 21st century. The Promenade Plant√©e is a partially elevated parkway built along an abandoned rail line and viaduct in the 12th arrondissement (municipal district) of Paris, on the right bank of the Seine River. It was the world‚Äôs first elevated park (first phase completed in 1994) and the first ‚Äúgreen space‚Äù constructed on a viaduct; it has since inspired other cities to turn abandoned rail lines into public parkland. The entire feature runs some 4.5 km (about 3 miles) from the Op√©ra Bastille to the Bois de Vincennes. Located underneath the elevated portion is the Viaduc des Arts, which stretches along the Avenue Daumesnil. Its former archways house specialized commercial establishments.\nIntroduction & Top Questions Character of the city LandscapeCity siteClimateCity layout√éle de la Cit√©Notre-Dame de Paris√éle Saint-LouisThe LouvreThe ‚ÄúTriumphal Way‚ÄùAround the Eiffel TowerThe InvalidesThe ministry quarterThe Institute of FranceSaint-Germain-des-Pr√©s and the Latin QuarterThe Rue de Rivoli and Right Bank environsThe H√¥tel de VilleThe BastilleThe MaraisThe HallesThe ButtesModern business quarters City site Climate City layout√éle de la Cit√©Notre-Dame de Paris√éle Saint-LouisThe LouvreThe ‚ÄúTriumphal Way‚ÄùAround the Eiffel TowerThe InvalidesThe ministry quarterThe Institute of FranceSaint-Germain-des-Pr√©s and the Latin QuarterThe Rue de Rivoli and Right Bank environsThe H√¥tel de VilleThe BastilleThe MaraisThe HallesThe ButtesModern business quarters √éle de la Cit√© Notre-Dame de Paris √éle Saint-Louis The Louvre The ‚ÄúTriumphal Way‚Äù Around the Eiffel Tower The Invalides The ministry quarter The Institute of France Saint-Germain-des-Pr√©s and the Latin Quarter The Rue de Rivoli and Right Bank environs The H√¥tel de Ville The Bastille The Marais The Halles The Buttes Modern business quarters People EconomyManufacturingFinance and other servicesTransportation Manufacturing Finance and other services Transportation Administration and societyGovernmentMunicipal servicesHealthEducation Government Municipal services Health Education Cultural life HistoryFoundation and early growth (c. 7600 bce to 12th century ce)Medieval development and discord (12th century to 16th century)From Renaissance architecture to beautification schemes (15th century to 18th century)Paris during and after the French Revolution (1789 to mid-19th century)Haussmann‚Äôs Paris (mid-19th century to 1968)The city of grands projets (1968 to 21st century) Foundation and early growth (c. 7600 bce to 12th century ce) Medieval development and discord (12th century to 16th century) From Renaissance architecture to beautification schemes (15th century to 18th century) Paris during and after the French Revolution (1789 to mid-19th century) Haussmann‚Äôs Paris (mid-19th century to 1968) The city of grands projets (1968 to 21st century) What is the weather like in Paris? What is the landscape of Paris? Table Of Contents Official Tourism Site of Paris, France Brown University Library - Center for Digital Scholarship - Paris: Capital of the 19th Century Paris - Children's Encyclopedia (Ages 8-11) Paris - Student Encyclopedia (Ages 11 and up)\nParis Introduction & Top Questions Character of the city Landscape City site Climate City layout √éle de la Cit√© Notre-Dame de Paris √éle Saint-Louis The Louvre The ‚ÄúTriumphal Way‚Äù Around the Eiffel Tower The Invalides The ministry quarter The Institute of France Saint-Germain-des-Pr√©s and the Latin Quarter The Rue de Rivoli and Right Bank environs The H√¥tel de Ville The Bastille The Marais The Halles The Buttes Modern business quarters People Economy Manufacturing Finance and other services Transportation Administration and society Government Municipal services Health Education Cultural life History Foundation and early growth (c. 7600 bce to 12th century ce) Medieval development and discord (12th century to 16th century) From Renaissance architecture to beautification schemes (15th century to 18th century) Paris during and after the French Revolution (1789 to mid-19th century) Haussmann‚Äôs Paris (mid-19th century to 1968) The city of grands projets (1968 to 21st century) References & Edit History Quick Facts & Related Topics Images & Videos Paris summary European Capitals Quiz Guess the City by Its River Quiz World Cities Passport to Europe World Capitals Quiz What is the weather like in Paris? What is the landscape of Paris? Why New York Is Called \"The Big Apple\" and How 8 Other Famous Cities Got Their Nicknames 10 Places in (and around) Paris What If the President Is Impeached? 10 Best Hockey Players of All Time Was Martin Luther King, Jr., a Republican or a Democrat? Estimated Battle Casualties During the Normandy Invasion and Campaign to Liberate Paris (June‚ÄìAugust 1944) 10 Legendary Creatures from Around the World 7 Drugs that Changed the World Do We Really Swallow Spiders in Our Sleep? Geography & Travel Cities & Towns Cities & Towns P-S Paris; Eiffel Tower Facebook X https://www.britannica.com/place/Paris Official Tourism Site of Paris, France Brown University Library - Center for Digital Scholarship - Paris: Capital of the 19th Century Paris - Children's Encyclopedia (Ages 8-11) Paris - Student Encyclopedia (Ages 11 and up) John Anthony Charles Ardagh Writer and journalist. Author of France Today and others. Blake Ehrlich Author of Paris on the Seine; London on the Thames. All The Editors of Encyclopaedia Britannica Encyclopaedia Britannica's editors oversee subject areas in which they have extensive knowledge, whether from years of experience gained by working on that content or via study for an advanced degree. They write new content and verify and edit content received from contributors. Article History Maurice Kamto: Police surround home of opposition firebrand in Cameroon No. 1 Aryna Sabalenka ends Iga Swiatek‚Äôs 26-match French Open winning streak and reaches the final Wall Street‚Äôs big rally stalls following some discouraging economic data A fairy tale in Paris: French wild card Boisson stuns No. 6 Andreeva to reach French Open semis US and Europe trade negotiators say progress but no breakthroughs on tariff talks in Paris city France Seine River English Channel Paris Paris Basin constitutes √éle-de-France culture metropolitan area intellectual community sobriquet Enlightenment Europe Clovis I Hugh Capet Capetian dynasty hub Paris, France environment 1848 1871 Britannica Quiz European Capitals Quiz map of Paris c. 1900 comprises arrondissements Adaptation infrastructure The Editors of Encyclopaedia Britannica Paris Oise Marne Notre-Dame Cathedral Seine Subscribe designation intermittent plane trees chestnuts Napoleon III London‚Äôs Britain Bois de Boulogne promenades Jacques Chirac municipal government Promenade Plant√©e Bastille Vincennes\nbce ce Geography & Travel Cities & Towns Cities & Towns P-S Paris; Eiffel Tower View of the Paris skyline from Montparnasse. (more) View of the Paris skyline from Montparnasse. View of the Paris skyline from Montparnasse. (more) Copy Citation Facebook X Written by John Anthony Charles Ardagh Blake Ehrlich ‚Ä¢ Fact-checked by The Editors of Encyclopaedia Britannica Last Updated: Jun 9, 2025 ‚Ä¢ ‚Ä¢ ‚Ä¢ June 9, 2025, 2:57 AM ET (BBC) ...(Show more) ‚Ä¢ ... (Show more) ‚Ä¢ June 5, 2025, 12:25 PM ET (AP) ‚Ä¢ ‚Ä¢ June 4, 2025, 4:51 PM ET (AP) ‚Ä¢ ‚Ä¢ June 4, 2025, 2:45 PM ET (AP) ‚Ä¢ ‚Ä¢ June 4, 2025, 10:51 AM ET (AP) ‚Ä¢ bce Paris(more) (more) bce ce Paris, FranceThe Seine River flows past the √éle Saint-Louis in Paris, France.(more) The Seine River flows past the √éle Saint-Louis in Paris, France. (more) map of Paris c. 1900Map of Paris, c. 1900, from the 10th edition of Encyclop√¶dia Britannica.(more) Map of Paris, c. 1900, from the 10th edition of Encyclop√¶dia Britannica. (more) The Editors of Encyclopaedia Britannica ParisParis and its metropolitan area.(more) Paris and its metropolitan area. (more)",
                  "site_name": "Britannica",
                  "site_long_name": "britannica.com",
                  "age": "2025-06-04T20:05:04.000Z",
                  "language": "en",
                  "image_urls": [
                        "https://cdn.britannica.com/mendel/eb-logo/MendelNewThistleLogo.png",
                        "https://cdn.britannica.com/50/59050-004-31D76B9F/Seine-River-Ile-Saint-Louis-France-Paris.jpg",
                        "https://cdn.britannica.com/87/24187-004-57308D95/Map-Paris-Encyclopaedia-Britannica-edition-1900.jpg",
                        "https://cdn.britannica.com/mendel-resources/3-141/images/shared/default3.png?v=3.141.1",
                        "https://cdn.britannica.com/31/94531-131-A6E89842/Brandenburg-Gate-Berlin.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/60/269560-131-B4CD857D/tower-bridge-over-river-thames-london-england.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/62/150762-131-841863E7/woman-feather-headdress-costume-Carnival-parade-Rio.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/66/96866-131-9185DF09/Flag-European-Union.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/05/124605-131-977A8DEB/Cathedral-Plaza-de-Armas-Lima-Peru.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/71/188471-131-4DF0E559/Sydney-Opera-House-Port-Jackson.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/67/26367-131-D082980B/Extension-Louvre-style-Paris-Second-Empire-Hector.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/78/124778-131-1A712C9A/impeachment-trial-Pres-illustration-Andrew-Johnson-Frank-March-28-1868.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/13/134913-131-D9520745/Ice-Sledge-Hockey-Canada-Cup-USA-ice-2010.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/57/203257-131-48B2BCA1/Martin-Luther-King-Jr-marchers-speech-I-August-28th-1963.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/91/257891-050-9F103448/normandy-invasion-estimated-battle-casualties-dday.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/20/249020-050-931D85D6/Chinese-dragon-sculpture-or-statue.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/53/143753-131-18E874E9/Aspirin-pills.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/89/173689-131-1E885102/wasp-spider-spinning-web.jpg?w=200&h=200&c=crop",
                        "https://cdn.britannica.com/36/135436-050-ED1D0FCE/skyline-Eiffel-Tower-France-Paris.jpg?w=400&h=300&c=crop",
                        "https://cdn.britannica.com/31/94531-131-A6E89842/Brandenburg-Gate-Berlin.jpg",
                        "https://cdn.britannica.com/87/24187-050-9356F0A4/Map-Paris-Encyclopaedia-Britannica-edition-1900.jpg?w=300",
                        "https://cdn.britannica.com/marketing/BlueThistle.webp"
                  ],
                  "links": [
                        "https://premium.britannica.com/premium-membership/?utm_source=premium&utm_medium=global-nav&utm_campaign=evergreen-cap",
                        "https://premium.britannica.com/premium-membership/?utm_source=premium&utm_medium=global-nav-mobile&utm_campaign=evergreen",
                        "https://premium.britannica.com/premium-membership/?utm_source=premium&utm_medium=hamburger-menu&utm_campaign=evergreen",
                        "https://www.britannica.com/History-Society",
                        "https://www.britannica.com/Science-Tech",
                        "https://www.britannica.com/Biographies",
                        "https://www.britannica.com/Animals-Nature",
                        "https://www.britannica.com/Geography-Travel",
                        "https://www.britannica.com/Arts-Culture",
                        "https://www.britannica.com/procon",
                        "https://www.britannica.com/money",
                        "https://www.britannica.com/quiz/browse",
                        "https://www.britannica.com/videos",
                        "https://www.britannica.com/on-this-day",
                        "https://www.britannica.com/one-good-fact",
                        "https://www.britannica.com/dictionary",
                        "https://www.britannica.com/new-articles",
                        "https://www.britannica.com/browse/Lifestyles-Social-Issues",
                        "https://www.britannica.com/browse/Philosophy-Religion",
                        "https://www.britannica.com/browse/Politics-Law-Government",
                        "https://www.britannica.com/browse/World-History",
                        "https://www.britannica.com/browse/Health-Medicine",
                        "https://www.britannica.com/browse/Science",
                        "https://www.britannica.com/browse/Technology",
                        "https://www.britannica.com/browse/biographies",
                        "https://www.britannica.com/browse/Birds-Reptiles-Vertebrates",
                        "https://www.britannica.com/browse/Bugs-Mollusks-Invertebrates",
                        "https://www.britannica.com/browse/Environment",
                        "https://www.britannica.com/browse/Fossil-Geologic-Time",
                        "https://www.britannica.com/browse/Mammals",
                        "https://www.britannica.com/browse/Plants",
                        "https://www.britannica.com/browse/Geography-Travel",
                        "https://www.britannica.com/browse/Entertainment-Pop-Culture",
                        "https://www.britannica.com/browse/Literature",
                        "https://www.britannica.com/browse/Sports-Recreation",
                        "https://www.britannica.com/browse/Visual-Arts",
                        "https://www.britannica.com/stories/companion",
                        "https://www.britannica.com/stories/demystified",
                        "https://www.britannica.com/gallery/browse",
                        "https://www.britannica.com/list/browse",
                        "https://www.britannica.com/podcasts",
                        "https://www.britannica.com/stories/spotlight",
                        "https://www.britannica.com/summary",
                        "https://www.britannica.com/question",
                        "https://www.britannica.com/stories/wtfact",
                        "https://kids.britannica.com/",
                        "https://www.britannica.com/chatbot",
                        "https://www.britannica.com/place/Paris",
                        "https://www.britannica.com/place/Paris#ref59646",
                        "https://www.britannica.com/place/Paris#ref59647",
                        "https://www.britannica.com/place/Paris#ref60484",
                        "https://www.britannica.com/place/Paris/Climate",
                        "https://www.britannica.com/place/Paris/Climate#ref277052",
                        "https://www.britannica.com/place/Paris/Climate#ref60491",
                        "https://www.britannica.com/place/Paris/Climate#ref60492",
                        "https://www.britannica.com/place/Paris/Ile-Saint-Louis",
                        "https://www.britannica.com/place/Paris/Ile-Saint-Louis#ref60488",
                        "https://www.britannica.com/place/Paris/Ile-Saint-Louis#ref60500",
                        "https://www.britannica.com/place/Paris/Ile-Saint-Louis#ref60486",
                        "https://www.britannica.com/place/Paris/The-Invalides",
                        "https://www.britannica.com/place/Paris/The-Invalides#ref60502",
                        "https://www.britannica.com/place/Paris/The-Invalides#ref277053",
                        "https://www.britannica.com/place/Paris/Saint-Germain-des-Pres-and-the-Latin-Quarter",
                        "https://www.britannica.com/place/Paris/Saint-Germain-des-Pres-and-the-Latin-Quarter#ref60499",
                        "https://www.britannica.com/place/Paris/The-Hotel-de-Ville",
                        "https://www.britannica.com/place/Paris/The-Hotel-de-Ville#ref60495",
                        "https://www.britannica.com/place/Paris/The-Hotel-de-Ville#ref60496",
                        "https://www.britannica.com/place/Paris/The-Halles",
                        "https://www.britannica.com/place/Paris/The-Halles#ref60504",
                        "https://www.britannica.com/place/Paris/The-Halles#ref60501",
                        "https://www.britannica.com/place/Paris/People",
                        "https://www.britannica.com/place/Paris/People#ref14538",
                        "https://www.britannica.com/place/Paris/People#ref14539",
                        "https://www.britannica.com/place/Paris/People#ref14540",
                        "https://www.britannica.com/place/Paris/Transportation",
                        "https://www.britannica.com/place/Paris/Transportation#ref14542",
                        "https://www.britannica.com/place/Paris/Transportation#ref14543",
                        "https://www.britannica.com/place/Paris/Transportation#ref14544",
                        "https://www.britannica.com/place/Paris/Transportation#ref14545",
                        "https://www.britannica.com/place/Paris/Education",
                        "https://www.britannica.com/place/Paris/Education#ref14547",
                        "https://www.britannica.com/place/Paris/Education#ref14548",
                        "https://www.britannica.com/place/Paris/Education#ref14549",
                        "https://www.britannica.com/place/Paris/Medieval-development-and-discord-12th-century-to-16th-century",
                        "https://www.britannica.com/place/Paris/Medieval-development-and-discord-12th-century-to-16th-century#ref14550",
                        "https://www.britannica.com/place/Paris/Paris-during-and-after-the-French-Revolution-1789-to-mid-19th-century",
                        "https://www.britannica.com/place/Paris/Paris-during-and-after-the-French-Revolution-1789-to-mid-19th-century#ref313267",
                        "https://www.britannica.com/place/Paris/Paris-during-and-after-the-French-Revolution-1789-to-mid-19th-century#ref313268",
                        "https://www.britannica.com/place/Paris/additional-info",
                        "https://www.britannica.com/facts/Paris",
                        "https://www.britannica.com/place/Paris/images-videos",
                        "https://cdn.britannica.com/36/135436-050-ED1D0FCE/skyline-Eiffel-Tower-France-Paris.jpg",
                        "https://cdn.britannica.com/63/64463-050-928FDB04/Paris-France.jpg",
                        "https://cdn.britannica.com/50/59050-050-852EE969/Seine-River-Ile-Saint-Louis-France-Paris.jpg",
                        "https://cdn.britannica.com/87/24187-050-9356F0A4/Map-Paris-Encyclopaedia-Britannica-edition-1900.jpg",
                        "https://cdn.britannica.com/11/127811-050-14FCCC53/Paris-area.jpg",
                        "https://www.britannica.com/video/Paris-Street-Rainy-Day-Gustave-Caillebotte-1877/290755",
                        "https://cdn.britannica.com/80/122180-050-9794442D/Pont-Neuf-Seine-River-Paris.jpg",
                        "https://cdn.britannica.com/67/159667-050-D335B9EC/Interior-Sainte-Chapelle-Paris-palace-chapel-Louis-IX.jpg",
                        "https://cdn.britannica.com/35/155335-050-D0C61BB7/Notre-Dame-de-Paris-France.jpg",
                        "https://cdn.britannica.com/49/82649-050-43C69550/Gargoyles-cathedral-E-E-Viollet-le-Duc-Notre-Dame-de-Paris.jpg",
                        "https://www.britannica.com/summary/Paris",
                        "https://www.britannica.com/quiz/european-capitals-quiz",
                        "https://www.britannica.com/quiz/guess-the-city-by-its-river-quiz",
                        "https://www.britannica.com/quiz/world-cities",
                        "https://www.britannica.com/quiz/passport-to-europe",
                        "https://www.britannica.com/quiz/capital-cities-of-the-world-quiz",
                        "https://www.britannica.com/question/What-is-the-weather-like-in-Paris",
                        "https://www.britannica.com/question/What-is-the-landscape-of-Paris",
                        "https://www.britannica.com/story/how-9-famous-cities-got-their-nicknames",
                        "https://www.britannica.com/list/10-places-in-and-around-paris",
                        "https://www.britannica.com/story/what-if-the-president-is-impeached",
                        "https://www.britannica.com/list/10-best-hockey-players-of-all-time",
                        "https://www.britannica.com/story/was-martin-luther-king-jr-a-republican-or-a-democrat",
                        "https://www.britannica.com/story/estimated-battle-casualties-during-the-normandy-invasion-on-june-6-1944",
                        "https://www.britannica.com/list/10-legendary-creatures-from-around-the-world",
                        "https://www.britannica.com/list/7-drugs-that-changed-the-world",
                        "https://www.britannica.com/story/do-we-really-swallow-spiders-in-our-sleep",
                        "https://www.britannica.com/browse/Cities-Towns",
                        "https://www.britannica.com/browse/Cities-Towns-P-S",
                        "https://www.facebook.com/BRITANNICA/",
                        "https://x.com/britannica",
                        "https://en.parisinfo.com",
                        "https://library.brown.edu/cds/paris/",
                        "https://kids.britannica.com/kids/article/Paris/345991",
                        "https://kids.britannica.com/students/article/Paris/276286",
                        "https://www.britannica.com/contributor/John-Anthony-Charles-Ardagh/3343",
                        "https://www.britannica.com/contributor/Blake-Ehrlich/839",
                        "https://www.britannica.com/place/Paris/additional-info#contributors",
                        "https://www.britannica.com/editor/The-Editors-of-Encyclopaedia-Britannica/4419",
                        "https://www.britannica.com/place/Paris/additional-info#history",
                        "https://www.bbc.com/news/articles/c989v0pz13eo",
                        "https://www.britannica.com/news/443621/fb2327785605efe1c59ff81db4b58fb7",
                        "https://www.britannica.com/news/443621/cfaa9c8adc0658ae9a2759c56dc2bde2",
                        "https://www.britannica.com/news/443621/cfbf2350b8ae3a23fec425dd7144b106",
                        "https://www.britannica.com/news/443621/b03672b645df0d63765484391a3d2631",
                        "https://www.britannica.com/topic/city",
                        "https://www.britannica.com/place/France",
                        "https://www.britannica.com/place/Seine-River",
                        "https://www.britannica.com/place/English-Channel",
                        "https://www.britannica.com/place/Paris-Basin",
                        "https://www.merriam-webster.com/dictionary/constitutes",
                        "https://www.britannica.com/place/Ile-de-France-region-France",
                        "https://www.merriam-webster.com/dictionary/culture",
                        "https://www.britannica.com/topic/metropolitan-area",
                        "https://www.merriam-webster.com/dictionary/intellectual",
                        "https://www.merriam-webster.com/dictionary/community",
                        "https://www.merriam-webster.com/dictionary/sobriquet",
                        "https://www.britannica.com/event/Enlightenment-European-history",
                        "https://www.britannica.com/place/Europe",
                        "https://www.britannica.com/biography/Clovis-I",
                        "https://www.britannica.com/biography/Hugh-Capet",
                        "https://www.britannica.com/topic/Capetian-dynasty",
                        "https://www.britannica.com/dictionary/hub",
                        "https://www.merriam-webster.com/dictionary/environment",
                        "https://www.britannica.com/event/Revolutions-of-1848",
                        "https://www.britannica.com/event/Commune-of-Paris-1871",
                        "https://www.merriam-webster.com/dictionary/comprises",
                        "https://www.britannica.com/topic/arrondissement",
                        "https://www.merriam-webster.com/dictionary/Adaptation",
                        "https://www.merriam-webster.com/dictionary/infrastructure",
                        "https://www.britannica.com/place/Oise-River",
                        "https://www.britannica.com/place/Marne-River",
                        "https://www.britannica.com/topic/Notre-Dame-de-Paris",
                        "https://premium.britannica.com/student-subscription/?utm_source=premium&utm_medium=inline-cta&utm_campaign=august-2024",
                        "https://www.merriam-webster.com/dictionary/designation",
                        "https://www.merriam-webster.com/dictionary/intermittent",
                        "https://www.britannica.com/plant/plane-tree",
                        "https://www.britannica.com/plant/chestnut",
                        "https://www.britannica.com/biography/Napoleon-III-emperor-of-France",
                        "https://www.britannica.com/place/London",
                        "https://www.britannica.com/place/United-Kingdom",
                        "https://www.britannica.com/place/Bois-de-Boulogne",
                        "https://www.britannica.com/dictionary/promenades",
                        "https://www.britannica.com/biography/Jacques-Chirac",
                        "https://www.britannica.com/topic/local-government",
                        "https://www.britannica.com/place/Promenade-Plantee",
                        "https://www.britannica.com/topic/Bastille",
                        "https://www.britannica.com/place/Vincennes-France"
                  ],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://britannica.com&size=96",
                  "thumbnail": "https://cdn.britannica.com/36/135436-050-ED1D0FCE/skyline-Eiffel-Tower-France-Paris.jpg",
                  "snippets": [
                        "Paris, city and capital of France, situated in the north-central part of the country. People were living on the site of the present-day city, located along the Seine River some 233 miles (375 km) upstream from the river‚Äôs mouth on the English Channel (La Manche), by about 7600 bce.",
                        "Paris‚Äôs site at a crossroads of both water and land routes significant not only to France but also to Europe has had a continuing influence on its growth. Under Roman administration, in the 1st century bce, the original site on the √éle de la Cit√© was designated the capital of the Parisii tribe and territory.",
                        "The Frankish king Clovis I had taken Paris from the Gauls by 494 ce and later made his capital there. Under Hugh Capet (ruled 987‚Äì996) and the Capetian dynasty the preeminence of Paris was firmly established, and Paris became the political and cultural hub as modern France took shape.",
                        "Paris is the national capital of France."
                  ]
            },
            {
                  "title": "Paris facts: the capital of France in history",
                  "url": "https://home.adelphi.edu/~ca19535/page%204.html",
                  "description": "See details of Paris history. The French Kings, who governed <strong>France</strong>, from 448 until 1848, commissioned many beautiful monuments, such as Versailles Palace and the Louvre Museum. The Catholic Church and Parisians built many great churches, including Notre Dame and Sainte Chapelle. Paris is a world <strong>capital</strong> ...",
                  "content": null,
                  "site_name": "Adelphi",
                  "site_long_name": "home.adelphi.edu",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://home.adelphi.edu&size=96",
                  "snippets": [
                        "See details of Paris history. The French Kings, who governed France, from 448 until 1848, commissioned many beautiful monuments, such as Versailles Palace and the Louvre Museum. The Catholic Church and Parisians built many great churches, including Notre Dame and Sainte Chapelle. Paris is a world capital city of shopping and fashion, with Channel, Dior, Vuitton, Yves Saint Laurent among many other top french fashion brands.",
                        "Before Paris, the capital of France was Lyon (under the Romans). Paris first became the capital of France in 508 under King Clovis. After centuries with no unique capital of France, Paris retrieved its status of capital of France under King Philippe Auguste, who reigned between 1180 and 1223.",
                        "Paris is the capital of France, the largest country of Europe with 550 000 km2 (65 millions inhabitants).",
                        "Paris remained the capital of France until today, with one four year interruption."
                  ]
            },
            {
                  "title": "France | History, Maps, Flag, Population, Cities, Capital, & Facts | Britannica",
                  "url": "https://www.britannica.com/place/France",
                  "description": "<strong>France</strong>, a country of northwestern Europe, is historically and culturally among the most important countries in the Western world. It has also played a highly significant role in international affairs for centuries. Its <strong>capital</strong> is Paris, one of the most important cultural and commercial centers ...",
                  "content": null,
                  "site_name": "Britannica",
                  "site_long_name": "britannica.com",
                  "age": "2025-06-06T00:22:32.000Z",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://britannica.com&size=96",
                  "thumbnail": "https://cdn.britannica.com/82/682-050-8AA3D6A6/Flag-France.jpg",
                  "snippets": [
                        "France, a country of northwestern Europe, is historically and culturally among the most important countries in the Western world. It has also played a highly significant role in international affairs for centuries. Its capital is Paris, one of the most important cultural and commercial centers in the world.",
                        "As one of the five permanent members of the United Nations Security Council‚Äîtogether with the United States, Russia, the United Kingdom, and China‚ÄîFrance has the right to veto decisions put to the council. ... The capital and by far the most important city of France is Paris, one of the world‚Äôs preeminent cultural and commercial centres.",
                        "Historically and culturally among the most important nations in the Western world, France has also played a highly significant role in international affairs, with former colonies in every corner of the globe. Bounded by the Atlantic Ocean and the Mediterranean Sea, the Alps and the Pyrenees, France has long provided a geographic, economic, and linguistic bridge joining northern and southern Europe.",
                        "It is Europe‚Äôs most important agricultural producer and one of the world‚Äôs leading industrial powers. ... France is among the globe‚Äôs oldest nations, the product of an alliance of duchies and principalities under a single ruler in the Middle Ages. Today, as in that era, central authority is vested in the state, even though a measure of autonomy has been granted to the country‚Äôs r√©gions in recent decades."
                  ]
            },
            {
                  "title": "Infoclip: European Union Capitals - Paris, France - Multimedia Centre",
                  "url": "https://multimedia.europarl.europa.eu/en/video/infoclip-european-union-capitals-paris-france_I199003",
                  "description": "This stockshot provides illustrative images of Paris, <strong>capital</strong> <strong>of</strong> <strong>France</strong>, filmed in November 2020. It presents general views of the city, official buildings and sights, general atmosphere in the streets and historic places and buildings in the heart of the city during the coronavirus pandemic.",
                  "content": null,
                  "site_name": "Multimedia Centre",
                  "site_long_name": "multimedia.europarl.europa.eu",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://multimedia.europarl.europa.eu&size=96",
                  "thumbnail": "https://api.multimedia.europarl.europa.eu/documents/20125/77824196/1724427949176_I199003_mobile.jpg"
            },
            {
                  "title": "Discover the city of Paris | Paris the capital city of France",
                  "url": "https://www.cia-france.com/french-kids-teenage-courses/paris-school/visit-paris",
                  "description": "Discover Paris and learn French, the pleasure of making progress. Paris is the city to visit while improving your French.",
                  "content": null,
                  "site_name": "Cia-france",
                  "site_long_name": "cia-france.com",
                  "age": "2022-12-01T13:06:43.000Z",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://cia-france.com&size=96",
                  "thumbnail": "https://www.cia-france.com/media/121/presentation-paris_1920x1080.jpg",
                  "snippets": [
                        "Paris is the city of romance par excellence, the fashion capital and the best example of French art de vivre. Exploring Paris is an essential rite of passage for anyone who decides to learn French and get to know France. There are so many things to do and see in Paris that, however long you stay, it won't seem long enough.",
                        "You can climb to the top of the Eiffel Tower to enjoy breathtaking views of the city, wander along the Champs-Elys√©es, visit the Louvre, have fun at Disneyland Paris, go shopping or window-shopping in the stores of Le Marais and the Place des Vosges. Enjoying an ice-cream or macaroons on a terrace, enjoying the parks and gardens, seeing a musical or taking part in an Escape Game are all things you can do in the capital.",
                        "In Paris, our program meets the expectations of juniors and the requirements of their parents. Teens are sure to love their stay on an international campus with other teens from the world over, as well as activities, parties and exploring the curiosities of the capital.",
                        "In terms of internet access, there are many internet caf√©s and free wifi in public places (libraries, parks etc.). In terms of transport, the m√©tro (subway) and RER (regional train network) run between 6 a.m. and 1 a.m. At night, the Noctilien (night bus) runs from 0:30 to 5:30 a.m."
                  ]
            },
            {
                  "title": "Paris - Charming Capital of France | History and Top ...",
                  "url": "https://www.youtube.com/watch?v=cfGgrWHAgcY",
                  "description": "Enjoy the videos and music you love, upload original content, and share it all with friends, family, and the world on YouTube.",
                  "content": null,
                  "site_name": "YouTube",
                  "site_long_name": "youtube.com",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://youtube.com&size=96"
            },
            {
                  "title": "What are the three official capitals of France and which one is the most commonly visited? - Quora",
                  "url": "https://www.quora.com/What-are-the-three-official-capitals-of-France-and-which-one-is-the-most-commonly-visited",
                  "description": "Answer (1 of 3): Is it a serious question? <strong>France</strong> has only one official <strong>capital</strong>, which is Paris, which is The official <strong>capital</strong> <strong>of</strong> <strong>France</strong>, it is the country&#x27;s political, cultural, and economic center.",
                  "content": null,
                  "site_name": "Quora",
                  "site_long_name": "quora.com",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://quora.com&size=96",
                  "thumbnail": "https://qph.cf2.quoracdn.net/main-custom-t-1299-600x315-nfjunofpvfnkizbcsfmsrvtczfjvqyqt.jpeg"
            },
            {
                  "title": "Paris celebrates 2,000th birthday | July 8, 1951 | HISTORY",
                  "url": "https://www.history.com/this-day-in-history/july-8/paris-celebrates-2000th-birthday",
                  "description": "Paris, the <strong>capital</strong> city <strong>of</strong> <strong>France</strong>, celebrates turning 2,000 years old. The City of Lights was most likely founded around 250 B.C.",
                  "content": null,
                  "site_name": "HISTORY",
                  "site_long_name": "history.com",
                  "age": "2009-11-24T18:04:28.000Z",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://history.com&size=96",
                  "thumbnail": "https://res.cloudinary.com/aenetworks/image/upload/c_fill,w_1200,h_630,g_auto/dpr_auto/f_auto/q_auto:eco/v1/55752370_awhdev?_a=BAVAZGDX0",
                  "snippets": [
                        "On July 8, 1951, Paris, the capital city of France, celebrates turning 2,000 years old.",
                        "By 52 B.C., Julius Caesar and the Romans had taken over the area, which eventually became Christianized and known as Lutetia, Latin for ‚Äúmidwater dwelling.‚Äù The settlement later spread to both the left and right banks of the Seine and the name Lutetia was replaced with ‚ÄúParis.‚Äù In 987 A.D., Paris became the capital of France.",
                        "Convicted of murder on meager evidence, the singing Wobbly Joe Hill is sentenced on July 8, 1914 to be executed in Utah. A native of Sweden who immigrated to the U.S. in 1879, Joe Hill joined the International Workers of the World (IWW) in 1910. The IWW was an industrial union that rejected the capitalist [‚Ä¶]",
                        "Hausmann‚Äôs designs gave the city wide, tree-lined boulevards, large public parks, a new sewer system and other public works projects. The city continued to develop as an important hub for the arts and culture. In the 1860s, an artistic movement known as French Impression emerged, featuring the work of a group of Paris-based artists that included Claude Monet and Pierre-Auguste Renoir."
                  ]
            },
            {
                  "title": "Paris 4K - Paris Capital Of France In 4K |",
                  "url": "https://www.youtube.com/watch?v=_6UBxbX4GiQ",
                  "description": "Enjoy the videos and music you love, upload original content, and share it all with friends, family, and the world on YouTube.",
                  "content": null,
                  "site_name": "YouTube",
                  "site_long_name": "youtube.com",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://youtube.com&size=96"
            },
            {
                  "title": "What is the capital of France? Overview of Paris/",
                  "url": "https://www.iroamly.com/france-travel/what-is-the-capital-of-france.html",
                  "description": "Dive into the charm of Paris, the <strong>capital</strong> <strong>of</strong> <strong>France</strong>! Explore its rich history, iconic attractions, and delectable cuisine in our guide. Click to learn more!",
                  "content": null,
                  "site_name": "iRoamly",
                  "site_long_name": "iroamly.com",
                  "age": "2024-11-28T17:42:20.000Z",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://iroamly.com&size=96",
                  "thumbnail": "https://www.iroamly.com/images/article/france/city-of-lights.webp",
                  "snippets": [
                        "Dive into the charm of Paris, the capital of France! Explore its rich history, iconic attractions, and delectable cuisine in our guide. Click to learn more!/",
                        "One interruption in Paris's role as capital came during the French Revolution, when fear of Parisian rebellion saw the revolutionary government declare the capital to be Versailles in 1789.  ¬∑ Its reign lasted less than two years, however, and the city swiftly resumed its role. In the centuries since, the city ‚Äî for better or worse ‚Äî has come to embody France itself, enduring fires, plagues, wars, and rebellions.",
                        "Enjoy exploring the past, relishing the present, and marveling at the landscape and soul of Paris.  ¬∑ It's not just France's capital‚Äîit's a world unto itself, waiting to be explored for its every delight.",
                        "Paris, being the culinary capital of France, has a gastronomic scene second to none."
                  ]
            },
            {
                  "title": "Anand S - What is the capital of France? Qwen3-30b-a3b",
                  "url": "https://www.linkedin.com/posts/sanand0_me-what-is-the-capital-of-france-qwen3-activity-7324655268640829444-Qm1Q",
                  "description": "Login to LinkedIn to keep in touch with people you know, share ideas, and build your career.",
                  "content": null,
                  "site_name": "LinkedIn",
                  "site_long_name": "linkedin.com",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://linkedin.com&size=96"
            },
            {
                  "title": "Does anyone know?@Typicalxashley  | TikTok",
                  "url": "https://www.tiktok.com/@holdendavenport/video/7484780756150111531",
                  "description": "TikTok video from Holden Davenport (@holdendavenport)",
                  "content": null,
                  "site_name": "TikTok",
                  "site_long_name": "tiktok.com",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://tiktok.com&size=96"
            },
            {
                  "title": "What‚Äôs the Capital of France? Find Out with Fun Facts About France! #france #eiffel #ParisFacts - YouTube",
                  "url": "https://www.youtube.com/shorts/faP_tmetYj8",
                  "description": "Do you know what city is called the &#x27;City of Light&#x27;? Join us for this exciting quiz where we uncover the <strong>capital</strong> <strong>of</strong> <strong>France</strong>! Learn amazing facts about Paris, ...",
                  "content": null,
                  "site_name": "YouTube",
                  "site_long_name": "youtube.com",
                  "age": "2025-01-10T16:32:21.000Z",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://youtube.com&size=96",
                  "thumbnail": "https://i.ytimg.com/vi_webp/faP_tmetYj8/oardefault.webp"
            },
            {
                  "title": "Overview of France - Welcome to France",
                  "url": "https://www.welcometofrance.com/en/fiche/overview-of-france",
                  "description": "Discover the latest information about Overview <strong>of</strong> <strong>France</strong> on Welcome to <strong>France</strong> website numerous sheets dedicated to foreign talents wishing to settle in <strong>France</strong>",
                  "content": null,
                  "site_name": "Welcome to France",
                  "site_long_name": "welcometofrance.com",
                  "age": "2024-12-16T14:39:15.000Z",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://welcometofrance.com&size=96",
                  "snippets": [
                        "Day-to-day life Discover France ¬∑ Date of update 17/12/2019 ¬∑ Surface area: 633,186 sq. km. Population 66.6 million ¬∑ Capital city: Paris ¬∑ Official language: French ¬∑ Currency: Euro (EUR) System of government: Republic ¬∑ Founding member of the European Union ¬∑",
                        "Prime Minister (Head of Government): Mr. Fran√ßois BAYROU ¬∑ The climate in mainland France is temperate, with quite significant regional differences. Temperatures are relatively mild and rainfall occurs throughout the year. Regional variations occur due to latitude and differences in distance to the sea or mountainous areas.",
                        "President of the Republic (Head of State): Mr."
                  ]
            },
            {
                  "title": "Why is Paris the capital of France? | Blog | Toit de Paris",
                  "url": "https://en.toitdeparis.com/post/why-is-paris-the-capital-of-france",
                  "description": "Paris, the City <strong>of</strong> Light, occupies a privileged position as the <strong>capital</strong> <strong>of</strong> <strong>France</strong>, weaving a fascinating tale through the centuries. This distinction rests on historical, geographical and cultural foundations that have forged the very essence <strong>of</strong> the city.Deep historical rootsParis was consecrated ...",
                  "content": null,
                  "site_name": "TOIT DE PARIS",
                  "site_long_name": "en.toitdeparis.com",
                  "age": "2024-03-04T13:57:43.000Z",
                  "language": "en-us",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://en.toitdeparis.com&size=96",
                  "thumbnail": "https://static.wixstatic.com/media/nsplsh_fc4e60603c084792ac46d6451d6dea4f~mv2.jpg/v1/fill/w_1000,h_750,al_c,q_85,usm_0.66_1.00_0.01/nsplsh_fc4e60603c084792ac46d6451d6dea4f~mv2.jpg",
                  "snippets": [
                        "Paris, the City of Light, occupies a privileged position as the capital of France, weaving a fascinating tale through the centuries. This distinction rests on historical, geographical and cultural foundations that have forged the very essence of the city.Deep historical rootsParis was consecrated capital at the beginning of the 6th century by the decision of King Clovis, marking the beginning of a history closely linked to that of France.",
                        "Paris was consecrated capital at the beginning of the 6th century by the decision of King Clovis, marking the beginning of a history closely linked to that of France. Placed at the heart of Gaul, Paris flourished as a vital center, connected to the various regions of the kingdom.",
                        "The very symbol of France, the city is recognized as one of the most beautiful and influential on the globe. Paris reigns supreme as the capital of France, not only because of its rich historical past, but also thanks to its strategic geographical position and its exceptional contribution to the world's cultural heritage.",
                        "If you'd like to own a piece of the world's most beautiful capital, it's possible. ... offers customizable key rings and prints made from real pieces of Parisian roofing. Each product is meticulously engraved in France, offering outstanding quality and an eco-responsible gift."
                  ]
            },
            {
                  "title": "iFly Tourism | Paris, the capital of France, is often referred to ...",
                  "url": "https://www.instagram.com/reel/DEVmGsIMGRM/",
                  "description": "6M Followers, 130 Following, 580 Posts - Reel Media House. (@reel) on Instagram: &quot;Thanks for stopping by.&quot;",
                  "content": null,
                  "site_name": "Instagram",
                  "site_long_name": "instagram.com",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://instagram.com&size=96"
            },
            {
                  "title": "Why is Paris the capital of France instead of Lyon, which is larger and more centrally located? - Quora",
                  "url": "https://www.quora.com/Why-is-Paris-the-capital-of-France-instead-of-Lyon-which-is-larger-and-more-centrally-located",
                  "description": "Answer: Most <strong>capitals</strong> around the world are not central. Some are sea-ports, so being inland would not work too well. As in other European countries, the machinery of government was assembled long ago in a place that suited the King and has remained there ever since. The kingdom of Francia was on...",
                  "content": null,
                  "site_name": "Quora",
                  "site_long_name": "quora.com",
                  "language": "en",
                  "image_urls": [],
                  "links": [],
                  "is_safe": true,
                  "favicon": "https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://quora.com&size=96",
                  "thumbnail": "https://qph.cf2.quoracdn.net/main-custom-t-1299-600x315-nfjunofpvfnkizbcsfmsrvtczfjvqyqt.jpeg"
            }
      ],
      "image_urls": [
            "https://maps.wikimedia.org/img/osm-intl,10,a,a,270x200.png?lang=en&domain=en.wikipedia.org&title=Paris&revid=1294086036&groups=_7db7e2f3cf6bfb1f0bc5fadc1f5b339b712de126",
            "https://cdn.britannica.com/mendel/eb-logo/MendelNewThistleLogo.png",
            "https://cdn.britannica.com/50/59050-004-31D76B9F/Seine-River-Ile-Saint-Louis-France-Paris.jpg",
            "https://cdn.britannica.com/87/24187-004-57308D95/Map-Paris-Encyclopaedia-Britannica-edition-1900.jpg",
            "https://cdn.britannica.com/mendel-resources/3-141/images/shared/default3.png?v=3.141.1",
            "https://cdn.britannica.com/31/94531-131-A6E89842/Brandenburg-Gate-Berlin.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/60/269560-131-B4CD857D/tower-bridge-over-river-thames-london-england.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/62/150762-131-841863E7/woman-feather-headdress-costume-Carnival-parade-Rio.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/66/96866-131-9185DF09/Flag-European-Union.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/05/124605-131-977A8DEB/Cathedral-Plaza-de-Armas-Lima-Peru.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/71/188471-131-4DF0E559/Sydney-Opera-House-Port-Jackson.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/67/26367-131-D082980B/Extension-Louvre-style-Paris-Second-Empire-Hector.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/78/124778-131-1A712C9A/impeachment-trial-Pres-illustration-Andrew-Johnson-Frank-March-28-1868.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/13/134913-131-D9520745/Ice-Sledge-Hockey-Canada-Cup-USA-ice-2010.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/57/203257-131-48B2BCA1/Martin-Luther-King-Jr-marchers-speech-I-August-28th-1963.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/91/257891-050-9F103448/normandy-invasion-estimated-battle-casualties-dday.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/20/249020-050-931D85D6/Chinese-dragon-sculpture-or-statue.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/53/143753-131-18E874E9/Aspirin-pills.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/89/173689-131-1E885102/wasp-spider-spinning-web.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/36/135436-050-ED1D0FCE/skyline-Eiffel-Tower-France-Paris.jpg?w=400&h=300&c=crop",
            "https://cdn.britannica.com/31/94531-131-A6E89842/Brandenburg-Gate-Berlin.jpg",
            "https://cdn.britannica.com/87/24187-050-9356F0A4/Map-Paris-Encyclopaedia-Britannica-edition-1900.jpg?w=300",
            "https://cdn.britannica.com/marketing/BlueThistle.webp",
            "https://cdn.britannica.com/36/135436-050-ED1D0FCE/skyline-Eiffel-Tower-France-Paris.jpg",
            "https://cdn.britannica.com/82/682-050-8AA3D6A6/Flag-France.jpg",
            "https://api.multimedia.europarl.europa.eu/documents/20125/77824196/1724427949176_I199003_mobile.jpg",
            "https://www.cia-france.com/media/121/presentation-paris_1920x1080.jpg",
            "https://qph.cf2.quoracdn.net/main-custom-t-1299-600x315-nfjunofpvfnkizbcsfmsrvtczfjvqyqt.jpeg",
            "https://res.cloudinary.com/aenetworks/image/upload/c_fill,w_1200,h_630,g_auto/dpr_auto/f_auto/q_auto:eco/v1/55752370_awhdev?_a=BAVAZGDX0",
            "https://www.iroamly.com/images/article/france/city-of-lights.webp",
            "https://i.ytimg.com/vi_webp/faP_tmetYj8/oardefault.webp",
            "https://static.wixstatic.com/media/nsplsh_fc4e60603c084792ac46d6451d6dea4f~mv2.jpg/v1/fill/w_1000,h_750,al_c,q_85,usm_0.66_1.00_0.01/nsplsh_fc4e60603c084792ac46d6451d6dea4f~mv2.jpg"
      ],
      "links": [
            "https://en.wikipedia.org/#bodyContent",
            "https://en.wikipedia.org/wiki/Main_Page",
            "/wiki/Wikipedia:Contents",
            "/wiki/Portal:Current_events",
            "/wiki/Special:Random",
            "/wiki/Wikipedia:About",
            "//en.wikipedia.org/wiki/Wikipedia:Contact_us",
            "/wiki/Help:Contents",
            "/wiki/Help:Introduction",
            "/wiki/Wikipedia:Community_portal",
            "/wiki/Special:RecentChanges",
            "/wiki/Wikipedia:File_upload_wizard",
            "/wiki/Special:SpecialPages",
            "/wiki/Special:Search",
            "https://donate.wikimedia.org/?wmf_source=donate&wmf_medium=sidebar&wmf_campaign=en.wikipedia.org&uselang=en",
            "/w/index.php?title=Special:CreateAccount&returnto=Paris",
            "/w/index.php?title=Special:UserLogin&returnto=Paris",
            "/wiki/Special:MyContributions",
            "/wiki/Special:MyTalk",
            "https://en.wikipedia.org/#",
            "https://en.wikipedia.org/#Etymology",
            "https://en.wikipedia.org/#History",
            "https://en.wikipedia.org/#Origins",
            "https://en.wikipedia.org/#High_and_Late_Middle_Ages_to_Louis_XIV",
            "https://en.wikipedia.org/#18th_and_19th_centuries",
            "https://en.wikipedia.org/#20th_and_21st_centuries",
            "https://en.wikipedia.org/#Geography",
            "https://en.wikipedia.org/#Location",
            "https://en.wikipedia.org/#Climate",
            "https://en.wikipedia.org/#Administration",
            "https://en.wikipedia.org/#City_government",
            "https://en.wikipedia.org/#M%C3%A9tropole_du_Grand_Paris",
            "https://en.wikipedia.org/#Regional_government",
            "https://en.wikipedia.org/#National_government",
            "https://en.wikipedia.org/#Police_force",
            "https://en.wikipedia.org/#Cityscape",
            "https://en.wikipedia.org/#Urbanism_and_architecture",
            "https://en.wikipedia.org/#Housing",
            "https://en.wikipedia.org/#Suburbs",
            "https://en.wikipedia.org/#Demographics",
            "https://en.wikipedia.org/#Migration",
            "https://en.wikipedia.org/#Religion",
            "https://en.wikipedia.org/#Economy",
            "https://en.wikipedia.org/#Employment_and_income",
            "https://en.wikipedia.org/#Tourism",
            "https://en.wikipedia.org/#Culture",
            "https://en.wikipedia.org/#Painting_and_sculpture",
            "https://en.wikipedia.org/#Museums",
            "https://en.wikipedia.org/#Theatre",
            "https://en.wikipedia.org/#Literature",
            "https://en.wikipedia.org/#Music",
            "https://en.wikipedia.org/#Cinema",
            "https://en.wikipedia.org/#Restaurants_and_cuisine",
            "https://en.wikipedia.org/#Fashion",
            "https://en.wikipedia.org/#Photography",
            "https://en.wikipedia.org/#Media",
            "https://en.wikipedia.org/#Holidays_and_festivals",
            "https://en.wikipedia.org/#Libraries",
            "https://en.wikipedia.org/#Sports",
            "https://en.wikipedia.org/#Infrastructure",
            "https://en.wikipedia.org/#Transport",
            "https://en.wikipedia.org/#Walking",
            "https://en.wikipedia.org/#Railways",
            "https://en.wikipedia.org/#Air",
            "https://en.wikipedia.org/#Motorways",
            "https://en.wikipedia.org/#Waterways",
            "https://en.wikipedia.org/#Cycling",
            "https://en.wikipedia.org/#Electricity",
            "https://en.wikipedia.org/#Water_and_sanitation",
            "https://en.wikipedia.org/#Parks_and_gardens",
            "https://en.wikipedia.org/#Cemeteries",
            "https://en.wikipedia.org/#Education",
            "https://en.wikipedia.org/#Healthcare",
            "https://en.wikipedia.org/#International_relations",
            "https://en.wikipedia.org/#International_organisations",
            "https://en.wikipedia.org/#Twin_towns_%E2%80%93_sister_cities",
            "https://en.wikipedia.org/#Other_relationships",
            "https://en.wikipedia.org/#See_also",
            "https://en.wikipedia.org/#Notes",
            "https://en.wikipedia.org/#References",
            "https://en.wikipedia.org/#Citations",
            "https://en.wikipedia.org/#Sources",
            "https://en.wikipedia.org/#Further_reading",
            "https://en.wikipedia.org/#External_links",
            "https://ace.wikipedia.org/wiki/Paris",
            "https://kbd.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://ady.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://af.wikipedia.org/wiki/Parys",
            "https://als.wikipedia.org/wiki/Paris",
            "https://am.wikipedia.org/wiki/%E1%8D%93%E1%88%AA%E1%88%B5",
            "https://smn.wikipedia.org/wiki/Pariisi",
            "https://anp.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
            "https://ang.wikipedia.org/wiki/Paris",
            "https://ar.wikipedia.org/wiki/%D8%A8%D8%A7%D8%B1%D9%8A%D8%B3",
            "https://an.wikipedia.org/wiki/Par%C3%ADs",
            "https://arc.wikipedia.org/wiki/%DC%A6%DC%90%DC%AA%DC%9D%DC%A3",
            "https://hyw.wikipedia.org/wiki/%D5%93%D5%A1%D6%80%D5%AB%D5%A6",
            "https://roa-rup.wikipedia.org/wiki/Parij",
            "https://frp.wikipedia.org/wiki/Paris",
            "https://as.wikipedia.org/wiki/%E0%A6%AA%E0%A7%87%E0%A7%B0%E0%A6%BF%E0%A6%9B",
            "https://ast.wikipedia.org/wiki/Par%C3%ADs",
            "https://atj.wikipedia.org/wiki/Paris",
            "https://awa.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A5%80%E0%A4%B8",
            "https://gn.wikipedia.org/wiki/Par%C4%A9",
            "https://av.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://ay.wikipedia.org/wiki/Paris",
            "https://az.wikipedia.org/wiki/Paris",
            "https://azb.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%DB%8C%D8%B3",
            "https://ban.wikipedia.org/wiki/Paris",
            "https://bm.wikipedia.org/wiki/Paris",
            "https://bn.wikipedia.org/wiki/%E0%A6%AA%E0%A7%8D%E0%A6%AF%E0%A6%BE%E0%A6%B0%E0%A6%BF%E0%A6%B8",
            "https://zh-min-nan.wikipedia.org/wiki/Pa-l%C3%AD",
            "https://ba.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://be.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D1%8B%D0%B6",
            "https://be-tarask.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D1%8B%D0%B6",
            "https://bh.wikipedia.org/wiki/%E0%A4%AA%E0%A5%88%E0%A4%B0%E0%A4%BF%E0%A4%B8",
            "https://bcl.wikipedia.org/wiki/Paris",
            "https://bi.wikipedia.org/wiki/Paris",
            "https://bg.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://bar.wikipedia.org/wiki/Paris",
            "https://bo.wikipedia.org/wiki/%E0%BD%95%E0%BC%8B%E0%BD%A2%E0%BD%B2%E0%BC%8D",
            "https://bs.wikipedia.org/wiki/Pariz",
            "https://br.wikipedia.org/wiki/Pariz",
            "https://bxr.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D1%81",
            "https://ca.wikipedia.org/wiki/Par%C3%ADs",
            "https://cv.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://ceb.wikipedia.org/wiki/Paris",
            "https://cs.wikipedia.org/wiki/Pa%C5%99%C3%AD%C5%BE",
            "https://ch.wikipedia.org/wiki/Paris",
            "https://cbk-zam.wikipedia.org/wiki/Paris",
            "https://ny.wikipedia.org/wiki/Paris",
            "https://sn.wikipedia.org/wiki/Paris",
            "https://tum.wikipedia.org/wiki/Paris",
            "https://co.wikipedia.org/wiki/Parighji",
            "https://cy.wikipedia.org/wiki/Paris",
            "https://dag.wikipedia.org/wiki/Paris",
            "https://da.wikipedia.org/wiki/Paris",
            "https://ary.wikipedia.org/wiki/%D8%A8%D8%A7%D8%B1%D9%8A%D8%B2",
            "https://se.wikipedia.org/wiki/Paris",
            "https://pdc.wikipedia.org/wiki/Paris",
            "https://de.wikipedia.org/wiki/Paris",
            "https://nv.wikipedia.org/wiki/W%C3%B3t%CA%BC%C3%A1%C3%A1h_Y%C3%AD%CA%BC%C3%A1h%C3%AD",
            "https://dsb.wikipedia.org/wiki/Paris",
            "https://dty.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
            "https://dz.wikipedia.org/wiki/Paris",
            "https://et.wikipedia.org/wiki/Pariis",
            "https://el.wikipedia.org/wiki/%CE%A0%CE%B1%CF%81%CE%AF%CF%83%CE%B9",
            "https://eml.wikipedia.org/wiki/Par%C3%AC",
            "https://myv.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6_%D0%BE%D1%88",
            "https://es.wikipedia.org/wiki/Par%C3%ADs",
            "https://eo.wikipedia.org/wiki/Parizo",
            "https://ext.wikipedia.org/wiki/Par%C3%ADs",
            "https://eu.wikipedia.org/wiki/Paris",
            "https://ee.wikipedia.org/wiki/Paris",
            "https://fa.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%DB%8C%D8%B3",
            "https://hif.wikipedia.org/wiki/Paris",
            "https://fo.wikipedia.org/wiki/Paris",
            "https://fr.wikipedia.org/wiki/Paris",
            "https://fy.wikipedia.org/wiki/Parys",
            "https://ff.wikipedia.org/wiki/Pari",
            "https://fur.wikipedia.org/wiki/Par%C3%AEs",
            "https://ga.wikipedia.org/wiki/P%C3%A1ras",
            "https://gv.wikipedia.org/wiki/Paarys",
            "https://gag.wikipedia.org/wiki/Parij",
            "https://gd.wikipedia.org/wiki/Paris",
            "https://gl.wikipedia.org/wiki/Par%C3%ADs",
            "https://inh.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B0%D0%B6",
            "https://gan.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E",
            "https://glk.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%D9%8A%D8%B3",
            "https://gu.wikipedia.org/wiki/%E0%AA%AA%E0%AB%87%E0%AA%B0%E0%AA%BF%E0%AA%B8",
            "https://got.wikipedia.org/wiki/%F0%90%8D%80%F0%90%8C%B0%F0%90%8D%82%F0%90%8C%B9%F0%90%8D%83",
            "https://gom.wikipedia.org/wiki/Paris",
            "https://guw.wikipedia.org/wiki/Paris",
            "https://hak.wikipedia.org/wiki/P%C3%A2-l%C3%AC",
            "https://ko.wikipedia.org/wiki/%ED%8C%8C%EB%A6%AC_(%ED%94%84%EB%9E%91%EC%8A%A4)",
            "https://ha.wikipedia.org/wiki/Faris",
            "https://haw.wikipedia.org/wiki/Palika",
            "https://hy.wikipedia.org/wiki/%D5%93%D5%A1%D6%80%D5%AB%D5%A6",
            "https://hi.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
            "https://hsb.wikipedia.org/wiki/Paris",
            "https://hr.wikipedia.org/wiki/Pariz",
            "https://io.wikipedia.org/wiki/Paris",
            "https://ilo.wikipedia.org/wiki/Paris",
            "https://id.wikipedia.org/wiki/Paris",
            "https://ia.wikipedia.org/wiki/Paris",
            "https://ie.wikipedia.org/wiki/Paris",
            "https://iu.wikipedia.org/wiki/%E1%90%B1%E1%90%85%E1%95%86%E1%94%85",
            "https://os.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://xh.wikipedia.org/wiki/Paris",
            "https://zu.wikipedia.org/wiki/IParisi",
            "https://is.wikipedia.org/wiki/Par%C3%ADs",
            "https://it.wikipedia.org/wiki/Parigi",
            "https://he.wikipedia.org/wiki/%D7%A4%D7%A8%D7%99%D7%96",
            "https://jv.wikipedia.org/wiki/Paris",
            "https://kbp.wikipedia.org/wiki/Paarii",
            "https://kl.wikipedia.org/wiki/Paris",
            "https://kn.wikipedia.org/wiki/%E0%B2%AA%E0%B3%8D%E0%B2%AF%E0%B2%BE%E0%B2%B0%E0%B2%BF%E0%B2%B8%E0%B3%8D",
            "https://pam.wikipedia.org/wiki/Paris",
            "https://krc.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://ka.wikipedia.org/wiki/%E1%83%9E%E1%83%90%E1%83%A0%E1%83%98%E1%83%96%E1%83%98",
            "https://ks.wikipedia.org/wiki/%D9%BE%DB%8C%D8%B1%D9%90%D8%B3",
            "https://csb.wikipedia.org/wiki/Pariz",
            "https://kk.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://kw.wikipedia.org/wiki/Paris",
            "https://rw.wikipedia.org/wiki/Paris",
            "https://rn.wikipedia.org/wiki/Paris",
            "https://sw.wikipedia.org/wiki/Paris",
            "https://kv.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://kg.wikipedia.org/wiki/Paris",
            "https://avk.wikipedia.org/wiki/Paris",
            "https://ht.wikipedia.org/wiki/Pari",
            "https://gcr.wikipedia.org/wiki/Pari",
            "https://ku.wikipedia.org/wiki/Par%C3%AEs",
            "https://ky.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://mrj.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://lld.wikipedia.org/wiki/Paris",
            "https://lad.wikipedia.org/wiki/Paris",
            "https://lo.wikipedia.org/wiki/%E0%BA%9B%E0%BA%B2%E0%BA%A3%E0%BA%B5",
            "https://ltg.wikipedia.org/wiki/Pari%C5%BEa",
            "https://la.wikipedia.org/wiki/Lutetia",
            "https://lv.wikipedia.org/wiki/Par%C4%ABze",
            "https://lb.wikipedia.org/wiki/Par%C3%A4is",
            "https://lez.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://lt.wikipedia.org/wiki/Pary%C5%BEius",
            "https://lij.wikipedia.org/wiki/Pariggi",
            "https://li.wikipedia.org/wiki/Paries",
            "https://ln.wikipedia.org/wiki/Pari",
            "https://lfn.wikipedia.org/wiki/Paris",
            "https://olo.wikipedia.org/wiki/Parii%C5%BEu",
            "https://jbo.wikipedia.org/wiki/paris",
            "https://lg.wikipedia.org/wiki/Paris",
            "https://lmo.wikipedia.org/wiki/Paris",
            "https://hu.wikipedia.org/wiki/P%C3%A1rizs",
            "https://mai.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
            "https://mk.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B7",
            "https://mg.wikipedia.org/wiki/Paris",
            "https://ml.wikipedia.org/wiki/%E0%B4%AA%E0%B4%BE%E0%B4%B0%E0%B4%BF%E0%B4%B8%E0%B5%8D",
            "https://mt.wikipedia.org/wiki/Pari%C4%A1i",
            "https://mi.wikipedia.org/wiki/Par%C4%AB",
            "https://mr.wikipedia.org/wiki/%E0%A4%AA%E0%A5%85%E0%A4%B0%E0%A4%BF%E0%A4%B8",
            "https://xmf.wikipedia.org/wiki/%E1%83%9E%E1%83%90%E1%83%A0%E1%83%98%E1%83%96%E1%83%98",
            "https://arz.wikipedia.org/wiki/%D8%A8%D8%A7%D8%B1%D9%8A%D8%B3",
            "https://mzn.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%DB%8C%D8%B3",
            "https://ms.wikipedia.org/wiki/Paris",
            "https://min.wikipedia.org/wiki/Paris",
            "https://cdo.wikipedia.org/wiki/B%C4%83-l%C3%A0%CC%A4",
            "https://mwl.wikipedia.org/wiki/Paris",
            "https://mdf.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B7",
            "https://mn.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D1%81",
            "https://my.wikipedia.org/wiki/%E1%80%95%E1%80%AB%E1%80%9B%E1%80%AE%E1%80%99%E1%80%BC%E1%80%AD%E1%80%AF%E1%80%B7",
            "https://fj.wikipedia.org/wiki/Parisi",
            "https://nl.wikipedia.org/wiki/Parijs",
            "https://nds-nl.wikipedia.org/wiki/Paries",
            "https://ne.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
            "https://new.wikipedia.org/wiki/%E0%A4%AA%E0%A5%87%E0%A4%B0%E0%A4%BF%E0%A4%B8",
            "https://ja.wikipedia.org/wiki/%E3%83%91%E3%83%AA",
            "https://nap.wikipedia.org/wiki/Parigge",
            "https://ce.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://frr.wikipedia.org/wiki/Pariis",
            "https://no.wikipedia.org/wiki/Paris",
            "https://nn.wikipedia.org/wiki/Paris",
            "https://nrm.wikipedia.org/wiki/Paris",
            "https://nov.wikipedia.org/wiki/Paris",
            "https://oc.wikipedia.org/wiki/Par%C3%ADs",
            "https://mhr.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://or.wikipedia.org/wiki/%E0%AC%AA%E0%AD%8D%E0%AD%9F%E0%AC%BE%E0%AC%B0%E0%AC%BF%E0%AC%B8",
            "https://om.wikipedia.org/wiki/Paaris",
            "https://uz.wikipedia.org/wiki/Parij",
            "https://pa.wikipedia.org/wiki/%E0%A8%AA%E0%A9%88%E0%A8%B0%E0%A8%BF%E0%A8%B8",
            "https://pnb.wikipedia.org/wiki/%D9%BE%DB%8C%D8%B1%D8%B3",
            "https://pap.wikipedia.org/wiki/Paris",
            "https://ps.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%DB%8C%D8%B3",
            "https://jam.wikipedia.org/wiki/Paris",
            "https://koi.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://km.wikipedia.org/wiki/%E1%9E%94%E1%9F%89%E1%9E%B6%E1%9E%9A%E1%9E%B8%E1%9E%9F",
            "https://pcd.wikipedia.org/wiki/Paris",
            "https://pms.wikipedia.org/wiki/Paris",
            "https://pwn.wikipedia.org/wiki/paris",
            "https://tpi.wikipedia.org/wiki/Paris",
            "https://nds.wikipedia.org/wiki/Paris",
            "https://pl.wikipedia.org/wiki/Pary%C5%BC",
            "https://pnt.wikipedia.org/wiki/%CE%A0%CE%B1%CF%81%CE%AF%CF%83%CE%B9",
            "https://pt.wikipedia.org/wiki/Paris",
            "https://kaa.wikipedia.org/wiki/Parij",
            "https://crh.wikipedia.org/wiki/Paris",
            "https://ty.wikipedia.org/wiki/Paris",
            "https://ro.wikipedia.org/wiki/Paris",
            "https://rmy.wikipedia.org/wiki/Paris",
            "https://rm.wikipedia.org/wiki/Paris",
            "https://qu.wikipedia.org/wiki/Paris",
            "https://rue.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D1%96%D0%B6",
            "https://ru.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://sah.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://sm.wikipedia.org/wiki/Parisi",
            "https://sg.wikipedia.org/wiki/Paris",
            "https://sat.wikipedia.org/wiki/%E1%B1%AF%E1%B1%AE%E1%B1%A8%E1%B1%A4%E1%B1%A5",
            "https://sc.wikipedia.org/wiki/Parigi",
            "https://sco.wikipedia.org/wiki/Paris",
            "https://stq.wikipedia.org/wiki/Paris_(St%C3%A4%C3%A4d)",
            "https://st.wikipedia.org/wiki/Paris",
            "https://sq.wikipedia.org/wiki/Parisi",
            "https://scn.wikipedia.org/wiki/Pariggi",
            "https://si.wikipedia.org/wiki/%E0%B6%B4%E0%B7%90%E0%B6%BB%E0%B7%92%E0%B7%83%E0%B7%8A",
            "https://simple.wikipedia.org/wiki/Paris",
            "https://sd.wikipedia.org/wiki/%D9%BE%D9%8A%D8%B1%D8%B3",
            "https://sk.wikipedia.org/wiki/Par%C3%AD%C5%BE",
            "https://sl.wikipedia.org/wiki/Pariz",
            "https://cu.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6%D1%8C",
            "https://szl.wikipedia.org/wiki/Pary%C5%BC",
            "https://so.wikipedia.org/wiki/Baariis",
            "https://ckb.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%DB%8C%D8%B3",
            "https://srn.wikipedia.org/wiki/Paris",
            "https://sr.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B7",
            "https://sh.wikipedia.org/wiki/Pariz",
            "https://su.wikipedia.org/wiki/Paris",
            "https://fi.wikipedia.org/wiki/Pariisi",
            "https://sv.wikipedia.org/wiki/Paris",
            "https://tl.wikipedia.org/wiki/Paris",
            "https://ta.wikipedia.org/wiki/%E0%AE%AA%E0%AE%BE%E0%AE%B0%E0%AE%BF%E0%AE%9A%E0%AF%81",
            "https://shi.wikipedia.org/wiki/Bariz",
            "https://kab.wikipedia.org/wiki/Paris_(Fransa)",
            "https://roa-tara.wikipedia.org/wiki/Parigge",
            "https://tt.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://te.wikipedia.org/wiki/%E0%B0%AA%E0%B0%BE%E0%B0%B0%E0%B0%BF%E0%B0%B8%E0%B1%8D",
            "https://tet.wikipedia.org/wiki/Par%C3%ADs",
            "https://th.wikipedia.org/wiki/%E0%B8%9B%E0%B8%B2%E0%B8%A3%E0%B8%B5%E0%B8%AA",
            "https://tg.wikipedia.org/wiki/%D0%9F%D0%BE%D1%80%D0%B8%D1%81",
            "https://to.wikipedia.org/wiki/Palesi",
            "https://chy.wikipedia.org/wiki/Paris",
            "https://tr.wikipedia.org/wiki/Paris",
            "https://tk.wikipedia.org/wiki/Pari%C5%BE",
            "https://tw.wikipedia.org/wiki/Paris",
            "https://kcg.wikipedia.org/wiki/Pari%CC%B1t",
            "https://tyv.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://udm.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://uk.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B6",
            "https://ur.wikipedia.org/wiki/%D9%BE%DB%8C%D8%B1%D8%B3",
            "https://ug.wikipedia.org/wiki/%D9%BE%D8%A7%D8%B1%D9%89%DA%98",
            "https://za.wikipedia.org/wiki/Bahliz",
            "https://vec.wikipedia.org/wiki/Parize",
            "https://vep.wikipedia.org/wiki/Pari%C5%BE",
            "https://vi.wikipedia.org/wiki/Paris",
            "https://vo.wikipedia.org/wiki/Paris",
            "https://fiu-vro.wikipedia.org/wiki/Pariis",
            "https://wa.wikipedia.org/wiki/Paris",
            "https://zh-classical.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E",
            "https://vls.wikipedia.org/wiki/Parys",
            "https://war.wikipedia.org/wiki/Paris",
            "https://wo.wikipedia.org/wiki/Pari",
            "https://wuu.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E",
            "https://yi.wikipedia.org/wiki/%D7%A4%D7%90%D7%A8%D7%99%D7%96",
            "https://yo.wikipedia.org/wiki/Parisi",
            "https://zh-yue.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E",
            "https://diq.wikipedia.org/wiki/Paris",
            "https://zea.wikipedia.org/wiki/Paries",
            "https://bat-smg.wikipedia.org/wiki/Par%C4%AB%C5%BEios",
            "https://zh.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E",
            "https://bew.wikipedia.org/wiki/Par%C3%A8s",
            "https://fon.wikipedia.org/wiki/Paris",
            "https://kge.wikipedia.org/wiki/Paris",
            "https://knc.wikipedia.org/wiki/Paris",
            "https://nup.wikipedia.org/wiki/Paris",
            "https://rsk.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B8%D0%B7",
            "https://tly.wikipedia.org/wiki/Paris",
            "https://zgh.wikipedia.org/wiki/%E2%B4%B1%E2%B4%B0%E2%B5%94%E2%B5%89%E2%B5%A3",
            "https://www.wikidata.org/wiki/Special:EntityPage/Q90#sitelinks-wikipedia",
            "https://en.wikipedia.org/wiki/Paris",
            "/wiki/Talk:Paris",
            "https://en.wikipedia.org/w/index.php?title=Paris&action=edit",
            "https://en.wikipedia.org/w/index.php?title=Paris&action=history",
            "/wiki/Special:WhatLinksHere/Paris",
            "/wiki/Special:RecentChangesLinked/Paris",
            "//en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard",
            "https://en.wikipedia.org/w/index.php?title=Paris&oldid=1294086036",
            "https://en.wikipedia.org/w/index.php?title=Paris&action=info",
            "/w/index.php?title=Special:CiteThisPage&page=Paris&id=1294086036&wpFormIdentifier=titleform",
            "/w/index.php?title=Special:UrlShortener&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FParis",
            "/w/index.php?title=Special:QrCode&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FParis",
            "/w/index.php?title=Special:DownloadAsPdf&page=Paris&action=show-download-screen",
            "https://en.wikipedia.org/w/index.php?title=Paris&printable=yes",
            "https://commons.wikimedia.org/wiki/Paris",
            "https://en.wikinews.org/wiki/Category:Paris",
            "https://en.wikiquote.org/wiki/Paris",
            "https://en.wikivoyage.org/wiki/Paris",
            "https://www.wikidata.org/wiki/Special:EntityPage/Q90",
            "https://en.wikipedia.org/wiki/Geographic_coordinate_system",
            "https://geohack.toolforge.org/geohack.php?pagename=Paris&params=48_51_24_N_2_21_8_E_type:city(2,100,000)_region:FR-75C",
            "/wiki/Wikipedia:Good_articles*",
            "/wiki/Wikipedia:Protection_policy#semi",
            "https://en.wikipedia.org/wiki/Paris_(disambiguation)",
            "https://en.wikipedia.org/wiki/Parisien_(disambiguation)",
            "https://en.wikipedia.org/wiki/Capital_city",
            "https://en.wikipedia.org/wiki/Communes_of_France",
            "https://en.wikipedia.org/wiki/Departments_of_France",
            "/wiki/File:La_Tour_Eiffel_vue_de_la_Tour_Saint-Jacques,_Paris_ao%C3%BBt_2014_(2).jpg",
            "https://en.wikipedia.org/wiki/Eiffel_Tower",
            "https://en.wikipedia.org/wiki/Seine",
            "https://en.wikipedia.org/wiki/Tour_Saint-Jacques",
            "/wiki/File:Notre-Dame_de_Paris_2013-07-24.jpg",
            "https://en.wikipedia.org/wiki/Notre-Dame_de_Paris",
            "/wiki/File:Basilique_du_Sacr%C3%A9-C%C5%93ur_de_Montmartre,_Paris_18e_140223_2.jpg",
            "https://en.wikipedia.org/wiki/Basilique_du_Sacr%C3%A9-C%C5%93ur",
            "/wiki/File:Facade_of_the_Panth%C3%A9on,_Paris_24_January_2016.jpg",
            "https://en.wikipedia.org/wiki/Panth%C3%A9on",
            "/wiki/File:Arc_de_Triomphe_HDR_2007.jpg",
            "https://en.wikipedia.org/wiki/Arc_de_Triomphe",
            "/wiki/File:Paris_Opera_full_frontal_architecture,_May_2009_sky.JPG",
            "https://en.wikipedia.org/wiki/Palais_Garnier",
            "/wiki/File:Louvre_Courtyard,_Looking_West.jpg",
            "https://en.wikipedia.org/wiki/Louvre",
            "/wiki/File:Flag_of_Paris_with_coat_of_arms.svg",
            "https://en.wikipedia.org/wiki/Flag_of_Paris",
            "/wiki/File:Grandes_Armes_de_Paris.svg",
            "https://en.wikipedia.org/wiki/Coat_of_arms_of_Paris",
            "https://en.wikipedia.org/wiki/Fluctuat_nec_mergitur",
            "/wiki/File:France_location_map-Regions_and_departements-2016.svg",
            "/wiki/File:Ile-de-France_region_location_map.svg",
            "https://en.wikipedia.org/wiki/France",
            "https://en.wikipedia.org/wiki/Regions_of_France",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France",
            "https://en.wikipedia.org/wiki/Arrondissements_of_France",
            "https://en.wikipedia.org/wiki/Communes_of_France#Intercommunality",
            "https://en.wikipedia.org/wiki/Grand_Paris",
            "https://en.wikipedia.org/wiki/Administrative_division",
            "https://en.wikipedia.org/wiki/Arrondissements_of_Paris",
            "https://en.wikipedia.org/wiki/Anne_Hidalgo",
            "https://en.wikipedia.org/#cite_note-1",
            "https://en.wikipedia.org/wiki/Socialist_Party_(France)",
            "https://en.wikipedia.org/#cite_note-Comparateur_de_territoires.INSEE-2",
            "https://en.wikipedia.org/#cite_note-pop2025-3",
            "https://en.wikipedia.org/wiki/List_of_European_cities_by_population_within_city_limits",
            "https://en.wikipedia.org/wiki/List_of_communes_in_France_with_over_20,000_inhabitants",
            "https://en.wikipedia.org/wiki/Urban_area",
            "https://en.wikipedia.org/wiki/Metropolitan_area",
            "https://en.wikipedia.org/wiki/Demonym",
            "https://en.wikipedia.org/wiki/English_language",
            "https://en.wikipedia.org/wiki/French_language",
            "https://en.wikipedia.org/wiki/Time_zone",
            "/wiki/UTC%2B01:00",
            "https://en.wikipedia.org/wiki/Central_European_Time",
            "https://en.wikipedia.org/wiki/Daylight_saving_time",
            "/wiki/UTC%2B02:00",
            "https://en.wikipedia.org/wiki/Central_European_Summer_Time",
            "https://en.wikipedia.org/wiki/INSEE_code",
            "https://www.insee.fr/fr/statistiques/1405599?geo=COM-75056",
            "https://paris.fr",
            "/wiki/Help:IPA/French",
            "https://upload.wikimedia.org/wikipedia/commons/transcoded/f/fd/Paris_Pronunciation_in_French_by_James_Tamim.ogg/Paris_Pronunciation_in_French_by_James_Tamim.ogg.mp3",
            "/wiki/File:Paris_Pronunciation_in_French_by_James_Tamim.ogg",
            "https://en.wikipedia.org/#cite_note-pop2019-4",
            "https://en.wikipedia.org/wiki/List_of_cities_in_the_European_Union_by_population_within_city_limits",
            "https://en.wikipedia.org/wiki/European_Union",
            "https://en.wikipedia.org/wiki/List_of_cities_proper_by_population_density",
            "https://en.wikipedia.org/#cite_note-5",
            "https://en.wikipedia.org/wiki/Finance",
            "https://en.wikipedia.org/wiki/Diplomacy",
            "https://en.wikipedia.org/wiki/Commerce",
            "https://en.wikipedia.org/wiki/Culture",
            "https://en.wikipedia.org/wiki/Fashion_capital",
            "https://en.wikipedia.org/wiki/Gastronomy",
            "https://en.wikipedia.org/wiki/French_art",
            "https://en.wikipedia.org/wiki/Science_and_technology_in_France",
            "https://en.wikipedia.org/#cite_note-6",
            "https://en.wikipedia.org/wiki/Gross_domestic_product",
            "https://en.wikipedia.org/wiki/Purchasing_power_parity",
            "https://en.wikipedia.org/#cite_note-7",
            "https://en.wikipedia.org/#cite_note-8",
            "https://en.wikipedia.org/wiki/Economist_Intelligence_Unit",
            "https://en.wikipedia.org/#cite_note-9",
            "https://en.wikipedia.org/wiki/Charles_de_Gaulle_Airport",
            "https://en.wikipedia.org/wiki/List_of_the_busiest_airports_in_Europe",
            "https://en.wikipedia.org/wiki/Orly_Airport",
            "https://en.wikipedia.org/#cite_note-10",
            "https://en.wikipedia.org/#cite_note-11",
            "https://en.wikipedia.org/wiki/Sustainable_transportation",
            "https://en.wikipedia.org/#cite_note-ICLEI-12",
            "https://en.wikipedia.org/wiki/Sustainable_Transport_Award",
            "https://en.wikipedia.org/#cite_note-Award-13",
            "https://en.wikipedia.org/#cite_note-14",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_d%27Orsay",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_Marmottan_Monet",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_l%27Orangerie",
            "https://en.wikipedia.org/wiki/Impressionism",
            "https://en.wikipedia.org/wiki/Pompidou_Centre",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_National_d%27Art_Moderne",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_Rodin",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_Picasso",
            "https://en.wikipedia.org/wiki/Modern_art",
            "https://en.wikipedia.org/wiki/Contemporary_art",
            "https://en.wikipedia.org/wiki/UNESCO_World_Heritage_Site",
            "https://en.wikipedia.org/#cite_note-unesco-15",
            "https://en.wikipedia.org/wiki/United_Nations",
            "https://en.wikipedia.org/wiki/OECD",
            "https://en.wikipedia.org/wiki/OECD_Development_Centre",
            "https://en.wikipedia.org/wiki/International_Bureau_of_Weights_and_Measures",
            "https://en.wikipedia.org/wiki/International_Energy_Agency",
            "https://en.wikipedia.org/wiki/International_Federation_for_Human_Rights",
            "https://en.wikipedia.org/wiki/European_Space_Agency",
            "https://en.wikipedia.org/wiki/European_Banking_Authority",
            "https://en.wikipedia.org/wiki/European_Securities_and_Markets_Authority",
            "https://en.wikipedia.org/wiki/Paris_Saint-Germain_F.C.",
            "https://en.wikipedia.org/wiki/Rugby_union",
            "https://en.wikipedia.org/wiki/Stade_Fran%C3%A7ais",
            "https://en.wikipedia.org/wiki/Stade_de_France",
            "https://en.wikipedia.org/wiki/1998_FIFA_World_Cup",
            "https://en.wikipedia.org/wiki/Saint-Denis,_Seine-Saint-Denis",
            "https://en.wikipedia.org/wiki/French_Open",
            "https://en.wikipedia.org/wiki/Grand_Slam_(tennis)",
            "https://en.wikipedia.org/wiki/Stade_Roland_Garros",
            "https://en.wikipedia.org/wiki/1900_Summer_Olympics",
            "https://en.wikipedia.org/wiki/1924_Summer_Olympics",
            "https://en.wikipedia.org/wiki/2024_Summer_Olympics",
            "https://en.wikipedia.org/wiki/1938_FIFA_World_Cup",
            "https://en.wikipedia.org/wiki/2019_FIFA_Women%27s_World_Cup",
            "https://en.wikipedia.org/wiki/2007_Rugby_World_Cup",
            "https://en.wikipedia.org/wiki/2023_Rugby_World_Cup",
            "https://en.wikipedia.org/wiki/1954_Rugby_League_World_Cup",
            "https://en.wikipedia.org/wiki/1972_Rugby_League_World_Cup",
            "https://en.wikipedia.org/wiki/Rugby_League_World_Cup",
            "https://en.wikipedia.org/wiki/1960_European_Nations%27_Cup",
            "https://en.wikipedia.org/wiki/UEFA_Euro_1984",
            "https://en.wikipedia.org/wiki/UEFA_Euro_2016",
            "https://en.wikipedia.org/wiki/Tour_de_France",
            "https://en.wikipedia.org/wiki/Avenue_des_Champs-%C3%89lys%C3%A9es",
            "https://en.wiktionary.org/wiki/Paris",
            "https://en.wikipedia.org/wiki/Oppidum",
            "https://en.wikipedia.org/wiki/Julius_Caesar",
            "https://en.wikipedia.org/wiki/Lutetia",
            "https://en.wikipedia.org/wiki/Parisii_(France)",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEN%C3%A8gre1990155-16",
            "https://en.wikipedia.org/#cite_note-Falileyev-17",
            "https://en.wikipedia.org/wiki/Celtic_languages",
            "https://en.wikipedia.org/#cite_note-FOOTNOTELambert199438-18",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEDelamarre2003211-19",
            "https://en.wikipedia.org/wiki/Gauls",
            "https://en.wikipedia.org/wiki/La_T%C3%A8ne_culture",
            "https://en.wikipedia.org/wiki/Roman_period",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEDelamarre2003247-20",
            "https://en.wikipedia.org/wiki/Ethnonym",
            "https://en.wikipedia.org/wiki/Xavier_Delamarre",
            "https://en.wikipedia.org/wiki/Alfred_Holder",
            "https://en.wikipedia.org/wiki/Welsh_language",
            "https://en.wikipedia.org/wiki/Proto-Celtic",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEBusse2006199-21",
            "https://en.wikipedia.org/wiki/Pierre-Yves_Lambert",
            "https://en.wikipedia.org/wiki/Old_Irish",
            "https://en.wikipedia.org/wiki/Paris_(mythology)",
            "https://en.wikipedia.org/wiki/Greek_mythology",
            "https://upload.wikimedia.org/wikipedia/commons/transcoded/c/cb/Parisien2.ogg/Parisien2.ogg.mp3",
            "/wiki/File:Parisien2.ogg",
            "https://upload.wikimedia.org/wikipedia/commons/transcoded/b/b9/Parigot.ogg/Parigot.ogg.mp3",
            "/wiki/File:Parigot.ogg",
            "https://en.wikipedia.org/#cite_note-22",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEDottin1920535-23",
            "https://en.wikipedia.org/wiki/History_of_Paris",
            "https://en.wikipedia.org/wiki/Timeline_of_Paris",
            "https://en.wikipedia.org/wiki/Parisii_(Gaul)",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEArbois_de_JubainvilleDottin1889132-24",
            "https://en.wikipedia.org/#cite_note-FOOTNOTECunliffe2004201-25",
            "https://en.wikipedia.org/wiki/%C3%8Ele_de_la_Cit%C3%A9",
            "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand201025-26",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESchmidt200965%E2%80%9370-27",
            "/wiki/File:ParisiiCoins.jpg",
            "https://en.wikipedia.org/wiki/Gallic_Wars",
            "https://en.wikipedia.org/wiki/Paris_Basin",
            "https://en.wikipedia.org/wiki/Roman_Republic",
            "https://en.wikipedia.org/wiki/Rive_Gauche",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESchmidt200988%E2%80%93104-28",
            "https://en.wikipedia.org/wiki/Amphitheatre",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESchmidt2009154%E2%80%93167-29",
            "https://en.wikipedia.org/wiki/Western_Roman_Empire",
            "https://en.wikipedia.org/wiki/Latin_language",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEMeunier201412-30",
            "https://en.wikipedia.org/wiki/Christianity",
            "https://en.wikipedia.org/wiki/Saint_Denis_of_Paris",
            "https://en.wikipedia.org/wiki/Montmartre",
            "https://en.wikipedia.org/wiki/Basilica_of_Saint-Denis",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESchmidt2009210%E2%80%93211-31",
            "https://en.wikipedia.org/wiki/Clovis_I",
            "https://en.wikipedia.org/wiki/Merovingian_dynasty",
            "https://en.wikipedia.org/#cite_note-32",
            "https://en.wikipedia.org/wiki/Franks",
            "https://en.wikipedia.org/wiki/Francien_language",
            "https://en.wikipedia.org/wiki/Siege_of_Paris_(845)",
            "https://en.wikipedia.org/wiki/Siege_of_Paris_(885%E2%80%93886)",
            "https://en.wikipedia.org/wiki/Count_of_Paris",
            "https://en.wikipedia.org/wiki/Odo_of_France",
            "https://en.wikipedia.org/wiki/West_Francia",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEJones199448-33",
            "https://en.wikipedia.org/wiki/House_of_Capet",
            "https://en.wikipedia.org/wiki/Hugh_Capet",
            "https://en.wikipedia.org/wiki/Duke_of_the_Franks",
            "https://en.wikipedia.org/wiki/Paris_in_the_Middle_Ages",
            "https://en.wikipedia.org/wiki/Paris_in_the_16th_century",
            "https://en.wikipedia.org/wiki/Paris_in_the_17th_century",
            "/wiki/File:Palais_de_la_Cite.jpg",
            "https://en.wikipedia.org/wiki/Palais_de_la_Cit%C3%A9",
            "https://en.wikipedia.org/wiki/Sainte-Chapelle",
            "https://en.wikipedia.org/wiki/Tr%C3%A8s_Riches_Heures_du_duc_de_Berry",
            "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand201027-34",
            "https://en.wikipedia.org/wiki/Louis_VII_of_France",
            "https://en.wikipedia.org/wiki/Maurice_de_Sully",
            "https://en.wikipedia.org/wiki/Notre_Dame_de_Paris",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEBussmann198522-35",
            "https://en.wikipedia.org/wiki/Les_Halles",
            "https://en.wikipedia.org/wiki/Place_de_l%27H%C3%B4tel-de-Ville_%E2%80%93_Esplanade_de_la_Lib%C3%A9ration",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEde_VitriacoHinnebusch1972262-36",
            "https://en.wikipedia.org/wiki/Philip_II_of_France",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant201236%E2%80%9340-37",
            "https://en.wikipedia.org/wiki/University_of_Paris",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant201228%E2%80%9329-38",
            "https://en.wikipedia.org/#cite_note-ParisDigest-39",
            "https://en.wikipedia.org/#cite_note-40",
            "/wiki/File:P1030887_Paris_IV_h%C3%B4tel_de_Sens_rwk.JPG",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Sens",
            "https://en.wikipedia.org/wiki/Hundred_Years%27_War",
            "https://en.wikipedia.org/wiki/Burgundian_State",
            "https://en.wikipedia.org/wiki/Henry_V_of_England",
            "https://en.wikipedia.org/#cite_note-41",
            "https://en.wikipedia.org/wiki/Joan_of_Arc",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro199652%E2%80%9353-42",
            "https://en.wikipedia.org/wiki/French_Wars_of_Religion",
            "https://en.wikipedia.org/wiki/Catholic_League_(French)",
            "https://en.wikipedia.org/wiki/St._Bartholomew%27s_Day_massacre",
            "https://en.wikipedia.org/#cite_note-43",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEBayrou1994121%E2%80%93130-44",
            "https://en.wikipedia.org/wiki/Henry_IV_of_France",
            "https://en.wikipedia.org/wiki/Pont_Neuf",
            "https://en.wikipedia.org/wiki/Tuileries_Palace",
            "https://en.wikipedia.org/wiki/Place_des_Vosges",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996577-45",
            "https://en.wikipedia.org/wiki/Cardinal_Richelieu",
            "https://en.wikipedia.org/wiki/Louis_XIII_of_France",
            "https://en.wikipedia.org/wiki/College_of_Sorbonne",
            "https://en.wikipedia.org/wiki/Palais-Royal",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996582-46",
            "/wiki/File:Plan_de_Paris_en_1657.JPG",
            "https://en.wikipedia.org/wiki/Jan_Janssonius",
            "https://en.wikipedia.org/wiki/Fronde",
            "https://en.wikipedia.org/wiki/Louis_XIV_of_France",
            "https://en.wikipedia.org/wiki/Palace_of_Versailles",
            "https://en.wikipedia.org/wiki/Com%C3%A9die-Fran%C3%A7aise",
            "https://en.wikipedia.org/wiki/French_Academy_of_Sciences",
            "https://en.wikipedia.org/wiki/City_walls_of_Paris",
            "https://en.wikipedia.org/wiki/Boulevards_of_Paris#The_grands_boulevards",
            "https://en.wikipedia.org/#cite_note-FOOTNOTECombeau200342%E2%80%9343-47",
            "https://en.wikipedia.org/wiki/Coll%C3%A8ge_des_Quatre-Nations",
            "https://en.wikipedia.org/wiki/Place_Vend%C3%B4me",
            "https://en.wikipedia.org/wiki/Place_des_Victoires",
            "https://en.wikipedia.org/wiki/Les_Invalides",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996590%E2%80%93591-48",
            "https://en.wikipedia.org/wiki/Paris_in_the_18th_century",
            "https://en.wikipedia.org/wiki/Paris_during_the_Second_Empire",
            "https://en.wikipedia.org/wiki/Haussmann%27s_renovation_of_Paris",
            "https://en.wikipedia.org/#cite_note-49",
            "https://en.wikipedia.org/wiki/Champs-%C3%89lys%C3%A9es",
            "https://en.wikipedia.org/wiki/Place_Charles_de_Gaulle",
            "https://en.wikipedia.org/#cite_note-FOOTNOTECombeau200345%E2%80%9347-50",
            "https://en.wikipedia.org/wiki/Faubourg_Saint-Antoine",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012129%E2%80%93133-51",
            "/wiki/File:Prise_de_la_Bastille.jpg",
            "https://en.wikipedia.org/wiki/Bastille",
            "https://en.wikipedia.org/wiki/Jean-Pierre_Hou%C3%ABl",
            "/wiki/File:Pantheon_2,_Paris_May_11,_2013.jpg",
            "https://en.wikipedia.org/wiki/Age_of_Enlightenment",
            "https://en.wikipedia.org/wiki/Denis_Diderot",
            "https://en.wikipedia.org/wiki/Jean_le_Rond_d%27Alembert",
            "https://en.wikipedia.org/wiki/Encyclop%C3%A9die",
            "https://en.wikipedia.org/wiki/Montgolfier_Brothers",
            "https://en.wikipedia.org/wiki/Hot_air_balloon",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012120-52",
            "https://en.wikipedia.org/wiki/Andr%C3%A9-Jacques_Garnerin",
            "https://en.wikipedia.org/wiki/French_Revolution",
            "https://en.wikipedia.org/wiki/Storming_of_the_Bastille",
            "https://en.wikipedia.org/wiki/Paris_Commune_(1789%E2%80%931795)",
            "https://en.wikipedia.org/wiki/Mayor_(France)",
            "https://en.wikipedia.org/wiki/Jean_Sylvain_Bailly",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEPaine1998453-53",
            "https://en.wikipedia.org/wiki/Louis_XVI",
            "https://en.wikipedia.org/wiki/Women%27s_march_on_Versailles",
            "https://en.wikipedia.org/wiki/Guillotine",
            "https://en.wikipedia.org/wiki/Reign_of_Terror",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996674-54",
            "https://en.wikipedia.org/wiki/Biens_nationaux",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012144-55",
            "https://en.wikipedia.org/wiki/Coup_of_18_Brumaire",
            "https://en.wikipedia.org/wiki/Napoleon_Bonaparte",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012147-56",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012148-57",
            "https://en.wikipedia.org/wiki/Canal_de_l%27Ourcq",
            "https://en.wikipedia.org/wiki/P%C3%A8re_Lachaise_Cemetery",
            "https://en.wikipedia.org/wiki/Pont_des_Arts",
            "/wiki/File:Louis-Emile_Durandelle,_The_Eiffel_Tower_-_State_of_the_Construction,_1888.jpg",
            "https://en.wikipedia.org/wiki/Bourbon_Restoration_in_France",
            "https://en.wikipedia.org/wiki/July_Revolution",
            "https://en.wikipedia.org/wiki/July_Column",
            "https://en.wikipedia.org/wiki/Place_de_la_Bastille",
            "https://en.wikipedia.org/wiki/Louis_Philippe_I",
            "https://en.wikipedia.org/wiki/Provinces_of_France",
            "https://en.wikipedia.org/wiki/French_Revolution_of_1848",
            "https://en.wikipedia.org/wiki/Napoleon_III",
            "https://en.wikipedia.org/wiki/Georges-Eug%C3%A8ne_Haussmann",
            "https://en.wikipedia.org/wiki/Bois_de_Boulogne",
            "https://en.wikipedia.org/wiki/Bois_de_Vincennes",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEDe_Moncan20127%E2%80%9335-58",
            "https://en.wikipedia.org/wiki/Franco-Prussian_War",
            "https://en.wikipedia.org/wiki/Prussian_Army",
            "https://en.wikipedia.org/wiki/Paris_Commune",
            "https://en.wikipedia.org/wiki/Semaine_sanglante",
            "https://en.wikipedia.org/#cite_note-FOOTNOTERougerie2014118-59",
            "https://en.wikipedia.org/wiki/Exposition_Universelle_(1889)",
            "https://en.wikipedia.org/wiki/Exposition_Universelle_(1900)",
            "https://en.wikipedia.org/wiki/Pont_Alexandre_III",
            "https://en.wikipedia.org/wiki/Grand_Palais",
            "https://en.wikipedia.org/wiki/Petit_Palais",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFraserSpalding2011117-60",
            "https://en.wikipedia.org/wiki/Naturalism_(literature)",
            "https://en.wikipedia.org/wiki/%C3%89mile_Zola",
            "https://en.wikipedia.org/wiki/Symbolism_(arts)",
            "https://en.wikipedia.org/wiki/Charles_Baudelaire",
            "https://en.wikipedia.org/wiki/Paul_Verlaine",
            "https://en.wikipedia.org/wiki/Courbet",
            "https://en.wikipedia.org/wiki/Manet",
            "https://en.wikipedia.org/wiki/Claude_Monet",
            "https://en.wikipedia.org/wiki/Renoir",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996490%E2%80%93491-61",
            "https://en.wikipedia.org/wiki/Paris_in_the_Belle_%C3%89poque",
            "https://en.wikipedia.org/wiki/Paris_during_the_First_World_War",
            "https://en.wikipedia.org/wiki/Paris_between_the_Wars_(1919%E2%80%931939)",
            "https://en.wikipedia.org/wiki/Paris_in_World_War_II",
            "https://en.wikipedia.org/wiki/History_of_Paris_(1946%E2%80%932000)",
            "https://en.wikipedia.org/#cite_note-FOOTNOTECombeau200361-62",
            "https://en.wikipedia.org/wiki/Pablo_Picasso",
            "https://en.wikipedia.org/wiki/Amedeo_Modigliani",
            "https://en.wikipedia.org/wiki/Henri_Matisse",
            "https://en.wikipedia.org/wiki/Fauvism",
            "https://en.wikipedia.org/wiki/Cubism",
            "https://en.wikipedia.org/wiki/Abstract_art",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996497-63",
            "https://en.wikipedia.org/#cite_note-64",
            "https://en.wikipedia.org/wiki/Marcel_Proust",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996491-65",
            "https://en.wikipedia.org/wiki/First_World_War",
            "https://en.wikipedia.org/wiki/First_Battle_of_the_Marne",
            "https://en.wikipedia.org/wiki/Zeppelin",
            "https://en.wikipedia.org/wiki/Paris_Gun",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996750-66",
            "https://en.wikipedia.org/wiki/Ernest_Hemingway",
            "https://en.wikipedia.org/wiki/Igor_Stravinsky",
            "https://en.wikipedia.org/wiki/James_Joyce",
            "https://en.wikipedia.org/wiki/Josephine_Baker",
            "https://en.wikipedia.org/wiki/Eva_Kotchever",
            "https://en.wikipedia.org/wiki/Henry_Miller",
            "https://en.wikipedia.org/wiki/Ana%C3%AFs_Nin",
            "https://en.wikipedia.org/wiki/Sidney_Bechet",
            "https://en.wikipedia.org/#cite_note-67",
            "https://en.wikipedia.org/wiki/Salvador_Dal%C3%AD",
            "https://en.wikipedia.org/#cite_note-Meisler-68",
            "https://en.wikipedia.org/wiki/Paris_Peace_Conference,_1919",
            "https://en.wikipedia.org/wiki/French_colonial_empire",
            "https://en.wikipedia.org/wiki/Ho_Chi_Minh",
            "https://en.wikipedia.org/wiki/Zhou_Enlai",
            "https://en.wikipedia.org/wiki/L%C3%A9opold_S%C3%A9dar_Senghor",
            "https://en.wikipedia.org/#cite_note-69",
            "/wiki/File:The_Liberation_of_Paris,_25_-_26_August_1944_HU66477.jpg",
            "https://en.wikipedia.org/wiki/Charles_de_Gaulle",
            "https://en.wikipedia.org/wiki/Open_city",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012217-70",
            "https://en.wikipedia.org/wiki/Vel%27_d%27Hiv_Roundup",
            "https://en.wikipedia.org/wiki/Auschwitz_concentration_camp",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996637-71",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012218-72",
            "https://en.wikipedia.org/wiki/2nd_Armored_Division_(France)",
            "https://en.wikipedia.org/wiki/4th_Infantry_Division_(United_States)",
            "https://en.wikipedia.org/wiki/United_States_Army",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Ville,_Paris",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996242%E2%80%93243-73",
            "https://en.wikipedia.org/wiki/Algerian_War",
            "https://en.wikipedia.org/wiki/National_Liberation_Front_(Algeria)",
            "https://en.wikipedia.org/wiki/Paris_massacre_of_1961",
            "https://en.wikipedia.org/wiki/Organisation_arm%C3%A9e_secr%C3%A8te",
            "https://en.wikipedia.org/#cite_note-74",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996658-75",
            "https://en.wikipedia.org/wiki/Sorbonne_(building)",
            "https://en.wikipedia.org/wiki/Latin_Quarter,_Paris",
            "https://en.wikipedia.org/wiki/May_1968_events_in_France",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012226-76",
            "https://en.wikipedia.org/wiki/Jacques_Chirac",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996260-77",
            "https://en.wikipedia.org/wiki/Tour_Montparnasse",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012222-78",
            "https://en.wikipedia.org/#cite_note-FOOTNOTECombeau2003107%E2%80%93108-79",
            "https://en.wikipedia.org/wiki/R%C3%A9seau_Express_R%C3%A9gional",
            "https://en.wikipedia.org/wiki/P%C3%A9riph%C3%A9rique_(Paris)",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEBellde-Shalit2011247-80",
            "https://en.wikipedia.org/wiki/French_Fifth_Republic",
            "https://en.wikipedia.org/wiki/Georges_Pompidou",
            "https://en.wikipedia.org/wiki/Centre_Georges_Pompidou",
            "https://en.wikipedia.org/wiki/Val%C3%A9ry_Giscard_d%27Estaing",
            "https://en.wikipedia.org/wiki/Fran%C3%A7ois_Mitterrand",
            "https://en.wikipedia.org/wiki/Op%C3%A9ra_Bastille",
            "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_nationale_de_France",
            "https://en.wikipedia.org/wiki/Arche_de_la_D%C3%A9fense",
            "https://en.wikipedia.org/wiki/La_D%C3%A9fense",
            "https://en.wikipedia.org/wiki/Louvre_Pyramid",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_du_Quai_Branly_%E2%80%93_Jacques_Chirac",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESarmant2012226%E2%80%93230-81",
            "https://en.wikipedia.org/wiki/Bertrand_Delano%C3%AB",
            "https://en.wikipedia.org/#cite_note-82",
            "https://en.wikipedia.org/wiki/V%C3%A9lib%27",
            "https://en.wikipedia.org/wiki/Promenade_des_Berges_de_la_Seine",
            "https://en.wikipedia.org/#cite_note-83",
            "/wiki/File:Marche_hommage_Charlie_hebdo_et_aux_victimes_des_attentats_de_janvier_2015_(17).jpg",
            "https://en.wikipedia.org/wiki/Place_de_la_R%C3%A9publique",
            "https://en.wikipedia.org/wiki/Republican_marches",
            "https://en.wikipedia.org/wiki/Charlie_Hebdo_shooting",
            "https://en.wikipedia.org/wiki/Nicolas_Sarkozy",
            "https://en.wikipedia.org/#cite_note-Lichfield-84",
            "https://en.wikipedia.org/wiki/Grand_Paris_Express",
            "https://en.wikipedia.org/wiki/TGV",
            "https://en.wikipedia.org/#cite_note-metro-85",
            "https://en.wikipedia.org/#cite_note-86",
            "https://en.wikipedia.org/wiki/Al-Qaeda_in_the_Arabian_Peninsula",
            "https://en.wikipedia.org/wiki/January_2015_%C3%8Ele-de-France_attacks",
            "https://en.wikipedia.org/#cite_note-87",
            "https://en.wikipedia.org/#cite_note-88",
            "https://en.wikipedia.org/#cite_note-89",
            "https://en.wikipedia.org/wiki/November_2015_Paris_attacks",
            "https://en.wikipedia.org/#cite_note-90",
            "https://en.wikipedia.org/#cite_note-91",
            "https://en.wikipedia.org/wiki/Paris_Agreement",
            "https://en.wikipedia.org/wiki/United_Nations_Framework_Convention_on_Climate_Change",
            "https://en.wikipedia.org/wiki/Effects_of_climate_change",
            "https://en.wikipedia.org/#cite_note-92",
            "https://en.wikipedia.org/wiki/Geography_of_Paris",
            "/wiki/File:Paris,_France_ESA24382977.jpeg",
            "https://en.wikipedia.org/wiki/Sentinel-2",
            "https://en.wikipedia.org/wiki/%C3%8Ele_Saint-Louis",
            "https://en.wikipedia.org/wiki/English_Channel",
            "https://en.wikipedia.org/#cite_note-City-93",
            "https://en.wikipedia.org/wiki/Above_mean_sea_level",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEBlackmoreMcConnachie2004153-94",
            "https://en.wikipedia.org/wiki/Boulevard_P%C3%A9riph%C3%A9rique",
            "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand201069-95",
            "https://en.wikipedia.org/#cite_note-96",
            "https://en.wikipedia.org/wiki/Kilometre_zero#France",
            "https://en.wikipedia.org/wiki/Calais",
            "https://en.wikipedia.org/wiki/Brussels",
            "https://en.wikipedia.org/wiki/Marseille",
            "https://en.wikipedia.org/wiki/Nantes",
            "https://en.wikipedia.org/wiki/Rouen",
            "https://en.wikipedia.org/#cite_note-97",
            "https://en.wikipedia.org/wiki/Climate_of_Paris",
            "/wiki/File:Paris_raining_autumn_cityscape_(8252181936).jpg",
            "https://en.wikipedia.org/wiki/Oceanic_climate",
            "https://en.wikipedia.org/wiki/K%C3%B6ppen_climate_classification",
            "https://en.wikipedia.org/#cite_note-98",
            "/wiki/Wikipedia:Verifiability",
            "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010309-99",
            "https://en.wikipedia.org/wiki/2003_European_heat_wave",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEGoldstein20058-100",
            "https://en.wikipedia.org/#cite_note-101",
            "https://en.wikipedia.org/#cite_note-102",
            "https://en.wikipedia.org/#cite_note-103",
            "https://en.wikipedia.org/#cite_note-104",
            "https://en.wikipedia.org/#cite_note-climate-105",
            "https://en.wikipedia.org/wiki/Parc_Montsouris",
            "https://en.wikipedia.org/wiki/Precipitation",
            "https://en.wikipedia.org/wiki/Relative_humidity",
            "https://en.wikipedia.org/wiki/Sunshine_duration",
            "https://en.wikipedia.org/wiki/Ultraviolet_index",
            "https://en.wikipedia.org/wiki/Meteo_France",
            "https://en.wikipedia.org/#cite_note-106",
            "https://en.wikipedia.org/#cite_note-Infoclimat-107",
            "https://en.wikipedia.org/#cite_note-Weather_Atlas-108",
            "https://en.wikipedia.org/wiki/Administration_of_Paris",
            "https://en.wikipedia.org/wiki/Mayor_of_Paris",
            "/wiki/File:Paris_plan_jms.png",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996334-109",
            "https://en.wikipedia.org/wiki/2014_Paris_municipal_election",
            "https://en.wikipedia.org/#cite_note-auto2-110",
            "https://en.wikipedia.org/wiki/2020_Paris_municipal_election",
            "https://en.wikipedia.org/#cite_note-111",
            "/wiki/File:Paris,_H%C3%B4tel_de_Ville_--_2014_--_1714.jpg",
            "https://en.wikipedia.org/wiki/Indirect_election",
            "https://en.wikipedia.org/wiki/Conseil_de_Paris",
            "https://en.wikipedia.org/wiki/Closed_list",
            "https://en.wikipedia.org/wiki/Proportional_representation",
            "https://en.wikipedia.org/wiki/Two-round_system",
            "https://en.wikipedia.org/#cite_note-Election_Code_%E2%80%93_Article_L260-112",
            "https://en.wikipedia.org/wiki/Majority",
            "https://en.wikipedia.org/wiki/Plurality_(voting)",
            "https://en.wikipedia.org/wiki/Highest_averages_method",
            "https://en.wikipedia.org/#cite_note-Pariscouncil-113",
            "https://en.wikipedia.org/wiki/Conseil_d%27arrondissement",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEShales200716-114",
            "https://en.wikipedia.org/wiki/Paris_Centre",
            "https://en.wikipedia.org/#cite_note-115",
            "/wiki/File:%C3%89tablissements_publics_territoriaux_du_Grand_Paris_et_trois_d%C3%A9partements.svg",
            "https://en.wikipedia.org/#cite_note-MGP-116",
            "https://en.wikipedia.org/wiki/Hauts-de-Seine",
            "https://en.wikipedia.org/wiki/Seine-Saint-Denis",
            "https://en.wikipedia.org/wiki/Val-de-Marne",
            "https://en.wikipedia.org/wiki/Argenteuil",
            "https://en.wikipedia.org/wiki/Val_d%27Oise",
            "https://en.wikipedia.org/wiki/Paray-Vieille-Poste",
            "https://en.wikipedia.org/wiki/Essonne",
            "https://en.wikipedia.org/#cite_note-117",
            "https://en.wikipedia.org/#cite_note-lemoniteur1-118",
            "https://en.wikipedia.org/wiki/Patrick_Ollier",
            "https://en.wikipedia.org/#cite_note-119",
            "https://en.wikipedia.org/wiki/Region",
            "https://en.wikipedia.org/wiki/%C3%8Ele_de_France",
            "https://en.wikipedia.org/wiki/Regional_Council_of_%C3%8Ele-de-France",
            "https://en.wikipedia.org/wiki/Val%C3%A9rie_P%C3%A9cresse",
            "https://en.wikipedia.org/#cite_note-120",
            "/wiki/File:Secretary_Pompeo_Arrives_to_Meet_with_French_Foreign_Minister_Le_Drian_in_Paris_(50610423656).jpg",
            "https://en.wikipedia.org/wiki/%C3%89lys%C3%A9e_Palace",
            "https://en.wikipedia.org/wiki/President_of_France",
            "https://en.wikipedia.org/wiki/Government_of_France",
            "https://en.wikipedia.org/#cite_note-121",
            "https://en.wikipedia.org/wiki/Prime_Minister_of_France",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_Matignon",
            "https://en.wikipedia.org/#cite_note-122",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEKnappWright200693%E2%80%9394-123",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEBorrus2012288-124",
            "https://en.wikipedia.org/wiki/French_Parliament",
            "https://en.wikipedia.org/wiki/Senate_(France)",
            "https://en.wikipedia.org/wiki/Palais_du_Luxembourg",
            "https://en.wikipedia.org/wiki/National_Assembly_(France)",
            "https://en.wikipedia.org/wiki/Palais_Bourbon",
            "https://en.wikipedia.org/wiki/List_of_presidents_of_the_Senate_of_France",
            "https://en.wikipedia.org/wiki/Petit_Luxembourg",
            "https://en.wikipedia.org/#cite_note-125",
            "/wiki/File:Conseil_d%27Etat_Paris_WA.jpg",
            "https://en.wikipedia.org/wiki/Conseil_d%27%C3%89tat_(France)",
            "https://en.wikipedia.org/wiki/Court_of_Cassation_(France)",
            "https://en.wikipedia.org/wiki/Palais_de_Justice,_Paris",
            "https://en.wikipedia.org/#cite_note-126",
            "https://en.wikipedia.org/wiki/Council_of_State_(France)",
            "https://en.wikipedia.org/wiki/1st_arrondissement_of_Paris",
            "https://en.wikipedia.org/#cite_note-127",
            "https://en.wikipedia.org/wiki/Constitutional_Council_of_France",
            "https://en.wikipedia.org/#cite_note-128",
            "https://en.wikipedia.org/wiki/UNESCO",
            "https://en.wikipedia.org/wiki/Organisation_for_Economic_Co-operation_and_Development",
            "https://en.wikipedia.org/wiki/International_Chamber_of_Commerce",
            "https://en.wikipedia.org/wiki/Paris_Club",
            "https://en.wikipedia.org/wiki/Organisation_internationale_de_la_Francophonie",
            "https://en.wikipedia.org/wiki/European_Union_Institute_for_Security_Studies",
            "https://en.wikipedia.org/wiki/Bureau_of_International_Expositions",
            "/wiki/File:Gendarmerie_BMW_R1100RT.jpg",
            "https://en.wikipedia.org/wiki/National_Gendarmerie",
            "https://en.wikipedia.org/wiki/Prefecture_of_Police_of_Paris",
            "https://en.wikipedia.org/wiki/Minister_of_the_Interior_(France)",
            "https://en.wikipedia.org/wiki/National_Police_(France)",
            "https://en.wikipedia.org/wiki/Paris_Fire_Brigade",
            "https://en.wikipedia.org/wiki/Place_Louis_L%C3%A9pine",
            "https://en.wikipedia.org/#cite_note-Presentation_Generale-129",
            "https://en.wikipedia.org/wiki/Compagnies_R%C3%A9publicaines_de_S%C3%A9curit%C3%A9",
            "https://en.wikipedia.org/wiki/French_Armed_Forces",
            "https://en.wikipedia.org/#cite_note-130",
            "https://en.wikipedia.org/#cite_note-131",
            "/wiki/File:Tour_Eiffel_360_Panorama.jpg",
            "https://en.wikipedia.org/wiki/Architecture_of_Paris",
            "https://en.wikipedia.org/wiki/Religious_buildings_in_Paris",
            "https://en.wikipedia.org/wiki/List_of_tallest_buildings_and_structures_in_the_Paris_region",
            "/wiki/File:Rue_de_Rivoli_at_night,_Paris_August_2013.jpg",
            "https://en.wikipedia.org/wiki/Rue_de_Rivoli",
            "/wiki/File:Paris_Place_des_Vosges_02.jpg",
            "https://en.wikipedia.org/#cite_note-132",
            "https://en.wikipedia.org/wiki/%C3%8Ele_aux_Cygnes",
            "https://en.wikipedia.org/wiki/Paris_stone",
            "https://en.wikipedia.org/#cite_note-133",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEBraimohVlek200812-134",
            "https://en.wikipedia.org/#cite_note-plan_hauteurs-135",
            "https://en.wikipedia.org/#cite_note-136",
            "https://en.wikipedia.org/wiki/Tour_First",
            "https://en.wikipedia.org/wiki/Courbevoie",
            "/wiki/File:Front_de_Seine_-_Paris_15.jpg",
            "https://en.wikipedia.org/wiki/Front_de_Seine",
            "https://en.wikipedia.org/wiki/Avenue_Montaigne",
            "https://en.wikipedia.org/#cite_note-137",
            "https://en.wikipedia.org/#cite_note-insee_logement-138",
            "https://en.wikipedia.org/#cite_note-notaires_idf-139",
            "https://en.wikipedia.org/#cite_note-140",
            "/wiki/File:Paris_19th_Arrondissement_Residential_Area.jpg",
            "https://en.wikipedia.org/#cite_note-141",
            "/wiki/File:Paris,_France,_September_24,_2016_SkySat.jpg",
            "https://en.wikipedia.org/wiki/SkySat",
            "/wiki/File:West_of_Paris_seen_from_Tour_Montparnasse_-_2019-09-18.jpg",
            "https://en.wikipedia.org/wiki/Seine_(department)",
            "https://en.wikipedia.org/#cite_note-142",
            "https://en.wikipedia.org/wiki/Paul_Delouvrier",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEMasson1984536-143",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEYarri2008407-144",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEGordon200646%E2%80%9347-145",
            "https://en.wikipedia.org/#cite_note-FOOTNOTECastells198375-146",
            "https://en.wikipedia.org/#cite_note-FOOTNOTETomasBlancBonillaIERP2003237-147",
            "https://en.wikipedia.org/#cite_note-villes_nouvelles-148",
            "https://en.wikipedia.org/wiki/Goutte_d%27Or",
            "https://en.wikipedia.org/wiki/Belleville,_Paris",
            "https://en.wikipedia.org/wiki/Department_(France)",
            "https://en.wikipedia.org/wiki/Val-d%27Oise",
            "https://en.wikipedia.org/wiki/%C3%89vry_(Essonne)",
            "https://en.wikipedia.org/wiki/Corbeil-Essonnes",
            "https://en.wikipedia.org/wiki/Essonne_(d%C3%A9partement)",
            "https://en.wikipedia.org/wiki/Les_Mureaux",
            "https://en.wikipedia.org/wiki/Mantes-la-Jolie",
            "https://en.wikipedia.org/wiki/Yvelines",
            "https://en.wikipedia.org/#cite_note-149",
            "https://en.wikipedia.org/wiki/Urban_sociology",
            "https://en.wikipedia.org/wiki/Saint-Maur-des-Foss%C3%A9s",
            "https://en.wikipedia.org/wiki/Enghien-les-Bains",
            "https://en.wikipedia.org/#cite_note-150",
            "https://en.wikipedia.org/wiki/Demographics_of_Paris",
            "/wiki/File:Paris_population_pyramid.svg",
            "https://en.wikipedia.org/#cite_note-immig-151",
            "https://en.wikipedia.org/#cite_note-152",
            "https://en.wikipedia.org/wiki/Metropolitan_France",
            "https://en.wikipedia.org/wiki/Algeria",
            "https://en.wikipedia.org/wiki/Algerians_in_France",
            "https://en.wikipedia.org/wiki/Morocco",
            "https://en.wikipedia.org/wiki/Moroccans_in_France",
            "https://en.wikipedia.org/wiki/Portugal",
            "https://en.wikipedia.org/wiki/Portuguese_in_France",
            "https://en.wikipedia.org/wiki/Tunisia",
            "https://en.wikipedia.org/wiki/Tunisians_in_France",
            "/wiki/File:Unofficial_flag_of_Guadeloupe_(local).svg",
            "https://en.wikipedia.org/wiki/Guadeloupe",
            "/wiki/File:Flag-of-Martinique.svg",
            "https://en.wikipedia.org/wiki/Martinique",
            "https://en.wikipedia.org/wiki/China",
            "https://en.wikipedia.org/wiki/Chinese_community_in_Paris",
            "https://en.wikipedia.org/wiki/Turkey",
            "https://en.wikipedia.org/wiki/Turks_in_France",
            "https://en.wikipedia.org/wiki/Mali",
            "https://en.wikipedia.org/wiki/Malians_in_France",
            "https://en.wikipedia.org/wiki/Ivory_Coast",
            "https://en.wikipedia.org/wiki/Ivorians_in_France",
            "https://en.wikipedia.org/wiki/Senegal",
            "https://en.wikipedia.org/wiki/Senegalese_people_in_France",
            "https://en.wikipedia.org/wiki/Italy",
            "https://en.wikipedia.org/wiki/Italians_in_France",
            "https://en.wikipedia.org/wiki/Romania",
            "https://en.wikipedia.org/wiki/Romanians_in_France",
            "https://en.wikipedia.org/wiki/Democratic_Republic_of_the_Congo",
            "https://en.wikipedia.org/wiki/Congolese_people_in_France",
            "https://en.wikipedia.org/wiki/Spain",
            "https://en.wikipedia.org/wiki/Spanish_immigration_to_France",
            "https://en.wikipedia.org/wiki/Sri_Lanka",
            "https://en.wikipedia.org/wiki/Sri_Lankans_in_France",
            "https://en.wikipedia.org/wiki/Cameroon",
            "https://en.wikipedia.org/wiki/Cameroonians_in_France",
            "https://en.wikipedia.org/wiki/Republic_of_the_Congo",
            "https://en.wikipedia.org/wiki/Haiti",
            "https://en.wikipedia.org/wiki/Haitians_in_France",
            "https://en.wikipedia.org/wiki/Poland",
            "https://en.wikipedia.org/wiki/Poles_in_France",
            "https://en.wikipedia.org/wiki/Vietnam",
            "https://en.wikipedia.org/wiki/Vietnamese_people_in_France",
            "https://en.wikipedia.org/wiki/Cambodia",
            "https://en.wikipedia.org/wiki/Cambodians_in_France",
            "/wiki/File:Blason_R%C3%A9union_DOM.svg",
            "https://en.wikipedia.org/wiki/R%C3%A9union",
            "https://en.wikipedia.org/wiki/India",
            "https://en.wikipedia.org/wiki/Indians_in_France",
            "https://en.wikipedia.org/wiki/Serbia",
            "https://en.wikipedia.org/wiki/Serbs_in_France",
            "https://en.wikipedia.org/wiki/Lebanon",
            "https://en.wikipedia.org/wiki/Lebanese_people_in_France",
            "https://en.wikipedia.org/wiki/Madagascar",
            "https://en.wikipedia.org/wiki/Malagasy_people_in_France",
            "https://en.wikipedia.org/wiki/Germany",
            "https://en.wikipedia.org/wiki/Germans_in_France",
            "https://en.wikipedia.org/wiki/Pakistan",
            "https://en.wikipedia.org/wiki/Pakistanis_in_France",
            "https://en.wikipedia.org/wiki/Russia",
            "https://en.wikipedia.org/wiki/Russians_in_France",
            "https://en.wikipedia.org/wiki/Mauritius",
            "https://en.wikipedia.org/wiki/Mauritians_in_France",
            "https://en.wikipedia.org/wiki/Guinea",
            "https://en.wikipedia.org/wiki/Guineans_in_France",
            "https://en.wikipedia.org/wiki/Brazil",
            "https://en.wikipedia.org/wiki/Brazilians_in_France",
            "https://en.wikipedia.org/wiki/United_Kingdom",
            "https://en.wikipedia.org/wiki/British_migration_to_France",
            "https://en.wikipedia.org/wiki/United_States",
            "https://en.wikipedia.org/wiki/Americans_in_France",
            "https://en.wikipedia.org/wiki/Institut_national_de_la_statistique_et_des_%C3%A9tudes_%C3%A9conomiques",
            "https://en.wikipedia.org/#cite_note-153",
            "https://en.wikipedia.org/#cite_note-154",
            "https://en.wikipedia.org/#cite_note-Le_Monde,_22_January_2019-155",
            "https://en.wikipedia.org/#cite_note-ReferenceA-156",
            "https://en.wikipedia.org/wiki/Berlin",
            "https://en.wikipedia.org/wiki/Madrid",
            "https://en.wikipedia.org/wiki/Rome",
            "https://en.wikipedia.org/wiki/Eurostat",
            "https://en.wikipedia.org/#cite_note-157",
            "https://en.wikipedia.org/#cite_note-158",
            "https://en.wikipedia.org/wiki/De-industrialisation",
            "https://en.wikipedia.org/wiki/Gentrification",
            "https://en.wikipedia.org/#cite_note-159",
            "https://en.wikipedia.org/#cite_note-pophis-160",
            "https://en.wikipedia.org/wiki/Unit%C3%A9_urbaine",
            "https://en.wikipedia.org/wiki/List_of_urban_areas_in_the_European_Union",
            "https://en.wikipedia.org/#cite_note-pop_UU-161",
            "https://en.wikipedia.org/#cite_note-urbaneurope-162",
            "https://en.wikipedia.org/wiki/Paris_Metropolitan_Area",
            "https://en.wikipedia.org/#cite_note-FU-163",
            "https://en.wikipedia.org/#cite_note-pop_AU-164",
            "https://en.wikipedia.org/#cite_note-165",
            "https://en.wikipedia.org/wiki/List_of_metropolitan_areas_in_Europe",
            "https://en.wikipedia.org/wiki/Eurozone",
            "https://en.wikipedia.org/#cite_note-166",
            "https://en.wikipedia.org/wiki/Europe",
            "https://en.wikipedia.org/wiki/Maghreb",
            "https://en.wikipedia.org/wiki/Sub-Saharan_Africa",
            "https://en.wikipedia.org/wiki/Egypt",
            "https://en.wikipedia.org/wiki/Asia",
            "https://en.wikipedia.org/wiki/Americas",
            "https://en.wikipedia.org/wiki/Oceania",
            "https://en.wikipedia.org/#cite_note-167",
            "https://en.wikipedia.org/#cite_note-168",
            "https://en.wikipedia.org/#cite_note-169",
            "https://en.wikipedia.org/#cite_note-170",
            "https://en.wikipedia.org/#cite_note-171",
            "/wiki/File:Le_sacre_coeur.jpg",
            "https://en.wikipedia.org/wiki/Sacr%C3%A9-C%C5%93ur,_Paris",
            "https://en.wikipedia.org/wiki/Catholic_Church",
            "https://en.wikipedia.org/#cite_note-172",
            "https://en.wikipedia.org/#cite_note-173",
            "https://en.wikipedia.org/wiki/Institut_fran%C3%A7ais_d%27opinion_publique",
            "https://en.wikipedia.org/#cite_note-174",
            "https://en.wikipedia.org/#cite_note-175",
            "https://en.wikipedia.org/#cite_note-176",
            "https://en.wikipedia.org/#cite_note-177",
            "https://en.wikipedia.org/wiki/Israel",
            "https://en.wikipedia.org/#cite_note-178",
            "https://en.wikipedia.org/wiki/Economy_of_Paris",
            "/wiki/File:La_D%C3%A9fense_depuis_l%27Arc_de_Triomphe_Janvier_2023_(cropped).jpg",
            "https://en.wikipedia.org/#cite_note-France.fr-179",
            "/wiki/File:Italiens12.jpg",
            "https://en.wikipedia.org/wiki/Headquarters",
            "https://en.wikipedia.org/wiki/BNP_Paribas",
            "https://en.wikipedia.org/wiki/Boulevard_des_Italiens",
            "https://en.wikipedia.org/#cite_note-180",
            "/wiki/File:Hotel_de_la_vaupaliere54.jpg",
            "https://en.wikipedia.org/wiki/Axa",
            "/wiki/File:Campus_Evergreen.jpg",
            "https://en.wikipedia.org/wiki/Cr%C3%A9dit_Agricole",
            "https://en.wikipedia.org/wiki/Montrouge",
            "https://en.wikipedia.org/#cite_note-sieges-181",
            "https://en.wikipedia.org/#cite_note-182",
            "https://en.wikipedia.org/wiki/Paris_Region",
            "https://en.wikipedia.org/#cite_note-183",
            "https://en.wikipedia.org/#cite_note-184",
            "https://en.wikipedia.org/#cite_note-185",
            "https://en.wikipedia.org/#cite_note-INSEE-186",
            "https://en.wikipedia.org/wiki/Neuilly-sur-Seine",
            "https://en.wikipedia.org/wiki/Levallois-Perret",
            "https://en.wikipedia.org/wiki/Boulogne-Billancourt",
            "https://en.wikipedia.org/wiki/Issy-les-Moulineaux",
            "https://en.wikipedia.org/wiki/Fortune_Global_500",
            "https://en.wikipedia.org/wiki/Soci%C3%A9t%C3%A9_G%C3%A9n%C3%A9rale",
            "https://en.wikipedia.org/wiki/Euro",
            "https://en.wikipedia.org/#cite_note-187",
            "https://en.wikipedia.org/#cite_note-188",
            "https://en.wikipedia.org/#cite_note-189",
            "https://en.wikipedia.org/#cite_note-McKinsey-190",
            "https://en.wikipedia.org/#cite_note-191",
            "https://en.wikipedia.org/#cite_note-192",
            "https://en.wikipedia.org/wiki/Financial_services",
            "https://en.wikipedia.org/#cite_note-INSEE_201210-193",
            "https://en.wikipedia.org/wiki/Val_de_Seine",
            "https://en.wikipedia.org/wiki/Service_Sector",
            "https://en.wikipedia.org/#cite_note-194",
            "https://en.wikipedia.org/wiki/Singapore",
            "https://en.wikipedia.org/wiki/Hong_Kong",
            "https://en.wikipedia.org/#cite_note-195",
            "https://en.wikipedia.org/wiki/Station_F",
            "https://en.wikipedia.org/wiki/Business_incubator",
            "https://en.wikipedia.org/#cite_note-196",
            "/wiki/File:Median_income_of_Paris_and_inner_ring_(2018)_named.svg",
            "https://en.wikipedia.org/#cite_note-AlapageINSEE-197",
            "https://en.wikipedia.org/wiki/Aulnay-sous-Bois",
            "https://en.wikipedia.org/wiki/March%C3%A9_international_de_Rungis",
            "https://en.wikipedia.org/#cite_note-wealth_distribution-198",
            "https://en.wikipedia.org/wiki/Poverty_line",
            "https://en.wikipedia.org/#cite_note-199",
            "https://en.wikipedia.org/#cite_note-200",
            "https://en.wikipedia.org/#cite_note-201",
            "https://en.wikipedia.org/wiki/Tourism_in_Paris",
            "https://en.wikipedia.org/wiki/Landmarks_in_Paris",
            "https://en.wikipedia.org/wiki/Historical_quarters_of_Paris",
            "https://en.wikipedia.org/wiki/List_of_tourist_attractions_in_Paris",
            "/wiki/File:Visiter_le_Louvre_en_%C3%A9t%C3%A9_!_(4787187477).jpg",
            "https://en.wikipedia.org/wiki/List_of_most-visited_art_museums",
            "https://en.wikipedia.org/wiki/Euromonitor",
            "https://en.wikipedia.org/#cite_note-202",
            "https://en.wikipedia.org/#cite_note-pro.visitparisregion.com-203",
            "https://en.wikipedia.org/#cite_note-KeyFigures-204",
            "https://en.wikipedia.org/#cite_note-205",
            "https://en.wikipedia.org/#cite_note-TIP2016-206",
            "https://en.wikipedia.org/wiki/Louvre_Museum",
            "https://en.wikipedia.org/wiki/Centre_Pompidou",
            "https://en.wikipedia.org/wiki/Airbnb",
            "https://en.wikipedia.org/#cite_note-207",
            "https://en.wikipedia.org/#cite_note-208",
            "/wiki/Wikipedia:Citing_sources#What_information_to_include",
            "https://en.wikipedia.org/wiki/Paris_syndrome",
            "https://en.wikipedia.org/#cite_note-209",
            "https://en.wikipedia.org/wiki/Art_in_Paris",
            "/wiki/File:Pierre-Auguste_Renoir,_Le_Moulin_de_la_Galette.jpg",
            "https://en.wikipedia.org/wiki/Auguste_Renoir",
            "https://en.wikipedia.org/wiki/Bal_du_moulin_de_la_Galette",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEMontclos2003-210",
            "https://en.wikipedia.org/wiki/French_Baroque_and_Classicism",
            "https://en.wikipedia.org/wiki/Fran%C3%A7ois_Girardon",
            "https://en.wikipedia.org/wiki/Antoine_Coysevox",
            "https://en.wikipedia.org/wiki/Nicolas_Coustou",
            "https://en.wikipedia.org/wiki/Pierre_Mignard",
            "https://en.wikipedia.org/wiki/Acad%C3%A9mie_royale_de_peinture_et_de_sculpture",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEMichelin2011-211",
            "https://en.wikipedia.org/wiki/Henri_de_Toulouse-Lautrec",
            "https://en.wikipedia.org/wiki/%C3%89douard_Manet",
            "https://en.wikipedia.org/wiki/Berthe_Morisot",
            "https://en.wikipedia.org/wiki/Paul_Gauguin",
            "https://en.wikipedia.org/wiki/Pierre-Auguste_Renoir",
            "https://en.wikipedia.org/wiki/Romanticism",
            "https://en.wikipedia.org/wiki/Th%C3%A9odore_G%C3%A9ricault",
            "https://en.wikipedia.org/wiki/Art_Nouveau",
            "https://en.wikipedia.org/wiki/Art_Deco",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEPerry199519-212",
            "https://en.wikipedia.org/wiki/Vincent_van_Gogh",
            "https://en.wikipedia.org/wiki/Paul_C%C3%A9zanne",
            "https://en.wikipedia.org/wiki/Jean_Metzinger",
            "https://en.wikipedia.org/wiki/Albert_Gleizes",
            "https://en.wikipedia.org/wiki/Henri_Rousseau",
            "https://en.wikipedia.org/wiki/Marc_Chagall",
            "https://en.wikipedia.org/wiki/Fr%C3%A9d%C3%A9ric_Auguste_Bartholdi",
            "https://en.wikipedia.org/wiki/Statue_of_Liberty",
            "https://en.wikipedia.org/wiki/Auguste_Rodin",
            "https://en.wikipedia.org/wiki/Camille_Claudel",
            "https://en.wikipedia.org/wiki/Antoine_Bourdelle",
            "https://en.wikipedia.org/wiki/Paul_Landowski",
            "https://en.wikipedia.org/wiki/Christ_the_Redeemer_(statue)",
            "https://en.wikipedia.org/wiki/Rio_de_Janeiro",
            "https://en.wikipedia.org/wiki/Aristide_Maillol",
            "https://en.wikipedia.org/wiki/Belle_%C3%89poque",
            "https://en.wikipedia.org/wiki/School_of_Paris",
            "https://en.wikipedia.org/wiki/List_of_museums_in_Paris",
            "/wiki/File:MuseeOrsay_20070324.jpg",
            "https://en.wikipedia.org/#cite_note-ReferenceC-213",
            "https://en.wikipedia.org/wiki/List_of_most-visited_museums",
            "https://en.wikipedia.org/wiki/Mona_Lisa",
            "https://en.wikipedia.org/wiki/Venus_de_Milo",
            "https://en.wikipedia.org/wiki/Liberty_Leading_the_People",
            "https://en.wikipedia.org/wiki/National_Museum_of_Natural_History,_France",
            "https://en.wikipedia.org/wiki/French_Impressionists",
            "https://en.wikipedia.org/wiki/Cit%C3%A9_des_sciences_et_de_l%27industrie",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_des_Arts_et_M%C3%A9tiers",
            "https://en.wikipedia.org/wiki/Fondation_Louis_Vuitton",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_Carnavalet",
            "https://en.wikipedia.org/#cite_note-214",
            "/wiki/File:Mus%C3%A9e_du_quai_Branly.jpg",
            "https://en.wikipedia.org/wiki/Water_Lilies_(Monet_series)",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_national_du_Moyen_%C3%82ge",
            "https://en.wikipedia.org/wiki/Medieval_art",
            "https://en.wikipedia.org/wiki/Guimet_Museum",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_national_Eug%C3%A8ne_Delacroix",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_l%27Arm%C3%A9e",
            "https://en.wikipedia.org/wiki/Ministry_of_Culture_(France)",
            "https://en.wikipedia.org/wiki/Carnavalet_Museum",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_d%27Art_Moderne_de_la_Ville_de_Paris",
            "https://en.wikipedia.org/wiki/Palais_de_Tokyo",
            "https://en.wikipedia.org/wiki/Maison_de_Victor_Hugo",
            "https://en.wikipedia.org/wiki/Maison_de_Balzac",
            "https://en.wikipedia.org/wiki/Catacombs_of_Paris",
            "https://en.wikipedia.org/#cite_note-215",
            "https://en.wikipedia.org/wiki/Louis_Vuitton_Foundation",
            "https://en.wikipedia.org/wiki/Frank_Gehry",
            "https://en.wikipedia.org/wiki/Op%C3%A9ra_National_de_Paris",
            "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010178-216",
            "https://en.wikipedia.org/wiki/Th%C3%A9%C3%A2tre-Italien",
            "https://en.wikipedia.org/wiki/Th%C3%A9%C3%A2tre_Lyrique",
            "https://en.wikipedia.org/wiki/Th%C3%A9%C3%A2tre_de_la_Ville",
            "https://en.wikipedia.org/#cite_note-FOOTNOTESchumacher199660-217",
            "https://en.wikipedia.org/wiki/Philharmonie_de_Paris",
            "https://en.wikipedia.org/wiki/Th%C3%A9%C3%A2tre_des_Champs-%C3%89lys%C3%A9es",
            "https://en.wikipedia.org/wiki/Ballets_Russes",
            "/wiki/File:CFfacadePlacedelOpera.png",
            "https://en.wikipedia.org/wiki/Com%C3%A9die_Fran%C3%A7aise",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro19961173-218",
            "https://en.wikipedia.org/wiki/Od%C3%A9on-Th%C3%A9%C3%A2tre_de_l%27Europe",
            "https://en.wikipedia.org/wiki/Th%C3%A9%C3%A2tre_de_la_Ga%C3%AEt%C3%A9-Montparnasse",
            "https://en.wikipedia.org/#cite_note-219",
            "https://en.wikipedia.org/wiki/Cabaret",
            "https://en.wikipedia.org/wiki/Moulin_Rouge",
            "https://en.wikipedia.org/wiki/Cancan",
            "https://en.wikipedia.org/wiki/Mistinguett",
            "https://en.wikipedia.org/wiki/%C3%89dith_Piaf",
            "https://en.wikipedia.org/wiki/Olympia_Paris",
            "https://en.wikipedia.org/wiki/Folies_Berg%C3%A8re",
            "https://en.wikipedia.org/wiki/Dalida",
            "https://en.wikipedia.org/wiki/Edith_Piaf",
            "https://en.wikipedia.org/wiki/Marlene_Dietrich",
            "https://en.wikipedia.org/wiki/Miles_Davis",
            "https://en.wikipedia.org/wiki/Judy_Garland",
            "https://en.wikipedia.org/wiki/Grateful_Dead",
            "https://en.wikipedia.org/wiki/Casino_de_Paris",
            "https://en.wikipedia.org/wiki/Maurice_Chevalier",
            "https://en.wikipedia.org/wiki/Tino_Rossi",
            "https://en.wikipedia.org/wiki/Le_Lido",
            "https://en.wikipedia.org/wiki/Crazy_Horse_(cabaret)",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro19961005%E2%80%931006-220",
            "https://en.wikipedia.org/wiki/Writers_in_Paris",
            "/wiki/File:Victor_Hugo_by_%C3%89tienne_Carjat_1876_-_full.jpg",
            "https://en.wikipedia.org/wiki/Victor_Hugo",
            "https://en.wikipedia.org/wiki/Gasparinus_de_Bergamo",
            "https://en.wikipedia.org/wiki/Johann_Heynlin",
            "https://en.wikipedia.org/wiki/Nicolas_Boileau",
            "https://en.wikipedia.org/wiki/Pierre_Corneille",
            "https://en.wikipedia.org/wiki/La_Fontaine",
            "https://en.wikipedia.org/wiki/Moli%C3%A8re",
            "https://en.wikipedia.org/wiki/Jean_Racine",
            "https://en.wikipedia.org/wiki/Charles_Perrault",
            "https://en.wikipedia.org/#cite_note-221",
            "https://en.wikipedia.org/wiki/Acad%C3%A9mie_fran%C3%A7aise",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996488-222",
            "https://en.wikipedia.org/wiki/Voltaire",
            "https://en.wikipedia.org/wiki/Jean-Jacques_Rousseau",
            "https://en.wikipedia.org/wiki/Pierre_de_Marivaux",
            "https://en.wikipedia.org/wiki/Pierre_Beaumarchais",
            "https://en.wikipedia.org/wiki/St%C3%A9phane_Mallarm%C3%A9",
            "https://en.wikipedia.org/wiki/M%C3%A9rim%C3%A9e",
            "https://en.wikipedia.org/wiki/Alfred_de_Musset",
            "https://en.wikipedia.org/wiki/Alexandre_Dumas",
            "https://en.wikipedia.org/wiki/Gustave_Flaubert",
            "https://en.wikipedia.org/wiki/Guy_de_Maupassant",
            "https://en.wikipedia.org/wiki/Honor%C3%A9_de_Balzac",
            "https://en.wikipedia.org/wiki/The_Hunchback_of_Notre-Dame",
            "https://en.wikipedia.org/#cite_note-223",
            "https://en.wikipedia.org/wiki/Les_Mis%C3%A9rables",
            "https://en.wikipedia.org/#cite_note-224",
            "https://en.wikipedia.org/wiki/Jules_Verne",
            "https://en.wikipedia.org/#cite_note-225",
            "https://en.wikipedia.org/wiki/Colette",
            "https://en.wikipedia.org/wiki/Andr%C3%A9_Gide",
            "https://en.wikipedia.org/wiki/Fran%C3%A7ois_Mauriac",
            "https://en.wikipedia.org/wiki/Andr%C3%A9_Malraux",
            "https://en.wikipedia.org/wiki/Albert_Camus",
            "https://en.wikipedia.org/wiki/Simone_de_Beauvoir",
            "https://en.wikipedia.org/wiki/Jean-Paul_Sartre",
            "https://en.wikipedia.org/wiki/Samuel_Beckett",
            "https://en.wikipedia.org/wiki/Miguel_%C3%81ngel_Asturias",
            "https://en.wikipedia.org/wiki/Alejo_Carpentier",
            "https://en.wikipedia.org/wiki/Arturo_Uslar_Pietri",
            "https://en.wikipedia.org/wiki/Nobel_Prize_in_Literature",
            "https://en.wikipedia.org/wiki/Patrick_Modiano",
            "https://en.wikipedia.org/#cite_note-226",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996840-227",
            "https://en.wikipedia.org/#cite_note-228",
            "https://en.wikipedia.org/wiki/Music_in_Paris",
            "https://en.wikipedia.org/wiki/History_of_music_in_Paris",
            "/wiki/File:Olympia_facade.jpg",
            "https://en.wikipedia.org/wiki/Olympia_(Paris)",
            "https://en.wikipedia.org/wiki/Polyphony",
            "https://en.wikipedia.org/wiki/Trouv%C3%A8res",
            "https://en.wikipedia.org/wiki/Troubadours",
            "https://en.wikipedia.org/wiki/Francis_I_of_France",
            "https://en.wikipedia.org/wiki/Renaissance_music",
            "https://en.wikipedia.org/wiki/Lute",
            "https://en.wikipedia.org/wiki/Baroque_music",
            "https://en.wikipedia.org/wiki/Jean-Baptiste_Lully",
            "https://en.wikipedia.org/wiki/Jean-Philippe_Rameau",
            "https://en.wikipedia.org/wiki/Fran%C3%A7ois_Couperin",
            "https://en.wikipedia.org/wiki/Conservatoire_de_Paris",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEDamschroederWilliams1990157-229",
            "https://en.wikipedia.org/wiki/Romantic_music",
            "https://en.wikipedia.org/wiki/Hector_Berlioz",
            "https://en.wikipedia.org/wiki/Charles_Gounod",
            "https://en.wikipedia.org/wiki/Camille_Saint-Sa%C3%ABns",
            "https://en.wikipedia.org/wiki/L%C3%A9o_Delibes",
            "https://en.wikipedia.org/wiki/Jules_Massenet",
            "https://en.wikipedia.org/wiki/Georges_Bizet",
            "https://en.wikipedia.org/wiki/Carmen",
            "https://en.wikipedia.org/wiki/Western_canon",
            "https://en.wikipedia.org/#cite_note-McClary-230",
            "https://en.wikipedia.org/#cite_note-231",
            "https://en.wikipedia.org/wiki/Impressionism_in_music",
            "https://en.wikipedia.org/wiki/Claude_Debussy",
            "https://en.wikipedia.org/wiki/Erik_Satie",
            "https://en.wikipedia.org/wiki/Maurice_Ravel",
            "https://en.wikipedia.org/wiki/Fr%C3%A9d%C3%A9ric_Chopin",
            "https://en.wikipedia.org/wiki/Franz_Liszt",
            "https://en.wikipedia.org/wiki/Jacques_Offenbach",
            "https://en.wikipedia.org/wiki/Niccol%C3%B2_Paganini",
            "https://en.wikipedia.org/wiki/Bal-musette",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEDregni200419-232",
            "https://en.wikipedia.org/wiki/Bourr%C3%A9e",
            "https://en.wikipedia.org/wiki/Cabrette",
            "https://en.wikipedia.org/wiki/Bellows",
            "https://en.wikipedia.org/wiki/Bagpipe",
            "https://en.wikipedia.org/wiki/Vielle_%C3%A0_roue",
            "https://en.wikipedia.org/wiki/Hurdy-gurdy",
            "https://en.wikipedia.org/wiki/Accordion",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEDregni200832-233",
            "https://en.wikipedia.org/wiki/Jazz",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEMroue2006260-234",
            "https://en.wikipedia.org/wiki/Gypsy_jazz",
            "https://en.wikipedia.org/wiki/Django_Reinhardt",
            "https://en.wikipedia.org/wiki/St%C3%A9phane_Grappelli",
            "https://en.wikipedia.org/wiki/Quintette_du_Hot_Club_de_France",
            "https://en.wikipedia.org/#cite_note-Gjazz-235",
            "/wiki/File:Moulin_Rouge,_Paris_April_2011.jpg",
            "https://en.wikipedia.org/wiki/Saint-Germain-des-Pres",
            "https://en.wikipedia.org/wiki/Le_Tabou",
            "https://en.wikipedia.org/wiki/Claude_Luter",
            "https://en.wikipedia.org/wiki/Boris_Vian",
            "https://en.wikipedia.org/wiki/Sydney_Bechet",
            "https://en.wikipedia.org/wiki/Mezz_Mezzrow",
            "https://en.wikipedia.org/wiki/Henri_Salvador",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEBezbakh2004872-236",
            "https://en.wikipedia.org/wiki/Manouche",
            "https://en.wikipedia.org/wiki/Paris_Jazz_Festival",
            "https://en.wikipedia.org/wiki/Rock_en_Seine",
            "https://en.wikipedia.org/#cite_note-237",
            "https://en.wikipedia.org/wiki/Orchestre_de_Paris",
            "https://en.wikipedia.org/#cite_note-andante-238",
            "https://en.wikipedia.org/wiki/Chanson",
            "https://en.wikipedia.org/#cite_note-yahoomusicbio-239",
            "https://en.wikipedia.org/wiki/French_hip_hop",
            "https://en.wikipedia.org/#cite_note-240",
            "https://en.wikipedia.org/wiki/List_of_films_set_in_Paris",
            "/wiki/File:Cin%C3%A9matographe_Lumi%C3%A8re.jpg",
            "https://en.wikipedia.org/wiki/Auguste_and_Louis_Lumi%C3%A8re",
            "https://en.wikipedia.org/wiki/L%27Arroseur_Arros%C3%A9",
            "https://en.wikipedia.org/#cite_note-241",
            "https://en.wikipedia.org/wiki/Grand_Rex",
            "https://en.wikipedia.org/#cite_note-242",
            "https://en.wikipedia.org/#cite_note-243",
            "https://en.wikipedia.org/wiki/Cinema_of_France",
            "https://en.wikipedia.org/wiki/Claude_Lelouch",
            "https://en.wikipedia.org/wiki/Jean-Luc_Godard",
            "https://en.wikipedia.org/wiki/Luc_Besson",
            "https://en.wikipedia.org/wiki/Claude_Zidi",
            "https://en.wikipedia.org/#cite_note-244",
            "https://en.wikipedia.org/wiki/French_cuisine",
            "/wiki/File:Le_Zimmer,_restaurant_in_Paris.jpg",
            "https://en.wikipedia.org/wiki/Place_du_Ch%C3%A2telet",
            "https://en.wikipedia.org/wiki/Haute_cuisine",
            "https://en.wikipedia.org/wiki/Antoine_Beauvilliers",
            "https://en.wikipedia.org/wiki/Le_Grand_V%C3%A9four",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro19961136%E2%80%931138-245",
            "https://en.wikipedia.org/wiki/Au_Rocher_de_Cancale",
            "https://en.wikipedia.org/wiki/Caf%C3%A9_Anglais",
            "https://en.wikipedia.org/wiki/Maison_dor%C3%A9e_(Paris)",
            "https://en.wikipedia.org/wiki/Maxim%27s_Paris",
            "https://en.wikipedia.org/wiki/Ledoyen",
            "https://en.wikipedia.org/wiki/Tour_d%27Argent",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro19961137-246",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEDomin%C3%A92014-247",
            "https://en.wikipedia.org/wiki/Michelin_Guide",
            "https://en.wikipedia.org/wiki/L%27Ambroisie",
            "https://en.wikipedia.org/wiki/L%27Astrance",
            "https://en.wikipedia.org/wiki/Pierre_Gagnaire",
            "https://en.wikipedia.org/wiki/Alain_Ducasse",
            "https://en.wikipedia.org/wiki/Yannick_All%C3%A9no",
            "https://en.wikipedia.org/wiki/Alain_Passard",
            "https://en.wikipedia.org/#cite_note-248",
            "https://en.wikipedia.org/#cite_note-249",
            "/wiki/File:Lesdeuxmagots.jpg",
            "https://en.wikipedia.org/wiki/Les_Deux_Magots",
            "https://en.wikipedia.org/wiki/Coffeehouse",
            "https://en.wikipedia.org/wiki/Caf%C3%A9_Procope",
            "https://en.wikipedia.org/wiki/Caf%C3%A9_de_la_Rotonde",
            "https://en.wikipedia.org/wiki/Le_D%C3%B4me_Caf%C3%A9",
            "https://en.wikipedia.org/wiki/Caf%C3%A9_de_Flore",
            "https://en.wikipedia.org/wiki/Bistro",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996715-250",
            "https://en.wikipedia.org/wiki/Brasserie",
            "https://en.wikipedia.org/wiki/Paris_Exposition_of_1867",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEFierro1996773-251",
            "https://en.wikipedia.org/wiki/Fashion_in_Paris",
            "/wiki/File:Magdalena_Frackowiak.jpg",
            "https://en.wikipedia.org/wiki/Magdalena_Frackowiak",
            "https://en.wikipedia.org/wiki/Paris_Fashion_Week",
            "https://en.wikipedia.org/wiki/Haute_couture",
            "https://en.wikipedia.org/#cite_note-252",
            "https://en.wikipedia.org/wiki/Christian_Dior_S.A.",
            "https://en.wikipedia.org/wiki/Chanel",
            "https://en.wikipedia.org/wiki/Karl_Lagerfeld",
            "https://en.wikipedia.org/wiki/Jean-Paul_Gaultier",
            "https://en.wikipedia.org/wiki/Yves_Saint_Laurent_(designer)",
            "https://en.wikipedia.org/wiki/Givenchy",
            "https://en.wikipedia.org/wiki/Christian_Lacroix",
            "https://en.wikipedia.org/wiki/Carrousel_du_Louvre",
            "https://en.wikipedia.org/#cite_note-253",
            "https://en.wikipedia.org/#cite_note-254",
            "https://en.wikipedia.org/wiki/Cosmetics",
            "https://en.wikipedia.org/wiki/L%27Or%C3%A9al",
            "https://en.wikipedia.org/wiki/Louis_Vuitton",
            "https://en.wikipedia.org/wiki/Herm%C3%A9s",
            "https://en.wikipedia.org/wiki/Cartier_(jeweler)",
            "https://en.wikipedia.org/#cite_note-255",
            "https://en.wikipedia.org/wiki/Nic%C3%A9phore_Ni%C3%A9pce",
            "https://en.wikipedia.org/wiki/Louis_Daguerre",
            "https://en.wikipedia.org/wiki/Daguerrotype",
            "https://en.wikipedia.org/wiki/%C3%89tienne-Jules_Marey",
            "https://en.wikipedia.org/wiki/Man_Ray",
            "https://en.wikipedia.org/wiki/Maurice_Tabard",
            "https://en.wikipedia.org/#cite_note-256",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEHazan2011362-257",
            "https://en.wikipedia.org/wiki/Eug%C3%A8ne_Atget",
            "https://en.wikipedia.org/wiki/Robert_Doisneau",
            "https://en.wikipedia.org/wiki/Marcel_Bovis",
            "https://en.wikipedia.org/wiki/Jacques-Henri_Lartigue",
            "https://en.wikipedia.org/wiki/Henri_Cartier-Bresson",
            "https://en.wikipedia.org/wiki/Poster_art",
            "https://en.wikipedia.org/wiki/Jules_Ch%C3%A9ret",
            "https://en.wikipedia.org/wiki/Eug%C3%A8ne_Grasset",
            "https://en.wikipedia.org/wiki/Adolphe_Willette",
            "https://en.wikipedia.org/wiki/Pierre_Bonnard",
            "https://en.wikipedia.org/wiki/Georges_de_Feure",
            "https://en.wikipedia.org/wiki/Henri-Gabriel_Ibels",
            "https://en.wikipedia.org/wiki/Paul_Gavarni",
            "https://en.wikipedia.org/wiki/Alphonse_Mucha",
            "/wiki/File:Si%C3%A8ge_Figaro,_14_boulevard_Haussmann,_Paris_9e.jpg",
            "https://en.wikipedia.org/wiki/Le_Figaro",
            "https://en.wikipedia.org/wiki/Newspaper_of_record",
            "https://en.wikipedia.org/#cite_note-258",
            "https://en.wikipedia.org/wiki/Le_Monde",
            "https://en.wikipedia.org/wiki/Lib%C3%A9ration",
            "https://en.wikipedia.org/wiki/Le_Nouvel_Observateur",
            "https://en.wikipedia.org/wiki/Le_Canard_encha%C3%AEn%C3%A9",
            "https://en.wikipedia.org/wiki/La_Croix_(newspaper)",
            "https://en.wikipedia.org/wiki/Le_Parisien",
            "https://en.wikipedia.org/wiki/Saint-Ouen,_Seine-Saint-Denis",
            "https://en.wikipedia.org/wiki/Les_%C3%89chos_(France)",
            "https://en.wikipedia.org/wiki/Reuters",
            "https://en.wikipedia.org/wiki/L%27%C3%89quipe",
            "https://en.wikipedia.org/#cite_note-259",
            "https://en.wikipedia.org/#cite_note-260",
            "https://en.wikipedia.org/wiki/Agence_France-Presse",
            "https://en.wikipedia.org/#cite_note-261",
            "https://en.wikipedia.org/wiki/France_24",
            "https://en.wikipedia.org/#cite_note-262",
            "https://en.wikipedia.org/wiki/Ministry_of_Foreign_and_European_Affairs_(France)",
            "https://en.wikipedia.org/#cite_note-263",
            "https://en.wikipedia.org/wiki/TF1",
            "https://en.wikipedia.org/wiki/France_2",
            "https://en.wikipedia.org/wiki/France_3",
            "https://en.wikipedia.org/wiki/Canal%2B_(French_TV_channel)",
            "https://en.wikipedia.org/wiki/France_5",
            "https://en.wikipedia.org/wiki/M6_(TV_channel)",
            "https://en.wikipedia.org/wiki/Arte",
            "https://en.wikipedia.org/wiki/D8_(TV_channel)",
            "https://en.wikipedia.org/wiki/W9_(TV_channel)",
            "https://en.wikipedia.org/wiki/NT1_(TV_channel)",
            "https://en.wikipedia.org/wiki/NRJ_12",
            "https://en.wikipedia.org/wiki/La_Cha%C3%AEne_parlementaire",
            "https://en.wikipedia.org/wiki/France_4",
            "https://en.wikipedia.org/wiki/BFM_TV",
            "https://en.wikipedia.org/wiki/Gulli",
            "https://en.wikipedia.org/#cite_note-264",
            "https://en.wikipedia.org/wiki/Radio_France",
            "https://en.wikipedia.org/wiki/16th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/Radio_France_Internationale",
            "https://en.wikipedia.org/#cite_note-265",
            "https://en.wikipedia.org/wiki/La_Poste_(France)",
            "https://en.wikipedia.org/#cite_note-266",
            "https://en.wikipedia.org/wiki/Bastille_Day",
            "https://en.wikipedia.org/wiki/Place_de_la_Concorde",
            "https://en.wikipedia.org/wiki/Flypast",
            "https://en.wikipedia.org/wiki/Patrouille_de_France",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEBlackmoreMcConnachie2004204-267",
            "https://en.wikipedia.org/wiki/Paris-Plages",
            "https://en.wikipedia.org/wiki/European_Heritage_Days",
            "https://en.wikipedia.org/wiki/F%C3%AAte_de_la_Musique",
            "https://en.wikipedia.org/wiki/Nuit_Blanche",
            "https://en.wikipedia.org/wiki/Paris_Carnival",
            "https://en.wikipedia.org/wiki/Libraries_in_Paris",
            "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_de_l%27Arsenal",
            "https://en.wikipedia.org/#cite_note-268",
            "/wiki/File:Salle_de_lecture_Bibliotheque_Sainte-Genevieve_n01.jpg",
            "https://en.wikipedia.org/wiki/Sainte-Genevi%C3%A8ve_Library",
            "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_Forney",
            "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_historique_de_la_ville_de_Paris",
            "https://en.wikipedia.org/wiki/Henri_Labrouste",
            "https://en.wikipedia.org/#cite_note-Woodward2006-269",
            "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_Mazarine",
            "https://en.wikipedia.org/wiki/M%C3%A9diath%C3%A8que_Musicale_Mahler",
            "https://en.wikipedia.org/wiki/Dominique_Perrault",
            "https://en.wikipedia.org/wiki/Biblioth%C3%A8que_de_la_Sorbonne",
            "https://en.wikipedia.org/wiki/Institut_d%27Art_et_d%27Arch%C3%A9ologie",
            "https://en.wikipedia.org/#cite_note-270",
            "https://en.wikipedia.org/#cite_note-nd.edu-271",
            "https://en.wikipedia.org/wiki/Football_in_Paris",
            "/wiki/File:Le_Paris_Saint-Germain_re%C3%A7oit_l%27AS_Monaco_au_Parc_en_Coupe_de_France_le_26_avril_2017.jpg",
            "https://en.wikipedia.org/wiki/Parc_des_Princes",
            "https://en.wikipedia.org/wiki/Association_football",
            "https://en.wikipedia.org/wiki/Racing_92",
            "https://en.wikipedia.org/wiki/Nanterre",
            "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010300%E2%80%93301-272",
            "https://en.wikipedia.org/wiki/France_national_football_team",
            "https://en.wikipedia.org/wiki/France_national_rugby_union_team",
            "https://en.wikipedia.org/wiki/Six_Nations_Championship",
            "https://en.wikipedia.org/wiki/Paris_FC",
            "https://en.wikipedia.org/wiki/Red_Star_FC",
            "https://en.wikipedia.org/wiki/US_Cr%C3%A9teil-Lusitanos",
            "https://en.wikipedia.org/wiki/Racing_Club_de_France_Football",
            "https://en.wikipedia.org/wiki/Stade_Fran%C3%A7ais_(association_football)",
            "https://en.wikipedia.org/wiki/Rugby_league",
            "https://en.wikipedia.org/wiki/Australia_national_rugby_league_team",
            "https://en.wikipedia.org/wiki/Rugby_Football_League",
            "https://en.wikipedia.org/wiki/Parc_des_Princes#Second_stadium_(1932%E2%80%931972)",
            "https://en.wikipedia.org/wiki/1954_Rugby_League_World_Cup_final",
            "https://en.wikipedia.org/wiki/France_national_rugby_league_team",
            "https://en.wikipedia.org/wiki/Great_Britain_national_rugby_league_team",
            "https://en.wikipedia.org/wiki/Paris_Saint-Germain_Rugby_League",
            "https://en.wikipedia.org/wiki/Super_League",
            "https://en.wikipedia.org/#cite_note-273",
            "https://en.wikipedia.org/wiki/Catalans_Dragons",
            "https://en.wikipedia.org/wiki/British_rugby_league_system",
            "https://en.wikipedia.org/wiki/Wigan_Warriors",
            "https://en.wikipedia.org/#cite_note-274",
            "https://en.wikipedia.org/wiki/1992_Summer_Olympics",
            "https://en.wikipedia.org/wiki/2008_Summer_Olympics",
            "https://en.wikipedia.org/wiki/2012_Summer_Olympics",
            "https://en.wikipedia.org/wiki/Barcelona",
            "https://en.wikipedia.org/wiki/Beijing",
            "https://en.wikipedia.org/wiki/London",
            "https://en.wikipedia.org/wiki/1938_FIFA_World_Cup_final",
            "https://en.wikipedia.org/wiki/Stade_Olympique_Yves-du-Manoir",
            "https://en.wikipedia.org/wiki/1998_FIFA_World_Cup_final",
            "https://en.wikipedia.org/wiki/2007_Rugby_World_Cup_Final",
            "https://en.wikipedia.org/wiki/2023_Rugby_World_Cup_final",
            "https://en.wikipedia.org/wiki/1960_European_Nations%27_Cup_final",
            "https://en.wikipedia.org/wiki/UEFA_Euro_1984_final",
            "https://en.wikipedia.org/wiki/UEFA_Euro_2016_final",
            "https://en.wikipedia.org/#cite_note-275",
            "https://en.wikipedia.org/wiki/UEFA_Champions_League_Finals",
            "https://en.wikipedia.org/wiki/2000_UEFA_Champions_League_Final",
            "https://en.wikipedia.org/wiki/2006_UEFA_Champions_League_Final",
            "https://en.wikipedia.org/wiki/2022_UEFA_Champions_League_Final",
            "https://en.wikipedia.org/#cite_note-276",
            "/wiki/File:Tour_de_france_2010_-_Champs_Elys%C3%A9es_n10.jpg",
            "https://en.wikipedia.org/wiki/Champs_%C3%89lys%C3%A9es",
            "https://en.wikipedia.org/wiki/Road_bicycle_racing",
            "https://en.wikipedia.org/wiki/Champs-%C3%89lys%C3%A9es_stage_in_the_Tour_de_France",
            "https://en.wikipedia.org/#cite_note-277",
            "https://en.wikipedia.org/wiki/Tennis",
            "https://en.wikipedia.org/#cite_note-278",
            "https://en.wikipedia.org/wiki/AccorHotels_Arena",
            "https://en.wikipedia.org/wiki/Paris_Masters",
            "https://en.wikipedia.org/wiki/2017_IIHF_World_Championship",
            "https://en.wikipedia.org/wiki/Cologne",
            "https://en.wikipedia.org/wiki/EuroBasket_1951",
            "https://en.wikipedia.org/wiki/EuroBasket_1999",
            "https://en.wikipedia.org/wiki/Basketball",
            "https://en.wikipedia.org/wiki/Levallois_Sporting_Club_Basket",
            "https://en.wikipedia.org/wiki/Paris_Basket_Racing",
            "https://en.wikipedia.org/wiki/Metropolitans_92",
            "https://en.wikipedia.org/wiki/Stade_Pierre_de_Coubertin_(Paris)",
            "https://en.wikipedia.org/#cite_note-279",
            "https://en.wikipedia.org/wiki/Nanterre_92",
            "https://en.wikipedia.org/wiki/Paris_Basketball",
            "https://en.wikipedia.org/wiki/2023%E2%80%9324_EuroCup_Basketball",
            "https://en.wikipedia.org/wiki/Handball",
            "https://en.wikipedia.org/wiki/Paris_Saint-Germain_Handball",
            "https://en.wikipedia.org/wiki/LNH_Division_1",
            "https://en.wikipedia.org/wiki/American_football",
            "https://en.wikipedia.org/wiki/Paris_Musketeers",
            "https://en.wikipedia.org/#cite_note-280",
            "https://en.wikipedia.org/wiki/European_League_of_Football",
            "https://en.wikipedia.org/wiki/Transport_in_Paris",
            "/wiki/File:Eurostar_Paris_Gare_du_Nord_Station,_8_October_2011.jpg",
            "https://en.wikipedia.org/wiki/Gare_du_Nord",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_Mobilit%C3%A9s",
            "https://en.wikipedia.org/#cite_note-stif-281",
            "https://en.wikipedia.org/wiki/RATP_Group",
            "https://en.wikipedia.org/wiki/Bus_(RATP)",
            "https://en.wikipedia.org/wiki/SNCF",
            "https://en.wikipedia.org/wiki/Optile",
            "https://en.wikipedia.org/#cite_note-282",
            "https://en.wikipedia.org/wiki/Sustainable_transport",
            "https://en.wikipedia.org/#cite_note-283",
            "https://en.wikipedia.org/#cite_note-284",
            "https://en.wikipedia.org/#cite_note-285",
            "https://en.wikipedia.org/#cite_note-286",
            "https://en.wikipedia.org/#cite_note-287",
            "https://en.wikipedia.org/wiki/15-minute_city",
            "https://en.wikipedia.org/wiki/Carlos_Moreno_(urbanist)",
            "https://en.wikipedia.org/#cite_note-288",
            "https://en.wikipedia.org/#cite_note-289",
            "https://en.wikipedia.org/#cite_note-290",
            "https://en.wikipedia.org/wiki/Walkable",
            "https://en.wikipedia.org/wiki/Walkability",
            "https://en.wikipedia.org/#cite_note-291",
            "https://en.wikipedia.org/#cite_note-292",
            "https://en.wikipedia.org/wiki/List_of_Paris_railway_stations",
            "https://en.wikipedia.org/wiki/Transilien",
            "https://en.wikipedia.org/wiki/Tramways_in_%C3%8Ele-de-France",
            "/wiki/File:Paris_-_Station_de_m%C3%A9tro_Abbesses_-_PA00086748_-_001.jpg",
            "https://en.wikipedia.org/wiki/Gare_de_l%27Est",
            "https://en.wikipedia.org/wiki/Gare_de_Lyon",
            "https://en.wikipedia.org/wiki/Gare_d%27Austerlitz",
            "https://en.wikipedia.org/wiki/Gare_Montparnasse",
            "https://en.wikipedia.org/wiki/Gare_Saint-Lazare",
            "https://en.wikipedia.org/wiki/Gare_de_Bercy",
            "https://en.wikipedia.org/wiki/High-speed_rail",
            "https://en.wikipedia.org/wiki/Eurostar",
            "https://en.wikipedia.org/wiki/Intercity_Express",
            "https://en.wikipedia.org/wiki/Frecciarossa",
            "https://en.wikipedia.org/wiki/Intercit%C3%A9s",
            "https://en.wikipedia.org/wiki/Intercit%C3%A9s_de_nuit",
            "https://en.wikipedia.org/wiki/Nightjet",
            "https://en.wikipedia.org/wiki/Transport_express_r%C3%A9gional",
            "https://en.wikipedia.org/wiki/Commuter_rail",
            "https://en.wikipedia.org/#cite_note-293",
            "https://en.wikipedia.org/wiki/RER_A",
            "/wiki/File:CDG_P1020431.JPG",
            "https://en.wikipedia.org/#cite_note-294",
            "https://en.wikipedia.org/wiki/World%27s_busiest_city_airport_systems_by_passenger_traffic",
            "https://en.wikipedia.org/wiki/Beauvais%E2%80%93Till%C3%A9_Airport",
            "https://en.wikipedia.org/#cite_note-295",
            "https://en.wikipedia.org/wiki/General_aviation",
            "https://en.wikipedia.org/wiki/Paris%E2%80%93Le_Bourget_Airport",
            "https://en.wikipedia.org/#cite_note-296",
            "https://en.wikipedia.org/wiki/List_of_busiest_airports_by_international_passenger_traffic",
            "https://en.wikipedia.org/wiki/Flag_carrier",
            "https://en.wikipedia.org/wiki/Air_France",
            "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010278%E2%80%93283-297",
            "https://en.wikipedia.org/wiki/Low-cost_carriers",
            "/wiki/File:Boulevard_P%C3%A9riph%C3%A9rique_vu_depuis_Boulevard_Auteuil_-_Paris_XVI_(FR75)_-_2021-08-11_-_3.jpg",
            "https://en.wikipedia.org/wiki/Motorway",
            "https://en.wikipedia.org/wiki/A86_autoroute",
            "https://en.wikipedia.org/wiki/Francilienne",
            "https://en.wikipedia.org/wiki/Autonomous_Port_of_Paris",
            "https://en.wikipedia.org/wiki/Loire",
            "https://en.wikipedia.org/wiki/Rhine",
            "https://en.wikipedia.org/wiki/Rh%C3%B4ne",
            "https://en.wikipedia.org/wiki/Meuse",
            "https://en.wikipedia.org/wiki/Scheldt",
            "https://en.wikipedia.org/wiki/Canal_Saint-Martin",
            "https://en.wikipedia.org/wiki/Canal_Saint-Denis",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEJefferson2009114-298",
            "/wiki/File:Station_Velib_DSC_3497.JPG",
            "https://en.wikipedia.org/wiki/Cycling_in_Paris",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEHart2004355-299",
            "https://en.wikipedia.org/wiki/Community_bicycle_program",
            "https://en.wikipedia.org/#cite_note-FOOTNOTERand2010165-300",
            "https://en.wikipedia.org/#cite_note-prod_electrique_IDF-301",
            "https://en.wikipedia.org/wiki/District_heating",
            "https://en.wikipedia.org/wiki/Saint-Ouen-sur-Seine",
            "https://en.wikipedia.org/wiki/Wood_pellets",
            "https://en.wikipedia.org/#cite_note-302",
            "/wiki/File:Ile_de_la_Cite_from_Pont_de_la_Tournelle.jpg",
            "https://en.wikipedia.org/wiki/Bateau_Mouche",
            "https://en.wikipedia.org/wiki/Bi%C3%A8vre_(river)",
            "https://en.wikipedia.org/#cite_note-303",
            "https://en.wikipedia.org/wiki/Eug%C3%A8ne_Belgrand",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEBurchell197193-304",
            "https://en.wikipedia.org/#cite_note-sewers-305",
            "https://en.wikipedia.org/wiki/Air_pollution",
            "https://en.wikipedia.org/wiki/Particulates",
            "https://en.wikipedia.org/#cite_note-306",
            "https://en.wikipedia.org/#cite_note-307",
            "https://en.wikipedia.org/wiki/List_of_parks_and_gardens_in_Paris",
            "https://en.wikipedia.org/wiki/History_of_Parks_and_Gardens_of_Paris",
            "/wiki/File:Parc_des_Buttes-Chaumont,_22_April_2007.jpg",
            "https://en.wikipedia.org/wiki/Parc_des_Buttes-Chaumont",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEJarrass%C3%A920076-308",
            "https://en.wikipedia.org/wiki/Tuileries_Garden",
            "https://en.wikipedia.org/wiki/Andr%C3%A9_Le_N%C3%B4tre",
            "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010125-309",
            "https://en.wikipedia.org/wiki/Luxembourg_Garden",
            "https://en.wikipedia.org/wiki/Luxembourg_Palace",
            "https://en.wikipedia.org/wiki/Marie_de%27_Medici",
            "https://en.wikipedia.org/#cite_note-FOOTNOTELawrenceGondrand2010208-310",
            "https://en.wikipedia.org/wiki/Jardin_des_plantes",
            "https://en.wikipedia.org/#cite_note-311",
            "https://en.wikipedia.org/wiki/Jean-Charles_Adolphe_Alphand",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEJarrass%C3%A92007122%E2%80%93161-312",
            "https://en.wikipedia.org/wiki/Parc_de_la_Villette",
            "https://en.wikipedia.org/wiki/Parc_Andr%C3%A9_Citro%C3%ABn",
            "https://en.wikipedia.org/wiki/Parc_de_Bercy",
            "https://en.wikipedia.org/wiki/Parc_Clichy-Batignolles_%E2%80%93_Martin-Luther-King",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEJarrass%C3%A92007242%E2%80%93256-313",
            "/wiki/File:Catacombes_De_Paris.jpg",
            "https://en.wikipedia.org/wiki/Holy_Innocents%27_Cemetery",
            "https://en.wikipedia.org/wiki/Mines_of_Paris",
            "https://en.wikipedia.org/wiki/Place_Denfert-Rochereau",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEWhaley2012101-314",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEBroadwell200792-315",
            "https://en.wikipedia.org/wiki/Napoleon",
            "https://en.wikipedia.org/#cite_note-FOOTNOTEAyers2004271-316",
            "https://en.wikipedia.org/wiki/Montmartre_Cemetery",
            "https://en.wikipedia.org/wiki/Montparnasse_Cemetery",
            "https://en.wikipedia.org/wiki/Passy_Cemetery",
            "https://en.wikipedia.org/wiki/Saint-Ouen_Cemetery",
            "https://en.wikipedia.org/wiki/Cimeti%C3%A8re_parisien_de_Pantin",
            "https://en.wikipedia.org/wiki/Pantin",
            "https://en.wikipedia.org/wiki/Bobigny",
            "https://en.wikipedia.org/wiki/Ivry-sur-Seine",
            "https://en.wikipedia.org/wiki/Bagneux,_Hauts-de-Seine",
            "https://en.wikipedia.org/#cite_note-Parisian_Cemeteries-317",
            "https://en.wikipedia.org/wiki/Oscar_Wilde",
            "https://en.wikipedia.org/wiki/Jim_Morrison",
            "https://en.wikipedia.org/wiki/Serge_Gainsbourg",
            "https://en.wikipedia.org/#cite_note-318",
            "https://en.wikipedia.org/wiki/Education_in_Paris",
            "/wiki/File:Chapelle_Sainte-Ursule_de_la_Sorbonne,_Paris_001.jpg",
            "https://en.wikipedia.org/wiki/Sorbonne_University",
            "https://en.wikipedia.org/wiki/Licence_(France)",
            "https://en.wikipedia.org/#cite_note-319",
            "https://en.wikipedia.org/#cite_note-idf_education-320",
            "https://en.wikipedia.org/wiki/List_of_universities_and_institutions_in_the_Paris_region",
            "https://en.wikipedia.org/wiki/May_68",
            "https://en.wikipedia.org/#cite_note-FOOTNOTECombeau2013213%E2%80%93214-321",
            "https://en.wikipedia.org/wiki/Grandes_%C3%A9coles",
            "https://en.wikipedia.org/wiki/Grands_%C3%A9tablissements",
            "https://en.wikipedia.org/wiki/%C3%89cole_Normale_Sup%C3%A9rieure",
            "https://en.wikipedia.org/wiki/Paris_Sciences_et_Lettres_University",
            "https://en.wikipedia.org/wiki/5th_arrondissement_of_Paris",
            "https://en.wikipedia.org/#cite_note-322",
            "https://en.wikipedia.org/wiki/Conservatoire_national_des_arts_et_m%C3%A9tiers",
            "https://en.wikipedia.org/wiki/Polytechnic_Institute_of_Paris",
            "https://en.wikipedia.org/wiki/Paris_Cit%C3%A9_University",
            "https://en.wikipedia.org/wiki/Paris-Saclay_University",
            "https://en.wikipedia.org/wiki/Sciences_Po",
            "https://en.wikipedia.org/#cite_note-323",
            "https://en.wikipedia.org/wiki/HEC_Paris",
            "https://en.wikipedia.org/wiki/ESSEC_Business_School",
            "https://en.wikipedia.org/wiki/ESCP_Business_School",
            "https://en.wikipedia.org/wiki/INSEAD",
            "https://en.wikipedia.org/#cite_note-324",
            "https://en.wikipedia.org/#cite_note-325",
            "/wiki/File:H%C3%B4tel-Dieu_de_Paris,_February_7,_2013.jpg",
            "https://en.wikipedia.org/wiki/H%C3%B4tel-Dieu_de_Paris",
            "https://en.wikipedia.org/wiki/Assistance_publique_%E2%80%93_H%C3%B4pitaux_de_Paris",
            "https://en.wikipedia.org/#cite_note-hospital-326",
            "https://en.wikipedia.org/#cite_note-327",
            "https://en.wikipedia.org/wiki/Piti%C3%A9-Salp%C3%AAtri%C3%A8re_Hospital",
            "https://en.wikipedia.org/wiki/H%C3%B4pital_Cochin",
            "https://en.wikipedia.org/wiki/Bichat%E2%80%93Claude_Bernard_Hospital",
            "https://en.wikipedia.org/wiki/H%C3%B4pital_Europ%C3%A9en_Georges-Pompidou",
            "https://en.wikipedia.org/wiki/Bic%C3%AAtre_Hospital",
            "https://en.wikipedia.org/wiki/Beaujon_Hospital",
            "https://en.wikipedia.org/wiki/Curie_Institute_(Paris)",
            "https://en.wikipedia.org/wiki/Lariboisi%C3%A8re_Hospital",
            "https://en.wikipedia.org/wiki/Necker%E2%80%93Enfants_Malades_Hospital",
            "https://en.wikipedia.org/wiki/H%C3%B4pital_Saint-Louis",
            "https://en.wikipedia.org/wiki/H%C3%B4pital_de_la_Charit%C3%A9",
            "https://en.wikipedia.org/wiki/American_Hospital_of_Paris",
            "https://en.wikipedia.org/#cite_note-328",
            "https://en.wikipedia.org/wiki/List_of_twin_towns_and_sister_cities_in_France",
            "https://en.wikipedia.org/wiki/Sister_city",
            "https://en.wikipedia.org/#cite_note-IR-329",
            "https://en.wikipedia.org/#cite_note-330",
            "https://en.wikipedia.org/#cite_note-331",
            "https://en.wikipedia.org/#cite_note-332",
            "https://en.wikipedia.org/#cite_note-Paris1-333",
            "https://en.wikipedia.org/#cite_note-Paris2-334",
            "https://en.wikipedia.org/wiki/Algiers",
            "https://en.wikipedia.org/wiki/Amman",
            "https://en.wikipedia.org/wiki/Amsterdam",
            "https://en.wikipedia.org/wiki/Athens",
            "https://en.wikipedia.org/wiki/Beirut",
            "https://en.wikipedia.org/wiki/Brazzaville",
            "https://en.wikipedia.org/wiki/Buenos_Aires",
            "https://en.wikipedia.org/wiki/Cairo",
            "https://en.wikipedia.org/wiki/Casablanca",
            "https://en.wikipedia.org/wiki/Chicago",
            "https://en.wikipedia.org/wiki/Copenhagen",
            "https://en.wikipedia.org/wiki/Dakar",
            "https://en.wikipedia.org/wiki/Doha",
            "https://en.wikipedia.org/wiki/Geneva",
            "https://en.wikipedia.org/wiki/Istanbul",
            "https://en.wikipedia.org/wiki/Jakarta",
            "https://en.wikipedia.org/wiki/Jericho",
            "https://en.wikipedia.org/wiki/Kinshasa",
            "https://en.wikipedia.org/wiki/Kyoto",
            "https://en.wikipedia.org/wiki/Lisbon",
            "https://en.wikipedia.org/wiki/Mexico_City",
            "https://en.wikipedia.org/wiki/Montevideo",
            "https://en.wikipedia.org/wiki/Montreal",
            "https://en.wikipedia.org/wiki/Moscow",
            "https://en.wikipedia.org/wiki/Phnom_Penh",
            "https://en.wikipedia.org/wiki/Porto_Alegre",
            "https://en.wikipedia.org/wiki/Prague",
            "https://en.wikipedia.org/wiki/Quebec_City",
            "https://en.wikipedia.org/wiki/Rabat",
            "https://en.wikipedia.org/wiki/Ramallah",
            "https://en.wikipedia.org/wiki/Riyadh",
            "https://en.wikipedia.org/wiki/Saint_Petersburg",
            "https://en.wikipedia.org/wiki/Sanaa",
            "https://en.wikipedia.org/wiki/San_Francisco",
            "https://en.wikipedia.org/wiki/Santiago",
            "https://en.wikipedia.org/wiki/S%C3%A3o_Paulo",
            "https://en.wikipedia.org/wiki/Seoul",
            "https://en.wikipedia.org/wiki/Sofia",
            "https://en.wikipedia.org/wiki/Sydney",
            "https://en.wikipedia.org/wiki/Tbilisi",
            "https://en.wikipedia.org/wiki/Tel_Aviv",
            "https://en.wikipedia.org/wiki/Tokyo",
            "https://en.wikipedia.org/wiki/Tunis",
            "https://en.wikipedia.org/wiki/Warsaw",
            "https://en.wikipedia.org/wiki/Washington,_D.C.",
            "https://en.wikipedia.org/wiki/Yerevan",
            "/wiki/Portal:France",
            "/wiki/Portal:Cities",
            "https://en.wikipedia.org/wiki/Art_Nouveau_in_Paris",
            "https://en.wikipedia.org/wiki/Art_Deco_in_Paris",
            "https://en.wikipedia.org/wiki/C40_Cities_Climate_Leadership_Group",
            "https://en.wikipedia.org/wiki/International_Exposition_of_Modern_Industrial_and_Decorative_Arts",
            "https://en.wikipedia.org/wiki/Megacity",
            "https://en.wikipedia.org/wiki/Outline_of_France",
            "https://en.wikipedia.org/wiki/Outline_of_Paris",
            "https://en.wikipedia.org/wiki/Parish_and_Civil_Registers_in_Paris",
            "https://en.wikipedia.org/#cite_ref-22",
            "https://en.wikipedia.org/#cite_ref-1",
            "https://static.data.gouv.fr/resources/repertoire-national-des-elus-1/20221216-172042/rne-maire.csv",
            "https://web.archive.org/web/20230227222303/https://static.data.gouv.fr/resources/repertoire-national-des-elus-1/20221216-172042/rne-maire.csv",
            "https://en.wikipedia.org/#cite_ref-Comparateur_de_territoires.INSEE_2-0",
            "https://en.wikipedia.org/#cite_ref-Comparateur_de_territoires.INSEE_2-1",
            "https://en.wikipedia.org/#cite_ref-Comparateur_de_territoires.INSEE_2-2",
            "https://en.wikipedia.org/#cite_ref-Comparateur_de_territoires.INSEE_2-3",
            "https://en.wikipedia.org/#cite_ref-Comparateur_de_territoires.INSEE_2-4",
            "https://www.insee.fr/fr/statistiques/1405599?geo=REG-11+AAV2020-001+UU2020-00851+DEP-75",
            "https://en.wikipedia.org/#cite_ref-pop2025_3-0",
            "https://en.wikipedia.org/#cite_ref-pop2025_3-1",
            "https://en.wikipedia.org/#cite_ref-pop2025_3-2",
            "https://en.wikipedia.org/#cite_ref-pop2025_3-3",
            "https://www.insee.fr/fr/statistiques/8331297",
            "https://en.wikipedia.org/#cite_ref-pop2019_4-0",
            "https://www.insee.fr/fr/statistiques/6005800?geo=COM-75056",
            "https://web.archive.org/web/20220122150105/https://www.insee.fr/fr/statistiques/6005800?geo=COM-75056",
            "https://en.wikipedia.org/#cite_ref-5",
            "https://www.worldatlas.com/articles/the-world-s-most-densely-populated-cities.html",
            "https://web.archive.org/web/20220319082523/https://www.worldatlas.com/articles/the-world-s-most-densely-populated-cities.html",
            "https://en.wikipedia.org/#cite_ref-6",
            "https://www.britannica.com/place/Paris",
            "https://web.archive.org/web/20220827145809/https://www.britannica.com/place/Paris",
            "https://en.wikipedia.org/#cite_ref-7",
            "https://data.oecd.org/conversion/purchasing-power-parities-ppp.htm",
            "https://web.archive.org/web/20171104144219/https://data.oecd.org/conversion/purchasing-power-parities-ppp.htm",
            "https://en.wikipedia.org/#cite_ref-8",
            "https://ec.europa.eu/eurostat/databrowser/view/MET_10R_3GDP/default/table?lang=en",
            "https://web.archive.org/web/20230215185052/https://ec.europa.eu/eurostat/databrowser/view/met_10r_3gdp/default/table?lang=en",
            "https://en.wikipedia.org/#cite_ref-9",
            "https://www.economist.com/graphic-detail/2022/11/30/the-worlds-most-and-least-expensive-cities",
            "https://en.wikipedia.org/wiki/ISSN_(identifier)",
            "https://search.worldcat.org/issn/0013-0613",
            "https://web.archive.org/web/20221201044121/https://www.economist.com/graphic-detail/2022/11/30/the-worlds-most-and-least-expensive-cities",
            "https://en.wikipedia.org/#cite_ref-10",
            "https://www.usatoday.com/story/travel/flights/todayinthesky/2018/04/09/list-worlds-20-busiest-airports-2017/498552002/",
            "https://web.archive.org/web/20180625213204/https://www.usatoday.com/story/travel/flights/todayinthesky/2018/04/09/list-worlds-20-busiest-airports-2017/498552002/",
            "https://en.wikipedia.org/#cite_ref-11",
            "http://www.airport-world.com/news/general-news/6601-aci-figures-reveal-the-world-s-busiest-passenger-and-cargo-airports.html",
            "https://web.archive.org/web/20180628125151/http://www.airport-world.com/news/general-news/6601-aci-figures-reveal-the-world-s-busiest-passenger-and-cargo-airports.html",
            "https://en.wikipedia.org/#cite_ref-ICLEI_12-0",
            "https://en.wikipedia.org/#cite_ref-ICLEI_12-1",
            "https://sustainablemobility.iclei.org/paris-leads-the-way-for-sustainable-mobility/",
            "https://web.archive.org/web/20240107143059/https://sustainablemobility.iclei.org/paris-leads-the-way-for-sustainable-mobility/",
            "https://en.wikipedia.org/#cite_ref-Award_13-0",
            "https://en.wikipedia.org/#cite_ref-Award_13-1",
            "https://www.itdp.org/2023/01/10/paris-2023-sustainable-transport-award/",
            "https://web.archive.org/web/20240107142955/https://www.itdp.org/2023/01/10/paris-2023-sustainable-transport-award/",
            "https://en.wikipedia.org/#cite_ref-14",
            "https://en.wikipedia.org/#cite_ref-unesco_15-0",
            "http://whc.unesco.org/en/list/600",
            "https://web.archive.org/web/20190509014712/http://whc.unesco.org/en/list/600/",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEN%C3%A8gre1990155_16-0",
            "https://en.wikipedia.org/#CITEREFN%C3%A8gre1990",
            "https://en.wikipedia.org/#cite_ref-Falileyev_17-0",
            "https://en.wikipedia.org/#cite_ref-Falileyev_17-1",
            "https://en.wikipedia.org/#cite_ref-Falileyev_17-2",
            "https://en.wikipedia.org/#CITEREFFalileyev2010",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELambert199438_18-0",
            "https://en.wikipedia.org/#CITEREFLambert1994",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEDelamarre2003211_19-0",
            "https://en.wikipedia.org/#CITEREFDelamarre2003",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEDelamarre2003247_20-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEDelamarre2003247_20-1",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBusse2006199_21-0",
            "https://en.wikipedia.org/#CITEREFBusse2006",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEDottin1920535_23-0",
            "https://en.wikipedia.org/#CITEREFDottin1920",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEArbois_de_JubainvilleDottin1889132_24-0",
            "https://en.wikipedia.org/#CITEREFArbois_de_JubainvilleDottin1889",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTECunliffe2004201_25-0",
            "https://en.wikipedia.org/#CITEREFCunliffe2004",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand201025_26-0",
            "https://en.wikipedia.org/#CITEREFLawrenceGondrand2010",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESchmidt200965%E2%80%9370_27-0",
            "https://en.wikipedia.org/#CITEREFSchmidt2009",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESchmidt200988%E2%80%93104_28-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESchmidt2009154%E2%80%93167_29-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMeunier201412_30-0",
            "https://en.wikipedia.org/#CITEREFMeunier2014",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESchmidt2009210%E2%80%93211_31-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESchmidt2009210%E2%80%93211_31-1",
            "https://en.wikipedia.org/#cite_ref-32",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEJones199448_33-0",
            "https://en.wikipedia.org/#CITEREFJones1994",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand201027_34-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand201027_34-1",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBussmann198522_35-0",
            "https://en.wikipedia.org/#CITEREFBussmann1985",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEde_VitriacoHinnebusch1972262_36-0",
            "https://en.wikipedia.org/#CITEREFde_VitriacoHinnebusch1972",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant201236%E2%80%9340_37-0",
            "https://en.wikipedia.org/#CITEREFSarmant2012",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant201228%E2%80%9329_38-0",
            "https://en.wikipedia.org/#cite_ref-ParisDigest_39-0",
            "https://www.parisdigest.com/history/paris_history.htm",
            "https://web.archive.org/web/20180906195637/https://www.parisdigest.com/history/paris_history.htm",
            "https://en.wikipedia.org/#cite_ref-40",
            "https://en.wikipedia.org/#cite_ref-41",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro199652%E2%80%9353_42-0",
            "https://en.wikipedia.org/#CITEREFFierro1996",
            "https://en.wikipedia.org/#cite_ref-43",
            "https://www.britannica.com/EBchecked/topic/516821/Massacre-of-Saint-Bartholomews-Day",
            "https://web.archive.org/web/20150504150458/https://www.britannica.com/EBchecked/topic/516821/Massacre-of-Saint-Bartholomews-Day",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBayrou1994121%E2%80%93130_44-0",
            "https://en.wikipedia.org/#CITEREFBayrou1994",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996577_45-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996582_46-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTECombeau200342%E2%80%9343_47-0",
            "https://en.wikipedia.org/#CITEREFCombeau2003",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996590%E2%80%93591_48-0",
            "https://en.wikipedia.org/#cite_ref-49",
            "https://books.google.com/books?id=yKsYAAAAYAAJ",
            "https://en.wikipedia.org/wiki/ISBN_(identifier)",
            "/wiki/Special:BookSources/978-0-671-21988-8",
            "https://web.archive.org/web/20161229054200/https://books.google.com/books/about/The_Story_of_Civilization_The_age_of_Nap.html?id=yKsYAAAAYAAJ",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTECombeau200345%E2%80%9347_50-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012129%E2%80%93133_51-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012120_52-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEPaine1998453_53-0",
            "https://en.wikipedia.org/#CITEREFPaine1998",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996674_54-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012144_55-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012147_56-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012148_57-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012148_57-1",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012148_57-2",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEDe_Moncan20127%E2%80%9335_58-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEDe_Moncan20127%E2%80%9335_58-1",
            "https://en.wikipedia.org/#CITEREFDe_Moncan2012",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTERougerie2014118_59-0",
            "https://en.wikipedia.org/#CITEREFRougerie2014",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFraserSpalding2011117_60-0",
            "https://en.wikipedia.org/#CITEREFFraserSpalding2011",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996490%E2%80%93491_61-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTECombeau200361_62-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996497_63-0",
            "https://en.wikipedia.org/#cite_ref-64",
            "https://web.archive.org/web/20151118065327/https://books.google.com/books/about/Bohemian_Paris.html?id=3hYBzRzZ0kcC",
            "/wiki/Special:BookSources/978-0-8021-9740-5",
            "https://books.google.com/books?id=3hYBzRzZ0kcC",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996491_65-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996750_66-0",
            "https://en.wikipedia.org/#cite_ref-67",
            "/wiki/Special:BookSources/978-0-520-22537-4",
            "https://en.wikipedia.org/#cite_ref-Meisler_68-0",
            "http://www.smithsonianmag.com/arts-culture/the-surreal-world-of-salvador-dali-78993324/",
            "https://web.archive.org/web/20140518170614/http://www.smithsonianmag.com/arts-culture/the-surreal-world-of-salvador-dali-78993324/",
            "https://en.wikipedia.org/#cite_ref-69",
            "http://www.cambridge.org/us/academic/subjects/history/twentieth-century-european-history/anti-imperial-metropolis-interwar-paris-and-seeds-third-world-nationalism?format=HB#contentsTabAnchor",
            "https://web.archive.org/web/20150904011013/http://www.cambridge.org/us/academic/subjects/history/twentieth-century-european-history/anti-imperial-metropolis-interwar-paris-and-seeds-third-world-nationalism?format=HB#contentsTabAnchor",
            "https://en.wikipedia.org/wiki/Wayback_Machine",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012217_70-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996637_71-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012218_72-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996242%E2%80%93243_73-0",
            "https://en.wikipedia.org/#cite_ref-74",
            "https://www.theguardian.com/world/2011/oct/17/france-remembers-algerian-massacre",
            "https://web.archive.org/web/20141026114936/http://www.theguardian.com/world/2011/oct/17/france-remembers-algerian-massacre",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996658_75-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012226_76-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996260_77-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012222_78-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTECombeau2003107%E2%80%93108_79-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBellde-Shalit2011247_80-0",
            "https://en.wikipedia.org/#CITEREFBellde-Shalit2011",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESarmant2012226%E2%80%93230_81-0",
            "https://en.wikipedia.org/#cite_ref-82",
            "http://www.citymayors.com/mayors/paris_mayor.html",
            "https://archive.today/20120722044933/http://www.citymayors.com/mayors/paris_mayor.html",
            "https://en.wikipedia.org/#cite_ref-83",
            "https://web.archive.org/web/20141220195103/http://www.lemoniteur.fr/133-amenagement/article/actualite/21534070-les-berges-de-seine-rendues-aux-parisiens",
            "http://www.lemoniteur.fr/133-amenagement/article/actualite/21534070-les-berges-de-seine-rendues-aux-parisiens",
            "https://en.wikipedia.org/#cite_ref-Lichfield_84-0",
            "https://www.independent.co.uk/news/world/europe/sarkos-euro35bn-rail-plan-for-a-greater-paris-1676196.html",
            "https://en.wikipedia.org/wiki/The_Independent",
            "https://web.archive.org/web/20090502102151/http://www.independent.co.uk/news/world/europe/sarkos-euro35bn-rail-plan-for-a-greater-paris-1676196.html",
            "https://en.wikipedia.org/#cite_ref-metro_85-0",
            "http://www.railwaygazette.com/news/single-view/view/EUR265bn-grand-paris-metro-expansion-programme-confirmed.html",
            "https://web.archive.org/web/20130318205908/http://www.railwaygazette.com/news/single-view/view/EUR265bn-grand-paris-metro-expansion-programme-confirmed.html",
            "https://en.wikipedia.org/#cite_ref-86",
            "http://www.societedugrandparis.fr/#projet",
            "https://web.archive.org/web/20110714020412/http://www.societedugrandparis.fr/#projet",
            "https://en.wikipedia.org/#cite_ref-87",
            "http://www.cnn.com/2015/01/21/europe/2015-paris-terror-attacks-fast-facts/index.html",
            "https://web.archive.org/web/20170623154608/http://www.cnn.com/2015/01/21/europe/2015-paris-terror-attacks-fast-facts/index.html",
            "https://en.wikipedia.org/#cite_ref-88",
            "http://www.lemonde.fr/les-decodeurs/article/2015/01/14/attentats-terroristes-les-questions-que-vous-nous-avez-le-plus-posees_4554653_4355770.html",
            "https://web.archive.org/web/20150114153341/http://www.lemonde.fr/les-decodeurs/article/2015/01/14/attentats-terroristes-les-questions-que-vous-nous-avez-le-plus-posees_4554653_4355770.html",
            "https://en.wikipedia.org/#cite_ref-89",
            "http://www.lefigaro.fr/politique/le-scan/citations/2015/01/11/25002-20150111ARTFIG00086-les-politiques-s-affichent-a-la-marche-republicaine.php",
            "https://web.archive.org/web/20150111213532/http://www.lefigaro.fr/politique/le-scan/citations/2015/01/11/25002-20150111ARTFIG00086-les-politiques-s-affichent-a-la-marche-republicaine.php",
            "https://en.wikipedia.org/#cite_ref-90",
            "https://www.reuters.com/article/us-france-shooting-idUSKCN0T22IU20151114",
            "https://web.archive.org/web/20151114014250/http://www.reuters.com/article/2015/11/14/us-france-shooting-idUSKCN0T22IU20151114",
            "https://en.wikipedia.org/#cite_ref-91",
            "https://www.rte.ie/news/2015/1120/747897-paris/",
            "https://en.wikipedia.org/wiki/RT%C3%89.ie",
            "https://web.archive.org/web/20190423123908/https://www.rte.ie/news/2015/1120/747897-paris/",
            "https://en.wikipedia.org/#cite_ref-92",
            "https://www.un.org/apps/news/story.asp?NewsID=53756#.VxqAYGNpr-Y",
            "https://web.archive.org/web/20170629105154/http://www.un.org/apps/news/story.asp?NewsID=53756#.VxqAYGNpr-Y",
            "https://en.wikipedia.org/#cite_ref-City_93-0",
            "https://en.wikipedia.org/#cite_ref-City_93-1",
            "https://www.britannica.com/EBchecked/topic/443621/Paris",
            "https://web.archive.org/web/20130707083834/https://www.britannica.com/EBchecked/topic/443621/Paris",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBlackmoreMcConnachie2004153_94-0",
            "https://en.wikipedia.org/#CITEREFBlackmoreMcConnachie2004",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand201069_95-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand201069_95-1",
            "https://en.wikipedia.org/#cite_ref-96",
            "https://web.archive.org/web/20090306220509/http://www.paris.fr/portail/english/Portal.lut?page_id=8125&document_type_id=5&document_id=29918&portlet_id=18748",
            "http://www.paris.fr/portail/english/Portal.lut?page_id=8125&document_type_id=5&document_id=29918&portlet_id=18748",
            "https://en.wikipedia.org/#cite_ref-97",
            "https://www.google.com/maps/place/48¬∞51'24.1%22N+2¬∞21'02.9%22E/@48.8567,2.3508,24716m/data=!3m1!1e3!4m5!3m4!1s0x0:0x0!8m2!3d48.8567!4d2.3508?hl=en",
            "https://web.archive.org/web/20190111052823/https://www.google.com/maps/place/48",
            "https://en.wikipedia.org/#cite_ref-98",
            "https://web.archive.org/web/20130308094732/http://www.paris.com/tourism/climate",
            "http://www.paris.com/tourism/climate",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010309_99-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEGoldstein20058_100-0",
            "https://en.wikipedia.org/#CITEREFGoldstein2005",
            "https://en.wikipedia.org/#cite_ref-101",
            "https://web.archive.org/web/20141205162747/http://en.parisinfo.com/practical-paris/useful-info/climate",
            "http://en.parisinfo.com/practical-paris/useful-info/climate",
            "https://en.wikipedia.org/#cite_ref-102",
            "https://www.tripsavvy.com/visiting-paris-in-the-winter-1618789",
            "https://web.archive.org/web/20171011030400/https://www.tripsavvy.com/visiting-paris-in-the-winter-1618789",
            "https://en.wikipedia.org/#cite_ref-103",
            "https://www.tripsavvy.com/weather-in-france-1517972#step4",
            "https://web.archive.org/web/20180228100742/https://www.tripsavvy.com/weather-in-france-1517972#step4",
            "https://en.wikipedia.org/#cite_ref-104",
            "http://www.meteofrance.fr/actualites/74506889-42-4-c-a-paris-record-absolu-de-chaleur-battu",
            "https://web.archive.org/web/20190725135102/http://www.meteofrance.fr/actualites/74506889-42-4-c-a-paris-record-absolu-de-chaleur-battu",
            "https://en.wikipedia.org/#cite_ref-climate_105-0",
            "https://web.archive.org/web/20061003225432/http://www.paris.fr/portail/accueil/Portal.lut?page_id=4946&document_type_id=5&document_id=3076&portlet_id=10579",
            "http://www.paris.fr/portail/accueil/Portal.lut?page_id=4946&document_type_id=5&document_id=3076&portlet_id=10579",
            "https://en.wikipedia.org/#cite_ref-106",
            "https://web.archive.org/web/20180227003336/https://donneespubliques.meteofrance.fr/FichesClim/FICHECLIM_75114001.pdf",
            "https://donneespubliques.meteofrance.fr/FichesClim/FICHECLIM_75114001.pdf",
            "https://en.wikipedia.org/#cite_ref-Infoclimat_107-0",
            "https://web.archive.org/web/20170824091330/http://www.infoclimat.fr/climatologie-07156-paris-montsouris.html",
            "http://www.infoclimat.fr/climatologie-07156-paris-montsouris.html",
            "https://en.wikipedia.org/#cite_ref-Weather_Atlas_108-0",
            "https://www.weather-atlas.com/en/france/paris-climate",
            "https://web.archive.org/web/20170312033016/http://www.weather-atlas.com/en/france/paris-climate",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996334_109-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996334_109-1",
            "https://en.wikipedia.org/#cite_ref-auto2_110-0",
            "https://web.archive.org/web/20141220194454/http://www.paris.fr/english/english/anne-hidalgo-paris-s-new-mayor/rub_8118_actu_142533_port_19237",
            "http://www.paris.fr/english/english/anne-hidalgo-paris-s-new-mayor/rub_8118_actu_142533_port_19237",
            "https://en.wikipedia.org/#cite_ref-111",
            "https://www.theguardian.com/world/2020/jun/28/voters-stay-away-from-second-round-french-local-elections",
            "https://en.wikipedia.org/wiki/The_Guardian",
            "https://search.worldcat.org/issn/0261-3077",
            "https://web.archive.org/web/20200630223850/https://www.theguardian.com/world/2020/jun/28/voters-stay-away-from-second-round-french-local-elections",
            "https://en.wikipedia.org/#cite_ref-Election_Code_%E2%80%93_Article_L260_112-0",
            "https://en.wikipedia.org/#cite_ref-Election_Code_%E2%80%93_Article_L260_112-1",
            "http://www.legifrance.gouv.fr/affichCodeArticle.do?cidTexte=LEGITEXT000006070239&idArticle=LEGIARTI000006353607&dateTexte=20141108",
            "https://web.archive.org/web/20141225102129/http://www.legifrance.gouv.fr/affichCodeArticle.do?cidTexte=LEGITEXT000006070239&idArticle=LEGIARTI000006353607&dateTexte=20141108",
            "https://en.wikipedia.org/#cite_ref-Pariscouncil_113-0",
            "https://welections.wordpress.com/2014/03/22/election-preview-france-municipal-elections-2014-part-i/",
            "https://web.archive.org/web/20161011211513/https://welections.wordpress.com/2014/03/22/election-preview-france-municipal-elections-2014-part-i/",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEShales200716_114-0",
            "https://en.wikipedia.org/#CITEREFShales2007",
            "https://en.wikipedia.org/#cite_ref-115",
            "https://www.paris.fr/pages/regroupement-des-4-premiers-arrondissements-le-secteur-paris-centre-sera-cree-le-6-avril-7384",
            "https://web.archive.org/web/20231114161037/https://www.paris.fr/pages/regroupement-des-4-premiers-arrondissements-le-secteur-paris-centre-sera-cree-le-6-avril-7384",
            "https://en.wikipedia.org/#cite_ref-MGP_116-0",
            "https://en.wikipedia.org/#cite_ref-MGP_116-1",
            "https://en.wikipedia.org/#cite_ref-MGP_116-2",
            "http://www.legifrance.gouv.fr/affichCodeArticle.do?cidTexte=LEGITEXT000006070633&idArticle=LEGIARTI000028528695&dateTexte=vig",
            "https://web.archive.org/web/20160101095821/http://www.legifrance.gouv.fr/affichCodeArticle.do?cidTexte=LEGITEXT000006070633&idArticle=LEGIARTI000028528695&dateTexte=vig",
            "https://en.wikipedia.org/#cite_ref-117",
            "https://www.legifrance.gouv.fr/eli/decret/2015/9/30/RDFB1519847D/jo/texte",
            "https://web.archive.org/web/20180228100706/https://www.legifrance.gouv.fr/eli/decret/2015/9/30/RDFB1519847D/jo/texte",
            "https://en.wikipedia.org/#cite_ref-lemoniteur1_118-0",
            "https://en.wikipedia.org/#cite_ref-lemoniteur1_118-1",
            "http://www.lemoniteur.fr/article/la-metropole-du-grand-paris-verra-le-jour-le-1er-janvier-2016-29110917",
            "https://web.archive.org/web/20151208162156/http://www.lemoniteur.fr/article/la-metropole-du-grand-paris-verra-le-jour-le-1er-janvier-2016-29110917",
            "https://en.wikipedia.org/#cite_ref-119",
            "https://wayback.archive-it.org/all/20171010075732/http://www.lemonde.fr/politique/article/2016/01/22/du-grand-paris-a-la-metropole-du-grand-paris_4851596_823448.html?xtmc=du_grand_paris_a_la_metropole_du_grand_paris&xtcr=1",
            "http://www.lemonde.fr/politique/article/2016/01/22/du-grand-paris-a-la-metropole-du-grand-paris_4851596_823448.html?xtmc=du_grand_paris_a_la_metropole_du_grand_paris&xtcr=1",
            "https://en.wikipedia.org/#cite_ref-120",
            "http://www.iledefrance.fr/fil-actus-region/regionales-2015-chiffres-cles-du-scrutin",
            "https://web.archive.org/web/20151219075856/http://www.iledefrance.fr/fil-actus-region/regionales-2015-chiffres-cles-du-scrutin",
            "https://en.wikipedia.org/#cite_ref-121",
            "http://www.elysee.fr/la-presidence/le-palais-de-l-elysee-et-son-histoire-2/",
            "https://web.archive.org/web/20170519171226/http://www.elysee.fr/la-presidence/le-palais-de-l-elysee-et-son-histoire-2",
            "https://en.wikipedia.org/#cite_ref-122",
            "http://franceintheus.org/spip.php?article633",
            "https://web.archive.org/web/20170405081105/http://franceintheus.org/spip.php?article633",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEKnappWright200693%E2%80%9394_123-0",
            "https://en.wikipedia.org/#CITEREFKnappWright2006",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBorrus2012288_124-0",
            "https://en.wikipedia.org/#CITEREFBorrus2012",
            "https://en.wikipedia.org/#cite_ref-125",
            "http://www.senat.fr/presidence/hotel.html",
            "https://web.archive.org/web/20130617015850/http://www.senat.fr/presidence/hotel.html",
            "https://en.wikipedia.org/#cite_ref-126",
            "http://www.courdecassation.fr/institution_1/visite_cour_11/introduction_74.html",
            "https://web.archive.org/web/20130515150732/http://courdecassation.fr/institution_1/visite_cour_11/introduction_74.html",
            "https://en.wikipedia.org/#cite_ref-127",
            "https://web.archive.org/web/20130410103133/http://www.conseil-etat.fr/fr/histoire-patrimoine-1",
            "http://www.conseil-etat.fr/fr/histoire-patrimoine-1/",
            "https://en.wikipedia.org/#cite_ref-128",
            "https://web.archive.org/web/20140323125504/http://www.conseil-constitutionnel.fr/conseil-constitutionnel/root/bank/pdf/conseil-constitutionnel-5206.pdf",
            "http://www.conseil-constitutionnel.fr/conseil-constitutionnel/root/bank/pdf/conseil-constitutionnel-5206.pdf",
            "https://en.wikipedia.org/#cite_ref-Presentation_Generale_129-0",
            "https://en.wikipedia.org/#cite_ref-Presentation_Generale_129-1",
            "http://www.police-nationale.interieur.gouv.fr/Presentation-generale",
            "https://web.archive.org/web/20130308061047/http://www.police-nationale.interieur.gouv.fr/Presentation-generale",
            "https://en.wikipedia.org/#cite_ref-130",
            "http://www.gendarmerie.interieur.gouv.fr",
            "https://web.archive.org/web/20101226055256/http://www.gendarmerie.interieur.gouv.fr/",
            "https://en.wikipedia.org/#cite_ref-131",
            "https://travel.state.gov/content/passports/en/country/france.html",
            "https://web.archive.org/web/20170404010203/https://travel.state.gov/content/passports/en/country/france.html",
            "https://en.wikipedia.org/#cite_ref-132",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3703887",
            "https://en.wikipedia.org/wiki/Doi_(identifier)",
            "https://doi.org/10.1038%2Fsrep02153",
            "https://search.worldcat.org/issn/2045-2322",
            "https://en.wikipedia.org/wiki/PMC_(identifier)",
            "https://en.wikipedia.org/wiki/PMID_(identifier)",
            "https://pubmed.ncbi.nlm.nih.gov/23835429",
            "https://en.wikipedia.org/wiki/S2CID_(identifier)",
            "https://api.semanticscholar.org/CorpusID:11824030",
            "https://en.wikipedia.org/#cite_ref-133",
            "/wiki/Special:BookSources/978-2-907970-98-3",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBraimohVlek200812_134-0",
            "https://en.wikipedia.org/#CITEREFBraimohVlek2008",
            "https://en.wikipedia.org/#cite_ref-plan_hauteurs_135-0",
            "https://en.wikipedia.org/#cite_ref-plan_hauteurs_135-1",
            "https://web.archive.org/web/20140410225515/http://www.paris.fr/viewmultimediadocument?multimediadocument-id=21647",
            "http://www.paris.fr/viewmultimediadocument?multimediadocument-id=21647",
            "https://en.wikipedia.org/#cite_ref-136",
            "http://paris-a-la-carte-version-pl.paris.fr/carto/mapping/",
            "https://web.archive.org/web/20100822194654/http://paris-a-la-carte-version-pl.paris.fr/carto/mapping",
            "https://en.wikipedia.org/#cite_ref-137",
            "https://en.wikipedia.org/#cite_ref-insee_logement_138-0",
            "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=LOG&millesime=2011&typgeo=DEP&search=75",
            "https://web.archive.org/web/20150904011013/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=LOG&millesime=2011&typgeo=DEP&search=75",
            "https://en.wikipedia.org/#cite_ref-notaires_idf_139-0",
            "https://en.wikipedia.org/#cite_ref-notaires_idf_139-1",
            "https://web.archive.org/web/20141101214159/http://www.notaires.paris-idf.fr/sites/default/files/deux_decennies_dimmobilier_final.pdf",
            "http://www.notaires.paris-idf.fr/sites/default/files/deux_decennies_dimmobilier_final.pdf",
            "https://en.wikipedia.org/#cite_ref-140",
            "https://en.wikipedia.org/#cite_ref-141",
            "https://en.wikipedia.org/#cite_ref-142",
            "http://www.driea.ile-de-france.developpement-durable.gouv.fr/IMG/pdf/Chapitre5_de_Breve_histoire_de_amenagement_de_Paris_DREIF_Auteur_Claude_Cottour_cle0344bc.pdf",
            "https://web.archive.org/web/20170101005621/http://www.driea.ile-de-france.developpement-durable.gouv.fr/IMG/pdf/Chapitre5_de_Breve_histoire_de_amenagement_de_Paris_DREIF_Auteur_Claude_Cottour_cle0344bc.pdf",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMasson1984536_143-0",
            "https://en.wikipedia.org/#CITEREFMasson1984",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEYarri2008407_144-0",
            "https://en.wikipedia.org/#CITEREFYarri2008",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEGordon200646%E2%80%9347_145-0",
            "https://en.wikipedia.org/#CITEREFGordon2006",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTECastells198375_146-0",
            "https://en.wikipedia.org/#CITEREFCastells1983",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTETomasBlancBonillaIERP2003237_147-0",
            "https://en.wikipedia.org/#CITEREFTomasBlancBonillaIERP2003",
            "https://en.wikipedia.org/#cite_ref-villes_nouvelles_148-0",
            "https://en.wikipedia.org/#cite_ref-villes_nouvelles_148-1",
            "https://web.archive.org/web/20160326035711/http://www.laburba.fr/app/download/7815645/Article%2Bvilles%2Bnouvelles.pdf",
            "http://www.laburba.fr/app/download/7815645/Article+villes+nouvelles.pdf",
            "https://en.wikipedia.org/#cite_ref-149",
            "https://web.archive.org/web/20170816133325/http://sig.ville.gouv.fr/atlas/ZUS/",
            "http://sig.ville.gouv.fr/atlas/ZUS/",
            "https://en.wikipedia.org/#cite_ref-150",
            "http://www.insee.fr/fr/themes/document.asp?reg_id=20&ref_id=20529&page=alapage/alap414/alap414_carte.htm#carte1",
            "https://web.archive.org/web/20141229014922/http://www.insee.fr/fr/themes/document.asp?reg_id=20&ref_id=20529&page=alapage%2Falap414%2Falap414_carte.htm#carte1",
            "https://en.wikipedia.org/#cite_ref-immig_151-0",
            "https://www.insee.fr/fr/statistiques/6456040?sommaire=6456104",
            "https://en.wikipedia.org/#cite_ref-152",
            "https://en.wikipedia.org/wiki/INSEE",
            "https://www.insee.fr/fr/statistiques/6455264?sommaire=6455286&geo=REG-11#ancre-IMG1B_V2_ENS",
            "https://en.wikipedia.org/#cite_ref-153",
            "https://en.wikipedia.org/#cite_ref-154",
            "https://en.wikipedia.org/#cite_ref-Le_Monde,_22_January_2019_155-0",
            "https://en.wikipedia.org/#cite_ref-ReferenceA_156-0",
            "https://en.wikipedia.org/#cite_ref-157",
            "http://epp.eurostat.ec.europa.eu/statistics_explained/index.php/Statistics_on_European_cities",
            "https://web.archive.org/web/20141114142816/http://epp.eurostat.ec.europa.eu/statistics_explained/index.php/Statistics_on_European_cities",
            "https://en.wikipedia.org/#cite_ref-158",
            "http://cassini.ehess.fr/fr/html/fiche.php?select_resultat=26207",
            "https://en.wikipedia.org/wiki/School_for_Advanced_Studies_in_the_Social_Sciences",
            "https://en.wikipedia.org/#cite_ref-159",
            "https://en.wikipedia.org/#cite_ref-pophis_160-0",
            "https://www.insee.fr/fr/statistiques/4515315?geo=COM-75056",
            "https://web.archive.org/web/20210215061844/https://www.insee.fr/fr/statistiques/4515315?geo=COM-75056",
            "https://en.wikipedia.org/#cite_ref-pop_UU_161-0",
            "https://www.insee.fr/fr/statistiques/4515315?geo=UU2020-00851",
            "https://web.archive.org/web/20220617121211/https://www.insee.fr/fr/statistiques/4515315?geo=UU2020-00851",
            "https://en.wikipedia.org/#cite_ref-urbaneurope_162-0",
            "https://en.wikipedia.org/#cite_ref-urbaneurope_162-1",
            "https://ec.europa.eu/eurostat/en/web/products-statistical-books/-/KS-01-16-691",
            "https://web.archive.org/web/20201012194422/https://ec.europa.eu/eurostat/en/web/products-statistical-books/-/KS-01-16-691",
            "https://en.wikipedia.org/#cite_ref-FU_163-0",
            "https://www.insee.fr/en/metadonnees/definition/c2173",
            "https://web.archive.org/web/20220409035813/https://www.insee.fr/en/metadonnees/definition/c2173",
            "https://en.wikipedia.org/#cite_ref-pop_AU_164-0",
            "https://www.insee.fr/fr/statistiques/4515315?geo=AAV2020-001",
            "https://web.archive.org/web/20220617120814/https://www.insee.fr/fr/statistiques/4515315?geo=AAV2020-001",
            "https://en.wikipedia.org/#cite_ref-165",
            "https://www.insee.fr/fr/statistiques/4515315?geo=FE-1",
            "https://web.archive.org/web/20210117195634/https://www.insee.fr/fr/statistiques/4515315?geo=FE-1",
            "https://en.wikipedia.org/#cite_ref-166",
            "https://web.archive.org/web/20150407164439/http://ec.europa.eu/eurostat/statistics-explained/index.php/Population_statistics_at_regional_level",
            "http://ec.europa.eu/eurostat/statistics-explained/index.php/Population_statistics_at_regional_level",
            "https://en.wikipedia.org/#cite_ref-167",
            "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=IMG1B&millesime=2012&niveau=2&nivgeo=DEP&codgeo=75",
            "https://en.wikipedia.org/wiki/Insee",
            "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=IMG1B&millesime=2012&niveau=2&nivgeo=DEP&codgeo=75",
            "https://en.wikipedia.org/#cite_ref-168",
            "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=IMG1B&millesime=2012&niveau=2&nivgeo=REG&codgeo=11",
            "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=IMG1B&millesime=2012&niveau=2&nivgeo=REG&codgeo=11",
            "https://en.wikipedia.org/#cite_ref-169",
            "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=NAT1&millesime=2012&niveau=3&nivgeo=REG&codgeo=11",
            "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=NAT1&millesime=2012&niveau=3&nivgeo=REG&codgeo=11",
            "https://en.wikipedia.org/#cite_ref-170",
            "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=NAT1&millesime=2012&niveau=3&nivgeo=DEP&codgeo=75",
            "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=NAT1&millesime=2012&niveau=3&nivgeo=DEP&codgeo=75",
            "https://en.wikipedia.org/#cite_ref-171",
            "https://www.insee.fr/fr/statistiques/6793282?sommaire=6793391",
            "https://web.archive.org/web/20231012045430/https://www.insee.fr/fr/statistiques/6793282?sommaire=6793391",
            "https://en.wikipedia.org/#cite_ref-172",
            "/wiki/Special:BookSources/978-1-349-13618-6",
            "https://en.wikipedia.org/#cite_ref-173",
            "https://books.google.com/books?id=mPibBQAAQBAJ&pg=PA188",
            "/wiki/Special:BookSources/978-3-658-02594-6",
            "https://web.archive.org/web/20171001032126/https://books.google.fr/books?id=mPibBQAAQBAJ&pg=PA188",
            "https://en.wikipedia.org/#cite_ref-174",
            "http://www.lemonde.fr/les-decodeurs/article/2015/01/21/que-pese-l-islam-en-france_4559859_4355770.html",
            "https://web.archive.org/web/20151127053220/http://www.lemonde.fr/les-decodeurs/article/2015/01/21/que-pese-l-islam-en-france_4559859_4355770.html",
            "https://en.wikipedia.org/#cite_ref-175",
            "http://plus.lefigaro.fr/note/how-does-france-count-its-muslim-population-20110407-435643",
            "https://web.archive.org/web/20151105002152/http://plus.lefigaro.fr/note/how-does-france-count-its-muslim-population-20110407-435643",
            "https://en.wikipedia.org/#cite_ref-176",
            "http://archive.francesoir.fr/actualite/societe/dalil-boubakeur-%E2%80%9Cil-faut-doubler-nombre-mosquees-en-france%E2%80%9D-54083.html",
            "https://web.archive.org/web/20150128112504/http://archive.francesoir.fr/actualite/societe/dalil-boubakeur-%E2%80%9Cil-faut-doubler-nombre-mosquees-en-france%E2%80%9D-54083.html",
            "https://en.wikipedia.org/#cite_ref-177",
            "http://france3-regions.francetvinfo.fr/paris-ile-de-france/2013/04/29/le-manque-de-mosquee-en-ile-de-france-243225.html",
            "https://web.archive.org/web/20171117174949/http://france3-regions.francetvinfo.fr/paris-ile-de-france/2013/04/29/le-manque-de-mosquee-en-ile-de-france-243225.html",
            "https://en.wikipedia.org/#cite_ref-178",
            "http://www.jewishdatabank.org/Studies/details.cfm?StudyID=776",
            "https://web.archive.org/web/20151104100328/http://jewishdatabank.org/Studies/details.cfm?StudyID=776",
            "https://en.wikipedia.org/#cite_ref-France.fr_179-0",
            "https://web.archive.org/web/20130530043643/http://www.france.fr/en/paris-capital-region/la-defense-europes-largest-business-district",
            "https://www.france.fr/en/paris/list/paris-what-to-do-what-to-see",
            "https://en.wikipedia.org/#cite_ref-180",
            "https://www.statista.com/statistics/269845/largest-banks-in-the-world-by-total-assets/",
            "https://web.archive.org/web/20190810163936/https://www.statista.com/statistics/269845/largest-banks-in-the-world-by-total-assets/",
            "https://en.wikipedia.org/#cite_ref-sieges_181-0",
            "https://www.credit-agricole.com/pdfPreview/189647",
            "https://web.archive.org/web/20230725035725/https://www.credit-agricole.com/pdfPreview/189647",
            "https://en.wikipedia.org/#cite_ref-182",
            "http://www.insee.fr/fr/themes/dossier_complet.asp?codgeo=COM-75056",
            "https://web.archive.org/web/20160307200924/http://www.insee.fr/fr/themes/dossier_complet.asp?codgeo=COM-75056",
            "https://en.wikipedia.org/#cite_ref-183",
            "http://www.insee.fr/fr/themes/dossier_complet.asp?codgeo=REG-11",
            "https://web.archive.org/web/20160316053531/http://www.insee.fr/fr/themes/dossier_complet.asp?codgeo=REG-11",
            "https://en.wikipedia.org/#cite_ref-184",
            "http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=EMP2&millesime=2012&niveau=3&nivgeo=REG&codgeo=11",
            "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/tableau_local.asp?ref_id=EMP2&millesime=2012&niveau=3&nivgeo=REG&codgeo=11",
            "https://en.wikipedia.org/#cite_ref-185",
            "http://www.insee.fr/fr/methodes/default.asp?page=nomenclatures/agregatnaf2008/agregatnaf2008.htm",
            "https://web.archive.org/web/20151219154702/http://www.insee.fr/fr/methodes/default.asp?page=nomenclatures%2Fagregatnaf2008%2Fagregatnaf2008.htm",
            "https://en.wikipedia.org/#cite_ref-INSEE_186-0",
            "https://en.wikipedia.org/#cite_ref-INSEE_186-1",
            "http://www.insee.fr/fr/themes/document.asp?ref_id=20718",
            "https://web.archive.org/web/20160101095821/http://www.insee.fr/fr/themes/document.asp?ref_id=20718",
            "https://en.wikipedia.org/#cite_ref-187",
            "https://ec.europa.eu/eurostat/databrowser/view/nama_10r_3gdp/default/table",
            "https://web.archive.org/web/20240101045308/https://ec.europa.eu/eurostat/databrowser/view/nama_10r_3gdp/default/table",
            "https://en.wikipedia.org/#cite_ref-188",
            "https://ec.europa.eu/eurostat/databrowser/view/TGS00005/default/table?lang=en",
            "https://web.archive.org/web/20230613192346/https://ec.europa.eu/eurostat/databrowser/view/TGS00005/default/table?lang=en",
            "https://en.wikipedia.org/#cite_ref-189",
            "http://www.insee.fr/fr/themes/document.asp?reg_id=20&ref_id=21341#trois",
            "https://web.archive.org/web/20150904011013/http://www.insee.fr/fr/themes/document.asp?reg_id=20&ref_id=21341#trois",
            "https://en.wikipedia.org/#cite_ref-McKinsey_190-0",
            "https://foreignpolicy.com/articles/2012/08/13/the_most_dynamic_cities_of_2025",
            "https://web.archive.org/web/20120828041241/http://www.foreignpolicy.com/articles/2012/08/13/the_most_dynamic_cities_of_2025",
            "https://en.wikipedia.org/#cite_ref-191",
            "https://www.insee.fr/en/statistiques/serie/010751746",
            "https://web.archive.org/web/20230816202919/https://www.insee.fr/en/statistiques/serie/010751746",
            "https://en.wikipedia.org/#cite_ref-192",
            "https://www.insee.fr/en/statistiques/serie/010751748",
            "https://web.archive.org/web/20230816222906/https://www.insee.fr/en/statistiques/serie/010751748",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-0",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-1",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-2",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-3",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-4",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-5",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-6",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-7",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-8",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-9",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-10",
            "https://en.wikipedia.org/#cite_ref-INSEE_201210_193-11",
            "http://www.ile-de-france.gouv.fr/content/download/5429/38877/file/L‚Äôindustrie%20en%20Ile-de-France%20‚Äì%20Principaux%20indicateurs%20r√©gionaux.pdf",
            "https://web.archive.org/web/20150223184616/http://www.ile-de-france.gouv.fr/content/download/5429/38877/file/L%E2%80%99industrie%20en%20Ile-de-France%20%E2%80%93%20Principaux%20indicateurs%20r%C3%A9gionaux.pdf",
            "https://en.wikipedia.org/#cite_ref-194",
            "https://en.wikipedia.org/#cite_ref-195",
            "https://www.courrierinternational.com/article/classement-singapour-hong-kong-paris-le-trio-des-villes-les-plus-cheres-du-monde",
            "https://en.wikipedia.org/wiki/Courrier_International",
            "https://web.archive.org/web/20190327081301/https://www.courrierinternational.com/article/classement-singapour-hong-kong-paris-le-trio-des-villes-les-plus-cheres-du-monde",
            "https://en.wikipedia.org/#cite_ref-196",
            "https://www.wired.co.uk/article/station-f",
            "https://web.archive.org/web/20170821085053/http://www.wired.co.uk/article/station-f",
            "https://en.wikipedia.org/#cite_ref-AlapageINSEE_197-0",
            "https://en.wikipedia.org/#cite_ref-AlapageINSEE_197-1",
            "https://en.wikipedia.org/#cite_ref-AlapageINSEE_197-2",
            "https://en.wikipedia.org/#cite_ref-AlapageINSEE_197-3",
            "https://en.wikipedia.org/#cite_ref-AlapageINSEE_197-4",
            "http://www.insee.fr/fr/insee_regions/idf/themes/alapage/alap288/alapage288.pdf",
            "https://web.archive.org/web/20141229014929/http://www.insee.fr/fr/insee_regions/idf/themes/alapage/alap288/alapage288.pdf",
            "https://en.wikipedia.org/#cite_ref-wealth_distribution_198-0",
            "https://www.insee.fr/fr/statistiques/2388413",
            "https://web.archive.org/web/20170620170141/https://www.insee.fr/fr/statistiques/2388413",
            "https://en.wikipedia.org/#cite_ref-199",
            "https://web.archive.org/web/20140406124836/http://www.metronews.fr/paris/des-quartiers-de-paris-compteraient-plus-de-40-de-pauvres/mnaB!OVs3O27zkRe6/",
            "http://www.metronews.fr/paris/des-quartiers-de-paris-compteraient-plus-de-40-de-pauvres/mnaB!OVs3O27zkRe6/",
            "https://en.wikipedia.org/#cite_ref-200",
            "https://en.wikipedia.org/#cite_ref-201",
            "https://en.wikipedia.org/#cite_ref-202",
            "https://www.euromonitor.com/press/press-releases/december-2024/euromonitor-international-reveals-worlds-top-100-city-destinations-for-2024",
            "https://en.wikipedia.org/#cite_ref-pro.visitparisregion.com_203-0",
            "https://en.wikipedia.org/#cite_ref-pro.visitparisregion.com_203-1",
            "https://pro.visitparisregion.com/chiffres-du-tourisme/conjoncture/bilans/bilan-de-l-annee-touristique-2022-a-paris-ile-de-france-mars-2023",
            "https://web.archive.org/web/20230325170709/https://pro.visitparisregion.com/chiffres-du-tourisme/conjoncture/bilans/bilan-de-l-annee-touristique-2022-a-paris-ile-de-france-mars-2023",
            "https://en.wikipedia.org/#cite_ref-KeyFigures_204-0",
            "https://en.wikipedia.org/#cite_ref-KeyFigures_204-1",
            "https://en.wikipedia.org/#cite_ref-KeyFigures_204-2",
            "https://en.wikipedia.org/#cite_ref-KeyFigures_204-3",
            "https://web.archive.org/web/20210910112723/https://press.parisinfo.com/key-figures",
            "https://press.parisinfo.com/key-figures",
            "https://en.wikipedia.org/#cite_ref-205",
            "https://www.forbes.com/sites/ericrosen/2019/09/04/the-worlds-most-visited-city-is-bangkok/",
            "https://en.wikipedia.org/wiki/Forbes",
            "https://web.archive.org/web/20190914054101/https://www.forbes.com/sites/ericrosen/2019/09/04/the-worlds-most-visited-city-is-bangkok/",
            "https://en.wikipedia.org/#cite_ref-TIP2016_206-0",
            "https://press.parisinfo.com/key-figures/key-figures/Tourism-in-Paris-Key-Figures-2016",
            "https://web.archive.org/web/20180219151215/https://press.parisinfo.com/key-figures/key-figures/Tourism-in-Paris-Key-Figures-2016",
            "https://en.wikipedia.org/#cite_ref-207",
            "https://www.reuters.com/article/business/hoteliers-welcome-paris-decision-forcing-airbnb-hosts-to-register-rentals-idUSL8N1JW2DD/",
            "https://en.wikipedia.org/#cite_ref-208",
            "https://en.wikipedia.org/#cite_ref-209",
            "http://news.bbc.co.uk/2/hi/6197921.stm",
            "https://en.wikipedia.org/wiki/BBC_News",
            "https://web.archive.org/web/20091031110724/http://news.bbc.co.uk/2/hi/6197921.stm",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMontclos2003_210-0",
            "https://en.wikipedia.org/#CITEREFMontclos2003",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-1",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-2",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-3",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-4",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-5",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-6",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-7",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMichelin2011_211-8",
            "https://en.wikipedia.org/#CITEREFMichelin2011",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEPerry199519_212-0",
            "https://en.wikipedia.org/#CITEREFPerry1995",
            "https://en.wikipedia.org/#cite_ref-ReferenceC_213-0",
            "https://en.wikipedia.org/#cite_ref-214",
            "https://en.wikipedia.org/#cite_ref-215",
            "http://www.paris.fr/musees",
            "https://web.archive.org/web/20141123165959/http://www.paris.fr/musees",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010178_216-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTESchumacher199660_217-0",
            "https://en.wikipedia.org/#CITEREFSchumacher1996",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro19961173_218-0",
            "https://en.wikipedia.org/#cite_ref-219",
            "https://books.google.com/books?id=Tj4WAQAAIAAJ",
            "https://web.archive.org/web/20130907162159/http://books.google.com/books?id=Tj4WAQAAIAAJ",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro19961005%E2%80%931006_220-0",
            "https://en.wikipedia.org/#cite_ref-221",
            "http://gallica.bnf.fr/ark:/12148/bpt6k108017c.r=Labyrinte+de+Versailles+Perrault.langEN",
            "https://web.archive.org/web/20130612140924/http://gallica.bnf.fr/ark:/12148/bpt6k108017c.r=Labyrinte+de+Versailles+Perrault.langEN",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996488_222-0",
            "https://en.wikipedia.org/#cite_ref-223",
            "http://www.adoremus.org/1099-Rose.html",
            "https://web.archive.org/web/20130207134139/http://www.adoremus.org/1099-Rose.html",
            "https://en.wikipedia.org/#cite_ref-224",
            "http://www.gutenberg.org/files/135/135-h/135-h.htm",
            "https://web.archive.org/web/20131011091018/http://www.gutenberg.org/files/135/135-h/135-h.htm",
            "https://en.wikipedia.org/#cite_ref-225",
            "https://www.britannica.com/biography/Jules-Verne",
            "https://en.wikipedia.org/#cite_ref-226",
            "https://www.nobelprize.org/nobel_prizes/literature/laureates/2014/bio-bibl.html",
            "https://web.archive.org/web/20141216224108/http://www.nobelprize.org/nobel_prizes/literature/laureates/2014/bio-bibl.html",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996840_227-0",
            "https://en.wikipedia.org/#cite_ref-228",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEDamschroederWilliams1990157_229-0",
            "https://en.wikipedia.org/#CITEREFDamschroederWilliams1990",
            "https://en.wikipedia.org/#cite_ref-McClary_230-0",
            "https://books.google.com/books?id=UNGaPmlHFzgC&pg=PA120",
            "https://web.archive.org/web/20230326164803/https://books.google.com/books?id=UNGaPmlHFzgC&pg=PA120",
            "https://en.wikipedia.org/#cite_ref-231",
            "https://books.google.com/books?id=p27gT7VcuNUC&pg=PA146",
            "/wiki/Special:BookSources/978-1-4668-0726-6",
            "https://web.archive.org/web/20230201223150/https://books.google.com/books?id=p27gT7VcuNUC&pg=PA146",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEDregni200419_232-0",
            "https://en.wikipedia.org/#CITEREFDregni2004",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEDregni200832_233-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEDregni200832_233-1",
            "https://en.wikipedia.org/#CITEREFDregni2008",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMroue2006260_234-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEMroue2006260_234-1",
            "https://en.wikipedia.org/#CITEREFMroue2006",
            "https://en.wikipedia.org/#cite_ref-Gjazz_235-0",
            "https://en.wikipedia.org/#cite_ref-Gjazz_235-1",
            "https://en.wikipedia.org/#cite_ref-Gjazz_235-2",
            "https://www.theguardian.com/travel/2010/mar/03/jazz-bars-paris-django-reinhardt",
            "https://web.archive.org/web/20140320040950/http://www.theguardian.com/travel/2010/mar/03/jazz-bars-paris-django-reinhardt",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBezbakh2004872_236-0",
            "https://en.wikipedia.org/#CITEREFBezbakh2004",
            "https://en.wikipedia.org/#cite_ref-237",
            "http://www.efestivals.co.uk/festivals/rockenseine/2013/",
            "https://web.archive.org/web/20130513220755/http://www.efestivals.co.uk/festivals/rockenseine/2013",
            "https://en.wikipedia.org/#cite_ref-andante_238-0",
            "https://web.archive.org/web/20070312035555/http://www.andante.com/article/article.cfm?id=23207",
            "http://www.andante.com/article/article.cfm?id=23207",
            "https://en.wikipedia.org/#cite_ref-yahoomusicbio_239-0",
            "https://www.allmusic.com/artist/mn0000150629/biography",
            "https://en.wikipedia.org/wiki/AllMusic_(identifier)",
            "https://en.wikipedia.org/#cite_ref-240",
            "https://www.nytimes.com/roomfordebate/2013/10/14/is-france-becoming-too-american/hip-hop-a-la-francaise-29",
            "https://en.wikipedia.org/wiki/The_New_York_Times",
            "https://web.archive.org/web/20151209163816/http://www.nytimes.com/roomfordebate/2013/10/14/is-france-becoming-too-american/hip-hop-a-la-francaise-29",
            "https://en.wikipedia.org/#cite_ref-241",
            "https://www.universalis.fr/encyclopedie/presentation-du-cinematographe-lumiere/",
            "https://web.archive.org/web/20171011041100/https://www.universalis.fr/encyclopedie/presentation-du-cinematographe-lumiere/",
            "https://en.wikipedia.org/#cite_ref-242",
            "http://www.english.rfi.fr/visiting-france/20101024-grand-rex-and-its-etoiles",
            "https://web.archive.org/web/20151007024417/http://www.english.rfi.fr/visiting-france/20101024-grand-rex-and-its-etoiles",
            "https://en.wikipedia.org/#cite_ref-243",
            "http://www.paris.fr/services-et-infos-pratiques/culture-et-patrimoine/cinema/le-cinema-a-paris-2347",
            "https://web.archive.org/web/20151016022258/http://www.paris.fr/services-et-infos-pratiques/culture-et-patrimoine/cinema/le-cinema-a-paris-2347",
            "https://en.wikipedia.org/#cite_ref-244",
            "https://timesofindia.indiatimes.com/entertainment/regional/tamil/news-interviews/2-Tamil-Films-in-1st-SAFF-in-Paris/articleshow/17781374.cms",
            "https://en.wikipedia.org/wiki/The_Times_of_India",
            "https://archive.today/20130702190758/http://articles.timesofindia.indiatimes.com/2012-12-27/news-interviews/36021870_1_tamil-films-screen-films-south-asian-films",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro19961136%E2%80%931138_245-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro19961137_246-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro19961137_246-1",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEDomin%C3%A92014_247-0",
            "https://en.wikipedia.org/#CITEREFDomin%C3%A92014",
            "https://en.wikipedia.org/#cite_ref-248",
            "https://en.wikipedia.org/#cite_ref-249",
            "https://restaurant.michelin.fr",
            "https://web.archive.org/web/20141125110232/http://restaurant.michelin.fr/",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996715_250-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEFierro1996773_251-0",
            "https://en.wikipedia.org/#cite_ref-252",
            "http://www.iexplore.com/destinations/paris/how-to-look-like-a-local-in-paris",
            "https://web.archive.org/web/20160924211810/http://www.iexplore.com/destinations/paris/how-to-look-like-a-local-in-paris",
            "https://en.wikipedia.org/#cite_ref-253",
            "https://books.google.com/books?id=H2xeBAAAQBAJ&pg=PA129",
            "https://en.wikipedia.org/wiki/Routledge",
            "/wiki/Special:BookSources/978-1-136-47536-8",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=H2xeBAAAQBAJ&pg=PA129",
            "https://en.wikipedia.org/#cite_ref-254",
            "https://books.google.com/books?id=3XFMAQAAQBAJ&pg=PA115",
            "/wiki/Special:BookSources/978-2-940411-58-0",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=3XFMAQAAQBAJ&pg=PA115",
            "https://en.wikipedia.org/#cite_ref-255",
            "http://www.insidermonkey.com/blog/top-8-luxury-brands-in-the-world-317665/7/",
            "https://web.archive.org/web/20150119134339/http://www.insidermonkey.com/blog/top-8-luxury-brands-in-the-world-317665/7/",
            "https://en.wikipedia.org/#cite_ref-256",
            "http://www.metmuseum.org/toah/hd/phsr/hd_phsr.htm",
            "https://web.archive.org/web/20150213005005/http://www.metmuseum.org/toah/hd/phsr/hd_phsr.htm",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEHazan2011362_257-0",
            "https://en.wikipedia.org/#CITEREFHazan2011",
            "https://en.wikipedia.org/#cite_ref-258",
            "https://www.britannica.com/EBchecked/topic/206556/Le-Figaro",
            "https://web.archive.org/web/20141113062553/http://www.britannica.com/EBchecked/topic/206556/Le-Figaro",
            "https://en.wikipedia.org/#cite_ref-259",
            "http://french.about.com/od/newspapers/French_and_Francophone_Newspapers_and_Magazines.htm",
            "https://web.archive.org/web/20130513093151/http://french.about.com/od/newspapers/French_and_Francophone_Newspapers_and_Magazines.htm",
            "https://en.wikipedia.org/#cite_ref-260",
            "http://about-france.com/french-newspapers.htm",
            "https://web.archive.org/web/20130628080310/http://about-france.com/french-newspapers.htm",
            "https://en.wikipedia.org/#cite_ref-261",
            "http://www.afp.com/en/",
            "https://web.archive.org/web/20130708144823/http://www.afp.com/en",
            "https://en.wikipedia.org/#cite_ref-262",
            "http://www.france24.com/en/",
            "https://wayback.archive-it.org/all/20141015174237/http://www.france24.com/en/",
            "https://en.wikipedia.org/#cite_ref-263",
            "http://www.diplomatie.gouv.fr/en/",
            "https://web.archive.org/web/20130629133112/http://www.diplomatie.gouv.fr/en/",
            "https://en.wikipedia.org/#cite_ref-264",
            "http://french.about.com/od/tv/French_and_Francophone_Television_Stations_Watch_French_TV.htm",
            "https://web.archive.org/web/20130520074251/http://french.about.com/od/tv/French_and_Francophone_Television_Stations_Watch_French_TV.htm",
            "https://en.wikipedia.org/#cite_ref-265",
            "https://wayback.archive-it.org/all/20171010073101/http://www.listenlive.eu/france.html",
            "http://www.listenlive.eu/france.html",
            "https://en.wikipedia.org/#cite_ref-266",
            "https://web.archive.org/web/20130712042008/http://www.laposte.com/",
            "http://www.laposte.com",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBlackmoreMcConnachie2004204_267-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBlackmoreMcConnachie2004204_267-1",
            "https://en.wikipedia.org/#cite_ref-268",
            "https://web.archive.org/web/20051016135133/http://www.bnf.fr/pages/zNavigat/frame/version_anglaise.htm?ancre=english.htm",
            "http://www.bnf.fr/pages/zNavigat/frame/version_anglaise.htm?ancre=english.htm",
            "https://en.wikipedia.org/#cite_ref-Woodward2006_269-0",
            "https://en.wikipedia.org/#cite_ref-Woodward2006_269-1",
            "https://www.nytimes.com/2006/03/05/travel/05journeys.html",
            "https://web.archive.org/web/20141214124549/http://www.nytimes.com/2006/03/05/travel/05journeys.html",
            "https://en.wikipedia.org/#cite_ref-270",
            "http://www.english.paris-sorbonne.fr/libraries/",
            "https://web.archive.org/web/20130703101116/http://www.english.paris-sorbonne.fr/libraries/",
            "https://en.wikipedia.org/#cite_ref-nd.edu_271-0",
            "http://www.library.nd.edu/help/study-abroad/France.shtml",
            "https://web.archive.org/web/20131017053726/http://library.nd.edu/help/study-abroad/France.shtml",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010300%E2%80%93301_272-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010300%E2%80%93301_272-1",
            "https://en.wikipedia.org/#cite_ref-273",
            "https://www.totalrl.com/locations-of-league-paris/",
            "https://en.wikipedia.org/#cite_ref-274",
            "https://www.wigantoday.net/sport/rugby-league/wigan-warriors/wigan-warriors-and-catalans-dragons-progress-paris-plans-for-2026-5074136",
            "https://en.wikipedia.org/#cite_ref-275",
            "https://www.uefa.com/uefaeuro/history/news/025a-0ec0db63e375-e3d06be8c923-1000--euro-2016-all-you-need-to-know/",
            "https://en.wikipedia.org/wiki/UEFA",
            "https://en.wikipedia.org/#cite_ref-276",
            "http://news.bbc.co.uk/sport1/hi/football/europe/4750383.stm",
            "https://web.archive.org/web/20170912155904/http://news.bbc.co.uk/sport1/hi/football/europe/4750383.stm",
            "https://en.wikipedia.org/#cite_ref-277",
            "https://web.archive.org/web/20130517063542/http://www.letour.fr/le-tour/2013/us/overall-route.html",
            "http://www.letour.fr/le-tour/2013/us/overall-route.html",
            "https://en.wikipedia.org/#cite_ref-278",
            "http://www.rolandgarros.com/en_FR/",
            "https://web.archive.org/web/20130415075857/http://www.rolandgarros.com/en_FR/",
            "https://en.wikipedia.org/#cite_ref-279",
            "https://web.archive.org/web/20170713191550/http://equipement.paris.fr/stade-pierre-de-coubertin-3024",
            "http://equipement.paris.fr/stade-pierre-de-coubertin-3024",
            "https://en.wikipedia.org/#cite_ref-280",
            "https://www.parisfootballteam.com/",
            "https://web.archive.org/web/20220923203752/https://www.parisfootballteam.com/",
            "https://en.wikipedia.org/#cite_ref-stif_281-0",
            "https://web.archive.org/web/20060411124843/http://www.stif-idf.fr/",
            "http://www.stif-idf.fr",
            "https://en.wikipedia.org/#cite_ref-282",
            "http://www.optile.com/notre-mission/",
            "https://web.archive.org/web/20151208081030/http://www.optile.com/notre-mission/",
            "https://en.wikipedia.org/#cite_ref-283",
            "https://medium.com/la-fabrique-de-la-cit%C3%A9/on-foot-or-by-bike-while-paris-walks-amsterdam-pedals-17d64623b464",
            "https://web.archive.org/web/20200807154741/https://medium.com/la-fabrique-de-la-cit%C3%A9/on-foot-or-by-bike-while-paris-walks-amsterdam-pedals-17d64623b464",
            "https://en.wikipedia.org/#cite_ref-284",
            "https://web.archive.org/web/20240515153251/https://www.thelocal.fr/20240412/bikes-overtake-cars-as-means-of-transport-in-paris",
            "https://en.wikipedia.org/wiki/The_Local",
            "https://www.thelocal.fr/20240412/bikes-overtake-cars-as-means-of-transport-in-paris",
            "https://en.wikipedia.org/#cite_ref-285",
            "https://web.archive.org/web/20240619165308/https://www.euronews.com/green/2024/04/12/cycling-is-now-more-popular-than-driving-in-the-centre-of-paris-study-finds",
            "https://www.euronews.com/green/2024/04/12/cycling-is-now-more-popular-than-driving-in-the-centre-of-paris-study-finds",
            "https://en.wikipedia.org/#cite_ref-286",
            "https://www.eib.org/en/stories/future-european-cities",
            "https://web.archive.org/web/20210607154103/https://www.eib.org/en/stories/future-european-cities",
            "https://en.wikipedia.org/#cite_ref-287",
            "https://www.forbes.com/sites/jeffmcmahon/2019/12/28/how-bike-lanes-are-transforming-paris/",
            "https://web.archive.org/web/20210607154047/https://www.forbes.com/sites/jeffmcmahon/2019/12/28/how-bike-lanes-are-transforming-paris/",
            "https://en.wikipedia.org/#cite_ref-288",
            "https://www.wri.org/insights/paris-15-minute-city",
            "https://en.wikipedia.org/#cite_ref-289",
            "https://www.uitp.org/news/why-walking-and-public-transport-must-be-integrated/",
            "https://en.wikipedia.org/#cite_ref-290",
            "https://www.apur.org/en/our-works/mobility-changes-greater-paris-grand-paris-historical-trends-current-and-emerging-developments",
            "https://en.wikipedia.org/#cite_ref-291",
            "https://www.euronews.com/green/2024/06/16/the-time-of-the-whole-car-city-is-over-how-is-paris-encouraging-walking-and-cycling",
            "https://en.wikipedia.org/#cite_ref-292",
            "https://www.fastcompany.com/91119919/how-paris-became-a-15-minute-city",
            "https://en.wikipedia.org/#cite_ref-293",
            "https://web.archive.org/web/20160101095822/http://www.ratp.fr/en/ratp/c_5043/metro/",
            "http://www.ratp.fr/en/ratp/c_5043/metro/",
            "https://en.wikipedia.org/#cite_ref-294",
            "https://www.panynj.gov/content/dam/airports/statistics/statistics-general-info/annual-atr/ATR_2023.pdf",
            "https://en.wikipedia.org/#cite_ref-295",
            "http://www.developpement-durable.gouv.fr/sites/default/files/Bulletin_Statistique_2014.pdf",
            "https://web.archive.org/web/20170329083555/http://www.developpement-durable.gouv.fr/sites/default/files/Bulletin_Statistique_2014.pdf",
            "https://en.wikipedia.org/#cite_ref-296",
            "http://www.side.developpement-durable.gouv.fr/EXPLOITATION/DEFAULT/doc/IFD/IFD_REFDOC_TEMIS_0077449/trafic-aeroportuaire-1986-2012-flux-de-trafic-commercial-1986-2012",
            "https://web.archive.org/web/20170405170444/http://www.side.developpement-durable.gouv.fr/EXPLOITATION/DEFAULT/doc/IFD/IFD_REFDOC_TEMIS_0077449/trafic-aeroportuaire-1986-2012-flux-de-trafic-commercial-1986-2012",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010278%E2%80%93283_297-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEJefferson2009114_298-0",
            "https://en.wikipedia.org/#CITEREFJefferson2009",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEHart2004355_299-0",
            "https://en.wikipedia.org/#CITEREFHart2004",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTERand2010165_300-0",
            "https://en.wikipedia.org/#CITEREFRand2010",
            "https://en.wikipedia.org/#cite_ref-prod_electrique_IDF_301-0",
            "http://www.driee.ile-de-france.developpement-durable.gouv.fr/IMG/pdf/Seminaire_du_6_mars_2012_-_Presentations_Approvisionnement_electrique_du_Grand_Paris__cle2dcb2f-1.pdf",
            "https://web.archive.org/web/20151007034916/http://www.driee.ile-de-france.developpement-durable.gouv.fr/IMG/pdf/Seminaire_du_6_mars_2012_-_Presentations_Approvisionnement_electrique_du_Grand_Paris__cle2dcb2f-1.pdf",
            "https://en.wikipedia.org/#cite_ref-302",
            "http://www.globalwoodmarketsinfo.com/paris-to-import-wood-pellets-from-the-us/",
            "https://web.archive.org/web/20160312072201/http://www.globalwoodmarketsinfo.com/paris-to-import-wood-pellets-from-the-us/",
            "https://en.wikipedia.org/#cite_ref-303",
            "https://web.archive.org/web/20140410232647/http://www.paris.fr/pratique/musees-expos/musee-des-egouts/visite-publique-des-egouts-de-paris/rub_9691_stand_5943_port_23931",
            "http://www.paris.fr/pratique/musees-expos/musee-des-egouts/visite-publique-des-egouts-de-paris/rub_9691_stand_5943_port_23931",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBurchell197193_304-0",
            "https://en.wikipedia.org/#CITEREFBurchell1971",
            "https://en.wikipedia.org/#cite_ref-sewers_305-0",
            "https://web.archive.org/web/20061003225317/http://www.paris.fr/portail/Environnement/Portal.lut?page_id=1313&document_type_id=5&document_id=2158&portlet_id=3139",
            "http://www.paris.fr/portail/Environnement/Portal.lut?page_id=1313&document_type_id=5&document_id=2158&portlet_id=3139",
            "https://en.wikipedia.org/#cite_ref-306",
            "http://www.linternaute.com/actualite/monde/classement-des-villes-selon-pollution-de-l-air/",
            "https://web.archive.org/web/20120924012702/http://www.linternaute.com/actualite/monde/classement-des-villes-selon-pollution-de-l-air/",
            "https://en.wikipedia.org/#cite_ref-307",
            "https://www.euronews.com/green/2021/12/24/air-pollution-new-report-shows-which-european-cities-have-the-worst-air-quality",
            "https://web.archive.org/web/20220401104131/https://www.euronews.com/green/2021/12/24/air-pollution-new-report-shows-which-european-cities-have-the-worst-air-quality",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEJarrass%C3%A920076_308-0",
            "https://en.wikipedia.org/#CITEREFJarrass%C3%A92007",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010125_309-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTELawrenceGondrand2010208_310-0",
            "https://en.wikipedia.org/#cite_ref-311",
            "http://www.mnhn.fr/museum/foffice/tous/tous/guidePratique/lieuxVisiter/LieuxAVisiter/FLieuAVisiter.xsp?AE_ID=214&INFO_ID=21&LIEU_ID=158&MAN_ID=273&SITE_ID=10&i=1&idx=6&nav=liste",
            "https://web.archive.org/web/20130615203149/http://www.mnhn.fr/museum/foffice/tous/tous/guidePratique/lieuxVisiter/LieuxAVisiter/FLieuAVisiter.xsp?i=1&nav=liste&INFO_ID=21&SITE_ID=10&AE_ID=214&LIEU_ID=158&idx=6&MAN_ID=273",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEJarrass%C3%A92007122%E2%80%93161_312-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEJarrass%C3%A92007242%E2%80%93256_313-0",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEWhaley2012101_314-0",
            "https://en.wikipedia.org/#CITEREFWhaley2012",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEBroadwell200792_315-0",
            "https://en.wikipedia.org/#CITEREFBroadwell2007",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTEAyers2004271_316-0",
            "https://en.wikipedia.org/#CITEREFAyers2004",
            "https://en.wikipedia.org/#cite_ref-Parisian_Cemeteries_317-0",
            "http://www.paris.fr/cimetieres",
            "https://web.archive.org/web/20170405170430/http://www.paris.fr/cimetieres",
            "https://en.wikipedia.org/#cite_ref-318",
            "https://www.oui.sncf/article/les-tombes-de-celebrites-au-cimetiere-du-pere-lachaise-106832",
            "https://web.archive.org/web/20200414034945/https://www.oui.sncf/article/les-tombes-de-celebrites-au-cimetiere-du-pere-lachaise-106832",
            "https://en.wikipedia.org/#cite_ref-319",
            "http://www.insee.fr/fr/themes/detail.asp?reg_id=99&ref_id=base-indic-cc-dipl-form",
            "https://web.archive.org/web/20130910144530/http://www.insee.fr/fr/themes/detail.asp?reg_id=99&ref_id=base-indic-cc-dipl-form",
            "https://en.wikipedia.org/#cite_ref-idf_education_320-0",
            "https://web.archive.org/web/20070824203147/http://www.idf.pref.gouv.fr/donnees/enseignement.htm",
            "http://www.idf.pref.gouv.fr/donnees/enseignement.htm",
            "https://en.wikipedia.org/#cite_ref-FOOTNOTECombeau2013213%E2%80%93214_321-0",
            "https://en.wikipedia.org/#CITEREFCombeau2013",
            "https://en.wikipedia.org/#cite_ref-322",
            "https://web.archive.org/web/20130607052638/http://www.ens.fr/spip.php?article171&lang=en",
            "http://www.ens.fr/spip.php?article171&lang=en",
            "https://en.wikipedia.org/#cite_ref-323",
            "https://www.planetegrandesecoles.com/classement-qs-2024-politics",
            "https://en.wikipedia.org/#cite_ref-324",
            "https://en.wikipedia.org/wiki/Financial_Times",
            "https://rankings.ft.com/rankings/2954/european-business-school-rankings-2023",
            "https://en.wikipedia.org/#cite_ref-325",
            "https://en.wikipedia.org/wiki/Academic_Ranking_of_World_Universities",
            "https://www.shanghairanking.com/rankings/arwu/2023",
            "https://en.wikipedia.org/#cite_ref-hospital_326-0",
            "https://en.wikipedia.org/#cite_ref-hospital_326-1",
            "https://web.archive.org/web/20140327062949/http://rapport-activite.aphp.fr/activite_ambulatoire.php",
            "http://rapport-activite.aphp.fr/activite_ambulatoire.php",
            "https://en.wikipedia.org/#cite_ref-327",
            "http://www.sciencemuseum.org.uk/broughttolife/people/hoteldieu.aspx",
            "https://web.archive.org/web/20130508100917/http://www.sciencemuseum.org.uk/broughttolife/people/hoteldieu.aspx",
            "https://en.wikipedia.org/#cite_ref-328",
            "https://www.oecd.org/en/careers/submit.htm",
            "https://en.wikipedia.org/#cite_ref-IR_329-0",
            "https://en.wikipedia.org/#cite_ref-IR_329-1",
            "https://api-site.paris.fr/images/74497",
            "https://web.archive.org/web/20210308095626/https://api-site.paris.fr/images/74497",
            "https://en.wikipedia.org/#cite_ref-330",
            "http://www.comune.roma.it/PCR/resources/cms/documents/Gemellaggio_Roma_Parigi.pdf",
            "https://web.archive.org/web/20181113084709/https://www.comune.roma.it/PCR/resources/cms/documents/Gemellaggio_Roma_Parigi.pdf",
            "http://www.comune.roma.it/pcr/it/relaz_int_sadi.page",
            "https://web.archive.org/web/20160709150804/http://www.comune.roma.it/pcr/it/relaz_int_sadi.page",
            "https://en.wikipedia.org/#cite_ref-331",
            "https://en.wikipedia.org/#cite_ref-332",
            "https://archive.today/20120905235843/http://www.paris.fr/portail/english/Portal.lut?page_id=8139&document_type_id=5&document_id=29903&portlet_id=18784",
            "http://www.paris.fr/portail/english/Portal.lut?page_id=8139&document_type_id=5&document_id=29903&portlet_id=18784",
            "https://en.wikipedia.org/#cite_ref-Paris1_333-0",
            "https://web.archive.org/web/20071011162140/http://paris.fr/portail/accueil/Portal.lut?page_id=6587&document_type_id=5&document_id=16468&portlet_id=14974",
            "http://www.paris.fr/portail/accueil/Portal.lut?page_id=6587&document_type_id=5&document_id=16468&portlet_id=14974",
            "https://en.wikipedia.org/#cite_ref-Paris2_334-0",
            "https://archive.today/20070806151309/http://www.paris.fr/en/city_government/international/special_partners.asp",
            "http://www.paris.fr/en/city_government/international/special_partners.asp",
            "https://books.google.com/books?id=5w0jAQAAIAAJ",
            "/wiki/Special:BookSources/978-2-03-585012-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=5w0jAQAAIAAJ",
            "https://books.google.com/books?id=QSIDAAAAMAAJ&pg=RA1-PA132",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=QSIDAAAAMAAJ&pg=RA1-PA132",
            "https://books.google.com/books?id=0eJxj9Xos_UC",
            "/wiki/Special:BookSources/978-3-930698-96-7",
            "https://web.archive.org/web/20210123205256/https://books.google.com/books?id=0eJxj9Xos_UC",
            "https://en.wikipedia.org/wiki/Fran%C3%A7ois_Bayrou",
            "https://books.google.com/books?id=bZVLPwAACAAJ",
            "/wiki/Special:BookSources/978-2-7028-3282-0",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=bZVLPwAACAAJ",
            "https://books.google.com/books?id=zoWtMt2hJIYC&pg=PT242",
            "/wiki/Special:BookSources/978-0-14-191288-2",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=zoWtMt2hJIYC&pg=PT242",
            "https://books.google.com/books?id=iRrglOH4kKkC&pg=PA247",
            "/wiki/Special:BookSources/978-1-4008-3972-8",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=iRrglOH4kKkC&pg=PA247",
            "https://books.google.com/books?id=3jU3Td7GI4oC&pg=PA85",
            "/wiki/Special:BookSources/978-1-4094-8725-8",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=3jU3Td7GI4oC&pg=PA85",
            "https://books.google.com/books?id=7vFnAAAAMAAJ",
            "/wiki/Special:BookSources/978-0-8223-0214-8",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=7vFnAAAAMAAJ",
            "/wiki/Special:BookSources/978-2-03-505369-5",
            "https://books.google.com/books?id=-nEcC1zeg-MC&pg=PA394",
            "/wiki/Special:BookSources/978-1-84353-078-7",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=-nEcC1zeg-MC&pg=PA394",
            "https://books.google.com/books?id=8ixR236aqQoC&pg=PA153",
            "/wiki/Special:BookSources/978-1-84353-317-7",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=8ixR236aqQoC&pg=PA153",
            "/wiki/Special:BookSources/978-2-7071-3904-7",
            "https://books.google.com/books?id=TgkaWS7yDl8C&pg=PA233",
            "/wiki/Special:BookSources/978-0-8018-6810-8",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=TgkaWS7yDl8C&pg=PA233",
            "https://books.google.com/books?id=PB5d0pRRn6IC&pg=PT43",
            "/wiki/Special:BookSources/978-1-118-33143-9",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=PB5d0pRRn6IC&pg=PT43",
            "https://books.google.com/books?id=i8KuR2TxJY4C&pg=PA288",
            "/wiki/Special:BookSources/978-1-60376-267-0",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=i8KuR2TxJY4C&pg=PA288",
            "https://books.google.com/books?id=uV7Jp9Iz1hsC&pg=PA212",
            "/wiki/Special:BookSources/978-1-4020-6778-5",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=uV7Jp9Iz1hsC&pg=PA212",
            "https://books.google.com/books?id=N9cPFcaOKBwC&pg=PA92",
            "/wiki/Special:BookSources/978-1-4257-9022-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=N9cPFcaOKBwC&pg=PA92",
            "https://archive.org/details/imperialmasquera00burc",
            "https://books.google.com/books?id=f899xH_quaMC",
            "/wiki/Special:BookSources/978-1-85109-440-0",
            "https://web.archive.org/web/20200819063413/https://books.google.com/books?id=f899xH_quaMC",
            "https://books.google.com/books?id=1nYnAQAAMAAJ",
            "/wiki/Special:BookSources/978-0-86350-038-1",
            "https://web.archive.org/web/20200522201443/https://books.google.com/books?id=1nYnAQAAMAAJ",
            "https://books.google.com/books?id=HmemAAAAIAAJ",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=HmemAAAAIAAJ",
            "https://books.google.com/books?id=AppsDAKOW3QC&pg=PA259",
            "/wiki/Special:BookSources/978-1-59884-254-8",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=AppsDAKOW3QC&pg=PA259",
            "https://books.google.com/books?id=rUbZLcYsA_QC&pg=PA75",
            "/wiki/Special:BookSources/978-0-520-05617-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=rUbZLcYsA_QC&pg=PA75",
            "https://books.google.com/books?id=NtitRt1uUXMC&pg=PA101",
            "/wiki/Special:BookSources/978-0-521-65098-4",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=NtitRt1uUXMC&pg=PA101",
            "https://archive.org/details/histoiredeparis0000comb",
            "/wiki/Special:BookSources/978-2-13-060852-3",
            "https://books.google.com/books?id=uVmfGAAACAAJ",
            "/wiki/Special:BookSources/978-2-13-053865-3",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=uVmfGAAACAAJ",
            "https://books.google.com/books?id=_bwH0j_EOtIC&pg=PA205",
            "/wiki/Special:BookSources/978-1-4179-4646-4",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=_bwH0j_EOtIC&pg=PA205",
            "https://books.google.com/books?id=3lkEgdtOvGEC&q=Iron+Age+Communities+in+Britain&pg=PA201",
            "/wiki/Special:BookSources/978-0-415-34779-2",
            "https://web.archive.org/web/20210417203913/https://books.google.com/books?id=3lkEgdtOvGEC&q=Iron+Age+Communities+in+Britain&pg=PA201",
            "https://books.google.com/books?id=PbNpLIZzFKoC&pg=PT95",
            "/wiki/Special:BookSources/978-1-4396-4101-9",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=PbNpLIZzFKoC&pg=PT95",
            "https://books.google.com/books?id=yAw3PBpdEw4C&pg=PA157",
            "/wiki/Special:BookSources/978-0-918728-99-9",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=yAw3PBpdEw4C&pg=PA157",
            "/wiki/Special:BookSources/978-2-87772-369-5",
            "/wiki/Special:BookSources/978-2-907970-91-4",
            "/wiki/Special:BookSources/978-3-8331-1129-7",
            "https://books.google.com/books?id=bcD41kgBYTMC&pg=PA16",
            "/wiki/Special:BookSources/978-1-60976-878-2",
            "https://web.archive.org/web/20161229020537/https://books.google.com/books?id=bcD41kgBYTMC&pg=PA16",
            "https://archive.org/details/lalanguegauloise00dottuoft",
            "/wiki/Special:BookSources/978-2-05-100208-0",
            "/wiki/Template:Cite_book",
            "/wiki/Help:CS1_errors#invalid_isbn_date",
            "https://books.google.com/books?id=3t8SLVloJjsC&pg=PA19",
            "/wiki/Special:BookSources/978-0-19-803743-9",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=3t8SLVloJjsC&pg=PA19",
            "https://books.google.com/books?id=smcDVbulh1gC&pg=PA32",
            "/wiki/Special:BookSources/978-0-19-804262-4",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=smcDVbulh1gC&pg=PA32",
            "https://books.google.com/books?id=5gJoAAAAMAAJ",
            "/wiki/Special:BookSources/978-2-910305-02-4",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=5gJoAAAAMAAJ",
            "https://books.google.com/books?id=UHQEP3oJDsoC&pg=PA142",
            "/wiki/Special:BookSources/978-0-8032-1653-2",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=UHQEP3oJDsoC&pg=PA142",
            "https://books.google.com/books?id=BL1CAAAAYAAJ&pg=PA210",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=BL1CAAAAYAAJ&pg=PA210",
            "https://books.google.com/books?id=LVpIIHrUOZEC&pg=PA68",
            "/wiki/Special:BookSources/978-0-203-45974-4",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=LVpIIHrUOZEC&pg=PA68",
            "/wiki/Special:BookSources/978-0-9557182-3-6",
            "/wiki/Special:BookSources/978-1-74059-850-7",
            "/wiki/Special:BookSources/978-0-7859-9300-1",
            "https://books.google.com/books?id=I0KTnvvPwJ0C",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=I0KTnvvPwJ0C",
            "/wiki/Special:BookSources/978-0-8021-3997-9",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=3hYBzRzZ0kcC",
            "https://books.google.com/books?id=fUOY8941RjMC&pg=PA117",
            "/wiki/Special:BookSources/978-0-7391-6749-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=fUOY8941RjMC&pg=PA117",
            "https://books.google.com/books?id=mTmRa1s1Z48C&pg=PA103",
            "/wiki/Special:BookSources/978-1-118-26621-2",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=mTmRa1s1Z48C&pg=PA103",
            "https://archive.org/details/makingofrevoluti00davi",
            "/wiki/Special:BookSources/978-0-520-24327-9",
            "https://books.google.com/books?id=LNMmCgAAQBAJ",
            "/wiki/Special:BookSources/978-1-107-07305-0",
            "https://web.archive.org/web/20200522201207/https://books.google.com/books?id=LNMmCgAAQBAJ",
            "https://books.google.com/books?id=CPZuf6gxIBAC&pg=PP8",
            "/wiki/Special:BookSources/978-1-4042-0536-9",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=CPZuf6gxIBAC&pg=PP8",
            "https://books.google.com/books?id=G2xKjURYgHgC",
            "/wiki/Special:BookSources/978-0-415-20082-0",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=G2xKjURYgHgC",
            "/wiki/Special:BookSources/978-0-415-28061-7",
            "https://books.google.com/books?id=65r1hSAq-dQC&pg=PA144",
            "/wiki/Special:BookSources/978-0-8018-6070-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=65r1hSAq-dQC&pg=PA144",
            "https://books.google.com/books?id=vhelHHnagCsC&pg=PA83",
            "/wiki/Special:BookSources/978-1-136-54768-3",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=vhelHHnagCsC&pg=PA83",
            "https://books.google.com/books?id=JCPXfSUlUV8C&pg=PA25",
            "/wiki/Special:BookSources/978-0-521-81126-2",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=JCPXfSUlUV8C&pg=PA25",
            "https://books.google.com/books?id=4pNBaIocHNUC&pg=PA355",
            "/wiki/Special:BookSources/978-1-85703-985-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=4pNBaIocHNUC&pg=PA355",
            "https://books.google.com/books?id=re2wIpEB310C",
            "/wiki/Special:BookSources/978-0-7391-1930-3",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=re2wIpEB310C",
            "https://books.google.com/books?id=og_RDdEdHz4C&pg=PA362",
            "/wiki/Special:BookSources/978-1-84467-800-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=og_RDdEdHz4C&pg=PA362",
            "https://archive.org/details/bub_gb_L40DAAAAQAAJ",
            "https://archive.org/details/bub_gb_L40DAAAAQAAJ/page/n77",
            "https://books.google.com/books?id=X-E7P9dVSbgC&pg=PA432",
            "/wiki/Special:BookSources/978-0-674-03864-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=X-E7P9dVSbgC&pg=PA432",
            "https://archive.org/details/sevenagesofparis00alis",
            "/wiki/Special:BookSources/978-0-679-45481-6",
            "https://books.google.com/books?id=VAn8tHE3zB4C&pg=PA6",
            "/wiki/Special:BookSources/978-2-7131-0202-8",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=VAn8tHE3zB4C&pg=PA6",
            "https://books.google.com/books?id=0khM9JqazzUC",
            "/wiki/Special:BookSources/978-1-4081-0381-4",
            "https://web.archive.org/web/20210417210028/https://books.google.com/books?id=0khM9JqazzUC",
            "https://books.google.com/books?id=zwlQyQ_WAtYC",
            "/wiki/Special:BookSources/978-0-14-028292-4",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=zwlQyQ_WAtYC",
            "https://archive.org/details/cambridgeillustr00jone",
            "https://archive.org/details/cambridgeillustr00jone/page/48",
            "/wiki/Special:BookSources/978-0-521-66992-4",
            "https://books.google.com/books?id=5HxGAQAAIAAJ",
            "/wiki/Special:BookSources/978-2-84096-476-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=5HxGAQAAIAAJ",
            "https://archive.org/details/miniroughguideto00rach",
            "/wiki/Special:BookSources/978-1-85828-679-2",
            "https://books.google.com/books?id=_AADznCsgAsC&pg=PT177",
            "/wiki/Special:BookSources/978-1-4129-6900-0",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=_AADznCsgAsC&pg=PT177",
            "https://archive.org/details/governmentpoliti0000knap",
            "/wiki/Special:BookSources/978-0-415-35732-6",
            "https://en.wikipedia.org/wiki/Dover_Publications",
            "/wiki/Special:BookSources/978-0-486-29078-2",
            "/wiki/Special:BookSources/978-2-87772-089-2",
            "https://archive.org/details/paris0000unse_b2o4",
            "/wiki/Special:BookSources/978-981-282-079-2",
            "https://books.google.com/books?id=Yy2-adLaGQkC&pg=PA55",
            "/wiki/Special:BookSources/978-2-84287-096-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=Yy2-adLaGQkC&pg=PA55",
            "https://books.google.com/books?id=gFDIS847zl8C&pg=PA11",
            "/wiki/Special:BookSources/978-0-415-41762-4",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=gFDIS847zl8C&pg=PA11",
            "https://books.google.com/books?id=0JJdEhSWS90C&pg=PA138",
            "/wiki/Special:BookSources/978-81-317-3145-1",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=0JJdEhSWS90C&pg=PA138",
            "https://books.google.com/books?id=h5XyAAAAMAAJ",
            "https://web.archive.org/web/20210206020104/https://books.google.com/books?id=h5XyAAAAMAAJ",
            "/wiki/Special:BookSources/978-2-7373-6217-0",
            "https://books.google.com/books?id=P945gwAL-oAC&pg=PT105",
            "/wiki/Special:BookSources/978-2-06-718220-2",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=P945gwAL-oAC&pg=PT105",
            "https://books.google.com/books?id=OCJ2QgAACAAJ",
            "/wiki/Special:BookSources/978-0-86565-226-2",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=OCJ2QgAACAAJ",
            "https://books.google.com/books?id=1v45lM76wjsC&pg=PA64",
            "/wiki/Special:BookSources/978-1-134-25561-0",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=1v45lM76wjsC&pg=PA64",
            "https://books.google.com/books?id=-nUVnF1rPXoC&pg=PA8",
            "/wiki/Special:BookSources/978-0-470-03712-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=-nUVnF1rPXoC&pg=PA8",
            "https://en.wikipedia.org/wiki/Ernest_N%C3%A8gre",
            "/wiki/Special:BookSources/978-2-600-02883-7",
            "https://books.google.com/books?id=db4TSjy-9X4C",
            "/wiki/Special:BookSources/978-1-74220-503-8",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=db4TSjy-9X4C",
            "https://books.google.com/books?id=LVpYlyaqfoQC&pg=PA185",
            "/wiki/Special:BookSources/978-0-203-42794-1",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=LVpYlyaqfoQC&pg=PA185",
            "https://books.google.com/books?id=j8n5iKE9gdcC&pg=PA135",
            "/wiki/Special:BookSources/978-0-8093-8588-1",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=j8n5iKE9gdcC&pg=PA135",
            "/wiki/Special:BookSources/978-1-84595-065-1",
            "https://books.google.com/books?id=YU_o6E572uIC&pg=PA453",
            "/wiki/Special:BookSources/978-0-19-283557-4",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=YU_o6E572uIC&pg=PA453",
            "https://books.google.com/books?id=umLmjHFZoT4C",
            "/wiki/Special:BookSources/978-0-8018-7930-2",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=umLmjHFZoT4C",
            "https://books.google.com/books?id=wg4NAQAAIAAJ&pg=PA19",
            "/wiki/Special:BookSources/978-0-7190-4165-5",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=wg4NAQAAIAAJ&pg=PA19",
            "https://books.google.com/books?id=ZFDKUW0z4bsC&pg=PA476",
            "/wiki/Special:BookSources/978-1-111-83171-4",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=ZFDKUW0z4bsC&pg=PA476",
            "https://archive.org/details/frenchconnection0000phil",
            "/wiki/Special:BookSources/978-1-58685-529-1",
            "https://books.google.com/books?id=DCYf7F5erwYC&pg=PA165",
            "/wiki/Special:BookSources/978-0-9812952-0-6",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=DCYf7F5erwYC&pg=PA165",
            "https://books.google.com/books?id=QTaRv7lr7uoC&pg=PT646",
            "/wiki/Special:BookSources/978-0-330-52254-0",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=QTaRv7lr7uoC&pg=PT646",
            "https://books.google.com/books?id=PNDki71jxYQC&pg=PA37",
            "/wiki/Special:BookSources/978-1-4405-0740-3",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=PNDki71jxYQC&pg=PA37",
            "https://books.google.com/books?id=ymIXLhegGnwC&pg=PA60",
            "/wiki/Special:BookSources/978-0-415-13187-2",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=ymIXLhegGnwC&pg=PA60",
            "/wiki/Special:BookSources/978-2-13-062078-5",
            "https://books.google.com/books?id=uDxlAAAAMAAJ",
            "/wiki/Special:BookSources/978-1-904341-28-4",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=uDxlAAAAMAAJ",
            "https://books.google.com/books?id=9AAMEqfFtngC&pg=PA25",
            "/wiki/Special:BookSources/978-0-8166-4520-6",
            "https://web.archive.org/web/20210305041927/https://books.google.com/books?id=9AAMEqfFtngC&pg=PA25",
            "https://books.google.com/books?id=ZM4XNQEACAAJ",
            "/wiki/Special:BookSources/978-2-7558-0330-3",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=ZM4XNQEACAAJ",
            "https://books.google.com/books?id=Li5xQgAACAAJ",
            "/wiki/Special:BookSources/978-2-262-03015-5",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=Li5xQgAACAAJ",
            "https://books.google.com/books?id=tanPYs6ArLIC&pg=PA60",
            "/wiki/Special:BookSources/978-0-521-23014-8",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=tanPYs6ArLIC&pg=PA60",
            "https://books.google.com/books?id=FYPU8V_oWz8C&pg=PA17",
            "/wiki/Special:BookSources/978-1-84537-661-1",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=FYPU8V_oWz8C&pg=PA17",
            "https://books.google.com/books?id=MtOmZc-Vd_gC&pg=PA4",
            "/wiki/Special:BookSources/978-0-11-702360-4",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=MtOmZc-Vd_gC&pg=PA4",
            "https://books.google.com/books?id=Vwhieeo_nfMC&pg=PR",
            "/wiki/Special:BookSources/978-1-85973-973-0",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=Vwhieeo_nfMC&pg=PR",
            "https://books.google.com/books?id=rCnYe0cPTq4C&pg=PA37",
            "/wiki/Special:BookSources/978-0-7607-3890-0",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=rCnYe0cPTq4C&pg=PA37",
            "https://books.google.com/books?id=aL4lsWdd-rAC",
            "/wiki/Special:BookSources/978-1-85285-057-9",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=aL4lsWdd-rAC",
            "https://books.google.com/books?id=cXuCjDbxC1YC&pg=PA281",
            "/wiki/Special:BookSources/978-2-7605-2209-1",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=cXuCjDbxC1YC&pg=PA281",
            "https://books.google.com/books?id=CTX7h9H8DJEC&pg=PA237",
            "/wiki/Special:BookSources/978-2-86272-260-3",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=CTX7h9H8DJEC&pg=PA237",
            "https://en.wikisource.org/wiki/1911_Encyclop%C3%A6dia_Britannica/Paris",
            "https://en.wikipedia.org/wiki/Hugh_Chisholm",
            "https://en.wikipedia.org/wiki/Encyclop%C3%A6dia_Britannica_Eleventh_Edition",
            "https://books.google.com/books?id=Rlua0N-AQNgC&pg=PA262",
            "https://web.archive.org/web/20170411065259/https://books.google.com/books?id=Rlua0N-AQNgC&pg=PA262",
            "https://books.google.com/books?id=uIFwg5LOnnoC&pg=PR15",
            "/wiki/Special:BookSources/978-0-7844-1010-3",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=uIFwg5LOnnoC&pg=PR15",
            "https://books.google.com/books?id=JIksZtWqrd0C&pg=PT101",
            "/wiki/Special:BookSources/978-1-136-81060-2",
            "https://web.archive.org/web/20160101095821/https://books.google.com/books?id=JIksZtWqrd0C&pg=PT101",
            "https://archive.org/details/coronationrites00wooluoft",
            "https://archive.org/details/coronationrites00wooluoft/page/106",
            "https://books.google.com/books?id=Ce9VUj5pRMUC&q=delouvrier+%22villes+nouvelles%22",
            "/wiki/Special:BookSources/978-90-420-2500-4",
            "https://web.archive.org/web/20210417203904/https://books.google.com/books?id=Ce9VUj5pRMUC&q=delouvrier+%22villes+nouvelles%22",
            "https://books.google.com/books?id=H8UiAQAAIAAJ",
            "/wiki/Special:BookSources/978-2-13-053723-6",
            "https://web.archive.org/web/20150928174957/https://books.google.com/books?id=H8UiAQAAIAAJ",
            "https://en.wikipedia.org/wiki/Bibliography_of_Paris",
            "https://en.wikipedia.org/wiki/Vincent_Cronin",
            "https://archive.org/details/parisoneve19001900cron",
            "https://en.wikipedia.org/wiki/HarperCollins",
            "/wiki/Special:BookSources/978-0-312-04876-1",
            "/wiki/Special:BookSources/978-0-00-215191-7",
            "https://en.wikipedia.org/wiki/Fayard",
            "/wiki/Special:BookSources/978-2-213-59874-1",
            "/wiki/Special:BookSources/978-2-86930-648-6",
            "https://archive.org/details/parisbiographyof00jone",
            "https://en.wikipedia.org/wiki/Penguin_Books",
            "/wiki/Special:BookSources/978-0-670-03393-5",
            "/wiki/Special:BookSources/978-2-02-012864-3",
            "/wiki/Special:BookSources/978-0-226-87023-6",
            "/wiki/File:Wikisource-logo.svg",
            "https://en.wikipedia.org/wiki/Wikisource",
            "https://www.paris.fr/",
            "https://www.wikidata.org/wiki/Q90#P856",
            "/wiki/Template:Paris",
            "/wiki/Template_talk:Paris",
            "/wiki/Special:EditPage/Template:Paris",
            "https://en.wikipedia.org/wiki/2nd_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/3rd_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/4th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/6th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/7th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/8th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/9th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/10th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/11th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/12th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/13th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/14th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/15th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/17th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/18th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/19th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/20th_arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/Paris_A%C3%A9roport",
            "https://en.wikipedia.org/wiki/Roman_Catholic_Archdiocese_of_Paris",
            "https://en.wikipedia.org/wiki/Paris_architecture_in_the_era_of_absolutism",
            "https://en.wikipedia.org/wiki/List_of_bridges_in_Paris",
            "https://en.wikipedia.org/wiki/Culture_of_Paris",
            "https://en.wikipedia.org/wiki/V%C3%A9lib%27_M%C3%A9tropole",
            "https://en.wikipedia.org/wiki/Museums_in_Paris",
            "https://en.wikipedia.org/wiki/Squares_in_Paris",
            "https://en.wikipedia.org/wiki/Topography_of_Paris",
            "https://en.wikipedia.org/wiki/Paris_metropolitan_area",
            "/wiki/Template:Cities_in_France",
            "/wiki/Template_talk:Cities_in_France",
            "/wiki/Special:EditPage/Template:Cities_in_France",
            "https://en.wikipedia.org/wiki/Lyon",
            "https://en.wikipedia.org/wiki/Toulouse",
            "https://en.wikipedia.org/wiki/Nice",
            "https://en.wikipedia.org/wiki/Montpellier",
            "https://en.wikipedia.org/wiki/Strasbourg",
            "https://en.wikipedia.org/wiki/Bordeaux",
            "https://en.wikipedia.org/wiki/Lille",
            "https://en.wikipedia.org/wiki/Rennes",
            "https://en.wikipedia.org/wiki/Toulon",
            "https://en.wikipedia.org/wiki/Reims",
            "https://en.wikipedia.org/wiki/Saint-%C3%89tienne",
            "https://en.wikipedia.org/wiki/Le_Havre",
            "https://en.wikipedia.org/wiki/Villeurbanne",
            "https://en.wikipedia.org/wiki/Dijon",
            "https://en.wikipedia.org/wiki/Angers",
            "https://en.wikipedia.org/wiki/Grenoble",
            "https://en.wikipedia.org/wiki/Saint-Denis,_R%C3%A9union",
            "https://en.wikipedia.org/wiki/N%C3%AEmes",
            "https://en.wikipedia.org/wiki/Aix-en-Provence",
            "https://en.wikipedia.org/wiki/Clermont-Ferrand",
            "https://en.wikipedia.org/wiki/Le_Mans",
            "https://en.wikipedia.org/wiki/Brest,_France",
            "https://en.wikipedia.org/wiki/Tours",
            "https://en.wikipedia.org/wiki/Amiens",
            "https://en.wikipedia.org/wiki/Annecy",
            "https://en.wikipedia.org/wiki/Limoges",
            "https://en.wikipedia.org/wiki/Metz",
            "https://en.wikipedia.org/wiki/Perpignan",
            "https://en.wikipedia.org/wiki/Besan%C3%A7on",
            "https://en.wikipedia.org/wiki/Orl%C3%A9ans",
            "https://en.wikipedia.org/wiki/Montreuil,_Seine-Saint-Denis",
            "https://en.wikipedia.org/wiki/Caen",
            "https://en.wikipedia.org/wiki/Saint-Paul,_R%C3%A9union",
            "https://en.wikipedia.org/wiki/Mulhouse",
            "https://en.wikipedia.org/wiki/Nancy,_France",
            "/wiki/Template:Visitor_attractions_in_Paris",
            "/wiki/Template_talk:Visitor_attractions_in_Paris",
            "/wiki/Special:EditPage/Template:Visitor_attractions_in_Paris",
            "https://en.wikipedia.org/wiki/Arc_de_Triomphe_du_Carrousel",
            "https://en.wikipedia.org/wiki/Ar%C3%A8nes_de_Lut%C3%A8ce",
            "https://en.wikipedia.org/wiki/Palais_Brongniart",
            "https://en.wikipedia.org/wiki/Conciergerie",
            "https://en.wikipedia.org/wiki/Institut_de_France",
            "https://en.wikipedia.org/wiki/Jeanne_d%27Arc_(Fr%C3%A9miet)",
            "https://en.wikipedia.org/wiki/Napoleon%27s_tomb",
            "https://en.wikipedia.org/wiki/Luxor_Obelisks",
            "https://en.wikipedia.org/wiki/Place_Diana",
            "https://en.wikipedia.org/wiki/Flame_of_Liberty",
            "https://en.wikipedia.org/wiki/Porte_Saint-Denis",
            "https://en.wikipedia.org/wiki/Porte_Saint-Martin",
            "https://en.wikipedia.org/wiki/Army_Museum_(Paris)",
            "https://en.wikipedia.org/wiki/Cit%C3%A9_des_Sciences_et_de_l%27Industrie",
            "https://en.wikipedia.org/wiki/Galerie_nationale_du_Jeu_de_Paume",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_des_Arts_d%C3%A9coratifs,_Paris",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_d%27Art_et_d%27Histoire_du_Juda%C3%AFsme",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_d%27Art_Moderne_de_Paris",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_Bourdelle",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_la_Cin%C3%A9math%C3%A8que",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_Cognacq-Jay",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_Gr%C3%A9vin",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_Jacquemart-Andr%C3%A9",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_la_Vie_romantique",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_Montmartre",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_national_Gustave_Moreau",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_national_des_Monuments_Fran%C3%A7ais",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_Cluny",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_Pasteur",
            "https://en.wikipedia.org/wiki/Palais_de_la_L%C3%A9gion_d%27Honneur",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_la_L%C3%A9gion_d%27honneur",
            "https://en.wikipedia.org/wiki/List_of_religious_buildings_in_Paris",
            "https://en.wikipedia.org/wiki/Alexander_Nevsky_Cathedral,_Paris",
            "https://en.wikipedia.org/wiki/American_Cathedral_in_Paris",
            "https://en.wikipedia.org/wiki/American_Church_in_Paris",
            "https://en.wikipedia.org/wiki/Armenian_Cathedral_of_St._John_the_Baptist",
            "https://en.wikipedia.org/wiki/Chapelle_expiatoire",
            "https://en.wikipedia.org/wiki/Grand_Mosque_of_Paris",
            "https://en.wikipedia.org/wiki/Grand_Synagogue_of_Paris",
            "https://en.wikipedia.org/wiki/Synagogue_de_Nazareth",
            "https://en.wikipedia.org/wiki/La_Madeleine,_Paris",
            "https://en.wikipedia.org/wiki/Notre-Dame-de-Bonne-Nouvelle",
            "https://en.wikipedia.org/wiki/Notre-Dame-de-Lorette,_Paris",
            "https://en.wikipedia.org/wiki/Notre-Dame-des-Victoires,_Paris",
            "https://en.wikipedia.org/wiki/Saint-Ambroise,_Paris",
            "https://en.wikipedia.org/wiki/Saint-Augustin,_Paris",
            "https://en.wikipedia.org/wiki/Saint-%C3%89tienne-du-Mont",
            "https://en.wikipedia.org/wiki/Saint-Eustache,_Paris",
            "https://en.wikipedia.org/wiki/Saint-Fran%C3%A7ois-Xavier,_Paris",
            "https://en.wikipedia.org/wiki/Saint-Germain-des-Pr%C3%A9s_(abbey)",
            "https://en.wikipedia.org/wiki/Saint-Germain_l%27Auxerrois",
            "https://en.wikipedia.org/wiki/Saint-Gervais-Saint-Protais",
            "https://en.wikipedia.org/wiki/Saint-Jean_de_Montmartre",
            "https://en.wikipedia.org/wiki/Saint-Paul-Saint-Louis",
            "https://en.wikipedia.org/wiki/Saint-Pierre_de_Montmartre",
            "https://en.wikipedia.org/wiki/Saint-Roch,_Paris",
            "https://en.wikipedia.org/wiki/Saint-Sulpice,_Paris",
            "https://en.wikipedia.org/wiki/Saint-Vincent-de-Paul,_Paris",
            "https://en.wikipedia.org/wiki/Sainte-Clotilde,_Paris",
            "https://en.wikipedia.org/wiki/Sainte-Trinit%C3%A9,_Paris",
            "https://en.wikipedia.org/wiki/Temple_du_Marais",
            "https://en.wikipedia.org/wiki/Val-de-Gr%C3%A2ce_(church)",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Beauvais",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Charost",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Crillon",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_d%27Estr%C3%A9es",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_de_la_Pa%C3%AFva",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Pontalba",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Soubise",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_de_Sully",
            "https://en.wikipedia.org/wiki/H%C3%B4tel_Lambert",
            "https://en.wikipedia.org/wiki/Avenue_de_l%27Op%C3%A9ra",
            "https://en.wikipedia.org/wiki/Avenue_Foch",
            "https://en.wikipedia.org/wiki/Avenue_George_V",
            "https://en.wikipedia.org/wiki/Boulevard_de_la_Madeleine",
            "https://en.wikipedia.org/wiki/Boulevard_de_S%C3%A9bastopol",
            "https://en.wikipedia.org/wiki/Champ_de_Mars",
            "https://en.wikipedia.org/wiki/Covered_passages_of_Paris",
            "https://en.wikipedia.org/wiki/Galerie_V%C3%A9ro-Dodat",
            "https://en.wikipedia.org/wiki/Passage_Choiseul",
            "https://en.wikipedia.org/wiki/Passage_des_Panoramas",
            "https://en.wikipedia.org/wiki/Galerie_Vivienne",
            "https://en.wikipedia.org/wiki/Passage_du_Havre",
            "https://en.wikipedia.org/wiki/Passage_Jouffroy",
            "https://en.wikipedia.org/wiki/Passage_Brady",
            "https://en.wikipedia.org/wiki/The_Marais",
            "https://en.wikipedia.org/wiki/Montparnasse",
            "https://en.wikipedia.org/wiki/Place_Dauphine",
            "https://en.wikipedia.org/wiki/Place_de_la_Nation",
            "https://en.wikipedia.org/wiki/Place_des_%C3%89meutes-de-Stonewall",
            "https://en.wikipedia.org/wiki/Place_des_%C3%89tats-Unis",
            "https://en.wikipedia.org/wiki/Place_des_Pyramides",
            "https://en.wikipedia.org/wiki/Place_du_Carrousel",
            "https://en.wikipedia.org/wiki/Place_du_Tertre",
            "https://en.wikipedia.org/wiki/Place_Saint-Michel",
            "https://en.wikipedia.org/wiki/Pont_d%27I%C3%A9na",
            "https://en.wikipedia.org/wiki/Pont_de_Bir-Hakeim",
            "https://en.wikipedia.org/wiki/Port_du_Louvre",
            "https://en.wikipedia.org/wiki/Rue_Basse",
            "https://en.wikipedia.org/wiki/Rue_Bonaparte",
            "https://en.wikipedia.org/wiki/Rue_Charlemagne",
            "https://en.wikipedia.org/wiki/Rue_d%27Argenteuil",
            "https://en.wikipedia.org/wiki/Rue_de_la_Ferronnerie",
            "https://en.wikipedia.org/wiki/Rue_de_la_Paix,_Paris",
            "https://en.wikipedia.org/wiki/Rue_de_la_Sourdi%C3%A8re",
            "https://en.wikipedia.org/wiki/Rue_de_Montmorency",
            "https://en.wikipedia.org/wiki/Rue_de_Richelieu",
            "https://en.wikipedia.org/wiki/Rue_de_Vaugirard",
            "https://en.wikipedia.org/wiki/Rue_des_Francs-Bourgeois",
            "https://en.wikipedia.org/wiki/Rue_des_Lombards",
            "https://en.wikipedia.org/wiki/Rue_du_Faubourg_Saint-Honor%C3%A9",
            "https://en.wikipedia.org/wiki/Rue_Elz%C3%A9vir",
            "https://en.wikipedia.org/wiki/Rue_Foyatier",
            "https://en.wikipedia.org/wiki/Rue_Moli%C3%A8re",
            "https://en.wikipedia.org/wiki/Rue_Montorgueil",
            "https://en.wikipedia.org/wiki/Rue_Radziwill",
            "https://en.wikipedia.org/wiki/Rue_Rambuteau",
            "https://en.wikipedia.org/wiki/Rue_Mond%C3%A9tour",
            "https://en.wikipedia.org/wiki/Rue_Pastourelle",
            "https://en.wikipedia.org/wiki/Rue_des_Rosiers",
            "https://en.wikipedia.org/wiki/Rue_Saint-Honor%C3%A9",
            "https://en.wikipedia.org/wiki/Rue_Saint-Denis_(Paris)",
            "https://en.wikipedia.org/wiki/Rue_Sainte-Anne",
            "https://en.wikipedia.org/wiki/Saint-Germain-des-Pr%C3%A9s",
            "https://en.wikipedia.org/wiki/Trocad%C3%A9ro,_Paris",
            "https://en.wikipedia.org/wiki/Viaduc_d%27Austerlitz",
            "https://en.wikipedia.org/wiki/History_of_parks_and_gardens_of_Paris",
            "https://en.wikipedia.org/wiki/Jardin_d%27Acclimatation",
            "https://en.wikipedia.org/wiki/Parc_floral_de_Paris",
            "https://en.wikipedia.org/wiki/Jardin_du_Luxembourg",
            "https://en.wikipedia.org/wiki/Parc_Andr%C3%A9-Citro%C3%ABn",
            "https://en.wikipedia.org/wiki/Parc_Clichy-Batignolles_%E2%80%93_Martin_Luther_King",
            "https://en.wikipedia.org/wiki/Parc_de_Belleville",
            "https://en.wikipedia.org/wiki/Parc_de_la_Butte-du-Chapeau-Rouge",
            "https://en.wikipedia.org/wiki/Parc_des_Buttes_Chaumont",
            "https://en.wikipedia.org/wiki/Parc_Georges-Brassens",
            "https://en.wikipedia.org/wiki/Parc_Monceau",
            "https://en.wikipedia.org/wiki/Coul%C3%A9e_verte_Ren%C3%A9-Dumont",
            "https://en.wikipedia.org/wiki/Accor_Arena",
            "https://en.wikipedia.org/wiki/Auteuil_Hippodrome",
            "https://en.wikipedia.org/wiki/Halle_Georges_Carpentier",
            "https://en.wikipedia.org/wiki/Longchamp_Racecourse",
            "https://en.wikipedia.org/wiki/Piscine_Molitor",
            "https://en.wikipedia.org/wiki/Porte_de_La_Chapelle_Arena",
            "https://en.wikipedia.org/wiki/Stade_Jean-Bouin_(Paris)",
            "https://en.wikipedia.org/wiki/Stade_Pershing",
            "https://en.wikipedia.org/wiki/Stade_S%C3%A9bastien_Charl%C3%A9ty",
            "https://en.wikipedia.org/wiki/V%C3%A9lodrome_de_Vincennes",
            "https://en.wikipedia.org/wiki/Hippodrome_de_Vincennes",
            "https://en.wikipedia.org/wiki/Oscar_Wilde%27s_tomb",
            "https://en.wikipedia.org/wiki/Picpus_Cemetery",
            "https://en.wikipedia.org/wiki/Ch%C3%A2teau_d%27%C3%89couen",
            "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Chantilly",
            "https://en.wikipedia.org/wiki/Palace_of_Fontainebleau",
            "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Malmaison",
            "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Rambouillet",
            "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Saint-Germain-en-Laye",
            "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Sceaux",
            "https://en.wikipedia.org/wiki/Gardens_of_Versailles",
            "https://en.wikipedia.org/wiki/Grand_Trianon",
            "https://en.wikipedia.org/wiki/Petit_Trianon",
            "https://en.wikipedia.org/wiki/Fresh_pavilion",
            "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Vincennes",
            "https://en.wikipedia.org/wiki/Grande_Arche",
            "https://en.wikipedia.org/wiki/Paris_La_D%C3%A9fense_Arena",
            "https://en.wikipedia.org/wiki/Disneyland_Paris",
            "https://en.wikipedia.org/wiki/Disneyland_Park_(Paris)",
            "https://en.wikipedia.org/wiki/Walt_Disney_Studios_Park",
            "https://en.wikipedia.org/wiki/Explorad%C3%B4me",
            "https://en.wikipedia.org/wiki/Fort_Mont-Val%C3%A9rien",
            "https://en.wikipedia.org/wiki/M%C3%A9morial_de_la_France_combattante",
            "https://en.wikipedia.org/wiki/Suresnes_American_Cemetery_and_Memorial",
            "https://en.wikipedia.org/wiki/France_Miniature",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_de_l%27air_et_de_l%27espace",
            "https://en.wikipedia.org/wiki/Mus%C3%A9e_Fragonard_d%27Alfort",
            "https://en.wikipedia.org/wiki/Parc_Ast%C3%A9rix",
            "https://en.wikipedia.org/wiki/Parc_de_Saint-Cloud",
            "https://en.wikipedia.org/wiki/Provins",
            "https://en.wikipedia.org/wiki/La_Roche-Guyon",
            "https://en.wikipedia.org/wiki/S%C3%A8vres_%E2%80%93_Cit%C3%A9_de_la_c%C3%A9ramique",
            "https://en.wikipedia.org/wiki/Vaux-le-Vicomte",
            "https://en.wikipedia.org/wiki/Bastille_Day_military_parade",
            "https://en.wikipedia.org/wiki/D%C3%AEner_en_Blanc",
            "https://en.wikipedia.org/wiki/Paris_Air_Show",
            "https://en.wikipedia.org/wiki/Republican_Guard_(France)",
            "https://en.wikipedia.org/wiki/Solidays",
            "https://en.wikipedia.org/wiki/Axe_historique",
            "https://en.wikipedia.org/wiki/Bateau-Lavoir",
            "https://en.wikipedia.org/wiki/Bateaux_Mouches",
            "https://en.wikipedia.org/wiki/Caf%C3%A9_des_2_Moulins",
            "https://en.wikipedia.org/wiki/Fountains_in_Paris",
            "https://en.wikipedia.org/wiki/La_Ruche_(residence)",
            "https://en.wikipedia.org/wiki/Maxim%27s",
            "https://en.wikipedia.org/wiki/Moulin_de_la_Galette",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_entrances_by_Hector_Guimard",
            "https://en.wikipedia.org/wiki/Montmartre_Funicular",
            "https://en.wikipedia.org/wiki/Paris_Mus%C3%A9es",
            "https://en.wikipedia.org/wiki/Paris_Zoological_Park",
            "https://en.wikipedia.org/wiki/Louvre_Inverted_Pyramid",
            "https://en.wikipedia.org/wiki/World_Heritage_Centre",
            "/wiki/Template:Paris_transport_network",
            "/wiki/Template_talk:Paris_transport_network",
            "/wiki/Special:EditPage/Template:Paris_transport_network",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_1",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_2",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_3",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_3bis",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_4",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_5",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_6",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_7",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_7bis",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_8",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_9",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_10",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_11",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_12",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_13",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_14",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_15",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_16",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_17",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_18",
            "https://en.wikipedia.org/wiki/Paris_M%C3%A9tro_Line_19",
            "https://en.wikipedia.org/wiki/RER_B",
            "https://en.wikipedia.org/wiki/RER_C",
            "https://en.wikipedia.org/wiki/RER_D",
            "https://en.wikipedia.org/wiki/RER_E",
            "https://en.wikipedia.org/wiki/Transilien_Paris-Nord#Line_H",
            "https://en.wikipedia.org/wiki/Transilien_Paris-Saint-Lazare#Line_J",
            "https://en.wikipedia.org/wiki/Transilien_Paris-Nord#Line_K",
            "https://en.wikipedia.org/wiki/Transilien_Paris-Saint-Lazare#Line_L",
            "https://en.wikipedia.org/wiki/Transilien_Line_N",
            "https://en.wikipedia.org/wiki/Transilien_Line_P",
            "https://en.wikipedia.org/wiki/Transilien_Line_R",
            "https://en.wikipedia.org/wiki/Transilien_Line_U",
            "https://en.wikipedia.org/wiki/Transilien_Line_V",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_1",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_2",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_3a",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_3b",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_4",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_5",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_6",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_7",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_8",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_9",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_10",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_11",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_12",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_13",
            "https://en.wikipedia.org/wiki/%C3%8Ele-de-France_tramway_Line_14",
            "https://en.wikipedia.org/wiki/RATP_bus_network",
            "https://en.wikipedia.org/wiki/Trans-Val-de-Marne",
            "https://en.wikipedia.org/wiki/Noctilien",
            "https://en.wikipedia.org/wiki/CDGVAL",
            "https://en.wikipedia.org/wiki/Orlyval",
            "https://en.wikipedia.org/wiki/CDG_Express",
            "https://en.wikipedia.org/wiki/Merger_of_Paris_M%C3%A9tro_lines_3bis_and_7bis",
            "https://en.wikipedia.org/wiki/Keolis",
            "https://en.wikipedia.org/wiki/Transdev",
            "https://en.wikipedia.org/wiki/Navigo_card",
            "https://en.wikipedia.org/wiki/Public_transport_fares_in_the_%C3%8Ele-de-France",
            "https://en.wikipedia.org/wiki/Versement_transport",
            "https://en.wikipedia.org/wiki/List_of_Paris_M%C3%A9tro_stations",
            "https://en.wikipedia.org/wiki/Architecture_of_the_Paris_M%C3%A9tro",
            "https://en.wikipedia.org/wiki/Ghost_stations_of_the_Paris_M%C3%A9tro",
            "https://en.wikipedia.org/wiki/List_of_R%C3%A9seau_Express_R%C3%A9gional_stations",
            "https://en.wikipedia.org/wiki/List_of_Transilien_stations",
            "https://en.wikipedia.org/wiki/List_of_tram_stops_in_%C3%8Ele-de-France",
            "/wiki/Template:Paris_Metropolitan_Area",
            "/wiki/Template_talk:Paris_Metropolitan_Area",
            "/wiki/Special:EditPage/Template:Paris_Metropolitan_Area",
            "/wiki/File:Paris-metropolitan-area-symbol.png",
            "https://en.wikipedia.org/wiki/Asni%C3%A8res-sur-Seine",
            "https://en.wikipedia.org/wiki/Aubervilliers",
            "https://en.wikipedia.org/wiki/Champigny-sur-Marne",
            "https://en.wikipedia.org/wiki/Colombes",
            "https://en.wikipedia.org/wiki/Cr%C3%A9teil",
            "https://en.wikipedia.org/wiki/Rueil-Malmaison",
            "https://en.wikipedia.org/wiki/Versailles,_Yvelines",
            "https://en.wikipedia.org/wiki/Vitry-sur-Seine",
            "https://en.wikipedia.org/wiki/Antony,_Hauts-de-Seine",
            "https://en.wikipedia.org/wiki/Le_Blanc-Mesnil",
            "https://en.wikipedia.org/wiki/Bondy",
            "https://en.wikipedia.org/wiki/Cergy",
            "https://en.wikipedia.org/wiki/Chelles,_Seine-et-Marne",
            "https://en.wikipedia.org/wiki/Clamart",
            "https://en.wikipedia.org/wiki/Clichy,_Hauts-de-Seine",
            "https://en.wikipedia.org/wiki/Drancy",
            "https://en.wikipedia.org/wiki/%C3%89pinay-sur-Seine",
            "https://en.wikipedia.org/wiki/%C3%89vry-Courcouronnes",
            "https://en.wikipedia.org/wiki/Fontenay-sous-Bois",
            "https://en.wikipedia.org/wiki/Maisons-Alfort",
            "https://en.wikipedia.org/wiki/Massy,_Essonne",
            "https://en.wikipedia.org/wiki/Meaux",
            "https://en.wikipedia.org/wiki/Noisy-le-Grand",
            "https://en.wikipedia.org/wiki/Sarcelles",
            "https://en.wikipedia.org/wiki/Sartrouville",
            "https://en.wikipedia.org/wiki/Sevran",
            "https://en.wikipedia.org/wiki/Villejuif",
            "https://en.wikipedia.org/wiki/Alfortville",
            "https://en.wikipedia.org/wiki/Athis-Mons",
            "https://en.wikipedia.org/wiki/Bagnolet",
            "https://en.wikipedia.org/wiki/Bezons",
            "https://en.wikipedia.org/wiki/Bois-Colombes",
            "https://en.wikipedia.org/wiki/Br%C3%A9tigny-sur-Orge",
            "https://en.wikipedia.org/wiki/Brunoy",
            "https://en.wikipedia.org/wiki/Bussy-Saint-Georges",
            "https://en.wikipedia.org/wiki/Cachan",
            "https://en.wikipedia.org/wiki/Champs-sur-Marne",
            "https://en.wikipedia.org/wiki/Charenton-le-Pont",
            "https://en.wikipedia.org/wiki/Ch%C3%A2tenay-Malabry",
            "https://en.wikipedia.org/wiki/Ch%C3%A2tillon,_Hauts-de-Seine",
            "https://en.wikipedia.org/wiki/Chatou",
            "https://en.wikipedia.org/wiki/Le_Chesnay-Rocquencourt",
            "https://en.wikipedia.org/wiki/Choisy-le-Roi",
            "https://en.wikipedia.org/wiki/Clichy-sous-Bois",
            "https://en.wikipedia.org/wiki/Conflans-Sainte-Honorine",
            "https://en.wikipedia.org/wiki/Cormeilles-en-Parisis",
            "https://en.wikipedia.org/wiki/La_Courneuve",
            "https://en.wikipedia.org/wiki/Creil",
            "https://en.wikipedia.org/wiki/Draveil",
            "https://en.wikipedia.org/wiki/Dreux",
            "https://en.wikipedia.org/wiki/Eaubonne",
            "https://en.wikipedia.org/wiki/%C3%89lancourt",
            "https://en.wikipedia.org/wiki/Ermont",
            "https://en.wikipedia.org/wiki/%C3%89tampes",
            "https://en.wikipedia.org/wiki/Fontenay-aux-Roses",
            "https://en.wikipedia.org/wiki/Franconville,_Val-d%27Oise",
            "https://en.wikipedia.org/wiki/Fresnes,_Val-de-Marne",
            "https://en.wikipedia.org/wiki/Gagny",
            "https://en.wikipedia.org/wiki/La_Garenne-Colombes",
            "https://en.wikipedia.org/wiki/Garges-l%C3%A8s-Gonesse",
            "https://en.wikipedia.org/wiki/Gennevilliers",
            "https://en.wikipedia.org/wiki/Gonesse",
            "https://en.wikipedia.org/wiki/Goussainville,_Val-d%27Oise",
            "https://en.wikipedia.org/wiki/Grigny,_Essonne",
            "https://en.wikipedia.org/wiki/Guyancourt",
            "https://en.wikipedia.org/wiki/L%27Ha%C3%BF-les-Roses",
            "https://en.wikipedia.org/wiki/Herblay-sur-Seine",
            "https://en.wikipedia.org/wiki/Houilles",
            "https://en.wikipedia.org/wiki/Limeil-Br%C3%A9vannes",
            "https://en.wikipedia.org/wiki/Livry-Gargan",
            "https://en.wikipedia.org/wiki/Malakoff,_Hauts-de-Seine",
            "https://en.wikipedia.org/wiki/Melun",
            "https://en.wikipedia.org/wiki/Meudon",
            "https://en.wikipedia.org/wiki/Montfermeil",
            "https://en.wikipedia.org/wiki/Montigny-le-Bretonneux",
            "https://en.wikipedia.org/wiki/Neuilly-sur-Marne",
            "https://en.wikipedia.org/wiki/Nogent-sur-Marne",
            "https://en.wikipedia.org/wiki/Noisy-le-Sec",
            "https://en.wikipedia.org/wiki/Palaiseau",
            "https://en.wikipedia.org/wiki/Le_Perreux-sur-Marne",
            "https://en.wikipedia.org/wiki/Plaisir,_Yvelines",
            "https://en.wikipedia.org/wiki/Le_Plessis-Robinson",
            "https://en.wikipedia.org/wiki/Poissy",
            "https://en.wikipedia.org/wiki/Pontault-Combault",
            "https://en.wikipedia.org/wiki/Pontoise",
            "https://en.wikipedia.org/wiki/Puteaux",
            "https://en.wikipedia.org/wiki/Rambouillet",
            "https://en.wikipedia.org/wiki/Ris-Orangis",
            "https://en.wikipedia.org/wiki/Romainville",
            "https://en.wikipedia.org/wiki/Rosny-sous-Bois",
            "https://en.wikipedia.org/wiki/Saint-Cloud",
            "https://en.wikipedia.org/wiki/Saint-Germain-en-Laye",
            "https://en.wikipedia.org/wiki/Sainte-Genevi%C3%A8ve-des-Bois,_Essonne",
            "https://en.wikipedia.org/wiki/Sannois",
            "https://en.wikipedia.org/wiki/Savigny-sur-Orge",
            "https://en.wikipedia.org/wiki/Savigny-le-Temple",
            "https://en.wikipedia.org/wiki/Stains,_Seine-Saint-Denis",
            "https://en.wikipedia.org/wiki/Sucy-en-Brie",
            "https://en.wikipedia.org/wiki/Suresnes",
            "https://en.wikipedia.org/wiki/Taverny",
            "https://en.wikipedia.org/wiki/Thiais",
            "https://en.wikipedia.org/wiki/Trappes",
            "https://en.wikipedia.org/wiki/Tremblay-en-France",
            "https://en.wikipedia.org/wiki/Les_Ulis",
            "https://en.wikipedia.org/wiki/Vanves",
            "https://en.wikipedia.org/wiki/Vigneux-sur-Seine",
            "https://en.wikipedia.org/wiki/Villemomble",
            "https://en.wikipedia.org/wiki/Villeneuve-Saint-Georges",
            "https://en.wikipedia.org/wiki/Villeparisis",
            "https://en.wikipedia.org/wiki/Villepinte,_Seine-Saint-Denis",
            "https://en.wikipedia.org/wiki/Villiers-le-Bel",
            "https://en.wikipedia.org/wiki/Villiers-sur-Marne",
            "https://en.wikipedia.org/wiki/Vincennes",
            "https://en.wikipedia.org/wiki/Viry-Ch%C3%A2tillon",
            "https://en.wikipedia.org/wiki/Yerres",
            "/wiki/Template:Administrative_division_of_%C3%8Ele-de-France",
            "/wiki/Template_talk:Administrative_division_of_%C3%8Ele-de-France",
            "/wiki/Special:EditPage/Template:Administrative_division_of_%C3%8Ele-de-France",
            "https://en.wikipedia.org/wiki/Arrondissements_of_the_Essonne_department",
            "https://en.wikipedia.org/wiki/Cantons_of_the_Essonne_department",
            "https://en.wikipedia.org/wiki/Communes_of_the_Essonne_department",
            "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Essonne_department&action=edit&redlink=1",
            "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Essonne_department&action=edit&redlink=1",
            "https://en.wikipedia.org/wiki/Arrondissements_of_the_Hauts-de-Seine_department",
            "https://en.wikipedia.org/wiki/Cantons_of_the_Hauts-de-Seine_department",
            "https://en.wikipedia.org/wiki/Communes_of_the_Hauts-de-Seine_department",
            "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Hauts-de-Seine_department&action=edit&redlink=1",
            "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Hauts-de-Seine_department&action=edit&redlink=1",
            "https://en.wikipedia.org/wiki/Arrondissement_of_Paris",
            "https://en.wikipedia.org/wiki/Quarters_of_Paris",
            "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_Paris&action=edit&redlink=1",
            "https://en.wikipedia.org/wiki/Seine-et-Marne",
            "https://en.wikipedia.org/wiki/Arrondissements_of_the_Seine-et-Marne_department",
            "https://en.wikipedia.org/wiki/Cantons_of_the_Seine-et-Marne_department",
            "https://en.wikipedia.org/wiki/Communes_of_the_Seine-et-Marne_department",
            "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Seine-et-Marne_department&action=edit&redlink=1",
            "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Seine-et-Marne_department&action=edit&redlink=1",
            "https://en.wikipedia.org/wiki/Arrondissements_of_the_Seine-Saint-Denis_department",
            "https://en.wikipedia.org/wiki/Cantons_of_the_Seine-Saint-Denis_department",
            "https://en.wikipedia.org/wiki/Communes_of_the_Seine-Saint-Denis_department",
            "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Seine-Saint-Denis_department&action=edit&redlink=1",
            "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Seine-Saint-Denis_department&action=edit&redlink=1",
            "https://en.wikipedia.org/wiki/Arrondissements_of_the_Val-de-Marne_department",
            "https://en.wikipedia.org/wiki/Cantons_of_the_Val-de-Marne_department",
            "https://en.wikipedia.org/wiki/Communes_of_the_Val-de-Marne_department",
            "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Val-de-Marne_department&action=edit&redlink=1",
            "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Val-de-Marne_department&action=edit&redlink=1",
            "https://en.wikipedia.org/wiki/Arrondissements_of_the_Val-d%27Oise_department",
            "https://en.wikipedia.org/wiki/Cantons_of_the_Val-d%27Oise_department",
            "https://en.wikipedia.org/wiki/Communes_of_the_Val-d%27Oise_department",
            "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Val-d%27Oise_department&action=edit&redlink=1",
            "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Val-d%27Oise_department&action=edit&redlink=1",
            "https://en.wikipedia.org/wiki/Arrondissements_of_the_Yvelines_department",
            "https://en.wikipedia.org/wiki/Cantons_of_the_Yvelines_department",
            "https://en.wikipedia.org/wiki/Communes_of_the_Yvelines_department",
            "https://en.wikipedia.org/w/index.php?title=List_of_legislative_constituencies_of_the_Yvelines_department&action=edit&redlink=1",
            "https://en.wikipedia.org/w/index.php?title=List_of_intercommunalities_of_the_Yvelines_department&action=edit&redlink=1",
            "/wiki/Template:Prefectures_of_French_departments",
            "/wiki/Template_talk:Prefectures_of_French_departments",
            "/wiki/Special:EditPage/Template:Prefectures_of_French_departments",
            "https://en.wikipedia.org/wiki/Prefectures_in_France",
            "https://en.wikipedia.org/wiki/Bourg-en-Bresse",
            "https://en.wikipedia.org/wiki/Ain",
            "https://en.wikipedia.org/wiki/Laon",
            "https://en.wikipedia.org/wiki/Aisne",
            "https://en.wikipedia.org/wiki/Moulins,_Allier",
            "https://en.wikipedia.org/wiki/Allier",
            "https://en.wikipedia.org/wiki/Digne-les-Bains",
            "https://en.wikipedia.org/wiki/Alpes-de-Haute-Provence",
            "https://en.wikipedia.org/wiki/Gap,_Hautes-Alpes",
            "https://en.wikipedia.org/wiki/Hautes-Alpes",
            "https://en.wikipedia.org/wiki/Alpes-Maritimes",
            "https://en.wikipedia.org/wiki/Privas",
            "https://en.wikipedia.org/wiki/Ard%C3%A8che",
            "https://en.wikipedia.org/wiki/Charleville-M%C3%A9zi%C3%A8res",
            "https://en.wikipedia.org/wiki/Ardennes_(department)",
            "https://en.wikipedia.org/wiki/Foix",
            "https://en.wikipedia.org/wiki/Ari%C3%A8ge_(department)",
            "https://en.wikipedia.org/wiki/Troyes",
            "https://en.wikipedia.org/wiki/Aube",
            "https://en.wikipedia.org/wiki/Carcassonne",
            "https://en.wikipedia.org/wiki/Aude",
            "https://en.wikipedia.org/wiki/Rodez",
            "https://en.wikipedia.org/wiki/Aveyron",
            "https://en.wikipedia.org/wiki/Bouches-du-Rh%C3%B4ne",
            "https://en.wikipedia.org/wiki/Calvados_(department)",
            "https://en.wikipedia.org/wiki/Aurillac",
            "https://en.wikipedia.org/wiki/Cantal",
            "https://en.wikipedia.org/wiki/Angoul%C3%AAme",
            "https://en.wikipedia.org/wiki/Charente",
            "https://en.wikipedia.org/wiki/La_Rochelle",
            "https://en.wikipedia.org/wiki/Charente-Maritime",
            "https://en.wikipedia.org/wiki/Bourges",
            "https://en.wikipedia.org/wiki/Cher_(department)",
            "https://en.wikipedia.org/wiki/Tulle",
            "https://en.wikipedia.org/wiki/Corr%C3%A8ze",
            "https://en.wikipedia.org/wiki/Ajaccio",
            "https://en.wikipedia.org/wiki/Corse-du-Sud",
            "https://en.wikipedia.org/wiki/Bastia",
            "https://en.wikipedia.org/wiki/Haute-Corse",
            "https://en.wikipedia.org/wiki/C%C3%B4te-d%27Or",
            "https://en.wikipedia.org/wiki/Saint-Brieuc",
            "https://en.wikipedia.org/wiki/C%C3%B4tes-d%27Armor",
            "https://en.wikipedia.org/wiki/Gu%C3%A9ret",
            "https://en.wikipedia.org/wiki/Creuse",
            "https://en.wikipedia.org/wiki/P%C3%A9rigueux",
            "https://en.wikipedia.org/wiki/Dordogne",
            "https://en.wikipedia.org/wiki/Doubs",
            "https://en.wikipedia.org/wiki/Valence_(city)",
            "https://en.wikipedia.org/wiki/Dr%C3%B4me",
            "https://en.wikipedia.org/wiki/%C3%89vreux",
            "https://en.wikipedia.org/wiki/Eure",
            "https://en.wikipedia.org/wiki/Chartres",
            "https://en.wikipedia.org/wiki/Eure-et-Loir",
            "https://en.wikipedia.org/wiki/Quimper",
            "https://en.wikipedia.org/wiki/Finist%C3%A8re",
            "https://en.wikipedia.org/wiki/Gard",
            "https://en.wikipedia.org/wiki/Haute-Garonne",
            "https://en.wikipedia.org/wiki/Auch",
            "https://en.wikipedia.org/wiki/Gers",
            "https://en.wikipedia.org/wiki/Gironde",
            "https://en.wikipedia.org/wiki/H%C3%A9rault",
            "https://en.wikipedia.org/wiki/Ille-et-Vilaine",
            "https://en.wikipedia.org/wiki/Ch%C3%A2teauroux",
            "https://en.wikipedia.org/wiki/Indre",
            "https://en.wikipedia.org/wiki/Indre-et-Loire",
            "https://en.wikipedia.org/wiki/Is%C3%A8re",
            "https://en.wikipedia.org/wiki/Lons-le-Saunier",
            "https://en.wikipedia.org/wiki/Jura_(department)",
            "https://en.wikipedia.org/wiki/Mont-de-Marsan",
            "https://en.wikipedia.org/wiki/Landes_(department)",
            "https://en.wikipedia.org/wiki/Blois",
            "https://en.wikipedia.org/wiki/Loir-et-Cher",
            "https://en.wikipedia.org/wiki/Loire_(department)",
            "https://en.wikipedia.org/wiki/Le_Puy-en-Velay",
            "https://en.wikipedia.org/wiki/Haute-Loire",
            "https://en.wikipedia.org/wiki/Loire-Atlantique",
            "https://en.wikipedia.org/wiki/Loiret",
            "https://en.wikipedia.org/wiki/Cahors",
            "https://en.wikipedia.org/wiki/Lot_(department)",
            "https://en.wikipedia.org/wiki/Agen",
            "https://en.wikipedia.org/wiki/Lot-et-Garonne",
            "https://en.wikipedia.org/wiki/Mende,_Loz%C3%A8re",
            "https://en.wikipedia.org/wiki/Loz%C3%A8re",
            "https://en.wikipedia.org/wiki/Maine-et-Loire",
            "https://en.wikipedia.org/wiki/Saint-L%C3%B4",
            "https://en.wikipedia.org/wiki/Manche",
            "https://en.wikipedia.org/wiki/Ch%C3%A2lons-en-Champagne",
            "https://en.wikipedia.org/wiki/Marne_(department)",
            "https://en.wikipedia.org/wiki/Chaumont,_Haute-Marne",
            "https://en.wikipedia.org/wiki/Haute-Marne",
            "https://en.wikipedia.org/wiki/Laval,_Mayenne",
            "https://en.wikipedia.org/wiki/Mayenne",
            "https://en.wikipedia.org/wiki/Meurthe-et-Moselle",
            "https://en.wikipedia.org/wiki/Bar-le-Duc",
            "https://en.wikipedia.org/wiki/Meuse_(department)",
            "https://en.wikipedia.org/wiki/Vannes",
            "https://en.wikipedia.org/wiki/Morbihan",
            "https://en.wikipedia.org/wiki/Moselle_(department)",
            "https://en.wikipedia.org/wiki/Nevers",
            "https://en.wikipedia.org/wiki/Ni%C3%A8vre",
            "https://en.wikipedia.org/wiki/Nord_(French_department)",
            "https://en.wikipedia.org/wiki/Beauvais",
            "https://en.wikipedia.org/wiki/Oise",
            "https://en.wikipedia.org/wiki/Alen%C3%A7on",
            "https://en.wikipedia.org/wiki/Orne",
            "https://en.wikipedia.org/wiki/Arras",
            "https://en.wikipedia.org/wiki/Pas-de-Calais",
            "https://en.wikipedia.org/wiki/Puy-de-D%C3%B4me",
            "https://en.wikipedia.org/wiki/Pau,_Pyr%C3%A9n%C3%A9es-Atlantiques",
            "https://en.wikipedia.org/wiki/Pyr%C3%A9n%C3%A9es-Atlantiques",
            "https://en.wikipedia.org/wiki/Tarbes",
            "https://en.wikipedia.org/wiki/Hautes-Pyr%C3%A9n%C3%A9es",
            "https://en.wikipedia.org/wiki/Pyr%C3%A9n%C3%A9es-Orientales",
            "https://en.wikipedia.org/wiki/Bas-Rhin",
            "https://en.wikipedia.org/wiki/Colmar",
            "https://en.wikipedia.org/wiki/Haut-Rhin",
            "https://en.wikipedia.org/wiki/Rh%C3%B4ne_(department)",
            "https://en.wikipedia.org/wiki/Vesoul",
            "https://en.wikipedia.org/wiki/Haute-Sa%C3%B4ne",
            "https://en.wikipedia.org/wiki/M%C3%A2con",
            "https://en.wikipedia.org/wiki/Sa%C3%B4ne-et-Loire",
            "https://en.wikipedia.org/wiki/Sarthe",
            "https://en.wikipedia.org/wiki/Chamb%C3%A9ry",
            "https://en.wikipedia.org/wiki/Savoie",
            "https://en.wikipedia.org/wiki/Haute-Savoie",
            "https://en.wikipedia.org/wiki/Seine-Maritime",
            "https://en.wikipedia.org/wiki/Niort",
            "https://en.wikipedia.org/wiki/Deux-S%C3%A8vres",
            "https://en.wikipedia.org/wiki/Somme_(department)",
            "https://en.wikipedia.org/wiki/Albi",
            "https://en.wikipedia.org/wiki/Tarn_(department)",
            "https://en.wikipedia.org/wiki/Montauban",
            "https://en.wikipedia.org/wiki/Tarn-et-Garonne",
            "https://en.wikipedia.org/wiki/Var_(department)",
            "https://en.wikipedia.org/wiki/Avignon",
            "https://en.wikipedia.org/wiki/Vaucluse",
            "https://en.wikipedia.org/wiki/La_Roche-sur-Yon",
            "https://en.wikipedia.org/wiki/Vend%C3%A9e",
            "https://en.wikipedia.org/wiki/Poitiers",
            "https://en.wikipedia.org/wiki/Vienne_(department)",
            "https://en.wikipedia.org/wiki/Haute-Vienne",
            "https://en.wikipedia.org/wiki/%C3%89pinal",
            "https://en.wikipedia.org/wiki/Vosges_(department)",
            "https://en.wikipedia.org/wiki/Auxerre",
            "https://en.wikipedia.org/wiki/Yonne",
            "https://en.wikipedia.org/wiki/Belfort",
            "https://en.wikipedia.org/wiki/Territoire_de_Belfort",
            "https://en.wikipedia.org/wiki/Overseas_department",
            "https://en.wikipedia.org/wiki/Basse-Terre",
            "https://en.wikipedia.org/wiki/Fort-de-France",
            "https://en.wikipedia.org/wiki/Cayenne",
            "https://en.wikipedia.org/wiki/French_Guiana",
            "https://en.wikipedia.org/wiki/Mamoudzou",
            "https://en.wikipedia.org/wiki/Mayotte",
            "/wiki/Template:Prefectures_of_regions_of_France",
            "/wiki/Template_talk:Prefectures_of_regions_of_France",
            "/wiki/Special:EditPage/Template:Prefectures_of_regions_of_France",
            "https://en.wikipedia.org/wiki/Auvergne-Rh%C3%B4ne-Alpes",
            "https://en.wikipedia.org/wiki/Bourgogne-Franche-Comt%C3%A9",
            "https://en.wikipedia.org/wiki/Brittany_(administrative_region)",
            "https://en.wikipedia.org/wiki/Centre-Val_de_Loire",
            "https://en.wikipedia.org/wiki/Corsica",
            "https://en.wikipedia.org/wiki/Grand_Est",
            "https://en.wikipedia.org/wiki/Hauts-de-France",
            "https://en.wikipedia.org/wiki/Normandy_(administrative_region)",
            "https://en.wikipedia.org/wiki/Nouvelle-Aquitaine",
            "https://en.wikipedia.org/wiki/Occitania_(administrative_region)",
            "https://en.wikipedia.org/wiki/Pays_de_la_Loire",
            "https://en.wikipedia.org/wiki/Provence-Alpes-C%C3%B4te_d%27Azur",
            "https://en.wikipedia.org/wiki/Overseas_departments_and_regions_of_France",
            "/wiki/Template:Departments_of_France",
            "/wiki/Template_talk:Departments_of_France",
            "/wiki/Special:EditPage/Template:Departments_of_France",
            "https://en.wikipedia.org/wiki/Metropolis_of_Lyon",
            "https://en.wikipedia.org/wiki/Saint_Pierre_and_Miquelon",
            "/wiki/Wikipedia:Wikimedia_sister_projects",
            "https://en.wikisource.org/wiki/Paris",
            "https://en.wikibooks.org/wiki/Special:Search/Paris",
            "https://en.wikiversity.org/wiki/Special:Search/Paris",
            "https://www.wikidata.org/wiki/Special:Search/Paris",
            "/wiki/Help:Authority_control",
            "https://www.wikidata.org/wiki/Q90#identifiers",
            "https://isni.org/isni/000000012114268X",
            "https://viaf.org/viaf/158822968",
            "https://id.worldcat.org/fast/1205283",
            "https://id.oclc.org/worldcat/entity/E39PBJrmbyBWhYrMkc793vqWjC",
            "https://d-nb.info/gnd/4044660-8",
            "https://id.loc.gov/authorities/n79058874",
            "https://catalogue.bnf.fr/ark:/12148/cb11865278m",
            "https://data.bnf.fr/ark:/12148/cb11865278m",
            "https://id.ndl.go.jp/auth/ndlna/00629026",
            "https://opac.sbn.it/nome/LO1V149084",
            "https://nla.gov.au/anbd.aut-an35995688",
            "https://aleph.nkp.cz/F/?func=find-c&local_base=aut&ccl_term=ica=ge130380&CON_LNG=ENG",
            "https://datos.bne.es/resource/XX451222",
            "https://authority.bibsys.no/authority/rest/authorities/html/1009791",
            "http://aleweb.ncl.edu.tw/F/?func=accref&acc_sequence=021097610&CON_LNG=ENG",
            "https://kopkatalogs.lv/F?func=direct&local_base=lnc10&doc_number=000042629&P_CON_LNG=ENG",
            "http://www.bncatalogo.cl/F?func=direct&local_base=red10&doc_number=000031011",
            "https://catalogo.bn.gov.ar/F/?func=direct&local_base=BNA10&doc_number=000047813",
            "https://www.nli.org.il/en/authorities/987007561794505171",
            "https://cantic.bnc.cat/registre/981058613861806706",
            "https://musicbrainz.org/area/dc10c22b-e510-4006-8b7f-fecb4f36436e",
            "https://ci.nii.ac.jp/author/DA10980120?l=en",
            "http://kulturnav.org/5fd4d231-00c4-4f69-abf6-cd63ffe60e2a",
            "https://www.ngv.vic.gov.au/explore/collection/artist/13498/",
            "https://www.idref.fr/026397765",
            "https://hls-dhs-dss.ch/fr/articles/006604",
            "https://catalog.archives.gov/id/10045153",
            "https://catalog.archives.gov/id/10044289",
            "https://snaccooperative.org/ark:/99166/w6n62wkx",
            "/wiki/Help:Category",
            "/wiki/Category:Paris",
            "/wiki/Category:Capitals_in_Europe",
            "/wiki/Category:Catholic_pilgrimage_sites",
            "/wiki/Category:Cities_in_France",
            "/wiki/Category:Cities_in_%C3%8Ele-de-France",
            "/wiki/Category:Companions_of_the_Liberation",
            "/wiki/Category:Departments_of_%C3%8Ele-de-France",
            "/wiki/Category:Culture_of_Europe",
            "/wiki/Category:Culture_of_France",
            "/wiki/Category:Gallia_Lugdunensis",
            "/wiki/Category:Populated_places_established_in_the_3rd_century_BC",
            "/wiki/Category:Prefectures_in_France",
            "/wiki/Category:Pages_using_gadget_WikiMiniAtlas",
            "/wiki/Category:Pages_using_the_Phonos_extension",
            "/wiki/Category:CS1_French-language_sources_(fr)",
            "/wiki/Category:Webarchive_template_wayback_links",
            "/wiki/Category:Articles_with_French-language_sources_(fr)",
            "/wiki/Category:CS1_Italian-language_sources_(it)",
            "/wiki/Category:Articles_with_short_description",
            "/wiki/Category:Short_description_is_different_from_Wikidata",
            "/wiki/Category:Good_articles",
            "/wiki/Category:Wikipedia_indefinitely_semi-protected_pages",
            "/wiki/Category:EngvarB_from_July_2018",
            "/wiki/Category:Use_dmy_dates_from_August_2024",
            "/wiki/Category:Pages_using_infobox_settlement_with_bad_settlement_type",
            "/wiki/Category:Articles_containing_French-language_text",
            "/wiki/Category:Pages_using_multiple_image_with_auto_scaled_images",
            "/wiki/Category:Articles_containing_Latin-language_text",
            "/wiki/Category:Pages_using_infobox_settlement_with_possible_motto_list",
            "/wiki/Category:Coordinates_on_Wikidata",
            "/wiki/Category:Pages_using_infobox_settlement_with_possible_demonym_list",
            "/wiki/Category:Pages_using_infobox_settlement_with_image_map1_but_not_image_map",
            "/wiki/Category:Pages_with_French_IPA",
            "/wiki/Category:Pages_including_recorded_pronunciations",
            "/wiki/Category:All_articles_with_failed_verification",
            "/wiki/Category:Articles_with_failed_verification_from_November_2024",
            "/wiki/Category:All_pages_needing_factual_verification",
            "/wiki/Category:Wikipedia_articles_needing_factual_verification_from_June_2019",
            "/wiki/Category:All_articles_with_incomplete_citations",
            "/wiki/Category:Articles_with_incomplete_citations_from_November_2023",
            "/wiki/Category:Articles_with_Italian-language_sources_(it)",
            "/wiki/Category:CS1_errors:_ISBN_date",
            "/wiki/Category:Wikipedia_articles_incorporating_a_citation_from_the_1911_Encyclopaedia_Britannica_with_Wikisource_reference",
            "/wiki/Category:Pages_using_Sister_project_links_with_wikidata_namespace_mismatch",
            "/wiki/Category:Pages_using_Sister_project_links_with_hidden_wikidata",
            "/wiki/Category:Pages_using_the_Kartographer_extension",
            "/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_4.0_International_License",
            "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Terms_of_Use",
            "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy",
            "https://wikimediafoundation.org/",
            "/wiki/Wikipedia:General_disclaimer",
            "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Universal_Code_of_Conduct",
            "https://developer.wikimedia.org",
            "https://stats.wikimedia.org/#/en.wikipedia.org",
            "https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Cookie_statement",
            "https://en.m.wikipedia.org/w/index.php?title=Paris&mobileaction=toggle_view_mobile",
            "https://www.wikimedia.org/",
            "https://www.mediawiki.org/",
            "/w/index.php?title=Special:CreateAccount&returnto=List+of+capitals+of+France",
            "/w/index.php?title=Special:UserLogin&returnto=List+of+capitals+of+France",
            "https://en.wikipedia.org/#Chronology",
            "https://ca.wikipedia.org/wiki/Capitals_de_Fran%C3%A7a",
            "https://el.wikipedia.org/wiki/%CE%A0%CF%81%CF%89%CF%84%CE%B5%CF%8D%CE%BF%CF%85%CF%83%CE%B1_%CF%84%CE%B7%CF%82_%CE%93%CE%B1%CE%BB%CE%BB%CE%AF%CE%B1%CF%82",
            "https://es.wikipedia.org/wiki/Capital_de_Francia",
            "https://fr.wikipedia.org/wiki/Capitale_de_la_France",
            "https://pl.wikipedia.org/wiki/Stolica_Francji",
            "https://simple.wikipedia.org/wiki/Capital_of_France",
            "https://www.wikidata.org/wiki/Special:EntityPage/Q2743079#sitelinks-wikipedia",
            "https://en.wikipedia.org/wiki/List_of_capitals_of_France",
            "/wiki/Talk:List_of_capitals_of_France",
            "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&action=edit",
            "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&action=history",
            "/wiki/Special:WhatLinksHere/List_of_capitals_of_France",
            "/wiki/Special:RecentChangesLinked/List_of_capitals_of_France",
            "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&oldid=1187979917",
            "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&action=info",
            "/w/index.php?title=Special:CiteThisPage&page=List_of_capitals_of_France&id=1187979917&wpFormIdentifier=titleform",
            "/w/index.php?title=Special:UrlShortener&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FList_of_capitals_of_France",
            "/w/index.php?title=Special:QrCode&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FList_of_capitals_of_France",
            "/w/index.php?title=Special:DownloadAsPdf&page=List_of_capitals_of_France&action=show-download-screen",
            "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&printable=yes",
            "https://www.wikidata.org/wiki/Special:EntityPage/Q2743079",
            "/wiki/File:Question_book-new.svg",
            "/wiki/Special:EditPage/List_of_capitals_of_France",
            "/wiki/Help:Referencing_for_beginners",
            "https://www.google.com/search?as_eq=wikipedia&q=%22List+of+capitals+of+France%22",
            "https://www.google.com/search?tbm=nws&q=%22List+of+capitals+of+France%22+-wikipedia&tbs=ar:1",
            "https://www.google.com/search?&q=%22List+of+capitals+of+France%22&tbs=bkt:s&tbm=bks",
            "https://www.google.com/search?tbs=bks:1&q=%22List+of+capitals+of+France%22+-wikipedia",
            "https://scholar.google.com/scholar?q=%22List+of+capitals+of+France%22",
            "https://www.jstor.org/action/doBasicSearch?Query=%22List+of+capitals+of+France%22&acc=on&wc=on",
            "/wiki/Help:Maintenance_template_removal",
            "https://en.wikipedia.org/wiki/Liberation_of_Paris",
            "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&action=edit&section=1",
            "https://en.wikipedia.org/wiki/Tournai",
            "https://en.wikipedia.org/wiki/Soissons",
            "https://en.wikipedia.org/wiki/Louis_VI_the_Fat",
            "https://en.wikipedia.org/wiki/Orl%C3%A9ans_Cathedral",
            "https://en.wikipedia.org/wiki/Daimbert",
            "https://en.wikipedia.org/wiki/Sens",
            "https://en.wikipedia.org/wiki/Estates_General_(France)",
            "https://en.wikipedia.org/wiki/Charles_VII_of_France",
            "https://en.wikipedia.org/wiki/Louis_XI_of_France",
            "https://en.wikipedia.org/wiki/Ch%C3%A2teau_de_Plessis-lez-Tours",
            "/wiki/Wikipedia:Citation_needed",
            "https://en.wikipedia.org/wiki/Louis_XIV",
            "https://en.wikipedia.org/wiki/National_Constituent_Assembly_(France)",
            "https://en.wikipedia.org/wiki/French_Third_Republic",
            "https://en.wikipedia.org/wiki/World_War_I",
            "https://en.wikipedia.org/wiki/World_War_II",
            "https://en.wikipedia.org/wiki/Vichy",
            "https://en.wikipedia.org/wiki/Vichy_France",
            "https://en.wikipedia.org/wiki/Axis_powers",
            "https://en.wikipedia.org/wiki/Free_France",
            "https://en.wikipedia.org/w/index.php?title=List_of_capitals_of_France&action=edit&section=2",
            "https://www.cheminsdememoire.gouv.fr/fr/revue/le-retour-la-republique",
            "/wiki/Category:France_history-related_lists",
            "/wiki/Category:Capitals_by_country",
            "/wiki/Category:France_geography-related_lists",
            "/wiki/Category:Articles_needing_additional_references_from_July_2012",
            "/wiki/Category:All_articles_needing_additional_references",
            "/wiki/Category:All_articles_with_unsourced_statements",
            "/wiki/Category:Articles_with_unsourced_statements_from_October_2022",
            "https://en.m.wikipedia.org/w/index.php?title=List_of_capitals_of_France&mobileaction=toggle_view_mobile",
            "https://premium.britannica.com/premium-membership/?utm_source=premium&utm_medium=global-nav&utm_campaign=evergreen-cap",
            "https://premium.britannica.com/premium-membership/?utm_source=premium&utm_medium=global-nav-mobile&utm_campaign=evergreen",
            "https://premium.britannica.com/premium-membership/?utm_source=premium&utm_medium=hamburger-menu&utm_campaign=evergreen",
            "https://www.britannica.com/History-Society",
            "https://www.britannica.com/Science-Tech",
            "https://www.britannica.com/Biographies",
            "https://www.britannica.com/Animals-Nature",
            "https://www.britannica.com/Geography-Travel",
            "https://www.britannica.com/Arts-Culture",
            "https://www.britannica.com/procon",
            "https://www.britannica.com/money",
            "https://www.britannica.com/quiz/browse",
            "https://www.britannica.com/videos",
            "https://www.britannica.com/on-this-day",
            "https://www.britannica.com/one-good-fact",
            "https://www.britannica.com/dictionary",
            "https://www.britannica.com/new-articles",
            "https://www.britannica.com/browse/Lifestyles-Social-Issues",
            "https://www.britannica.com/browse/Philosophy-Religion",
            "https://www.britannica.com/browse/Politics-Law-Government",
            "https://www.britannica.com/browse/World-History",
            "https://www.britannica.com/browse/Health-Medicine",
            "https://www.britannica.com/browse/Science",
            "https://www.britannica.com/browse/Technology",
            "https://www.britannica.com/browse/biographies",
            "https://www.britannica.com/browse/Birds-Reptiles-Vertebrates",
            "https://www.britannica.com/browse/Bugs-Mollusks-Invertebrates",
            "https://www.britannica.com/browse/Environment",
            "https://www.britannica.com/browse/Fossil-Geologic-Time",
            "https://www.britannica.com/browse/Mammals",
            "https://www.britannica.com/browse/Plants",
            "https://www.britannica.com/browse/Geography-Travel",
            "https://www.britannica.com/browse/Entertainment-Pop-Culture",
            "https://www.britannica.com/browse/Literature",
            "https://www.britannica.com/browse/Sports-Recreation",
            "https://www.britannica.com/browse/Visual-Arts",
            "https://www.britannica.com/stories/companion",
            "https://www.britannica.com/stories/demystified",
            "https://www.britannica.com/gallery/browse",
            "https://www.britannica.com/list/browse",
            "https://www.britannica.com/podcasts",
            "https://www.britannica.com/stories/spotlight",
            "https://www.britannica.com/summary",
            "https://www.britannica.com/question",
            "https://www.britannica.com/stories/wtfact",
            "https://kids.britannica.com/",
            "https://www.britannica.com/chatbot",
            "https://www.britannica.com/place/Paris#ref59646",
            "https://www.britannica.com/place/Paris#ref59647",
            "https://www.britannica.com/place/Paris#ref60484",
            "https://www.britannica.com/place/Paris/Climate",
            "https://www.britannica.com/place/Paris/Climate#ref277052",
            "https://www.britannica.com/place/Paris/Climate#ref60491",
            "https://www.britannica.com/place/Paris/Climate#ref60492",
            "https://www.britannica.com/place/Paris/Ile-Saint-Louis",
            "https://www.britannica.com/place/Paris/Ile-Saint-Louis#ref60488",
            "https://www.britannica.com/place/Paris/Ile-Saint-Louis#ref60500",
            "https://www.britannica.com/place/Paris/Ile-Saint-Louis#ref60486",
            "https://www.britannica.com/place/Paris/The-Invalides",
            "https://www.britannica.com/place/Paris/The-Invalides#ref60502",
            "https://www.britannica.com/place/Paris/The-Invalides#ref277053",
            "https://www.britannica.com/place/Paris/Saint-Germain-des-Pres-and-the-Latin-Quarter",
            "https://www.britannica.com/place/Paris/Saint-Germain-des-Pres-and-the-Latin-Quarter#ref60499",
            "https://www.britannica.com/place/Paris/The-Hotel-de-Ville",
            "https://www.britannica.com/place/Paris/The-Hotel-de-Ville#ref60495",
            "https://www.britannica.com/place/Paris/The-Hotel-de-Ville#ref60496",
            "https://www.britannica.com/place/Paris/The-Halles",
            "https://www.britannica.com/place/Paris/The-Halles#ref60504",
            "https://www.britannica.com/place/Paris/The-Halles#ref60501",
            "https://www.britannica.com/place/Paris/People",
            "https://www.britannica.com/place/Paris/People#ref14538",
            "https://www.britannica.com/place/Paris/People#ref14539",
            "https://www.britannica.com/place/Paris/People#ref14540",
            "https://www.britannica.com/place/Paris/Transportation",
            "https://www.britannica.com/place/Paris/Transportation#ref14542",
            "https://www.britannica.com/place/Paris/Transportation#ref14543",
            "https://www.britannica.com/place/Paris/Transportation#ref14544",
            "https://www.britannica.com/place/Paris/Transportation#ref14545",
            "https://www.britannica.com/place/Paris/Education",
            "https://www.britannica.com/place/Paris/Education#ref14547",
            "https://www.britannica.com/place/Paris/Education#ref14548",
            "https://www.britannica.com/place/Paris/Education#ref14549",
            "https://www.britannica.com/place/Paris/Medieval-development-and-discord-12th-century-to-16th-century",
            "https://www.britannica.com/place/Paris/Medieval-development-and-discord-12th-century-to-16th-century#ref14550",
            "https://www.britannica.com/place/Paris/Paris-during-and-after-the-French-Revolution-1789-to-mid-19th-century",
            "https://www.britannica.com/place/Paris/Paris-during-and-after-the-French-Revolution-1789-to-mid-19th-century#ref313267",
            "https://www.britannica.com/place/Paris/Paris-during-and-after-the-French-Revolution-1789-to-mid-19th-century#ref313268",
            "https://www.britannica.com/place/Paris/additional-info",
            "https://www.britannica.com/facts/Paris",
            "https://www.britannica.com/place/Paris/images-videos",
            "https://cdn.britannica.com/36/135436-050-ED1D0FCE/skyline-Eiffel-Tower-France-Paris.jpg",
            "https://cdn.britannica.com/63/64463-050-928FDB04/Paris-France.jpg",
            "https://cdn.britannica.com/50/59050-050-852EE969/Seine-River-Ile-Saint-Louis-France-Paris.jpg",
            "https://cdn.britannica.com/87/24187-050-9356F0A4/Map-Paris-Encyclopaedia-Britannica-edition-1900.jpg",
            "https://cdn.britannica.com/11/127811-050-14FCCC53/Paris-area.jpg",
            "https://www.britannica.com/video/Paris-Street-Rainy-Day-Gustave-Caillebotte-1877/290755",
            "https://cdn.britannica.com/80/122180-050-9794442D/Pont-Neuf-Seine-River-Paris.jpg",
            "https://cdn.britannica.com/67/159667-050-D335B9EC/Interior-Sainte-Chapelle-Paris-palace-chapel-Louis-IX.jpg",
            "https://cdn.britannica.com/35/155335-050-D0C61BB7/Notre-Dame-de-Paris-France.jpg",
            "https://cdn.britannica.com/49/82649-050-43C69550/Gargoyles-cathedral-E-E-Viollet-le-Duc-Notre-Dame-de-Paris.jpg",
            "https://www.britannica.com/summary/Paris",
            "https://www.britannica.com/quiz/european-capitals-quiz",
            "https://www.britannica.com/quiz/guess-the-city-by-its-river-quiz",
            "https://www.britannica.com/quiz/world-cities",
            "https://www.britannica.com/quiz/passport-to-europe",
            "https://www.britannica.com/quiz/capital-cities-of-the-world-quiz",
            "https://www.britannica.com/question/What-is-the-weather-like-in-Paris",
            "https://www.britannica.com/question/What-is-the-landscape-of-Paris",
            "https://www.britannica.com/story/how-9-famous-cities-got-their-nicknames",
            "https://www.britannica.com/list/10-places-in-and-around-paris",
            "https://www.britannica.com/story/what-if-the-president-is-impeached",
            "https://www.britannica.com/list/10-best-hockey-players-of-all-time",
            "https://www.britannica.com/story/was-martin-luther-king-jr-a-republican-or-a-democrat",
            "https://www.britannica.com/story/estimated-battle-casualties-during-the-normandy-invasion-on-june-6-1944",
            "https://www.britannica.com/list/10-legendary-creatures-from-around-the-world",
            "https://www.britannica.com/list/7-drugs-that-changed-the-world",
            "https://www.britannica.com/story/do-we-really-swallow-spiders-in-our-sleep",
            "https://www.britannica.com/browse/Cities-Towns",
            "https://www.britannica.com/browse/Cities-Towns-P-S",
            "https://www.facebook.com/BRITANNICA/",
            "https://x.com/britannica",
            "https://en.parisinfo.com",
            "https://library.brown.edu/cds/paris/",
            "https://kids.britannica.com/kids/article/Paris/345991",
            "https://kids.britannica.com/students/article/Paris/276286",
            "https://www.britannica.com/contributor/John-Anthony-Charles-Ardagh/3343",
            "https://www.britannica.com/contributor/Blake-Ehrlich/839",
            "https://www.britannica.com/place/Paris/additional-info#contributors",
            "https://www.britannica.com/editor/The-Editors-of-Encyclopaedia-Britannica/4419",
            "https://www.britannica.com/place/Paris/additional-info#history",
            "https://www.bbc.com/news/articles/c989v0pz13eo",
            "https://www.britannica.com/news/443621/fb2327785605efe1c59ff81db4b58fb7",
            "https://www.britannica.com/news/443621/cfaa9c8adc0658ae9a2759c56dc2bde2",
            "https://www.britannica.com/news/443621/cfbf2350b8ae3a23fec425dd7144b106",
            "https://www.britannica.com/news/443621/b03672b645df0d63765484391a3d2631",
            "https://www.britannica.com/topic/city",
            "https://www.britannica.com/place/France",
            "https://www.britannica.com/place/Seine-River",
            "https://www.britannica.com/place/English-Channel",
            "https://www.britannica.com/place/Paris-Basin",
            "https://www.merriam-webster.com/dictionary/constitutes",
            "https://www.britannica.com/place/Ile-de-France-region-France",
            "https://www.merriam-webster.com/dictionary/culture",
            "https://www.britannica.com/topic/metropolitan-area",
            "https://www.merriam-webster.com/dictionary/intellectual",
            "https://www.merriam-webster.com/dictionary/community",
            "https://www.merriam-webster.com/dictionary/sobriquet",
            "https://www.britannica.com/event/Enlightenment-European-history",
            "https://www.britannica.com/place/Europe",
            "https://www.britannica.com/biography/Clovis-I",
            "https://www.britannica.com/biography/Hugh-Capet",
            "https://www.britannica.com/topic/Capetian-dynasty",
            "https://www.britannica.com/dictionary/hub",
            "https://www.merriam-webster.com/dictionary/environment",
            "https://www.britannica.com/event/Revolutions-of-1848",
            "https://www.britannica.com/event/Commune-of-Paris-1871",
            "https://www.merriam-webster.com/dictionary/comprises",
            "https://www.britannica.com/topic/arrondissement",
            "https://www.merriam-webster.com/dictionary/Adaptation",
            "https://www.merriam-webster.com/dictionary/infrastructure",
            "https://www.britannica.com/place/Oise-River",
            "https://www.britannica.com/place/Marne-River",
            "https://www.britannica.com/topic/Notre-Dame-de-Paris",
            "https://premium.britannica.com/student-subscription/?utm_source=premium&utm_medium=inline-cta&utm_campaign=august-2024",
            "https://www.merriam-webster.com/dictionary/designation",
            "https://www.merriam-webster.com/dictionary/intermittent",
            "https://www.britannica.com/plant/plane-tree",
            "https://www.britannica.com/plant/chestnut",
            "https://www.britannica.com/biography/Napoleon-III-emperor-of-France",
            "https://www.britannica.com/place/London",
            "https://www.britannica.com/place/United-Kingdom",
            "https://www.britannica.com/place/Bois-de-Boulogne",
            "https://www.britannica.com/dictionary/promenades",
            "https://www.britannica.com/biography/Jacques-Chirac",
            "https://www.britannica.com/topic/local-government",
            "https://www.britannica.com/place/Promenade-Plantee",
            "https://www.britannica.com/topic/Bastille",
            "https://www.britannica.com/place/Vincennes-France"
      ],
      "_usage": {
            "input_tokens": 2,
            "output_tokens": 31600,
            "inference_time_tokens": 1057,
            "total_tokens": 32659
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/embedding.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.embedding({
      "text": "Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway",
      "type": "text"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.embedding({
      "text": "Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway",
      "type": "text"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/embedding \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"text":"Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway","type":"text"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/embedding');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"text":"Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway","type":"text"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/embedding')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'text' => 'Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway',
  'type' => 'text'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"text":"Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway","type":"text"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/embedding", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/embedding"))
    .POST(BodyPublishers.ofString("{\"text\":\"Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway\",\"type\":\"text\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "text": "Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway",
    "type": "text"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/embedding")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"text":"Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway","type":"text"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/embedding');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"text\":\"Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway\",\"type\":\"text\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/embedding")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/embedding");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"text\":\"Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway\",\"type\":\"text\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "embeddings": [
            [
                  -0.06269700080156326,
                  0.0896194726228714,
                  -0.04227621480822563,
                  -0.046519096940755844,
                  -0.02535046637058258,
                  -0.05726366862654686,
                  0.022328557446599007,
                  0.08247677236795425,
                  -0.01738361269235611,
                  -0.07240374386310577,
                  -0.004616806749254465,
                  -0.025930428877472878,
                  -0.07008389383554459,
                  -0.007711212150752544,
                  -0.09261085838079453,
                  0.03952902555465698,
                  0.046824339777231216,
                  0.035591382533311844,
                  0.049785204231739044,
                  0.10872770845890045,
                  0.04273407906293869,
                  0.023885298520326614,
                  0.01059957779943943,
                  -0.016315260902047157,
                  -0.03888801112771034,
                  0.1354059875011444,
                  0.027029305696487427,
                  0.01054615993052721,
                  -0.02821975387632847,
                  -0.003025725483894348,
                  -0.08235467970371246,
                  -0.09102358669042587,
                  -0.009630430489778519,
                  -0.0015147705562412739,
                  0.07698239386081696,
                  -0.007325842045247555,
                  -0.07918014377355576,
                  -0.005986586678773165,
                  0.004719826392829418,
                  -0.028372377157211304,
                  -0.06593257933855057,
                  0.06052977219223976,
                  0.013300982303917408,
                  0.024984175339341164,
                  -0.04926628991961479,
                  -0.008699437603354454,
                  -0.030417507514357567,
                  0.03968164697289467,
                  0.026174623519182205,
                  -0.008371300995349884,
                  -0.0328136682510376,
                  -0.004681671038269997,
                  -0.013049156405031681,
                  0.03330205753445625,
                  0.04252040758728981,
                  -0.02930336818099022,
                  -0.14273183047771454,
                  0.05079250782728195,
                  0.07582246512174606,
                  -0.052959732711315155,
                  0.0082034170627594,
                  -0.004189466126263142,
                  -0.08662808686494827,
                  -0.03736179694533348,
                  0.03060065396130085,
                  0.01660524308681488,
                  0.025289418175816536,
                  -0.008325514383614063,
                  0.12337939441204071,
                  0.029425466433167458,
                  -0.042337264865636826,
                  -0.007302949205040932,
                  -0.017627807334065437,
                  0.007768445182591677,
                  0.04664119705557823,
                  0.07038913667201996,
                  -0.03739231824874878,
                  0.013362031430006027,
                  0.008088950999081135,
                  0.013186516240239143,
                  -0.10530897974967957,
                  0.010370645672082901,
                  0.029211796820163727,
                  0.00680692819878459,
                  -0.029211796820163727,
                  -0.03345467895269394,
                  -0.05149456486105919,
                  -0.04523707553744316,
                  0.03537771478295326,
                  -0.017230991274118423,
                  -0.005059409886598587,
                  0.08143894374370575,
                  0.0054600415751338005,
                  -0.0056775277480483055,
                  0.025533612817525864,
                  -0.018848782405257225,
                  -0.043710857629776,
                  0.030249623581767082,
                  0.019184550270438194,
                  -0.012476825155317783,
                  0.004933496937155724,
                  0.0213059913367033,
                  0.06153707578778267,
                  -0.002653710078448057,
                  -0.03647658973932266,
                  -0.014109876938164234,
                  -0.006433004979044199,
                  -0.005181507207453251,
                  0.01944400556385517,
                  0.0004170865286141634,
                  -0.037850186228752136,
                  -0.004513787105679512,
                  -0.038247000426054,
                  -0.055676400661468506,
                  -0.057538386434316635,
                  0.03150112181901932,
                  -0.005959877744317055,
                  -0.02971544675529003,
                  0.013781740330159664,
                  -0.008775748312473297,
                  -0.03669026121497154,
                  -0.027822937816381454,
                  -0.0074326773174107075,
                  0.008928370662033558,
                  -0.049174714833498,
                  0.05701947212219238,
                  -0.06544419378042221,
                  -0.045939136296510696,
                  -0.02612883783876896,
                  -0.04429082199931145,
                  0.011141384951770306,
                  0.039071157574653625,
                  0.0470074862241745,
                  -0.007192298304289579,
                  0.036995504051446915,
                  -0.021016009151935577,
                  -0.033179961144924164,
                  0.02011554129421711,
                  0.01508665643632412,
                  -0.051952432841062546,
                  -0.05115879699587822,
                  0.038949061185121536,
                  -0.08497977256774902,
                  0.011675560846924782,
                  -0.014033566229045391,
                  -0.005536352749913931,
                  0.016879960894584656,
                  0.008653650991618633,
                  0.010202761739492416,
                  -0.012469193898141384,
                  -0.01771938055753708,
                  0.011377948336303234,
                  0.004307747818529606,
                  -0.015720035880804062,
                  0.02799082174897194,
                  -0.04340561479330063,
                  -0.06648201495409012,
                  0.05036516487598419,
                  -0.027181927114725113,
                  -0.018650373443961143,
                  0.094014972448349,
                  0.019718725234270096,
                  -0.00028163474053144455,
                  -0.04429082199931145,
                  -0.011576357297599316,
                  -0.05189138278365135,
                  -0.06465055793523788,
                  -0.0007502310909330845,
                  -0.029868070036172867,
                  0.04395505413413048,
                  -0.052410297095775604,
                  0.022221721708774567,
                  -0.00994330458343029,
                  -0.021473875269293785,
                  -0.031653743237257004,
                  0.011927386745810509,
                  0.013590963557362556,
                  0.04291722550988197,
                  0.01900140382349491,
                  -0.014865354634821415,
                  0.05060936138033867,
                  0.015582676976919174,
                  -0.030249623581767082,
                  -0.008058426901698112,
                  -0.02370215207338333,
                  0.0004397412994876504,
                  0.016467882320284843,
                  0.008653650991618633,
                  -0.007524250540882349,
                  0.011408473365008831,
                  -0.023747937753796577,
                  -0.01979503594338894,
                  -0.10262283682823181,
                  0.03311891108751297,
                  0.0010053955484181643,
                  -0.044840257614851,
                  -0.0072342692874372005,
                  0.01782621629536152,
                  0.048899997025728226,
                  0.02767031639814377,
                  0.03336310759186745,
                  0.006425374187529087,
                  0.01070641353726387,
                  0.043100371956825256,
                  -0.011545832268893719,
                  -0.05012097209692001,
                  -0.03833857551217079,
                  0.02796029858291149,
                  0.04023108258843422,
                  0.0028521183412522078,
                  0.07270898669958115,
                  0.005543983541429043,
                  0.03882696479558945,
                  -0.013598594814538956,
                  -0.05543220788240433,
                  0.011232958175241947,
                  -0.029379678890109062,
                  -0.028876028954982758,
                  -0.025747282430529594,
                  -0.015208753757178783,
                  -0.01747518591582775,
                  -0.02295430563390255,
                  -0.03060065396130085,
                  -0.027365073561668396,
                  0.035255614668130875,
                  0.02731928601861,
                  -0.027716103941202164,
                  0.019932394847273827,
                  0.034156739711761475,
                  -0.01890983060002327,
                  0.011423734948039055,
                  -0.0077608139254152775,
                  0.01617790199816227,
                  -0.013270458206534386,
                  -0.0002085432643070817,
                  -0.061048686504364014,
                  0.021031271666288376,
                  -0.02086338773369789,
                  0.025625186040997505,
                  0.07600561529397964,
                  0.03794175758957863,
                  -0.024449998512864113,
                  0.04899156838655472,
                  0.02612883783876896,
                  -0.021031271666288376,
                  -0.01032485906034708,
                  -0.00037869263906031847,
                  -0.04252040758728981,
                  -0.018070410937070847,
                  0.09761685132980347,
                  -0.04731273278594017,
                  0.030966944992542267,
                  -0.006520762573927641,
                  0.04801478981971741,
                  -0.023915821686387062,
                  -0.011721347458660603,
                  0.057874154299497604,
                  -0.010965869762003422,
                  -0.053387075662612915,
                  -0.00782186258584261,
                  0.02086338773369789,
                  -0.01683417521417141,
                  -0.010057770647108555,
                  0.04010898619890213,
                  0.022694848477840424,
                  -0.057874154299497604,
                  -0.016574718058109283,
                  0.013545176945626736,
                  0.017307301983237267,
                  -0.005936984438449144,
                  0.004883894696831703,
                  0.03214213252067566,
                  -0.03672078251838684,
                  0.03028014861047268,
                  0.00039300089702010155,
                  0.007776076439768076,
                  -0.009989091195166111,
                  -0.013590963557362556,
                  -0.047587450593709946,
                  0.004662593360990286,
                  0.006574180442839861,
                  0.01965767703950405,
                  -0.012057115323841572,
                  -0.019047189503908157,
                  -0.011347424238920212,
                  0.027242975309491158,
                  -0.009027574211359024,
                  -0.02086338773369789,
                  -0.05845411494374275,
                  0.04313089698553085,
                  -0.008127106353640556,
                  -0.0072075603529810905,
                  -0.0029894777107983828,
                  0.04880842566490173,
                  0.022435391321778297,
                  0.0077608139254152775,
                  -0.07301422953605652,
                  -0.020924437791109085,
                  0.03192846104502678,
                  -0.018833519890904427,
                  -0.05265448987483978,
                  -0.019642414525151253,
                  0.006921394728124142,
                  0.03247790038585663,
                  0.033057864755392075,
                  -0.0026804187800735235,
                  -0.04545074701309204,
                  -0.03794175758957863,
                  -0.04719063267111778,
                  0.023305336013436317,
                  -0.020832864567637444,
                  0.031073780730366707,
                  -0.009195458143949509,
                  0.058850932866334915,
                  0.06022452935576439,
                  0.05234924703836441,
                  0.037880707532167435,
                  -0.00814236793667078,
                  -0.02927284501492977,
                  -0.0022626169957220554,
                  -0.005780547391623259,
                  0.08406403660774231,
                  -0.0024438551627099514,
                  -0.039071157574653625,
                  -0.06806928664445877,
                  -0.027822937816381454,
                  0.0005627925856970251,
                  0.023305336013436317,
                  -0.04404662549495697,
                  -0.00891310814768076,
                  -0.024556834250688553,
                  0.016193164512515068,
                  0.025182582437992096,
                  -0.05256291851401329,
                  0.015620832331478596,
                  0.03629344329237938,
                  0.03015805035829544,
                  0.013445972464978695,
                  0.011500045657157898,
                  0.011530570685863495,
                  0.013217040337622166,
                  -0.02238960564136505,
                  -0.06248332932591438,
                  -0.01409461535513401,
                  0.02753295749425888,
                  -0.04404662549495697,
                  0.020146066322922707,
                  -0.0535702221095562,
                  0.03397359326481819,
                  -0.026052527129650116,
                  0.034797750413417816,
                  0.023198500275611877,
                  0.018650373443961143,
                  0.05473014712333679,
                  0.018177246674895287,
                  -0.07002284377813339,
                  -0.018421441316604614,
                  0.027380336076021194,
                  -0.014438014477491379,
                  0.018833519890904427,
                  0.045633893460035324,
                  -0.040597375482320786,
                  0.03137902542948723,
                  0.012568398378789425,
                  0.004941128194332123,
                  -0.0005327451508492231,
                  -0.012423407286405563,
                  0.00291125918738544,
                  -0.02873866818845272,
                  -0.008874952793121338,
                  -0.002079470781609416,
                  0.022664325311779976,
                  0.002716666553169489,
                  0.072159543633461,
                  -0.0459086112678051,
                  -0.03015805035829544,
                  0.023641103878617287,
                  0.018818257376551628,
                  0.014453276060521603,
                  0.029807019978761673,
                  0.011332162655889988,
                  -0.0623307079076767,
                  0.011019287630915642,
                  -0.0185740627348423,
                  0.008874952793121338,
                  -0.02110758237540722,
                  -0.04328351840376854,
                  -0.03620187193155289,
                  0.004189466126263142,
                  0.005292158108204603,
                  0.03540823608636856,
                  -0.030020691454410553,
                  -0.039834268391132355,
                  0.027471907436847687,
                  0.025823593139648438,
                  -0.036446064710617065,
                  0.07136591523885727,
                  0.0191387627273798,
                  -0.01793305203318596,
                  0.01617790199816227,
                  0.008005009032785892,
                  0.02525889314711094,
                  0.01207237783819437,
                  0.03418726474046707,
                  0.012774437665939331,
                  0.04056685045361519,
                  -0.03311891108751297,
                  -0.08333145827054977,
                  0.030005428940057755,
                  0.02174859493970871,
                  0.030203837901353836,
                  -0.04511497914791107,
                  0.07161010801792145,
                  -0.04270355403423309,
                  0.007451754994690418,
                  0.0295170396566391,
                  0.018116196617484093,
                  -0.06898501515388489,
                  0.12008276581764221,
                  -0.021657021716237068,
                  0.01404119748622179,
                  0.013980149291455746,
                  0.010714043863117695,
                  -0.010042509064078331,
                  -0.02632724493741989,
                  0.040170036256313324,
                  0.09303819388151169,
                  0.06526104360818863,
                  -0.008195785805583,
                  -0.017200466245412827,
                  -0.03516404330730438,
                  0.045298125594854355,
                  -0.022450653836131096,
                  -0.047373779118061066,
                  -0.049174714833498,
                  -0.011782396584749222,
                  -0.0017274869605898857,
                  0.009149671532213688,
                  -0.0005971324280835688,
                  -0.03659868612885475,
                  -0.0004495186440180987,
                  0.06355167925357819,
                  0.02831132709980011,
                  -0.07301422953605652,
                  -0.001530986512079835,
                  -0.02918127179145813,
                  0.04346666485071182,
                  0.009493070654571056,
                  0.011820551939308643,
                  0.00027686532121151686,
                  -0.02371741458773613,
                  0.041268911212682724,
                  -0.026296721771359444,
                  -0.003014278830960393,
                  0.02941020391881466,
                  0.024190541356801987,
                  -0.01903192698955536,
                  0.04053632542490959,
                  0.00858497153967619,
                  0.006642859894782305,
                  -0.03177583962678909,
                  -0.009363342076539993,
                  0.009416759945452213,
                  0.01727677881717682,
                  0.025091009214520454,
                  0.01480430644005537,
                  0.017734643071889877,
                  0.04841160774230957,
                  -0.022755896672606468,
                  0.05643950775265694,
                  0.010256178677082062,
                  0.039620596915483475,
                  0.006734433118253946,
                  -0.014682209119200706,
                  -0.00857734028249979,
                  0.04450448974967003,
                  -0.01465168409049511,
                  0.004849554970860481,
                  -0.011706084944307804,
                  -0.01900140382349491,
                  0.03968164697289467,
                  0.02380898781120777,
                  -0.002806331729516387,
                  -0.022236984223127365,
                  0.011271113529801369,
                  0.011454259976744652,
                  -0.016742601990699768,
                  -0.04679381847381592,
                  -0.00858497153967619,
                  0.03147059679031372,
                  0.05811834707856178,
                  0.06129287928342819,
                  0.004006320144981146,
                  -0.02962387539446354,
                  0.014033566229045391,
                  -0.026632489636540413,
                  0.00782186258584261,
                  -0.005025069694966078,
                  0.03702602908015251,
                  0.005437148734927177,
                  -0.01343834213912487,
                  -0.0032565658912062645,
                  -0.00918782688677311,
                  0.05955299362540245,
                  0.0382775254547596,
                  -0.028021346777677536,
                  0.06056029722094536,
                  -0.0020298687741160393,
                  0.013300982303917408,
                  0.03803333267569542,
                  -0.030570128932595253,
                  -0.025197844952344894,
                  0.040475279092788696,
                  -0.0007645394071005285,
                  -0.03375992178916931,
                  -0.013270458206534386,
                  -0.013697798363864422,
                  0.09364867955446243,
                  -0.003353862091898918,
                  0.050975650548934937,
                  -0.005044147837907076,
                  -0.002787254052236676,
                  -0.03681235760450363,
                  0.014659315347671509,
                  0.03050908073782921,
                  -0.015979493036866188,
                  0.0688629150390625,
                  0.00513953622430563,
                  0.002342743333429098,
                  0.03162321820855141,
                  -0.026174623519182205,
                  0.07728763669729233,
                  0.030524343252182007,
                  0.0015414792578667402,
                  -0.0030791431199759245,
                  0.04108576476573944,
                  -0.00549438176676631,
                  0.048686325550079346,
                  0.02173333242535591,
                  0.010485111735761166,
                  -0.03226422891020775,
                  -0.07197640091180801,
                  0.019917134195566177,
                  0.022313294932246208,
                  -0.049876775592565536,
                  0.040170036256313324,
                  0.005047963000833988,
                  -0.042245689779520035,
                  -0.013941993936896324,
                  -0.008829166181385517,
                  0.008592602796852589,
                  0.00015381406410597265,
                  -0.008264466188848019,
                  0.008516291156411171,
                  -0.029013387858867645,
                  0.023106927052140236,
                  0.007653979118913412,
                  -0.03455355763435364,
                  -0.009485439397394657,
                  -0.0024877339601516724,
                  -0.018421441316604614,
                  -0.03577452898025513,
                  -0.046183329075574875,
                  0.03128745034337044,
                  0.04960205778479576,
                  -0.008714700117707253,
                  -0.03137902542948723,
                  0.043314043432474136,
                  -0.03287471830844879,
                  0.01901666633784771,
                  0.025854118168354034,
                  0.008508660830557346,
                  0.0568363256752491,
                  0.001928756944835186,
                  0.010530898347496986,
                  0.01514007430523634,
                  -0.03330205753445625,
                  -0.05155561491847038,
                  -0.05564587563276291,
                  0.014071721583604813,
                  -0.03583557903766632,
                  -0.0158573966473341,
                  0.03723969683051109,
                  -0.02960861288011074,
                  -0.04951048269867897,
                  0.0077875228598713875,
                  -0.043771907687187195,
                  0.06404007226228714,
                  0.06898501515388489,
                  -0.046732768416404724,
                  -0.03202003613114357,
                  0.07600561529397964,
                  0.02142808772623539,
                  -0.050975650548934937,
                  0.05985823646187782,
                  -0.01944400556385517,
                  -0.015689512714743614,
                  0.04074999690055847,
                  0.10042508691549301,
                  0.05433332920074463,
                  0.012469193898141384,
                  -0.015605569817125797,
                  0.021992789581418037,
                  -0.0067420643754303455,
                  -0.004029213450849056,
                  -0.05091460421681404,
                  0.02524363063275814,
                  -0.014857723377645016,
                  -0.01825355738401413,
                  0.030768537893891335,
                  0.048777900636196136,
                  -0.022450653836131096,
                  0.007253346964716911,
                  -0.014834830537438393,
                  -0.047923218458890915,
                  0.010080664418637753,
                  -0.03672078251838684,
                  -0.010088295675814152,
                  0.013400186784565449,
                  0.04731273278594017,
                  -0.027395596727728844,
                  0.0019125408725813031,
                  0.05924775078892708,
                  0.013491759076714516,
                  -0.021672282367944717,
                  0.020680241286754608,
                  0.019505055621266365,
                  -0.04532865062355995,
                  -0.04850317910313606,
                  -0.022313294932246208,
                  0.012316572479903698,
                  -0.029471252113580704,
                  0.015307958237826824,
                  0.019535578787326813,
                  0.041055239737033844,
                  0.00033362151589244604,
                  -0.041909921914339066,
                  -0.020054493099451065,
                  -0.017307301983237267,
                  -0.055584829300642014,
                  -0.027731364592909813,
                  0.022221721708774567,
                  -0.011355055496096611,
                  0.024862077087163925,
                  0.08668912947177887,
                  0.016483144834637642,
                  0.019703462719917297,
                  0.00989751797169447,
                  -0.024236328899860382,
                  -0.01727677881717682,
                  0.004296301398426294,
                  -0.004704564344137907,
                  0.016315260902047157,
                  0.012614184990525246,
                  -0.035469286143779755,
                  -0.02480102889239788,
                  -0.02821975387632847,
                  -0.0023808986879885197,
                  0.036110296845436096,
                  0.05714156851172447,
                  0.04358876124024391,
                  0.00988988671451807,
                  -0.01616263948380947,
                  -0.03543876111507416,
                  -0.0481063649058342,
                  0.035011421889066696,
                  0.024755241349339485,
                  0.07795917242765427,
                  0.044962357729673386,
                  0.02753295749425888,
                  0.008180524222552776,
                  -0.02206910029053688,
                  -0.01409461535513401,
                  -0.00033481387072242796,
                  0.02480102889239788,
                  0.038185954093933105,
                  0.0077264741994440556,
                  -0.06330748647451401,
                  0.003577071474865079,
                  0.030112264677882195,
                  0.05320392921566963,
                  0.006673384457826614,
                  -0.0007764629554003477,
                  0.009546488523483276,
                  -0.0612318329513073,
                  0.020954960957169533,
                  -0.0023198500275611877,
                  0.027838200330734253,
                  0.019123500213027,
                  -0.015124811790883541,
                  0.03150112181901932,
                  0.015048501081764698,
                  -0.028173968195915222,
                  0.010637733153998852,
                  0.011759502813220024,
                  -0.02896760031580925,
                  0.06251385062932968,
                  0.07338052242994308,
                  0.0007511849980801344,
                  0.005750022828578949,
                  0.007390706334263086,
                  0.0031554538290947676,
                  0.011446628719568253,
                  0.03037172183394432,
                  -0.05225767567753792,
                  -0.013140729628503323,
                  0.029013387858867645,
                  -0.0169562716037035,
                  0.010820879600942135,
                  -0.033820971846580505,
                  0.005700421053916216,
                  0.02962387539446354,
                  -0.03992583975195885,
                  0.0928550511598587,
                  -0.01607106626033783,
                  0.03696497902274132,
                  -0.012644709087908268,
                  0.02304587885737419,
                  0.004754166584461927,
                  -0.009508333168923855,
                  0.035896625369787216,
                  0.03989531472325325,
                  -0.03815542906522751,
                  0.014880617149174213,
                  -0.011004025116562843,
                  0.011004025116562843,
                  -0.014537218026816845,
                  0.010462218895554543,
                  -0.009554118849337101,
                  0.03247790038585663,
                  -0.023763200268149376,
                  -0.0077264741994440556,
                  0.04142153263092041,
                  0.03901011124253273,
                  -0.007905804552137852,
                  0.010156975127756596,
                  -0.019413482397794724,
                  -0.015689512714743614,
                  -0.012850748375058174,
                  -0.0328136682510376,
                  -0.0009166841628029943,
                  -0.03189793974161148,
                  -0.040933143347501755,
                  0.09462546557188034,
                  -0.012827854603528976,
                  -0.015285064466297626,
                  -0.0006882285233587027,
                  0.015674250200390816,
                  0.03943745046854019,
                  -0.00478469068184495,
                  -0.061598122119903564,
                  0.016116853803396225,
                  -0.0038403437938541174,
                  0.021290728822350502,
                  0.07154905796051025,
                  -0.026479866355657578,
                  0.003727785311639309,
                  0.030951684340834618,
                  -0.05265448987483978,
                  0.03342415392398834,
                  0.011225326918065548,
                  0.03791123256087303,
                  0.04270355403423309,
                  0.05005992203950882,
                  -0.04404662549495697,
                  -0.017978837713599205,
                  -0.000742600008379668,
                  -0.056347936391830444
            ]
      ],
      "chunks": [
            "Caption: Secluded Tiki Bar on a serene lake, perfect for a refreshing drink and a relaxing getaway"
      ],
      "_usage": {
            "input_tokens": 10,
            "output_tokens": 1226,
            "inference_time_tokens": 982,
            "total_tokens": 2218
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/file-delete.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.store.delete({
      "key": "image-123.png"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.store.delete({
      "key": "image-123.png"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/store/file/read/image-123.png?key=image-123.png \
 -X DELETE \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/store/file/read/image-123.png?key=image-123.png');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'DELETE');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'

uri = URI('https://api.jigsawstack.com/v1/store/file/read/image-123.png')
params = {
  :key => 'image-123.png',
}
uri.query = URI.encode_www_form(params)

req = Net::HTTP::Delete.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
)

func main() {
	client := &http.Client{}
	req, err := http.NewRequest("DELETE", "https://api.jigsawstack.com/v1/store/file/read/image-123.png?key=image-123.png", nil)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/store/file/read/image-123.png?key=image-123.png"))
    .DELETE()
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let url = URL(string: "https://api.jigsawstack.com/v1/store/file/read/image-123.png?key=image-123.png")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "DELETE"
request.allHTTPHeaderFields = headers

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final params = {
    'key': 'image-123.png',
  };

  final url = Uri.parse('https://api.jigsawstack.com/v1/store/file/read/image-123.png')
      .replace(queryParameters: params);

  final res = await http.delete(url, headers: headers);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.delete error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/store/file/read/image-123.png?key=image-123.png")
  .delete("".toRequestBody())
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Delete, "https://api.jigsawstack.com/v1/store/file/read/image-123.png?key=image-123.png");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    

<ResponseExample></ResponseExample>
    

 This is the content for the doc snippets/code-req-examples/html-to-any.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.web.html_to_any({
      "url": "https://news.ycombinator.com/"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.web.html_to_any({
      "url": "https://news.ycombinator.com/"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/web/html_to_any \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"url":"https://news.ycombinator.com/"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/web/html_to_any');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"url":"https://news.ycombinator.com/"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/web/html_to_any')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'url' => 'https://news.ycombinator.com/'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"url":"https://news.ycombinator.com/"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/web/html_to_any", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/web/html_to_any"))
    .POST(BodyPublishers.ofString("{\"url\":\"https://news.ycombinator.com/\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "url": "https://news.ycombinator.com/"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/web/html_to_any")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"url":"https://news.ycombinator.com/"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/web/html_to_any');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"url\":\"https://news.ycombinator.com/\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/web/html_to_any")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/web/html_to_any");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"url\":\"https://news.ycombinator.com/\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    

<ResponseExample></ResponseExample>
    

 This is the content for the doc snippets/code-req-examples/image-generation.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.image_generation({
      "prompt": "A beautiful sunset over a calm ocean"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.image_generation({
      "prompt": "A beautiful sunset over a calm ocean"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/image_generation \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"prompt":"A beautiful sunset over a calm ocean"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/image_generation');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"prompt":"A beautiful sunset over a calm ocean"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/ai/image_generation')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'prompt' => 'A beautiful sunset over a calm ocean'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"prompt":"A beautiful sunset over a calm ocean"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/image_generation", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/image_generation"))
    .POST(BodyPublishers.ofString("{\"prompt\":\"A beautiful sunset over a calm ocean\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "prompt": "A beautiful sunset over a calm ocean"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/ai/image_generation")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"prompt":"A beautiful sunset over a calm ocean"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/image_generation');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"prompt\":\"A beautiful sunset over a calm ocean\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/image_generation")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/image_generation");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"prompt\":\"A beautiful sunset over a calm ocean\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    

<ResponseExample></ResponseExample>
    

 This is the content for the doc snippets/code-req-examples/image-translate.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.translate.image({
      "url": "https://images.unsplash.com/photo-1566657817181-c69e4a8eeb1e?q=80&w=3087&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
      "target_language": "hi"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.translate.image({
      "url": "https://images.unsplash.com/photo-1566657817181-c69e4a8eeb1e?q=80&w=3087&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
      "target_language": "hi"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/translate/image \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"url":"https://images.unsplash.com/photo-1566657817181-c69e4a8eeb1e?q=80&w=3087&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D","target_language":"hi"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/translate/image');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"url":"https://images.unsplash.com/photo-1566657817181-c69e4a8eeb1e?q=80&w=3087&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D","target_language":"hi"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/ai/translate/image')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'url' => 'https://images.unsplash.com/photo-1566657817181-c69e4a8eeb1e?q=80&w=3087&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',
  'target_language' => 'hi'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"url":"https://images.unsplash.com/photo-1566657817181-c69e4a8eeb1e?q=80&w=3087&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D","target_language":"hi"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/translate/image", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/translate/image"))
    .POST(BodyPublishers.ofString("{\"url\":\"https://images.unsplash.com/photo-1566657817181-c69e4a8eeb1e?q=80&w=3087&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\"target_language\":\"hi\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "url": "https://images.unsplash.com/photo-1566657817181-c69e4a8eeb1e?q=80&w=3087&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
    "target_language": "hi"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/ai/translate/image")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"url":"https://images.unsplash.com/photo-1566657817181-c69e4a8eeb1e?q=80&w=3087&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D","target_language":"hi"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/translate/image');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"url\":\"https://images.unsplash.com/photo-1566657817181-c69e4a8eeb1e?q=80&w=3087&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\"target_language\":\"hi\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/translate/image")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/translate/image");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"url\":\"https://images.unsplash.com/photo-1566657817181-c69e4a8eeb1e?q=80&w=3087&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\"target_language\":\"hi\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    

<ResponseExample></ResponseExample>
    

 This is the content for the doc snippets/code-req-examples/nsfw.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.validate.nsfw({
      "url": "https://images.unsplash.com/photo-1633998979521-11ca9d0e6e38?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.validate.nsfw({
      "url": "https://images.unsplash.com/photo-1633998979521-11ca9d0e6e38?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/validate/nsfw \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"url":"https://images.unsplash.com/photo-1633998979521-11ca9d0e6e38?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/validate/nsfw');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"url":"https://images.unsplash.com/photo-1633998979521-11ca9d0e6e38?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/validate/nsfw')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'url' => 'https://images.unsplash.com/photo-1633998979521-11ca9d0e6e38?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"url":"https://images.unsplash.com/photo-1633998979521-11ca9d0e6e38?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/validate/nsfw", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/validate/nsfw"))
    .POST(BodyPublishers.ofString("{\"url\":\"https://images.unsplash.com/photo-1633998979521-11ca9d0e6e38?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "url": "https://images.unsplash.com/photo-1633998979521-11ca9d0e6e38?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/validate/nsfw")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"url":"https://images.unsplash.com/photo-1633998979521-11ca9d0e6e38?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/validate/nsfw');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"url\":\"https://images.unsplash.com/photo-1633998979521-11ca9d0e6e38?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/validate/nsfw")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/validate/nsfw");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"url\":\"https://images.unsplash.com/photo-1633998979521-11ca9d0e6e38?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "nsfw": false,
      "nudity": false,
      "gore": false,
      "nsfw_score": 0.08963271253932335,
      "nudity_score": 0.08966292440891266,
      "gore_score": 0.0016616199864074588,
      "_usage": {
            "input_tokens": 67,
            "output_tokens": 60,
            "inference_time_tokens": 1521,
            "total_tokens": 1648
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/object-detection.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.vision.object_detection({
      "url": "https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Collabo%201080x842.jpg?t=2024-03-22T09%3A22%3A48.442Z"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.vision.object_detection({
      "url": "https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Collabo%201080x842.jpg?t=2024-03-22T09%3A22%3A48.442Z"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/object_detection \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"url":"https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Collabo%201080x842.jpg?t=2024-03-22T09%3A22%3A48.442Z"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/object_detection');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"url":"https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Collabo%201080x842.jpg?t=2024-03-22T09%3A22%3A48.442Z"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/ai/object_detection')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'url' => 'https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Collabo%201080x842.jpg?t=2024-03-22T09%3A22%3A48.442Z'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"url":"https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Collabo%201080x842.jpg?t=2024-03-22T09%3A22%3A48.442Z"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/object_detection", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/object_detection"))
    .POST(BodyPublishers.ofString("{\"url\":\"https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Collabo%201080x842.jpg?t=2024-03-22T09%3A22%3A48.442Z\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "url": "https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Collabo%201080x842.jpg?t=2024-03-22T09%3A22%3A48.442Z"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/ai/object_detection")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"url":"https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Collabo%201080x842.jpg?t=2024-03-22T09%3A22%3A48.442Z"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/object_detection');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"url\":\"https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Collabo%201080x842.jpg?t=2024-03-22T09%3A22%3A48.442Z\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/object_detection")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/object_detection");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"url\":\"https://rogilvkqloanxtvjfrkm.supabase.co/storage/v1/object/public/demo/Collabo%201080x842.jpg?t=2024-03-22T09%3A22%3A48.442Z\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "width": 1080,
      "height": 842,
      "tags": [
            "clothing",
            "human face",
            "person",
            "man",
            "woman",
            "wall",
            "table",
            "indoor",
            "smile",
            "sharing",
            "food",
            "people",
            "group",
            "eating"
      ],
      "objects": [
            {
                  "name": "person",
                  "confidence": 0.599,
                  "bounds": {
                        "top_left": {
                              "x": 430,
                              "y": 290
                        },
                        "top_right": {
                              "x": 631,
                              "y": 290
                        },
                        "bottom_right": {
                              "x": 631,
                              "y": 523
                        },
                        "bottom_left": {
                              "x": 430,
                              "y": 523
                        },
                        "width": 201,
                        "height": 233
                  }
            },
            {
                  "name": "person",
                  "confidence": 0.542,
                  "bounds": {
                        "top_left": {
                              "x": 230,
                              "y": 273
                        },
                        "top_right": {
                              "x": 440,
                              "y": 273
                        },
                        "bottom_right": {
                              "x": 440,
                              "y": 610
                        },
                        "bottom_left": {
                              "x": 230,
                              "y": 610
                        },
                        "width": 210,
                        "height": 337
                  }
            },
            {
                  "name": "person",
                  "confidence": 0.869,
                  "bounds": {
                        "top_left": {
                              "x": 16,
                              "y": 279
                        },
                        "top_right": {
                              "x": 397,
                              "y": 279
                        },
                        "bottom_right": {
                              "x": 397,
                              "y": 818
                        },
                        "bottom_left": {
                              "x": 16,
                              "y": 818
                        },
                        "width": 381,
                        "height": 539
                  }
            },
            {
                  "name": "person",
                  "confidence": 0.847,
                  "bounds": {
                        "top_left": {
                              "x": 546,
                              "y": 226
                        },
                        "top_right": {
                              "x": 1078,
                              "y": 226
                        },
                        "bottom_right": {
                              "x": 1078,
                              "y": 825
                        },
                        "bottom_left": {
                              "x": 546,
                              "y": 825
                        },
                        "width": 532,
                        "height": 599
                  }
            }
      ],
      "_usage": {
            "input_tokens": 34,
            "output_tokens": 244,
            "inference_time_tokens": 2102,
            "total_tokens": 2380
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/prediction.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.prediction({
      "dataset": [
            {
                  "date": "2023-01-01",
                  "value": 353459
            },
            {
                  "date": "2023-01-02",
                  "value": 313734
            },
            {
                  "date": "2023-01-03",
                  "value": 333774
            },
            {
                  "date": "2023-01-04",
                  "value": 348636
            },
            {
                  "date": "2023-01-05",
                  "value": 278903
            }
      ],
      "steps": 3
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.prediction({
      "dataset": [
            {
                  "date": "2023-01-01",
                  "value": 353459
            },
            {
                  "date": "2023-01-02",
                  "value": 313734
            },
            {
                  "date": "2023-01-03",
                  "value": 333774
            },
            {
                  "date": "2023-01-04",
                  "value": 348636
            },
            {
                  "date": "2023-01-05",
                  "value": 278903
            }
      ],
      "steps": 3
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/prediction \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"dataset":[{"date":"2023-01-01","value":353459},{"date":"2023-01-02","value":313734},{"date":"2023-01-03","value":333774},{"date":"2023-01-04","value":348636},{"date":"2023-01-05","value":278903}],"steps":3}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/prediction');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"dataset":[{"date":"2023-01-01","value":353459},{"date":"2023-01-02","value":313734},{"date":"2023-01-03","value":333774},{"date":"2023-01-04","value":348636},{"date":"2023-01-05","value":278903}],"steps":3}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/ai/prediction')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'dataset' => [
    {
      'date' => '2023-01-01',
      'value' => 353459
    },
    {
      'date' => '2023-01-02',
      'value' => 313734
    },
    {
      'date' => '2023-01-03',
      'value' => 333774
    },
    {
      'date' => '2023-01-04',
      'value' => 348636
    },
    {
      'date' => '2023-01-05',
      'value' => 278903
    }
  ],
  'steps' => 3
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"dataset":[{"date":"2023-01-01","value":353459},{"date":"2023-01-02","value":313734},{"date":"2023-01-03","value":333774},{"date":"2023-01-04","value":348636},{"date":"2023-01-05","value":278903}],"steps":3}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/prediction", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/prediction"))
    .POST(BodyPublishers.ofString("{\"dataset\":[{\"date\":\"2023-01-01\",\"value\":353459},{\"date\":\"2023-01-02\",\"value\":313734},{\"date\":\"2023-01-03\",\"value\":333774},{\"date\":\"2023-01-04\",\"value\":348636},{\"date\":\"2023-01-05\",\"value\":278903}],\"steps\":3}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "dataset": [
        [
            "date": "2023-01-01",
            "value": 353459
        ],
        [
            "date": "2023-01-02",
            "value": 313734
        ],
        [
            "date": "2023-01-03",
            "value": 333774
        ],
        [
            "date": "2023-01-04",
            "value": 348636
        ],
        [
            "date": "2023-01-05",
            "value": 278903
        ]
    ],
    "steps": 3
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/ai/prediction")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"dataset":[{"date":"2023-01-01","value":353459},{"date":"2023-01-02","value":313734},{"date":"2023-01-03","value":333774},{"date":"2023-01-04","value":348636},{"date":"2023-01-05","value":278903}],"steps":3}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/prediction');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"dataset\":[{\"date\":\"2023-01-01\",\"value\":353459},{\"date\":\"2023-01-02\",\"value\":313734},{\"date\":\"2023-01-03\",\"value\":333774},{\"date\":\"2023-01-04\",\"value\":348636},{\"date\":\"2023-01-05\",\"value\":278903}],\"steps\":3}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/prediction")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/prediction");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"dataset\":[{\"date\":\"2023-01-01\",\"value\":353459},{\"date\":\"2023-01-02\",\"value\":313734},{\"date\":\"2023-01-03\",\"value\":333774},{\"date\":\"2023-01-04\",\"value\":348636},{\"date\":\"2023-01-05\",\"value\":278903}],\"steps\":3}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "prediction": [
            {
                  "date": "2023-01-08 00:00:00",
                  "value": 315214.5625
            },
            {
                  "date": "2023-01-07 00:00:00",
                  "value": 320094.71875
            },
            {
                  "date": "2023-01-06 00:00:00",
                  "value": 316329.9375
            }
      ],
      "steps": 3,
      "_usage": {
            "input_tokens": 53,
            "output_tokens": 49,
            "inference_time_tokens": 787,
            "total_tokens": 889
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/profanity.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.validate.profanity({
      "text": "This is a sample text that might contain inappropriate language."
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.validate.profanity({
      "text": "This is a sample text that might contain inappropriate language."
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/validate/profanity \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"text":"This is a sample text that might contain inappropriate language."}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/validate/profanity');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"text":"This is a sample text that might contain inappropriate language."}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/validate/profanity')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'text' => 'This is a sample text that might contain inappropriate language.'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"text":"This is a sample text that might contain inappropriate language."}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/validate/profanity", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/validate/profanity"))
    .POST(BodyPublishers.ofString("{\"text\":\"This is a sample text that might contain inappropriate language.\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "text": "This is a sample text that might contain inappropriate language."
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/validate/profanity")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"text":"This is a sample text that might contain inappropriate language."}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/validate/profanity');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"text\":\"This is a sample text that might contain inappropriate language.\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/validate/profanity")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/validate/profanity");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"text\":\"This is a sample text that might contain inappropriate language.\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "profanities_found": false,
      "profanities": [],
      "clean_text": "This is a sample text that might contain inappropriate language.",
      "_usage": {
            "input_tokens": 20,
            "output_tokens": 35,
            "inference_time_tokens": 175,
            "total_tokens": 230
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/prompt-engine-create.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.prompt_engine.create({
      "prompt": "Tell me a story about {about}",
      "inputs": [
            {
                  "key": "about",
                  "optional": false,
                  "initial_value": "Leaning Tower of Pisa"
            }
      ],
      "return_prompt": "Return the result in a markdown format",
      "prompt_guard": [
            "sexual_content",
            "defamation"
      ]
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.prompt_engine.create({
      "prompt": "Tell me a story about {about}",
      "inputs": [
            {
                  "key": "about",
                  "optional": false,
                  "initial_value": "Leaning Tower of Pisa"
            }
      ],
      "return_prompt": "Return the result in a markdown format",
      "prompt_guard": [
            "sexual_content",
            "defamation"
      ]
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/prompt_engine \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"prompt":"Tell me a story about {about}","inputs":[{"key":"about","optional":false,"initial_value":"Leaning Tower of Pisa"}],"return_prompt":"Return the result in a markdown format","prompt_guard":["sexual_content","defamation"]}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/prompt_engine');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"prompt":"Tell me a story about {about}","inputs":[{"key":"about","optional":false,"initial_value":"Leaning Tower of Pisa"}],"return_prompt":"Return the result in a markdown format","prompt_guard":["sexual_content","defamation"]}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/prompt_engine')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'prompt' => 'Tell me a story about {about}',
  'inputs' => [
    {
      'key' => 'about',
      'optional' => false,
      'initial_value' => 'Leaning Tower of Pisa'
    }
  ],
  'return_prompt' => 'Return the result in a markdown format',
  'prompt_guard' => [
    'sexual_content',
    'defamation'
  ]
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"prompt":"Tell me a story about {about}","inputs":[{"key":"about","optional":false,"initial_value":"Leaning Tower of Pisa"}],"return_prompt":"Return the result in a markdown format","prompt_guard":["sexual_content","defamation"]}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/prompt_engine", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/prompt_engine"))
    .POST(BodyPublishers.ofString("{\"prompt\":\"Tell me a story about {about}\",\"inputs\":[{\"key\":\"about\",\"optional\":false,\"initial_value\":\"Leaning Tower of Pisa\"}],\"return_prompt\":\"Return the result in a markdown format\",\"prompt_guard\":[\"sexual_content\",\"defamation\"]}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "prompt": "Tell me a story about {about}",
    "inputs": [
        [
            "key": "about",
            "optional": false,
            "initial_value": "Leaning Tower of Pisa"
        ]
    ],
    "return_prompt": "Return the result in a markdown format",
    "prompt_guard": [
        "sexual_content",
        "defamation"
    ]
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/prompt_engine")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"prompt":"Tell me a story about {about}","inputs":[{"key":"about","optional":false,"initial_value":"Leaning Tower of Pisa"}],"return_prompt":"Return the result in a markdown format","prompt_guard":["sexual_content","defamation"]}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/prompt_engine');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"prompt\":\"Tell me a story about {about}\",\"inputs\":[{\"key\":\"about\",\"optional\":false,\"initial_value\":\"Leaning Tower of Pisa\"}],\"return_prompt\":\"Return the result in a markdown format\",\"prompt_guard\":[\"sexual_content\",\"defamation\"]}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/prompt_engine")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/prompt_engine");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"prompt\":\"Tell me a story about {about}\",\"inputs\":[{\"key\":\"about\",\"optional\":false,\"initial_value\":\"Leaning Tower of Pisa\"}],\"return_prompt\":\"Return the result in a markdown format\",\"prompt_guard\":[\"sexual_content\",\"defamation\"]}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "prompt_engine_id": "d8107de4-58fe-4005-a9ad-0ca8ca9cfea5",
      "optimized_prompt": "Please write a detailed and engaging story about {about}, including vivid descriptions, well-developed characters, and a clear beginning, middle, and end.",
      "_usage": {
            "input_tokens": 58,
            "output_tokens": 63,
            "inference_time_tokens": 1158,
            "total_tokens": 1279
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/prompt-engine-delete.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.prompt_engine.delete({
      "promptId": "dc578c69-6eb5-4c5b-82ab-9f74077cfdd5"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.prompt_engine.delete({
      "promptId": "dc578c69-6eb5-4c5b-82ab-9f74077cfdd5"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/prompt_engine/${id}?promptId=dc578c69-6eb5-4c5b-82ab-9f74077cfdd5 \
 -X DELETE \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/prompt_engine/' . getenv('id') ?? '' . '?promptId=dc578c69-6eb5-4c5b-82ab-9f74077cfdd5');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'DELETE');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'

uri = URI('https://api.jigsawstack.com/v1/prompt_engine/' + ENV['id'])
params = {
  :promptId => 'dc578c69-6eb5-4c5b-82ab-9f74077cfdd5',
}
uri.query = URI.encode_www_form(params)

req = Net::HTTP::Delete.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"os"
)

func main() {
	client := &http.Client{}
	req, err := http.NewRequest("DELETE", "https://api.jigsawstack.com/v1/prompt_engine/" + os.Getenv("id") + "?promptId=dc578c69-6eb5-4c5b-82ab-9f74077cfdd5", nil)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.lang.System;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/prompt_engine/" + System.getenv("id") + "?promptId=dc578c69-6eb5-4c5b-82ab-9f74077cfdd5"))
    .DELETE()
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let url = URL(string: "https://api.jigsawstack.com/v1/prompt_engine/" + (ProcessInfo.processInfo.environment["id"] ?? "") + "?promptId=dc578c69-6eb5-4c5b-82ab-9f74077cfdd5")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "DELETE"
request.allHTTPHeaderFields = headers

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'dart:io';
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final params = {
    'promptId': 'dc578c69-6eb5-4c5b-82ab-9f74077cfdd5',
  };

  final url = Uri.parse('https://api.jigsawstack.com/v1/prompt_engine/' + (Platform.environment['id'] ?? ''))
      .replace(queryParameters: params);

  final res = await http.delete(url, headers: headers);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.delete error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import java.lang.System
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/prompt_engine/" + System.getenv("id") ?: "" + "?promptId=dc578c69-6eb5-4c5b-82ab-9f74077cfdd5")
  .delete("".toRequestBody())
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System;
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Delete, "https://api.jigsawstack.com/v1/prompt_engine/" + Environment.GetEnvironmentVariable("id") + "?promptId=dc578c69-6eb5-4c5b-82ab-9f74077cfdd5");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    

<ResponseExample></ResponseExample>
    

 This is the content for the doc snippets/code-req-examples/prompt-engine-list.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.prompt_engine.list({
      "limit": "10"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.prompt_engine.list({
      "limit": "10"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/prompt_engine?limit=10 \
 -X GET \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/prompt_engine?limit=10');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'

uri = URI('https://api.jigsawstack.com/v1/prompt_engine')
params = {
  :limit => '10',
}
uri.query = URI.encode_www_form(params)

req = Net::HTTP::Get.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
)

func main() {
	client := &http.Client{}
	req, err := http.NewRequest("GET", "https://api.jigsawstack.com/v1/prompt_engine?limit=10", nil)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/prompt_engine?limit=10"))
    .GET()
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let url = URL(string: "https://api.jigsawstack.com/v1/prompt_engine?limit=10")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.allHTTPHeaderFields = headers

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final params = {
    'limit': '10',
  };

  final url = Uri.parse('https://api.jigsawstack.com/v1/prompt_engine')
      .replace(queryParameters: params);

  final res = await http.get(url, headers: headers);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.get error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.OkHttpClient
import okhttp3.Request

val client = OkHttpClient()

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/prompt_engine?limit=10")
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, "https://api.jigsawstack.com/v1/prompt_engine?limit=10");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "prompt_engines": [
            {
                  "id": "e583dd90-69b7-4895-a1f9-eff6ce939e14",
                  "prompt": "Tell me a story about {about}",
                  "inputs": [
                        {
                              "key": "about",
                              "optional": false
                        }
                  ],
                  "return_prompt": "Return the result in a markdown format",
                  "return_prompt_type": "string",
                  "created_at": "2025-06-04T05:55:44.003902+00:00"
            },
            {
                  "id": "5c69bbd1-02a3-44ad-8804-6a798a95d2e8",
                  "prompt": "Tell me a story about {about}",
                  "inputs": [
                        {
                              "key": "about",
                              "optional": false
                        }
                  ],
                  "return_prompt": "Return the result in a markdown format",
                  "return_prompt_type": "string",
                  "created_at": "2025-06-04T05:01:09.530531+00:00"
            },
            {
                  "id": "b2a69f1f-e5d7-4645-9ab3-cc79b495e161",
                  "prompt": "Tell me a story about {about}",
                  "inputs": [
                        {
                              "key": "about",
                              "optional": false
                        }
                  ],
                  "return_prompt": "Return the result in a markdown format",
                  "return_prompt_type": "string",
                  "created_at": "2025-05-23T18:19:04.07942+00:00"
            },
            {
                  "id": "0739572e-a0e2-4e7c-972c-3352b697fc91",
                  "prompt": "Tell me a story about {about}",
                  "inputs": [
                        {
                              "key": "about",
                              "optional": false
                        }
                  ],
                  "return_prompt": "Return the result in a markdown format",
                  "return_prompt_type": "string",
                  "created_at": "2025-05-23T17:43:27.641541+00:00"
            },
            {
                  "id": "f1951057-9de3-48de-9e26-9ce270d1b38b",
                  "prompt": "Tell me a story about {about}",
                  "inputs": [
                        {
                              "key": "about",
                              "optional": false
                        }
                  ],
                  "return_prompt": "Return the result in a markdown format",
                  "return_prompt_type": "string",
                  "created_at": "2025-05-22T23:02:56.066965+00:00"
            },
            {
                  "id": "b3cfc6ee-13f8-4e94-b6b3-d55009810b3d",
                  "prompt": "Tell me a story about {about}",
                  "inputs": [
                        {
                              "key": "about",
                              "optional": false
                        }
                  ],
                  "return_prompt": "Return the result in a markdown format",
                  "return_prompt_type": "string",
                  "created_at": "2025-05-22T04:35:06.211182+00:00"
            },
            {
                  "id": "49093ef4-ed72-41d6-9771-4a1298b59aa0",
                  "prompt": "Tell me a story about {about}",
                  "inputs": [
                        {
                              "key": "about",
                              "optional": false
                        }
                  ],
                  "return_prompt": "Return the result in a markdown format",
                  "return_prompt_type": "string",
                  "created_at": "2025-05-02T04:01:42.926031+00:00"
            },
            {
                  "id": "d9f4d7ad-30ee-4479-98d9-64eaa477dd02",
                  "prompt": "Tell me a story about {about}",
                  "inputs": [
                        {
                              "key": "about",
                              "optional": false
                        }
                  ],
                  "return_prompt": "Return the result in a markdown format",
                  "return_prompt_type": "string",
                  "created_at": "2025-05-02T02:37:10.137294+00:00"
            },
            {
                  "id": "a0d8374a-7914-41d9-ae36-707cfcc7b7bb",
                  "prompt": "Tell me a story about {about}",
                  "inputs": [
                        {
                              "key": "about",
                              "optional": false
                        }
                  ],
                  "return_prompt": "Return the result in a markdown format",
                  "return_prompt_type": "string",
                  "created_at": "2025-05-02T02:27:26.121562+00:00"
            },
            {
                  "id": "66954c1f-78ce-453e-aeb0-5b645a4a5482",
                  "prompt": "Tell me a story about {about}",
                  "inputs": [
                        {
                              "key": "about",
                              "optional": false
                        }
                  ],
                  "return_prompt": "Return the result in a markdown format",
                  "return_prompt_type": "string",
                  "created_at": "2025-05-01T18:50:44.693271+00:00"
            }
      ],
      "page": 0,
      "limit": 10,
      "has_more": true,
      "_usage": {
            "input_tokens": 4,
            "output_tokens": 683,
            "inference_time_tokens": 253,
            "total_tokens": 940
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/prompt-engine-run-direct.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.prompt_engine.run_direct({
      "prompt": "Tell me a story about {about}",
      "inputs": [
            {
                  "key": "about",
                  "optional": false,
                  "initial_value": "Leaning Tower of Pisa"
            }
      ],
      "return_prompt": "Return the result in a markdown format",
      "prompt_guard": [
            "sexual_content",
            "defamation"
      ],
      "input_values": {
            "about": "Santorini"
      }
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.prompt_engine.run_direct({
      "prompt": "Tell me a story about {about}",
      "inputs": [
            {
                  "key": "about",
                  "optional": false,
                  "initial_value": "Leaning Tower of Pisa"
            }
      ],
      "return_prompt": "Return the result in a markdown format",
      "prompt_guard": [
            "sexual_content",
            "defamation"
      ],
      "input_values": {
            "about": "Santorini"
      }
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/prompt_engine/run \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"prompt":"Tell me a story about {about}","inputs":[{"key":"about","optional":false,"initial_value":"Leaning Tower of Pisa"}],"return_prompt":"Return the result in a markdown format","prompt_guard":["sexual_content","defamation"],"input_values":{"about":"Santorini"}}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/prompt_engine/run');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"prompt":"Tell me a story about {about}","inputs":[{"key":"about","optional":false,"initial_value":"Leaning Tower of Pisa"}],"return_prompt":"Return the result in a markdown format","prompt_guard":["sexual_content","defamation"],"input_values":{"about":"Santorini"}}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/prompt_engine/run')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'prompt' => 'Tell me a story about {about}',
  'inputs' => [
    {
      'key' => 'about',
      'optional' => false,
      'initial_value' => 'Leaning Tower of Pisa'
    }
  ],
  'return_prompt' => 'Return the result in a markdown format',
  'prompt_guard' => [
    'sexual_content',
    'defamation'
  ],
  'input_values' => {
    'about' => 'Santorini'
  }
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"prompt":"Tell me a story about {about}","inputs":[{"key":"about","optional":false,"initial_value":"Leaning Tower of Pisa"}],"return_prompt":"Return the result in a markdown format","prompt_guard":["sexual_content","defamation"],"input_values":{"about":"Santorini"}}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/prompt_engine/run", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/prompt_engine/run"))
    .POST(BodyPublishers.ofString("{\"prompt\":\"Tell me a story about {about}\",\"inputs\":[{\"key\":\"about\",\"optional\":false,\"initial_value\":\"Leaning Tower of Pisa\"}],\"return_prompt\":\"Return the result in a markdown format\",\"prompt_guard\":[\"sexual_content\",\"defamation\"],\"input_values\":{\"about\":\"Santorini\"}}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "prompt": "Tell me a story about {about}",
    "inputs": [
        [
            "key": "about",
            "optional": false,
            "initial_value": "Leaning Tower of Pisa"
        ]
    ],
    "return_prompt": "Return the result in a markdown format",
    "prompt_guard": [
        "sexual_content",
        "defamation"
    ],
    "input_values": [
        "about": "Santorini"
    ]
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/prompt_engine/run")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"prompt":"Tell me a story about {about}","inputs":[{"key":"about","optional":false,"initial_value":"Leaning Tower of Pisa"}],"return_prompt":"Return the result in a markdown format","prompt_guard":["sexual_content","defamation"],"input_values":{"about":"Santorini"}}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/prompt_engine/run');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"prompt\":\"Tell me a story about {about}\",\"inputs\":[{\"key\":\"about\",\"optional\":false,\"initial_value\":\"Leaning Tower of Pisa\"}],\"return_prompt\":\"Return the result in a markdown format\",\"prompt_guard\":[\"sexual_content\",\"defamation\"],\"input_values\":{\"about\":\"Santorini\"}}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/prompt_engine/run")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/prompt_engine/run");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"prompt\":\"Tell me a story about {about}\",\"inputs\":[{\"key\":\"about\",\"optional\":false,\"initial_value\":\"Leaning Tower of Pisa\"}],\"return_prompt\":\"Return the result in a markdown format\",\"prompt_guard\":[\"sexual_content\",\"defamation\"],\"input_values\":{\"about\":\"Santorini\"}}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "result": "Okay, here's a story about Santorini, set with the current ISO time in mind:\n\n***\n\nThe Aegean wind, a salty whisper, tugged at Eleni's white linen dress as she stood on the caldera's edge. The time, according to her phone, was 2025-06-09T23:03:03.049Z. Almost midnight. The sky, a deep indigo velvet, was studded with a million diamonds, mirroring the twinkling lights of Oia clinging precariously to the cliff face below.\n\nEleni wasn't a tourist. She was a descendant of the islanders who had rebuilt their lives after the devastating volcanic eruption millennia ago. Her family had been fishing the Aegean for generations, their lives intertwined with the rhythm of the sea and the stoic beauty of Santorini.\n\nTonight, though, she wasn't thinking of fishing. She was thinking of her grandmother, Yaya Irini, who had passed away just a few weeks prior. Yaya Irini had been the keeper of the island's stories, the one who remembered the old ways, the whispers of the gods, and the secrets hidden within the volcanic rock.\n\nYaya Irini had always told Eleni that the caldera held more than just water. It held memories. She believed that on certain nights, when the moon was just right and the wind carried the scent of thyme and salt, you could hear the echoes of the past.\n\nEleni closed her eyes, breathing deeply. The air was thick with the scent of the sea and the faint, earthy aroma of the volcanic soil. She tried to focus, to listen for the whispers Yaya Irini had spoken of.\n\nSuddenly, a faint melody drifted on the wind. It was a haunting, melancholic tune played on a bouzouki, a sound Eleni hadn't heard in years. It was the music her grandfather used to play, the music that always made Yaya Irini smile.\n\nTears welled in Eleni's eyes. She opened them, searching the darkness for the source of the music. There was no one there. Just the wind, the stars, and the silent, watchful caldera.\n\nThen, she saw it. A faint, shimmering light rising from the water below. It pulsed gently, like a heartbeat, and as it grew brighter, Eleni could almost make out figures dancing in the ethereal glow. They were dressed in clothes from a bygone era, their faces illuminated by the otherworldly light.\n\nEleni knew, with a certainty that settled deep in her soul, that she was witnessing a memory. A fragment of the past, brought to life by the magic of the island and the love of her grandmother.\n\nThe music swelled, the dancing intensified, and for a brief, fleeting moment, Eleni felt connected to something ancient and profound. She felt the weight of history, the resilience of her people, and the enduring power of love.\n\nAs quickly as it had appeared, the light began to fade. The music softened, the dancing figures dissolved into the darkness, and the caldera returned to its silent vigil.\n\nEleni stood there, breathless, her heart pounding in her chest. The time was still 2025-06-09T23:03:03.049Z, but for Eleni, time had stood still. She had glimpsed the past, and in doing so, she had found a renewed sense of hope for the future. She knew that Yaya Irini's stories would live on, not just in her memory, but in the very heart of Santorini. And she knew that she, Eleni, would be the one to keep them alive.\n",
      "message": "It is recommended to store the prompt engine and execute it using the ID rather than running it directly for the best performance and reliability. Learn more: https://jigsawstack.com/docs/api-reference/prompt-engine/create",
      "_usage": {
            "input_tokens": 68,
            "output_tokens": 877,
            "inference_time_tokens": 5633,
            "total_tokens": 6578
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/prompt-engine-run.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.prompt_engine.run({
      "input_values": {
            "text": "How to get started with JigsawStack?"
      },
      "id": "0073d008-da9b-4c27-90a8-0240f3ecd4f5"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.prompt_engine.run({
      "input_values": {
            "text": "How to get started with JigsawStack?"
      },
      "id": "0073d008-da9b-4c27-90a8-0240f3ecd4f5"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/prompt_engine/0073d008-da9b-4c27-90a8-0240f3ecd4f5?id=0073d008-da9b-4c27-90a8-0240f3ecd4f5 \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"input_values":{"text":"How to get started with JigsawStack?"}}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/prompt_engine/0073d008-da9b-4c27-90a8-0240f3ecd4f5?id=0073d008-da9b-4c27-90a8-0240f3ecd4f5');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"input_values":{"text":"How to get started with JigsawStack?"}}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/prompt_engine/0073d008-da9b-4c27-90a8-0240f3ecd4f5')
params = {
  :id => '0073d008-da9b-4c27-90a8-0240f3ecd4f5',
}
uri.query = URI.encode_www_form(params)

req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'input_values' => {
    'text' => 'How to get started with JigsawStack?'
  }
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"input_values":{"text":"How to get started with JigsawStack?"}}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/prompt_engine/0073d008-da9b-4c27-90a8-0240f3ecd4f5?id=0073d008-da9b-4c27-90a8-0240f3ecd4f5", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/prompt_engine/0073d008-da9b-4c27-90a8-0240f3ecd4f5?id=0073d008-da9b-4c27-90a8-0240f3ecd4f5"))
    .POST(BodyPublishers.ofString("{\"input_values\":{\"text\":\"How to get started with JigsawStack?\"}}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "input_values": [
        "text": "How to get started with JigsawStack?"
    ]
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/prompt_engine/0073d008-da9b-4c27-90a8-0240f3ecd4f5?id=0073d008-da9b-4c27-90a8-0240f3ecd4f5")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final params = {
    'id': '0073d008-da9b-4c27-90a8-0240f3ecd4f5',
  };

  final data = '{"input_values":{"text":"How to get started with JigsawStack?"}}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/prompt_engine/0073d008-da9b-4c27-90a8-0240f3ecd4f5')
      .replace(queryParameters: params);

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"input_values\":{\"text\":\"How to get started with JigsawStack?\"}}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/prompt_engine/0073d008-da9b-4c27-90a8-0240f3ecd4f5?id=0073d008-da9b-4c27-90a8-0240f3ecd4f5")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/prompt_engine/0073d008-da9b-4c27-90a8-0240f3ecd4f5?id=0073d008-da9b-4c27-90a8-0240f3ecd4f5");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"input_values\":{\"text\":\"How to get started with JigsawStack?\"}}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "result": {
            "outline": [
                  {
                        "section": "Introduction to JigsawStack"
                  },
                  {
                        "section": "Prerequisites"
                  },
                  {
                        "section": "Installation and Setup"
                  },
                  {
                        "section": "Creating Your First Project"
                  },
                  {
                        "section": "Understanding the Core Concepts"
                  },
                  {
                        "section": "Exploring the JigsawStack Ecosystem"
                  },
                  {
                        "section": "Troubleshooting Common Issues"
                  },
                  {
                        "section": "Next Steps and Resources"
                  }
            ]
      },
      "_usage": {
            "input_tokens": 17,
            "output_tokens": 92,
            "inference_time_tokens": 1402,
            "total_tokens": 1511
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/search-suggestions.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.web.search_suggestions({
      "query": "What is the capital"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.web.search_suggestions({
      "query": "What is the capital"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/web/search/suggest?query=What+is+the+capital \
 -X GET \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/web/search/suggest?query=What+is+the+capital');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'

uri = URI('https://api.jigsawstack.com/v1/web/search/suggest')
params = {
  :query => 'What is the capital',
}
uri.query = URI.encode_www_form(params)

req = Net::HTTP::Get.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
)

func main() {
	client := &http.Client{}
	req, err := http.NewRequest("GET", "https://api.jigsawstack.com/v1/web/search/suggest?query=What+is+the+capital", nil)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/web/search/suggest?query=What+is+the+capital"))
    .GET()
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let url = URL(string: "https://api.jigsawstack.com/v1/web/search/suggest?query=What+is+the+capital")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.allHTTPHeaderFields = headers

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final params = {
    'query': 'What is the capital',
  };

  final url = Uri.parse('https://api.jigsawstack.com/v1/web/search/suggest')
      .replace(queryParameters: params);

  final res = await http.get(url, headers: headers);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.get error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.OkHttpClient
import okhttp3.Request

val client = OkHttpClient()

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/web/search/suggest?query=What+is+the+capital")
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, "https://api.jigsawstack.com/v1/web/search/suggest?query=What+is+the+capital");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "suggestions": [
            "what is the capital of california",
            "what is the capital of australia",
            "what is the capital of canada",
            "what is the capital of chicago",
            "what is the capital of the united states",
            "what is the capital of texas",
            "what is the capital of france",
            "what is the capital of england",
            "what is the capital of florida",
            "what is the capital of italy",
            "what is the capital of japan",
            "what is the capital of new york",
            "what is the capital of georgia",
            "what is the capital of alaska",
            "what is the capital of china"
      ],
      "_usage": {
            "input_tokens": 8,
            "output_tokens": 133,
            "inference_time_tokens": 248,
            "total_tokens": 389
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/sentiment.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.sentiment({
      "text": "I love this product! It's amazing but the delivery was a bit late."
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.sentiment({
      "text": "I love this product! It's amazing but the delivery was a bit late."
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/sentiment \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"text":"I love this product! It\'s amazing but the delivery was a bit late."}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/sentiment');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"text":"I love this product! It\\s');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'

uri = URI('https://api.jigsawstack.com/v1/ai/sentiment')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = '{"text":"I love this product! It\\s'

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"text":"I love this product! It\s`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/sentiment", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/sentiment"))
    .POST(BodyPublishers.ofString("{\"text\":\"I love this product! It\\s"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let url = URL(string: "https://api.jigsawstack.com/v1/ai/sentiment")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = "{\"text\":\"I love this product! It\\s".data(using: .utf8)

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"text":"I love this product! It\\s';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/sentiment');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"text\":\"I love this product! It\\s"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/sentiment")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/sentiment");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"text\":\"I love this product! It\\s");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "sentiment": {
            "emotion": "love",
            "sentiment": "positive",
            "score": 0.85,
            "sentences": [
                  {
                        "text": "I love this product!",
                        "emotion": "love",
                        "sentiment": "positive",
                        "score": 0.9
                  },
                  {
                        "text": "It's amazing but the delivery was a bit late.",
                        "emotion": "satisfaction",
                        "sentiment": "positive",
                        "score": 0.8
                  }
            ]
      },
      "_usage": {
            "input_tokens": 20,
            "output_tokens": 75,
            "inference_time_tokens": 4205,
            "total_tokens": 4300
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/spam-check.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.validate.spam_check({
      "text": "Congratulations! You've won a free iPhone! Click here to claim now!"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.validate.spam_check({
      "text": "Congratulations! You've won a free iPhone! Click here to claim now!"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/validate/spam_check \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"text":"Congratulations! You\'ve won a free iPhone! Click here to claim now!"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/validate/spam_check');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"text":"Congratulations! You\\ve');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'

uri = URI('https://api.jigsawstack.com/v1/validate/spam_check')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = '{"text":"Congratulations! You\\ve'

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"text":"Congratulations! You\ve`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/validate/spam_check", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/validate/spam_check"))
    .POST(BodyPublishers.ofString("{\"text\":\"Congratulations! You\\ve"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let url = URL(string: "https://api.jigsawstack.com/v1/validate/spam_check")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = "{\"text\":\"Congratulations! You\\ve".data(using: .utf8)

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"text":"Congratulations! You\\ve';

  final url = Uri.parse('https://api.jigsawstack.com/v1/validate/spam_check');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"text\":\"Congratulations! You\\ve"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/validate/spam_check")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/validate/spam_check");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"text\":\"Congratulations! You\\ve");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "check": {
            "score": 0.95,
            "is_spam": true
      },
      "_usage": {
            "input_tokens": 20,
            "output_tokens": 14,
            "inference_time_tokens": 686,
            "total_tokens": 720
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/speech-to-text.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.audio.speech_to_text({
      "url": "https://jigsawstack.com/preview/stt-example.wav"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.audio.speech_to_text({
      "url": "https://jigsawstack.com/preview/stt-example.wav"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/transcribe \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"url":"https://jigsawstack.com/preview/stt-example.wav"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/transcribe');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"url":"https://jigsawstack.com/preview/stt-example.wav"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/ai/transcribe')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'url' => 'https://jigsawstack.com/preview/stt-example.wav'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"url":"https://jigsawstack.com/preview/stt-example.wav"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/transcribe", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/transcribe"))
    .POST(BodyPublishers.ofString("{\"url\":\"https://jigsawstack.com/preview/stt-example.wav\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "url": "https://jigsawstack.com/preview/stt-example.wav"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/ai/transcribe")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"url":"https://jigsawstack.com/preview/stt-example.wav"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/transcribe');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"url\":\"https://jigsawstack.com/preview/stt-example.wav\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/transcribe")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/transcribe");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"url\":\"https://jigsawstack.com/preview/stt-example.wav\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "text": " The little tales they tell are false The door was barred, locked and bolted as well Ripe pears are fit for a queen's table A big wet stain was on the round carpet The kite dipped and swayed but stayed aloft The pleasant hours fly by much too soon The room was crowded with a mild wob The room was crowded with a wild mob This strong arm shall shield your honour She blushed when he gave her a white orchid The beetle droned in the hot June sun",
      "chunks": [
            {
                  "timestamp": [
                        0,
                        2.39
                  ],
                  "text": " The little tales"
            },
            {
                  "timestamp": [
                        2.39,
                        4.78
                  ],
                  "text": "they tell are false"
            },
            {
                  "timestamp": [
                        4.78,
                        7.130000000000001
                  ],
                  "text": " The door was barred,"
            },
            {
                  "timestamp": [
                        7.130000000000001,
                        9.48
                  ],
                  "text": "locked and bolted as well"
            },
            {
                  "timestamp": [
                        9.48,
                        11.27
                  ],
                  "text": " Ripe pears are fit"
            },
            {
                  "timestamp": [
                        11.27,
                        13.06
                  ],
                  "text": "for a queen's table"
            },
            {
                  "timestamp": [
                        13.06,
                        15.149999999999999
                  ],
                  "text": " A big wet stain"
            },
            {
                  "timestamp": [
                        15.149999999999999,
                        17.24
                  ],
                  "text": "was on the round carpet"
            },
            {
                  "timestamp": [
                        17.24,
                        19.509999999999998
                  ],
                  "text": " The kite dipped and"
            },
            {
                  "timestamp": [
                        19.509999999999998,
                        21.78
                  ],
                  "text": "swayed but stayed aloft"
            },
            {
                  "timestamp": [
                        21.78,
                        24.04
                  ],
                  "text": " The pleasant hours fly"
            },
            {
                  "timestamp": [
                        24.04,
                        26.3
                  ],
                  "text": "by much too soon"
            },
            {
                  "timestamp": [
                        26.3,
                        28.53
                  ],
                  "text": " The room was crowded"
            },
            {
                  "timestamp": [
                        28.53,
                        30.76
                  ],
                  "text": "with a mild wob"
            },
            {
                  "timestamp": [
                        30.76,
                        32.92
                  ],
                  "text": " The room was crowded"
            },
            {
                  "timestamp": [
                        32.92,
                        35.08
                  ],
                  "text": "with a wild mob"
            },
            {
                  "timestamp": [
                        35.08,
                        37.16
                  ],
                  "text": " This strong arm"
            },
            {
                  "timestamp": [
                        37.16,
                        39.24
                  ],
                  "text": "shall shield your honour"
            },
            {
                  "timestamp": [
                        39.24,
                        41.59
                  ],
                  "text": " She blushed when he"
            },
            {
                  "timestamp": [
                        41.59,
                        43.94
                  ],
                  "text": "gave her a white orchid"
            },
            {
                  "timestamp": [
                        43.94,
                        46.22
                  ],
                  "text": " The beetle droned in"
            },
            {
                  "timestamp": [
                        46.22,
                        48.5
                  ],
                  "text": "the hot June sun"
            }
      ],
      "_usage": {
            "input_tokens": 8,
            "output_tokens": 227,
            "inference_time_tokens": 588,
            "total_tokens": 823
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/spellcheck.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.validate.spellcheck({
      "text": "This sentense has a speling mistake."
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.validate.spellcheck({
      "text": "This sentense has a speling mistake."
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/validate/spell_check \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"text":"This sentense has a speling mistake."}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/validate/spell_check');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"text":"This sentense has a speling mistake."}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/validate/spell_check')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'text' => 'This sentense has a speling mistake.'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"text":"This sentense has a speling mistake."}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/validate/spell_check", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/validate/spell_check"))
    .POST(BodyPublishers.ofString("{\"text\":\"This sentense has a speling mistake.\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "text": "This sentense has a speling mistake."
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/validate/spell_check")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"text":"This sentense has a speling mistake."}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/validate/spell_check');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"text\":\"This sentense has a speling mistake.\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/validate/spell_check")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/validate/spell_check");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"text\":\"This sentense has a speling mistake.\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "misspellings_found": true,
      "misspellings": [
            {
                  "word": "sentense",
                  "startIndex": 5,
                  "endIndex": 13,
                  "expected": [
                        "sentence"
                  ],
                  "auto_corrected": true
            },
            {
                  "word": "speling",
                  "startIndex": 20,
                  "endIndex": 27,
                  "expected": [
                        "spelling",
                        "spewing",
                        "spieling"
                  ],
                  "auto_corrected": true
            }
      ],
      "auto_correct_text": "This sentence has a spelling mistake.",
      "_usage": {
            "input_tokens": 13,
            "output_tokens": 83,
            "inference_time_tokens": 201,
            "total_tokens": 297
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/sql.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.text_to_sql({
      "database": "postgresql",
      "prompt": "Find all transactions with amounts exceeding $10,000, sorted by transaction date",
      "sql_schema": "\n            CREATE TABLE Transactions (\n              transaction_id INT PRIMARY KEY, \n              user_id INT NOT NULL,\n              total_amount DECIMAL(10, 2) NOT NULL, \n              transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n              status VARCHAR(20) DEFAULT 'pending',\n              FOREIGN KEY(user_id) REFERENCES Users(user_id)\n            )\n          "
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.text_to_sql({
      "database": "postgresql",
      "prompt": "Find all transactions with amounts exceeding $10,000, sorted by transaction date",
      "sql_schema": "\n            CREATE TABLE Transactions (\n              transaction_id INT PRIMARY KEY, \n              user_id INT NOT NULL,\n              total_amount DECIMAL(10, 2) NOT NULL, \n              transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n              status VARCHAR(20) DEFAULT 'pending',\n              FOREIGN KEY(user_id) REFERENCES Users(user_id)\n            )\n          "
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/sql \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"database":"postgresql","prompt":"Find all transactions with amounts exceeding $10,000, sorted by transaction date","sql_schema":"\\n            CREATE TABLE Transactions \(\\n              transaction_id INT PRIMARY KEY, \\n              user_id INT NOT NULL,\\n              total_amount DECIMAL\(10, 2\) NOT NULL, \\n              transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n              status VARCHAR\(20\) DEFAULT \'pending\',\\n              FOREIGN KEY\(user_id\) REFERENCES Users\(user_id\)\\n            \)\\n          "}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/sql');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"database":"postgresql","prompt":"Find all transactions with amounts exceeding $10,000, sorted by transaction date","sql_schema":"\\\\n            CREATE TABLE Transactions \\(\\\\n              transaction_id INT PRIMARY KEY, \\\\n              user_id INT NOT NULL,\\\\n              total_amount DECIMAL\\(10, 2\\) NOT NULL, \\\\n              transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\\\n              status VARCHAR\\(20\\) DEFAULT \\pending\',\\n');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'

uri = URI('https://api.jigsawstack.com/v1/ai/sql')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = '{"database":"postgresql","prompt":"Find all transactions with amounts exceeding $10,000, sorted by transaction date","sql_schema":"\\\\n            CREATE TABLE Transactions \\(\\\\n              transaction_id INT PRIMARY KEY, \\\\n              user_id INT NOT NULL,\\\\n              total_amount DECIMAL\\(10, 2\\) NOT NULL, \\\\n              transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\\\n              status VARCHAR\\(20\\) DEFAULT \\pending\',\\n'

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"database":"postgresql","prompt":"Find all transactions with amounts exceeding $10,000, sorted by transaction date","sql_schema":"\\n            CREATE TABLE Transactions \(\\n              transaction_id INT PRIMARY KEY, \\n              user_id INT NOT NULL,\\n              total_amount DECIMAL\(10, 2\) NOT NULL, \\n              transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n              status VARCHAR\(20\) DEFAULT \pending',\n`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/sql", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/sql"))
    .POST(BodyPublishers.ofString("{\"database\":\"postgresql\",\"prompt\":\"Find all transactions with amounts exceeding $10,000, sorted by transaction date\",\"sql_schema\":\"\\\\n            CREATE TABLE Transactions \\(\\\\n              transaction_id INT PRIMARY KEY, \\\\n              user_id INT NOT NULL,\\\\n              total_amount DECIMAL\\(10, 2\\) NOT NULL, \\\\n              transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\\\n              status VARCHAR\\(20\\) DEFAULT \\pending',\\n"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let url = URL(string: "https://api.jigsawstack.com/v1/ai/sql")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = "{\"database\":\"postgresql\",\"prompt\":\"Find all transactions with amounts exceeding $10,000, sorted by transaction date\",\"sql_schema\":\"\\\\n            CREATE TABLE Transactions \\(\\\\n              transaction_id INT PRIMARY KEY, \\\\n              user_id INT NOT NULL,\\\\n              total_amount DECIMAL\\(10, 2\\) NOT NULL, \\\\n              transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\\\n              status VARCHAR\\(20\\) DEFAULT \\pending',\\n".data(using: .utf8)

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"database":"postgresql","prompt":"Find all transactions with amounts exceeding \$10,000, sorted by transaction date","sql_schema":"\\\\n            CREATE TABLE Transactions \\(\\\\n              transaction_id INT PRIMARY KEY, \\\\n              user_id INT NOT NULL,\\\\n              total_amount DECIMAL\\(10, 2\\) NOT NULL, \\\\n              transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\\\n              status VARCHAR\\(20\\) DEFAULT \\pending\',\\n';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/sql');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"database\":\"postgresql\",\"prompt\":\"Find all transactions with amounts exceeding \$10,000, sorted by transaction date\",\"sql_schema\":\"\\\\n            CREATE TABLE Transactions \\(\\\\n              transaction_id INT PRIMARY KEY, \\\\n              user_id INT NOT NULL,\\\\n              total_amount DECIMAL\\(10, 2\\) NOT NULL, \\\\n              transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\\\n              status VARCHAR\\(20\\) DEFAULT \\pending',\\n"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/sql")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/sql");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"database\":\"postgresql\",\"prompt\":\"Find all transactions with amounts exceeding $10,000, sorted by transaction date\",\"sql_schema\":\"\\\\n            CREATE TABLE Transactions \\(\\\\n              transaction_id INT PRIMARY KEY, \\\\n              user_id INT NOT NULL,\\\\n              total_amount DECIMAL\\(10, 2\\) NOT NULL, \\\\n              transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\\\n              status VARCHAR\\(20\\) DEFAULT \\pending',\\n");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "sql": "SELECT * FROM Transactions WHERE total_amount > 10000 ORDER BY transaction_date;",
      "_usage": {
            "input_tokens": 132,
            "output_tokens": 27,
            "inference_time_tokens": 1295,
            "total_tokens": 1454
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/summary.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.summary({
      "text": "The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral. It is situated behind the Cathedral and is the third-oldest structure in the city's Cathedral Square, after the Cathedral and the Baptistry. The tower's tilt began during construction in the 12th century, caused by an inadequate foundation on ground too soft on one side to properly support the structure's weight. The tilt increased in the decades before the structure was completed in the 14th century. It gradually increased until the structure was stabilized by efforts in the late 20th and early 21st centuries. The height of the tower is 55.86 metres (183.27 feet) from the ground on the low side and 56.67 metres (185.93 feet) on the high side. The width of the walls at the base is 2.44 m (8 ft 0.06 in). Its weight is estimated at 14,500 tonnes. The tower has 296 or 294 steps; the seventh floor has two fewer steps on the north-facing staircase.",
      "type": "points",
      "max_points": 3
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.summary({
      "text": "The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral. It is situated behind the Cathedral and is the third-oldest structure in the city's Cathedral Square, after the Cathedral and the Baptistry. The tower's tilt began during construction in the 12th century, caused by an inadequate foundation on ground too soft on one side to properly support the structure's weight. The tilt increased in the decades before the structure was completed in the 14th century. It gradually increased until the structure was stabilized by efforts in the late 20th and early 21st centuries. The height of the tower is 55.86 metres (183.27 feet) from the ground on the low side and 56.67 metres (185.93 feet) on the high side. The width of the walls at the base is 2.44 m (8 ft 0.06 in). Its weight is estimated at 14,500 tonnes. The tower has 296 or 294 steps; the seventh floor has two fewer steps on the north-facing staircase.",
      "type": "points",
      "max_points": 3
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/summary \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"text":"The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral. It is situated behind the Cathedral and is the third-oldest structure in the city\'s Cathedral Square, after the Cathedral and the Baptistry. The tower\'s tilt began during construction in the 12th century, caused by an inadequate foundation on ground too soft on one side to properly support the structure\'s weight. The tilt increased in the decades before the structure was completed in the 14th century. It gradually increased until the structure was stabilized by efforts in the late 20th and early 21st centuries. The height of the tower is 55.86 metres \(183.27 feet\) from the ground on the low side and 56.67 metres \(185.93 feet\) on the high side. The width of the walls at the base is 2.44 m \(8 ft 0.06 in\). Its weight is estimated at 14,500 tonnes. The tower has 296 or 294 steps\; the seventh floor has two fewer steps on the north-facing staircase.","type":"points","max_points":3}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/summary');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"text":"The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral. It is situated behind the Cathedral and is the third-oldest structure in the city\\s');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'

uri = URI('https://api.jigsawstack.com/v1/ai/summary')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = '{"text":"The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral. It is situated behind the Cathedral and is the third-oldest structure in the city\\s'

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"text":"The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral. It is situated behind the Cathedral and is the third-oldest structure in the city\s`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/summary", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/summary"))
    .POST(BodyPublishers.ofString("{\"text\":\"The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral. It is situated behind the Cathedral and is the third-oldest structure in the city\\s"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let url = URL(string: "https://api.jigsawstack.com/v1/ai/summary")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = "{\"text\":\"The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral. It is situated behind the Cathedral and is the third-oldest structure in the city\\s".data(using: .utf8)

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"text":"The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral. It is situated behind the Cathedral and is the third-oldest structure in the city\\s';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/summary');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"text\":\"The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral. It is situated behind the Cathedral and is the third-oldest structure in the city\\s"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/summary")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/summary");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"text\":\"The Leaning Tower of Pisa, or simply, the Tower of Pisa, is the campanile, or freestanding bell tower, of Pisa Cathedral. It is situated behind the Cathedral and is the third-oldest structure in the city\\s");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "summary": [
            "The Leaning Tower of Pisa is the freestanding bell tower of Pisa Cathedral.",
            "Its tilt began during 12th-century construction due to an inadequate foundation on soft ground.",
            "The tower's height is approximately 55-57 meters, and its weight is estimated at 14,500 tonnes."
      ],
      "_usage": {
            "input_tokens": 256,
            "output_tokens": 76,
            "inference_time_tokens": 993,
            "total_tokens": 1325
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/text-to-speech-create-clone.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.audio.create_clone({
      "url": "https://jigsawstack.com/preview/tts-clone-example.mp3",
      "name": "Elon Musk"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.audio.create_clone({
      "url": "https://jigsawstack.com/preview/tts-clone-example.mp3",
      "name": "Elon Musk"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/tts/clone \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"url":"https://jigsawstack.com/preview/tts-clone-example.mp3","name":"Elon Musk"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/tts/clone');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"url":"https://jigsawstack.com/preview/tts-clone-example.mp3","name":"Elon Musk"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/ai/tts/clone')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'url' => 'https://jigsawstack.com/preview/tts-clone-example.mp3',
  'name' => 'Elon Musk'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"url":"https://jigsawstack.com/preview/tts-clone-example.mp3","name":"Elon Musk"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/tts/clone", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/tts/clone"))
    .POST(BodyPublishers.ofString("{\"url\":\"https://jigsawstack.com/preview/tts-clone-example.mp3\",\"name\":\"Elon Musk\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "url": "https://jigsawstack.com/preview/tts-clone-example.mp3",
    "name": "Elon Musk"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/ai/tts/clone")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"url":"https://jigsawstack.com/preview/tts-clone-example.mp3","name":"Elon Musk"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/tts/clone');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"url\":\"https://jigsawstack.com/preview/tts-clone-example.mp3\",\"name\":\"Elon Musk\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/tts/clone")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/tts/clone");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"url\":\"https://jigsawstack.com/preview/tts-clone-example.mp3\",\"name\":\"Elon Musk\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "voice_id": "7bc2a1ed-a682-42c0-96d3-92e2976ea73f",
      "_usage": {
            "input_tokens": 7,
            "output_tokens": 4,
            "inference_time_tokens": 499,
            "total_tokens": 510
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/text-to-speech-delete-clone.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.audio.delete_clone({})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.audio.delete_clone({})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/tts/clone/${voice_id} \
 -X DELETE \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/tts/clone/' . getenv('voice_id') ?? '');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'DELETE');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'

uri = URI('https://api.jigsawstack.com/v1/ai/tts/clone/' + ENV['voice_id'])
req = Net::HTTP::Delete.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"os"
)

func main() {
	client := &http.Client{}
	req, err := http.NewRequest("DELETE", "https://api.jigsawstack.com/v1/ai/tts/clone/" + os.Getenv("voice_id"), nil)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.lang.System;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/tts/clone/" + System.getenv("voice_id")))
    .DELETE()
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let url = URL(string: "https://api.jigsawstack.com/v1/ai/tts/clone/" + (ProcessInfo.processInfo.environment["voice_id"] ?? ""))!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "DELETE"
request.allHTTPHeaderFields = headers

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'dart:io';
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/tts/clone/' + (Platform.environment['voice_id'] ?? ''));

  final res = await http.delete(url, headers: headers);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.delete error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import java.lang.System
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/tts/clone/" + System.getenv("voice_id") ?: "")
  .delete("".toRequestBody())
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System;
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Delete, "https://api.jigsawstack.com/v1/ai/tts/clone/" + Environment.GetEnvironmentVariable("voice_id"));

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    

<ResponseExample></ResponseExample>
    

 This is the content for the doc snippets/code-req-examples/text-to-speech-list-clones.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.audio.list_clones({})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.audio.list_clones({})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/tts/clone \
 -X GET \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/tts/clone');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'

uri = URI('https://api.jigsawstack.com/v1/ai/tts/clone')
req = Net::HTTP::Get.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
)

func main() {
	client := &http.Client{}
	req, err := http.NewRequest("GET", "https://api.jigsawstack.com/v1/ai/tts/clone", nil)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/tts/clone"))
    .GET()
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let url = URL(string: "https://api.jigsawstack.com/v1/ai/tts/clone")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.allHTTPHeaderFields = headers

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/tts/clone');

  final res = await http.get(url, headers: headers);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.get error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.OkHttpClient
import okhttp3.Request

val client = OkHttpClient()

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/tts/clone")
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, "https://api.jigsawstack.com/v1/ai/tts/clone");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "voice_clones": [
            {
                  "id": "37ecd2c3-04b6-46fd-9f33-1de4e9080162",
                  "name": "Elon Musk",
                  "created_at": "2025-06-04T05:55:42.441506+00:00"
            },
            {
                  "id": "afd428c5-6907-4cfb-be3c-b6956194fd82",
                  "name": "Elon Musk",
                  "created_at": "2025-06-04T05:01:07.793369+00:00"
            },
            {
                  "id": "991d81df-e292-469e-baac-a72a63e14562",
                  "name": "anun",
                  "created_at": "2025-05-29T03:34:14.07151+00:00"
            },
            {
                  "id": "8a52aa0f-d4e2-4bb5-be24-f1e6863002f0",
                  "name": "df69c3f6-72ad-4e91-a3da-b846a51f65a0",
                  "created_at": "2025-05-29T03:26:54.076615+00:00"
            },
            {
                  "id": "c7fd4785-937c-4787-916d-46f6d99c2c35",
                  "name": "897df066-d852-4eba-af6f-a9f1653f4cf3",
                  "created_at": "2025-05-24T20:00:21.018869+00:00"
            },
            {
                  "id": "7dec9d34-5dab-4054-b40b-8363f1692467",
                  "name": "e4c8aefe-6acc-4594-b9fb-6b219cbef28c",
                  "created_at": "2025-05-24T07:23:24.309439+00:00"
            },
            {
                  "id": "3455d463-c198-48f7-9b36-e93004e6dae4",
                  "name": "c6ee358e-e2bd-4e30-91a1-e75e482ad404",
                  "created_at": "2025-05-24T07:20:43.716173+00:00"
            },
            {
                  "id": "44d592f7-5953-49c0-a9f0-fea80dcb1a1f",
                  "name": "ea408631-6791-4345-aa31-32ba818d6d2b",
                  "created_at": "2025-05-24T07:18:11.584368+00:00"
            },
            {
                  "id": "41541555-e6c7-4c27-b678-3e871051a66c",
                  "name": "1d6f6363-41aa-4c02-91cb-28f3c1352d8a",
                  "created_at": "2025-05-24T07:17:16.076924+00:00"
            },
            {
                  "id": "ad230af5-71bd-49d0-9bf4-d52ce405831f",
                  "name": "anun",
                  "created_at": "2025-05-24T07:08:00.011783+00:00"
            }
      ],
      "page": 0,
      "limit": 10,
      "has_more": true,
      "_usage": {
            "input_tokens": 1,
            "output_tokens": 101,
            "inference_time_tokens": 143,
            "total_tokens": 245
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/text-to-speech.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.audio.text_to_speech({
      "text": "Hello, world!",
      "accent": "en-US-female-27"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.audio.text_to_speech({
      "text": "Hello, world!",
      "accent": "en-US-female-27"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/tts \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"text":"Hello, world!","accent":"en-US-female-27"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/tts');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"text":"Hello, world!","accent":"en-US-female-27"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/ai/tts')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'text' => 'Hello, world!',
  'accent' => 'en-US-female-27'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"text":"Hello, world!","accent":"en-US-female-27"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/tts", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/tts"))
    .POST(BodyPublishers.ofString("{\"text\":\"Hello, world!\",\"accent\":\"en-US-female-27\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "text": "Hello, world!",
    "accent": "en-US-female-27"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/ai/tts")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"text":"Hello, world!","accent":"en-US-female-27"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/tts');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"text\":\"Hello, world!\",\"accent\":\"en-US-female-27\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/tts")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/tts");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"text\":\"Hello, world!\",\"accent\":\"en-US-female-27\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    

<ResponseExample></ResponseExample>
    

 This is the content for the doc snippets/code-req-examples/translate.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.translate({
      "text": [
            "Hello",
            "How are you?",
            "Thank you"
      ],
      "target_language": "zh"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.translate({
      "text": [
            "Hello",
            "How are you?",
            "Thank you"
      ],
      "target_language": "zh"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/ai/translate \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"text":["Hello","How are you?","Thank you"],"target_language":"zh"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/ai/translate');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"text":["Hello","How are you?","Thank you"],"target_language":"zh"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/ai/translate')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'text' => [
    'Hello',
    'How are you?',
    'Thank you'
  ],
  'target_language' => 'zh'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"text":["Hello","How are you?","Thank you"],"target_language":"zh"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/ai/translate", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/ai/translate"))
    .POST(BodyPublishers.ofString("{\"text\":[\"Hello\",\"How are you?\",\"Thank you\"],\"target_language\":\"zh\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "text": [
        "Hello",
        "How are you?",
        "Thank you"
    ],
    "target_language": "zh"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/ai/translate")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"text":["Hello","How are you?","Thank you"],"target_language":"zh"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/ai/translate');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"text\":[\"Hello\",\"How are you?\",\"Thank you\"],\"target_language\":\"zh\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/ai/translate")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/ai/translate");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"text\":[\"Hello\",\"How are you?\",\"Thank you\"],\"target_language\":\"zh\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "translated_text": [
            "‰Ω†Â•Ω",
            "‰Ω†Â•ΩÂêóÔºü",
            "Ë∞¢Ë∞¢‰Ω†"
      ],
      "_usage": {
            "input_tokens": 18,
            "output_tokens": 18,
            "inference_time_tokens": 866,
            "total_tokens": 902
      }
}
    ```
    </ResponseExample>
    
    

 This is the content for the doc snippets/code-req-examples/vocr.mdx 

 
    <RequestExample>
    ```javascript Javascript
import { JigsawStack } from "jigsawstack";

const jigsaw = JigsawStack({ apiKey: "your-api-key" });

const response = await jigsaw.vision.vocr({
      "prompt": [
            "total_price",
            "tax"
      ],
      "url": "https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg"
})
    ```
    ```python Python
from jigsawstack import JigsawStack

jigsaw = JigsawStack(api_key="your-api-key")

response = jigsaw.vision.vocr({
      "prompt": [
            "total_price",
            "tax"
      ],
      "url": "https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg"
})
    ```
    ```bash Curl
curl https://api.jigsawstack.com/v1/vocr \
 -X POST \
 -H 'Content-Type: application/json' \
 -H 'x-api-key: your-api-key' \
 -d '{"prompt":["total_price","tax"],"url":"https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg"}'
    ```
    ```php PHP
<?php
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.jigsawstack.com/v1/vocr');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'x-api-key: your-api-key',
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"prompt":["total_price","tax"],"url":"https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg"}');

$response = curl_exec($ch);

curl_close($ch);

    ```
    ```ruby Ruby
require 'net/http'
require 'json'

uri = URI('https://api.jigsawstack.com/v1/vocr')
req = Net::HTTP::Post.new(uri)
req.content_type = 'application/json'
req['x-api-key'] = 'your-api-key'

req.body = {
  'prompt' => [
    'total_price',
    'tax'
  ],
  'url' => 'https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg'
}.to_json

req_options = {
  use_ssl: uri.scheme == 'https'
}
res = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(req)
end

    ```
    ```go Go
package main

import (
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func main() {
	client := &http.Client{}
	var data = strings.NewReader(`{"prompt":["total_price","tax"],"url":"https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg"}`)
	req, err := http.NewRequest("POST", "https://api.jigsawstack.com/v1/vocr", data)
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("x-api-key", "your-api-key")
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	bodyText, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", bodyText)
}

    ```
    ```java Java
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse;

HttpClient client = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://api.jigsawstack.com/v1/vocr"))
    .POST(BodyPublishers.ofString("{\"prompt\":[\"total_price\",\"tax\"],\"url\":\"https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg\"}"))
    .setHeader("Content-Type", "application/json")
    .setHeader("x-api-key", "your-api-key")
    .build();

HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

    ```
    ```swift Swift
import Foundation

let jsonData = [
    "prompt": [
        "total_price",
        "tax"
    ],
    "url": "https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg"
] as [String : Any]
let data = try! JSONSerialization.data(withJSONObject: jsonData, options: [])

let url = URL(string: "https://api.jigsawstack.com/v1/vocr")!
let headers = [
    "Content-Type": "application/json",
    "x-api-key": "your-api-key"
]

var request = URLRequest(url: url)
request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = data as Data

let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
    if let error = error {
        print(error)
    } else if let data = data {
        let str = String(data: data, encoding: .utf8)
        print(str ?? "")
    }
}

task.resume()

    ```
    ```dart Dart
import 'package:http/http.dart' as http;

void main() async {
  final headers = {
    'Content-Type': 'application/json',
    'x-api-key': 'your-api-key',
  };

  final data = '{"prompt":["total_price","tax"],"url":"https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg"}';

  final url = Uri.parse('https://api.jigsawstack.com/v1/vocr');

  final res = await http.post(url, headers: headers, body: data);
  final status = res.statusCode;
  if (status != 200) throw Exception('http.post error: statusCode= $status');

  print(res.body);
}

    ```
    ```kotlin Kotlin
import java.io.IOException
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

val client = OkHttpClient()

val MEDIA_TYPE = "application/json".toMediaType()

val requestBody = "{\"prompt\":[\"total_price\",\"tax\"],\"url\":\"https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg\"}"

val request = Request.Builder()
  .url("https://api.jigsawstack.com/v1/vocr")
  .post(requestBody.toRequestBody(MEDIA_TYPE))
  .header("Content-Type", "application/json")
  .header("x-api-key", "your-api-key")
  .build()

client.newCall(request).execute().use { response ->
  if (!response.isSuccessful) throw IOException("Unexpected code $response")
  response.body!!.string()
}

    ```
    ```csharp C#
using System.Net.Http;
using System.Net.Http.Headers;

HttpClient client = new HttpClient();

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://api.jigsawstack.com/v1/vocr");

request.Headers.Add("x-api-key", "your-api-key");

request.Content = new StringContent("{\"prompt\":[\"total_price\",\"tax\"],\"url\":\"https://media.snopes.com/2021/08/239918331_10228097135359041_3825446756894757753_n.jpg\"}");
request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

HttpResponseMessage response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
string responseBody = await response.Content.ReadAsStringAsync();

    ```
    </RequestExample>
    <ResponseExample>
    ```json Response
{
      "success": true,
      "context": {
            "total_price": [
                  "144.02"
            ],
            "tax": [
                  "4.58"
            ]
      },
      "width": 720,
      "height": 960,
      "tags": [
            "text",
            "receipt",
            "paper"
      ],
      "has_text": true,
      "sections": [
            {
                  "text": "See back of receipt for your chance\nto win $1000 ID #: 7N5N1VIXCQDQ\nWalmart\n317-851-1102 Mgr:JAMIE BROOKSHIRE\n882 S. STATE ROAD 135\nGREENWOOD IN 46143\nST# 05483 OP# 001436 TE# 09 TR# 06976\nTATER TOTS\n001312000026 F 2.96 0\nHARD/PROV/DC 007874219410 F\nSNACK BARS\n2.68 0\nHRI CL CHS 5.88 0\n002190848816 F 4.98 T\nHRI CL CHS\n003120506000 F\n003120506000 F 6.88 0\n** VOIDED ENTRY ##\nHRI CL CHS 5.88-0\n003120506000 F\nHRI 12 U SG 003120535000 F\nHRI CL PEP\n5.88 0\nEARBUDS 068113100946 4.88 X\n003120507000 F 5.88 0\nSC BCN CHDDR 007874202906 F\nABF THINBRST 022451710972 F\n6.98 0\nHARD/PROV/DC 007874219410 F\n9.72 0\nDV RSE OIL M 001111101220\n2.68 0\nAPPLE 3 BAG 084747300184 F\n5.94 X\nSTOK LT SWT 004127102774 F\n6.47 N\nPEANUT BUTTR 005160025499 F\n4.42 T\nAVO VERDE 2.98 N 061611206143 F\n6.44 0\nROLLS 007874219415 F 1.28 0\nBTS DRY BLON 501072452746 6.58 X\nGALE 000000000003K 32.00 T\nTR HS FRM 4 002240062190 2.74 X\nBAGELS 001376402801 F 4.66 0\nGV SLIDERS 007874201625 2.98 X\nACCESSORY 007615161216 0.97 X\nCHEEZE IT 002410053523 F 4.00 0\nWAS 4.54 YOU SAVED 0.54\nRITZ 004400088210 F 2.78 N\nRUFFLES 002840020942 F 2.50 N\nGV HNY GRMS 007874207253 F 1.28 N\nSUBTOTAL 139.44\nTAX 1 7.000 % 4.58\nTOTAL 144.02\nCASH TEND 150.02\nCHANGE DUE 6.00\n# ITEMS SOLD 26\nTC# 0783 6080 4072 3416 2495 5\n04/27/19 12:59:46\nScan with Walmart app to save receipts",
                  "lines": [
                        {
                              "text": "See back of receipt for your chance",
                              "bounds": {
                                    "top_left": {
                                          "x": 185,
                                          "y": 64
                                    },
                                    "top_right": {
                                          "x": 459,
                                          "y": 76
                                    },
                                    "bottom_right": {
                                          "x": 458,
                                          "y": 93
                                    },
                                    "bottom_left": {
                                          "x": 184,
                                          "y": 84
                                    },
                                    "width": 274,
                                    "height": 18.5
                              },
                              "words": [
                                    {
                                          "text": "See",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 187,
                                                      "y": 64
                                                },
                                                "top_right": {
                                                      "x": 211,
                                                      "y": 66
                                                },
                                                "bottom_right": {
                                                      "x": 209,
                                                      "y": 82
                                                },
                                                "bottom_left": {
                                                      "x": 185,
                                                      "y": 79
                                                },
                                                "width": 24,
                                                "height": 15.5
                                          }
                                    },
                                    {
                                          "text": "back",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 218,
                                                      "y": 67
                                                },
                                                "top_right": {
                                                      "x": 250,
                                                      "y": 70
                                                },
                                                "bottom_right": {
                                                      "x": 248,
                                                      "y": 86
                                                },
                                                "bottom_left": {
                                                      "x": 216,
                                                      "y": 83
                                                },
                                                "width": 32,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "of",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 257,
                                                      "y": 70
                                                },
                                                "top_right": {
                                                      "x": 274,
                                                      "y": 72
                                                },
                                                "bottom_right": {
                                                      "x": 272,
                                                      "y": 88
                                                },
                                                "bottom_left": {
                                                      "x": 256,
                                                      "y": 87
                                                },
                                                "width": 16.5,
                                                "height": 16.5
                                          }
                                    },
                                    {
                                          "text": "receipt",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 280,
                                                      "y": 72
                                                },
                                                "top_right": {
                                                      "x": 337,
                                                      "y": 75
                                                },
                                                "bottom_right": {
                                                      "x": 335,
                                                      "y": 91
                                                },
                                                "bottom_left": {
                                                      "x": 279,
                                                      "y": 88
                                                },
                                                "width": 56.5,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "for",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 342,
                                                      "y": 75
                                                },
                                                "top_right": {
                                                      "x": 365,
                                                      "y": 76
                                                },
                                                "bottom_right": {
                                                      "x": 364,
                                                      "y": 92
                                                },
                                                "bottom_left": {
                                                      "x": 341,
                                                      "y": 92
                                                },
                                                "width": 23,
                                                "height": 16.5
                                          }
                                    },
                                    {
                                          "text": "your",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 372,
                                                      "y": 76
                                                },
                                                "top_right": {
                                                      "x": 403,
                                                      "y": 76
                                                },
                                                "bottom_right": {
                                                      "x": 402,
                                                      "y": 93
                                                },
                                                "bottom_left": {
                                                      "x": 370,
                                                      "y": 92
                                                },
                                                "width": 31.5,
                                                "height": 16.5
                                          }
                                    },
                                    {
                                          "text": "chance",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 411,
                                                      "y": 76
                                                },
                                                "top_right": {
                                                      "x": 458,
                                                      "y": 76
                                                },
                                                "bottom_right": {
                                                      "x": 457,
                                                      "y": 92
                                                },
                                                "bottom_left": {
                                                      "x": 409,
                                                      "y": 93
                                                },
                                                "width": 47.5,
                                                "height": 16.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "to win $1000 ID #: 7N5N1VIXCQDQ",
                              "bounds": {
                                    "top_left": {
                                          "x": 185,
                                          "y": 78
                                    },
                                    "top_right": {
                                          "x": 419,
                                          "y": 89
                                    },
                                    "bottom_right": {
                                          "x": 417,
                                          "y": 106
                                    },
                                    "bottom_left": {
                                          "x": 184,
                                          "y": 97
                                    },
                                    "width": 233.5,
                                    "height": 18
                              },
                              "words": [
                                    {
                                          "text": "to",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 187,
                                                      "y": 79
                                                },
                                                "top_right": {
                                                      "x": 202,
                                                      "y": 80
                                                },
                                                "bottom_right": {
                                                      "x": 201,
                                                      "y": 95
                                                },
                                                "bottom_left": {
                                                      "x": 186,
                                                      "y": 93
                                                },
                                                "width": 15,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "win",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 209,
                                                      "y": 81
                                                },
                                                "top_right": {
                                                      "x": 234,
                                                      "y": 83
                                                },
                                                "bottom_right": {
                                                      "x": 233,
                                                      "y": 98
                                                },
                                                "bottom_left": {
                                                      "x": 208,
                                                      "y": 96
                                                },
                                                "width": 25,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "$1000",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 241,
                                                      "y": 84
                                                },
                                                "top_right": {
                                                      "x": 281,
                                                      "y": 87
                                                },
                                                "bottom_right": {
                                                      "x": 280,
                                                      "y": 103
                                                },
                                                "bottom_left": {
                                                      "x": 240,
                                                      "y": 99
                                                },
                                                "width": 40,
                                                "height": 15.5
                                          }
                                    },
                                    {
                                          "text": "ID",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 288,
                                                      "y": 87
                                                },
                                                "top_right": {
                                                      "x": 303,
                                                      "y": 88
                                                },
                                                "bottom_right": {
                                                      "x": 303,
                                                      "y": 104
                                                },
                                                "bottom_left": {
                                                      "x": 288,
                                                      "y": 103
                                                },
                                                "width": 15,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "#:",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 311,
                                                      "y": 88
                                                },
                                                "top_right": {
                                                      "x": 324,
                                                      "y": 89
                                                },
                                                "bottom_right": {
                                                      "x": 324,
                                                      "y": 105
                                                },
                                                "bottom_left": {
                                                      "x": 310,
                                                      "y": 105
                                                },
                                                "width": 13.5,
                                                "height": 16.5
                                          }
                                    },
                                    {
                                          "text": "7N5N1VIXCQDQ",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 327,
                                                      "y": 89
                                                },
                                                "top_right": {
                                                      "x": 418,
                                                      "y": 90
                                                },
                                                "bottom_right": {
                                                      "x": 418,
                                                      "y": 106
                                                },
                                                "bottom_left": {
                                                      "x": 327,
                                                      "y": 105
                                                },
                                                "width": 91,
                                                "height": 16
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "Walmart",
                              "bounds": {
                                    "top_left": {
                                          "x": 274,
                                          "y": 107
                                    },
                                    "top_right": {
                                          "x": 381,
                                          "y": 110
                                    },
                                    "bottom_right": {
                                          "x": 380,
                                          "y": 137
                                    },
                                    "bottom_left": {
                                          "x": 273,
                                          "y": 134
                                    },
                                    "width": 107,
                                    "height": 27
                              },
                              "words": [
                                    {
                                          "text": "Walmart",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 274,
                                                      "y": 107
                                                },
                                                "top_right": {
                                                      "x": 382,
                                                      "y": 111
                                                },
                                                "bottom_right": {
                                                      "x": 380,
                                                      "y": 137
                                                },
                                                "bottom_left": {
                                                      "x": 274,
                                                      "y": 135
                                                },
                                                "width": 107,
                                                "height": 27
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "317-851-1102 Mgr:JAMIE BROOKSHIRE",
                              "bounds": {
                                    "top_left": {
                                          "x": 200,
                                          "y": 131
                                    },
                                    "top_right": {
                                          "x": 456,
                                          "y": 138
                                    },
                                    "bottom_right": {
                                          "x": 455,
                                          "y": 158
                                    },
                                    "bottom_left": {
                                          "x": 199,
                                          "y": 153
                                    },
                                    "width": 256,
                                    "height": 21
                              },
                              "words": [
                                    {
                                          "text": "317-851-1102",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 201,
                                                      "y": 131
                                                },
                                                "top_right": {
                                                      "x": 296,
                                                      "y": 139
                                                },
                                                "bottom_right": {
                                                      "x": 296,
                                                      "y": 156
                                                },
                                                "bottom_left": {
                                                      "x": 200,
                                                      "y": 148
                                                },
                                                "width": 95.5,
                                                "height": 17
                                          }
                                    },
                                    {
                                          "text": "Mgr:JAMIE",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 301,
                                                      "y": 139
                                                },
                                                "top_right": {
                                                      "x": 371,
                                                      "y": 141
                                                },
                                                "bottom_right": {
                                                      "x": 371,
                                                      "y": 158
                                                },
                                                "bottom_left": {
                                                      "x": 300,
                                                      "y": 156
                                                },
                                                "width": 70.5,
                                                "height": 17
                                          }
                                    },
                                    {
                                          "text": "BROOKSHIRE",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 378,
                                                      "y": 141
                                                },
                                                "top_right": {
                                                      "x": 456,
                                                      "y": 139
                                                },
                                                "bottom_right": {
                                                      "x": 456,
                                                      "y": 154
                                                },
                                                "bottom_left": {
                                                      "x": 378,
                                                      "y": 158
                                                },
                                                "width": 78,
                                                "height": 16
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "882 S. STATE ROAD 135",
                              "bounds": {
                                    "top_left": {
                                          "x": 247,
                                          "y": 149
                                    },
                                    "top_right": {
                                          "x": 409,
                                          "y": 154
                                    },
                                    "bottom_right": {
                                          "x": 408,
                                          "y": 171
                                    },
                                    "bottom_left": {
                                          "x": 246,
                                          "y": 167
                                    },
                                    "width": 162,
                                    "height": 17.5
                              },
                              "words": [
                                    {
                                          "text": "882",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 247,
                                                      "y": 150
                                                },
                                                "top_right": {
                                                      "x": 272,
                                                      "y": 152
                                                },
                                                "bottom_right": {
                                                      "x": 271,
                                                      "y": 168
                                                },
                                                "bottom_left": {
                                                      "x": 247,
                                                      "y": 167
                                                },
                                                "width": 24.5,
                                                "height": 16.5
                                          }
                                    },
                                    {
                                          "text": "S.",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 278,
                                                      "y": 152
                                                },
                                                "top_right": {
                                                      "x": 295,
                                                      "y": 153
                                                },
                                                "bottom_right": {
                                                      "x": 294,
                                                      "y": 169
                                                },
                                                "bottom_left": {
                                                      "x": 278,
                                                      "y": 168
                                                },
                                                "width": 16.5,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "STATE",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 302,
                                                      "y": 153
                                                },
                                                "top_right": {
                                                      "x": 340,
                                                      "y": 154
                                                },
                                                "bottom_right": {
                                                      "x": 339,
                                                      "y": 171
                                                },
                                                "bottom_left": {
                                                      "x": 301,
                                                      "y": 169
                                                },
                                                "width": 38,
                                                "height": 16.5
                                          }
                                    },
                                    {
                                          "text": "ROAD",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 347,
                                                      "y": 155
                                                },
                                                "top_right": {
                                                      "x": 379,
                                                      "y": 155
                                                },
                                                "bottom_right": {
                                                      "x": 378,
                                                      "y": 171
                                                },
                                                "bottom_left": {
                                                      "x": 346,
                                                      "y": 171
                                                },
                                                "width": 32,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "135",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 387,
                                                      "y": 155
                                                },
                                                "top_right": {
                                                      "x": 409,
                                                      "y": 155
                                                },
                                                "bottom_right": {
                                                      "x": 408,
                                                      "y": 171
                                                },
                                                "bottom_left": {
                                                      "x": 386,
                                                      "y": 171
                                                },
                                                "width": 22,
                                                "height": 16
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "GREENWOOD IN 46143",
                              "bounds": {
                                    "top_left": {
                                          "x": 259,
                                          "y": 165
                                    },
                                    "top_right": {
                                          "x": 403,
                                          "y": 167
                                    },
                                    "bottom_right": {
                                          "x": 402,
                                          "y": 184
                                    },
                                    "bottom_left": {
                                          "x": 258,
                                          "y": 182
                                    },
                                    "width": 144,
                                    "height": 17
                              },
                              "words": [
                                    {
                                          "text": "GREENWOOD",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 262,
                                                      "y": 165
                                                },
                                                "top_right": {
                                                      "x": 333,
                                                      "y": 167
                                                },
                                                "bottom_right": {
                                                      "x": 331,
                                                      "y": 183
                                                },
                                                "bottom_left": {
                                                      "x": 261,
                                                      "y": 182
                                                },
                                                "width": 70.5,
                                                "height": 16.5
                                          }
                                    },
                                    {
                                          "text": "IN",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 341,
                                                      "y": 168
                                                },
                                                "top_right": {
                                                      "x": 355,
                                                      "y": 168
                                                },
                                                "bottom_right": {
                                                      "x": 354,
                                                      "y": 184
                                                },
                                                "bottom_left": {
                                                      "x": 339,
                                                      "y": 184
                                                },
                                                "width": 14.5,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "46143",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 363,
                                                      "y": 168
                                                },
                                                "top_right": {
                                                      "x": 403,
                                                      "y": 168
                                                },
                                                "bottom_right": {
                                                      "x": 400,
                                                      "y": 185
                                                },
                                                "bottom_left": {
                                                      "x": 361,
                                                      "y": 184
                                                },
                                                "width": 39.5,
                                                "height": 16.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "ST# 05483 OP# 001436 TE# 09 TR# 06976",
                              "bounds": {
                                    "top_left": {
                                          "x": 182,
                                          "y": 170
                                    },
                                    "top_right": {
                                          "x": 473,
                                          "y": 179
                                    },
                                    "bottom_right": {
                                          "x": 472,
                                          "y": 198
                                    },
                                    "bottom_left": {
                                          "x": 182,
                                          "y": 193
                                    },
                                    "width": 290.5,
                                    "height": 21
                              },
                              "words": [
                                    {
                                          "text": "ST#",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 183,
                                                      "y": 171
                                                },
                                                "top_right": {
                                                      "x": 208,
                                                      "y": 174
                                                },
                                                "bottom_right": {
                                                      "x": 208,
                                                      "y": 189
                                                },
                                                "bottom_left": {
                                                      "x": 182,
                                                      "y": 187
                                                },
                                                "width": 25.5,
                                                "height": 15.5
                                          }
                                    },
                                    {
                                          "text": "05483",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 214,
                                                      "y": 174
                                                },
                                                "top_right": {
                                                      "x": 255,
                                                      "y": 178
                                                },
                                                "bottom_right": {
                                                      "x": 254,
                                                      "y": 194
                                                },
                                                "bottom_left": {
                                                      "x": 214,
                                                      "y": 190
                                                },
                                                "width": 40.5,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "OP#",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 261,
                                                      "y": 178
                                                },
                                                "top_right": {
                                                      "x": 286,
                                                      "y": 180
                                                },
                                                "bottom_right": {
                                                      "x": 286,
                                                      "y": 196
                                                },
                                                "bottom_left": {
                                                      "x": 261,
                                                      "y": 194
                                                },
                                                "width": 25,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "001436",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 293,
                                                      "y": 180
                                                },
                                                "top_right": {
                                                      "x": 339,
                                                      "y": 182
                                                },
                                                "bottom_right": {
                                                      "x": 339,
                                                      "y": 198
                                                },
                                                "bottom_left": {
                                                      "x": 292,
                                                      "y": 196
                                                },
                                                "width": 46.5,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "TE#",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 347,
                                                      "y": 182
                                                },
                                                "top_right": {
                                                      "x": 370,
                                                      "y": 182
                                                },
                                                "bottom_right": {
                                                      "x": 370,
                                                      "y": 198
                                                },
                                                "bottom_left": {
                                                      "x": 347,
                                                      "y": 198
                                                },
                                                "width": 23,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "09",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 376,
                                                      "y": 182
                                                },
                                                "top_right": {
                                                      "x": 393,
                                                      "y": 182
                                                },
                                                "bottom_right": {
                                                      "x": 392,
                                                      "y": 198
                                                },
                                                "bottom_left": {
                                                      "x": 376,
                                                      "y": 198
                                                },
                                                "width": 16.5,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "TR#",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 401,
                                                      "y": 182
                                                },
                                                "top_right": {
                                                      "x": 424,
                                                      "y": 182
                                                },
                                                "bottom_right": {
                                                      "x": 424,
                                                      "y": 197
                                                },
                                                "bottom_left": {
                                                      "x": 401,
                                                      "y": 198
                                                },
                                                "width": 23,
                                                "height": 15.5
                                          }
                                    },
                                    {
                                          "text": "06976",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 431,
                                                      "y": 182
                                                },
                                                "top_right": {
                                                      "x": 470,
                                                      "y": 180
                                                },
                                                "bottom_right": {
                                                      "x": 470,
                                                      "y": 194
                                                },
                                                "bottom_left": {
                                                      "x": 430,
                                                      "y": 197
                                                },
                                                "width": 39.5,
                                                "height": 14.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "TATER TOTS",
                              "bounds": {
                                    "top_left": {
                                          "x": 183,
                                          "y": 186
                                    },
                                    "top_right": {
                                          "x": 263,
                                          "y": 192
                                    },
                                    "bottom_right": {
                                          "x": 262,
                                          "y": 207
                                    },
                                    "bottom_left": {
                                          "x": 182,
                                          "y": 201
                                    },
                                    "width": 80,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "TATER",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 184,
                                                      "y": 187
                                                },
                                                "top_right": {
                                                      "x": 222,
                                                      "y": 190
                                                },
                                                "bottom_right": {
                                                      "x": 220,
                                                      "y": 204
                                                },
                                                "bottom_left": {
                                                      "x": 183,
                                                      "y": 201
                                                },
                                                "width": 37.5,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "TOTS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 232,
                                                      "y": 191
                                                },
                                                "top_right": {
                                                      "x": 262,
                                                      "y": 192
                                                },
                                                "bottom_right": {
                                                      "x": 260,
                                                      "y": 208
                                                },
                                                "bottom_left": {
                                                      "x": 230,
                                                      "y": 205
                                                },
                                                "width": 30,
                                                "height": 15
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "001312000026 F 2.96 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 282,
                                          "y": 195
                                    },
                                    "top_right": {
                                          "x": 392,
                                          "y": 196
                                    },
                                    "bottom_right": {
                                          "x": 392,
                                          "y": 211
                                    },
                                    "bottom_left": {
                                          "x": 281,
                                          "y": 210
                                    },
                                    "width": 110.5,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "001312000026",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 284,
                                                      "y": 195
                                                },
                                                "top_right": {
                                                      "x": 376,
                                                      "y": 197
                                                },
                                                "bottom_right": {
                                                      "x": 376,
                                                      "y": 211
                                                },
                                                "bottom_left": {
                                                      "x": 284,
                                                      "y": 211
                                                },
                                                "width": 92,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 384,
                                                      "y": 197
                                                },
                                                "top_right": {
                                                      "x": 392,
                                                      "y": 197
                                                },
                                                "bottom_right": {
                                                      "x": 392,
                                                      "y": 211
                                                },
                                                "bottom_left": {
                                                      "x": 384,
                                                      "y": 211
                                                },
                                                "width": 8,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "HARD/PROV/DC 007874219410 F",
                              "bounds": {
                                    "top_left": {
                                          "x": 180,
                                          "y": 200
                                    },
                                    "top_right": {
                                          "x": 392,
                                          "y": 210
                                    },
                                    "bottom_right": {
                                          "x": 391,
                                          "y": 225
                                    },
                                    "bottom_left": {
                                          "x": 180,
                                          "y": 217
                                    },
                                    "width": 211.5,
                                    "height": 16
                              },
                              "words": [
                                    {
                                          "text": "HARD/PROV/DC",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 181,
                                                      "y": 201
                                                },
                                                "top_right": {
                                                      "x": 276,
                                                      "y": 207
                                                },
                                                "bottom_right": {
                                                      "x": 275,
                                                      "y": 223
                                                },
                                                "bottom_left": {
                                                      "x": 180,
                                                      "y": 214
                                                },
                                                "width": 95,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "007874219410",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 285,
                                                      "y": 208
                                                },
                                                "top_right": {
                                                      "x": 376,
                                                      "y": 211
                                                },
                                                "bottom_right": {
                                                      "x": 376,
                                                      "y": 224
                                                },
                                                "bottom_left": {
                                                      "x": 284,
                                                      "y": 223
                                                },
                                                "width": 91.5,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 383,
                                                      "y": 211
                                                },
                                                "top_right": {
                                                      "x": 392,
                                                      "y": 211
                                                },
                                                "bottom_right": {
                                                      "x": 391,
                                                      "y": 224
                                                },
                                                "bottom_left": {
                                                      "x": 383,
                                                      "y": 224
                                                },
                                                "width": 8.5,
                                                "height": 13
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "SNACK BARS",
                              "bounds": {
                                    "top_left": {
                                          "x": 180,
                                          "y": 214
                                    },
                                    "top_right": {
                                          "x": 263,
                                          "y": 220
                                    },
                                    "bottom_right": {
                                          "x": 262,
                                          "y": 234
                                    },
                                    "bottom_left": {
                                          "x": 179,
                                          "y": 229
                                    },
                                    "width": 83,
                                    "height": 14.5
                              },
                              "words": [
                                    {
                                          "text": "SNACK",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 182,
                                                      "y": 215
                                                },
                                                "top_right": {
                                                      "x": 221,
                                                      "y": 218
                                                },
                                                "bottom_right": {
                                                      "x": 219,
                                                      "y": 232
                                                },
                                                "bottom_left": {
                                                      "x": 180,
                                                      "y": 229
                                                },
                                                "width": 39,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "BARS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 230,
                                                      "y": 218
                                                },
                                                "top_right": {
                                                      "x": 262,
                                                      "y": 220
                                                },
                                                "bottom_right": {
                                                      "x": 261,
                                                      "y": 234
                                                },
                                                "bottom_left": {
                                                      "x": 229,
                                                      "y": 233
                                                },
                                                "width": 32,
                                                "height": 14.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "2.68 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 429,
                                          "y": 208
                                    },
                                    "top_right": {
                                          "x": 479,
                                          "y": 209
                                    },
                                    "bottom_right": {
                                          "x": 479,
                                          "y": 222
                                    },
                                    "bottom_left": {
                                          "x": 429,
                                          "y": 222
                                    },
                                    "width": 50,
                                    "height": 13.5
                              },
                              "words": [
                                    {
                                          "text": "2.68",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 431,
                                                      "y": 209
                                                },
                                                "top_right": {
                                                      "x": 461,
                                                      "y": 209
                                                },
                                                "bottom_right": {
                                                      "x": 461,
                                                      "y": 223
                                                },
                                                "bottom_left": {
                                                      "x": 432,
                                                      "y": 223
                                                },
                                                "width": 29.5,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "0",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 470,
                                                      "y": 209
                                                },
                                                "top_right": {
                                                      "x": 477,
                                                      "y": 209
                                                },
                                                "bottom_right": {
                                                      "x": 477,
                                                      "y": 223
                                                },
                                                "bottom_left": {
                                                      "x": 469,
                                                      "y": 223
                                                },
                                                "width": 7.5,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "HRI CL CHS 5.88 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 180,
                                          "y": 229
                                    },
                                    "top_right": {
                                          "x": 261,
                                          "y": 234
                                    },
                                    "bottom_right": {
                                          "x": 260,
                                          "y": 249
                                    },
                                    "bottom_left": {
                                          "x": 179,
                                          "y": 244
                                    },
                                    "width": 81,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "HRI",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 181,
                                                      "y": 230
                                                },
                                                "top_right": {
                                                      "x": 207,
                                                      "y": 231
                                                },
                                                "bottom_right": {
                                                      "x": 205,
                                                      "y": 246
                                                },
                                                "bottom_left": {
                                                      "x": 180,
                                                      "y": 244
                                                },
                                                "width": 25.5,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "CL",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 214,
                                                      "y": 232
                                                },
                                                "top_right": {
                                                      "x": 229,
                                                      "y": 233
                                                },
                                                "bottom_right": {
                                                      "x": 227,
                                                      "y": 247
                                                },
                                                "bottom_left": {
                                                      "x": 212,
                                                      "y": 246
                                                },
                                                "width": 15,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "CHS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 237,
                                                      "y": 233
                                                },
                                                "top_right": {
                                                      "x": 261,
                                                      "y": 235
                                                },
                                                "bottom_right": {
                                                      "x": 260,
                                                      "y": 250
                                                },
                                                "bottom_left": {
                                                      "x": 236,
                                                      "y": 248
                                                },
                                                "width": 24,
                                                "height": 15
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "002190848816 F 4.98 T",
                              "bounds": {
                                    "top_left": {
                                          "x": 282,
                                          "y": 222
                                    },
                                    "top_right": {
                                          "x": 392,
                                          "y": 223
                                    },
                                    "bottom_right": {
                                          "x": 392,
                                          "y": 239
                                    },
                                    "bottom_left": {
                                          "x": 281,
                                          "y": 237
                                    },
                                    "width": 110.5,
                                    "height": 15.5
                              },
                              "words": [
                                    {
                                          "text": "002190848816",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 283,
                                                      "y": 222
                                                },
                                                "top_right": {
                                                      "x": 376,
                                                      "y": 224
                                                },
                                                "bottom_right": {
                                                      "x": 375,
                                                      "y": 239
                                                },
                                                "bottom_left": {
                                                      "x": 283,
                                                      "y": 238
                                                },
                                                "width": 92.5,
                                                "height": 15.5
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 383,
                                                      "y": 225
                                                },
                                                "top_right": {
                                                      "x": 391,
                                                      "y": 225
                                                },
                                                "bottom_right": {
                                                      "x": 390,
                                                      "y": 238
                                                },
                                                "bottom_left": {
                                                      "x": 382,
                                                      "y": 238
                                                },
                                                "width": 8,
                                                "height": 13
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "HRI CL CHS",
                              "bounds": {
                                    "top_left": {
                                          "x": 179,
                                          "y": 243
                                    },
                                    "top_right": {
                                          "x": 261,
                                          "y": 249
                                    },
                                    "bottom_right": {
                                          "x": 260,
                                          "y": 263
                                    },
                                    "bottom_left": {
                                          "x": 178,
                                          "y": 257
                                    },
                                    "width": 82,
                                    "height": 14
                              },
                              "words": [
                                    {
                                          "text": "HRI",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 179,
                                                      "y": 244
                                                },
                                                "top_right": {
                                                      "x": 205,
                                                      "y": 245
                                                },
                                                "bottom_right": {
                                                      "x": 205,
                                                      "y": 259
                                                },
                                                "bottom_left": {
                                                      "x": 179,
                                                      "y": 258
                                                },
                                                "width": 26,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "CL",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 213,
                                                      "y": 246
                                                },
                                                "top_right": {
                                                      "x": 228,
                                                      "y": 247
                                                },
                                                "bottom_right": {
                                                      "x": 227,
                                                      "y": 261
                                                },
                                                "bottom_left": {
                                                      "x": 212,
                                                      "y": 260
                                                },
                                                "width": 15,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "CHS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 236,
                                                      "y": 247
                                                },
                                                "top_right": {
                                                      "x": 260,
                                                      "y": 249
                                                },
                                                "bottom_right": {
                                                      "x": 259,
                                                      "y": 264
                                                },
                                                "bottom_left": {
                                                      "x": 235,
                                                      "y": 262
                                                },
                                                "width": 24,
                                                "height": 15
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "003120506000 F",
                              "bounds": {
                                    "top_left": {
                                          "x": 283,
                                          "y": 236
                                    },
                                    "top_right": {
                                          "x": 391,
                                          "y": 237
                                    },
                                    "bottom_right": {
                                          "x": 391,
                                          "y": 253
                                    },
                                    "bottom_left": {
                                          "x": 283,
                                          "y": 252
                                    },
                                    "width": 108,
                                    "height": 16
                              },
                              "words": [
                                    {
                                          "text": "003120506000",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 284,
                                                      "y": 236
                                                },
                                                "top_right": {
                                                      "x": 376,
                                                      "y": 239
                                                },
                                                "bottom_right": {
                                                      "x": 375,
                                                      "y": 253
                                                },
                                                "bottom_left": {
                                                      "x": 283,
                                                      "y": 253
                                                },
                                                "width": 92,
                                                "height": 15.5
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 383,
                                                      "y": 239
                                                },
                                                "top_right": {
                                                      "x": 392,
                                                      "y": 239
                                                },
                                                "bottom_right": {
                                                      "x": 392,
                                                      "y": 252
                                                },
                                                "bottom_left": {
                                                      "x": 383,
                                                      "y": 253
                                                },
                                                "width": 9,
                                                "height": 13.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "003120506000 F 6.88 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 283,
                                          "y": 251
                                    },
                                    "top_right": {
                                          "x": 392,
                                          "y": 252
                                    },
                                    "bottom_right": {
                                          "x": 392,
                                          "y": 266
                                    },
                                    "bottom_left": {
                                          "x": 283,
                                          "y": 265
                                    },
                                    "width": 109,
                                    "height": 14
                              },
                              "words": [
                                    {
                                          "text": "003120506000",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 284,
                                                      "y": 251
                                                },
                                                "top_right": {
                                                      "x": 375,
                                                      "y": 253
                                                },
                                                "bottom_right": {
                                                      "x": 375,
                                                      "y": 267
                                                },
                                                "bottom_left": {
                                                      "x": 283,
                                                      "y": 266
                                                },
                                                "width": 91.5,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 383,
                                                      "y": 253
                                                },
                                                "top_right": {
                                                      "x": 390,
                                                      "y": 253
                                                },
                                                "bottom_right": {
                                                      "x": 389,
                                                      "y": 267
                                                },
                                                "bottom_left": {
                                                      "x": 382,
                                                      "y": 267
                                                },
                                                "width": 7,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "** VOIDED ENTRY ##",
                              "bounds": {
                                    "top_left": {
                                          "x": 183,
                                          "y": 258
                                    },
                                    "top_right": {
                                          "x": 330,
                                          "y": 267
                                    },
                                    "bottom_right": {
                                          "x": 329,
                                          "y": 281
                                    },
                                    "bottom_left": {
                                          "x": 183,
                                          "y": 272
                                    },
                                    "width": 146.5,
                                    "height": 14
                              },
                              "words": [
                                    {
                                          "text": "**",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 187,
                                                      "y": 259
                                                },
                                                "top_right": {
                                                      "x": 204,
                                                      "y": 260
                                                },
                                                "bottom_right": {
                                                      "x": 204,
                                                      "y": 274
                                                },
                                                "bottom_left": {
                                                      "x": 187,
                                                      "y": 272
                                                },
                                                "width": 17,
                                                "height": 13.5
                                          }
                                    },
                                    {
                                          "text": "VOIDED",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 212,
                                                      "y": 260
                                                },
                                                "top_right": {
                                                      "x": 260,
                                                      "y": 263
                                                },
                                                "bottom_right": {
                                                      "x": 260,
                                                      "y": 278
                                                },
                                                "bottom_left": {
                                                      "x": 211,
                                                      "y": 274
                                                },
                                                "width": 48.5,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "ENTRY",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 268,
                                                      "y": 264
                                                },
                                                "top_right": {
                                                      "x": 307,
                                                      "y": 266
                                                },
                                                "bottom_right": {
                                                      "x": 306,
                                                      "y": 280
                                                },
                                                "bottom_left": {
                                                      "x": 267,
                                                      "y": 278
                                                },
                                                "width": 39,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "##",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 314,
                                                      "y": 266
                                                },
                                                "top_right": {
                                                      "x": 329,
                                                      "y": 267
                                                },
                                                "bottom_right": {
                                                      "x": 328,
                                                      "y": 281
                                                },
                                                "bottom_left": {
                                                      "x": 313,
                                                      "y": 281
                                                },
                                                "width": 15,
                                                "height": 14.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "HRI CL CHS 5.88-0",
                              "bounds": {
                                    "top_left": {
                                          "x": 179,
                                          "y": 272
                                    },
                                    "top_right": {
                                          "x": 261,
                                          "y": 276
                                    },
                                    "bottom_right": {
                                          "x": 260,
                                          "y": 291
                                    },
                                    "bottom_left": {
                                          "x": 178,
                                          "y": 286
                                    },
                                    "width": 82,
                                    "height": 14.5
                              },
                              "words": [
                                    {
                                          "text": "HRI",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 179,
                                                      "y": 272
                                                },
                                                "top_right": {
                                                      "x": 205,
                                                      "y": 274
                                                },
                                                "bottom_right": {
                                                      "x": 204,
                                                      "y": 288
                                                },
                                                "bottom_left": {
                                                      "x": 179,
                                                      "y": 286
                                                },
                                                "width": 25.5,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "CL",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 211,
                                                      "y": 274
                                                },
                                                "top_right": {
                                                      "x": 226,
                                                      "y": 275
                                                },
                                                "bottom_right": {
                                                      "x": 225,
                                                      "y": 290
                                                },
                                                "bottom_left": {
                                                      "x": 211,
                                                      "y": 289
                                                },
                                                "width": 14.5,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "CHS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 236,
                                                      "y": 275
                                                },
                                                "top_right": {
                                                      "x": 260,
                                                      "y": 277
                                                },
                                                "bottom_right": {
                                                      "x": 258,
                                                      "y": 291
                                                },
                                                "bottom_left": {
                                                      "x": 235,
                                                      "y": 290
                                                },
                                                "width": 23.5,
                                                "height": 14.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "003120506000 F",
                              "bounds": {
                                    "top_left": {
                                          "x": 280,
                                          "y": 279
                                    },
                                    "top_right": {
                                          "x": 390,
                                          "y": 279
                                    },
                                    "bottom_right": {
                                          "x": 390,
                                          "y": 294
                                    },
                                    "bottom_left": {
                                          "x": 280,
                                          "y": 294
                                    },
                                    "width": 110,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "003120506000",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 282,
                                                      "y": 279
                                                },
                                                "top_right": {
                                                      "x": 374,
                                                      "y": 281
                                                },
                                                "bottom_right": {
                                                      "x": 373,
                                                      "y": 294
                                                },
                                                "bottom_left": {
                                                      "x": 282,
                                                      "y": 294
                                                },
                                                "width": 91.5,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 382,
                                                      "y": 281
                                                },
                                                "top_right": {
                                                      "x": 389,
                                                      "y": 281
                                                },
                                                "bottom_right": {
                                                      "x": 388,
                                                      "y": 293
                                                },
                                                "bottom_left": {
                                                      "x": 381,
                                                      "y": 293
                                                },
                                                "width": 7,
                                                "height": 12
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "HRI 12 U SG 003120535000 F",
                              "bounds": {
                                    "top_left": {
                                          "x": 178,
                                          "y": 285
                                    },
                                    "top_right": {
                                          "x": 391,
                                          "y": 294
                                    },
                                    "bottom_right": {
                                          "x": 390,
                                          "y": 309
                                    },
                                    "bottom_left": {
                                          "x": 177,
                                          "y": 302
                                    },
                                    "width": 213,
                                    "height": 16
                              },
                              "words": [
                                    {
                                          "text": "HRI",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 179,
                                                      "y": 285
                                                },
                                                "top_right": {
                                                      "x": 205,
                                                      "y": 287
                                                },
                                                "bottom_right": {
                                                      "x": 204,
                                                      "y": 302
                                                },
                                                "bottom_left": {
                                                      "x": 177,
                                                      "y": 300
                                                },
                                                "width": 26.5,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "12",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 213,
                                                      "y": 288
                                                },
                                                "top_right": {
                                                      "x": 228,
                                                      "y": 289
                                                },
                                                "bottom_right": {
                                                      "x": 227,
                                                      "y": 304
                                                },
                                                "bottom_left": {
                                                      "x": 212,
                                                      "y": 303
                                                },
                                                "width": 15,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "U",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 243,
                                                      "y": 290
                                                },
                                                "top_right": {
                                                      "x": 251,
                                                      "y": 290
                                                },
                                                "bottom_right": {
                                                      "x": 250,
                                                      "y": 306
                                                },
                                                "bottom_left": {
                                                      "x": 242,
                                                      "y": 305
                                                },
                                                "width": 8,
                                                "height": 15.5
                                          }
                                    },
                                    {
                                          "text": "SG",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 259,
                                                      "y": 291
                                                },
                                                "top_right": {
                                                      "x": 274,
                                                      "y": 292
                                                },
                                                "bottom_right": {
                                                      "x": 273,
                                                      "y": 307
                                                },
                                                "bottom_left": {
                                                      "x": 258,
                                                      "y": 306
                                                },
                                                "width": 15,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "003120535000",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 282,
                                                      "y": 292
                                                },
                                                "top_right": {
                                                      "x": 374,
                                                      "y": 294
                                                },
                                                "bottom_right": {
                                                      "x": 373,
                                                      "y": 309
                                                },
                                                "bottom_left": {
                                                      "x": 281,
                                                      "y": 307
                                                },
                                                "width": 92,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 381,
                                                      "y": 295
                                                },
                                                "top_right": {
                                                      "x": 389,
                                                      "y": 295
                                                },
                                                "bottom_right": {
                                                      "x": 388,
                                                      "y": 308
                                                },
                                                "bottom_left": {
                                                      "x": 380,
                                                      "y": 308
                                                },
                                                "width": 8,
                                                "height": 13
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "HRI CL PEP",
                              "bounds": {
                                    "top_left": {
                                          "x": 176,
                                          "y": 299
                                    },
                                    "top_right": {
                                          "x": 259,
                                          "y": 305
                                    },
                                    "bottom_right": {
                                          "x": 258,
                                          "y": 319
                                    },
                                    "bottom_left": {
                                          "x": 175,
                                          "y": 314
                                    },
                                    "width": 83,
                                    "height": 14.5
                              },
                              "words": [
                                    {
                                          "text": "HRI",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 178,
                                                      "y": 300
                                                },
                                                "top_right": {
                                                      "x": 203,
                                                      "y": 302
                                                },
                                                "bottom_right": {
                                                      "x": 203,
                                                      "y": 316
                                                },
                                                "bottom_left": {
                                                      "x": 178,
                                                      "y": 315
                                                },
                                                "width": 25,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "CL",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 211,
                                                      "y": 303
                                                },
                                                "top_right": {
                                                      "x": 226,
                                                      "y": 304
                                                },
                                                "bottom_right": {
                                                      "x": 225,
                                                      "y": 318
                                                },
                                                "bottom_left": {
                                                      "x": 210,
                                                      "y": 317
                                                },
                                                "width": 15,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "PEP",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 236,
                                                      "y": 305
                                                },
                                                "top_right": {
                                                      "x": 258,
                                                      "y": 306
                                                },
                                                "bottom_right": {
                                                      "x": 257,
                                                      "y": 319
                                                },
                                                "bottom_left": {
                                                      "x": 235,
                                                      "y": 318
                                                },
                                                "width": 22,
                                                "height": 13
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "5.88 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 427,
                                          "y": 294
                                    },
                                    "top_right": {
                                          "x": 475,
                                          "y": 294
                                    },
                                    "bottom_right": {
                                          "x": 475,
                                          "y": 307
                                    },
                                    "bottom_left": {
                                          "x": 427,
                                          "y": 307
                                    },
                                    "width": 48,
                                    "height": 13
                              },
                              "words": [
                                    {
                                          "text": "5.88",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 427,
                                                      "y": 294
                                                },
                                                "top_right": {
                                                      "x": 458,
                                                      "y": 294
                                                },
                                                "bottom_right": {
                                                      "x": 458,
                                                      "y": 308
                                                },
                                                "bottom_left": {
                                                      "x": 427,
                                                      "y": 308
                                                },
                                                "width": 31,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "0",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 467,
                                                      "y": 295
                                                },
                                                "top_right": {
                                                      "x": 474,
                                                      "y": 295
                                                },
                                                "bottom_right": {
                                                      "x": 474,
                                                      "y": 307
                                                },
                                                "bottom_left": {
                                                      "x": 467,
                                                      "y": 308
                                                },
                                                "width": 7,
                                                "height": 12.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "EARBUDS 068113100946 4.88 X",
                              "bounds": {
                                    "top_left": {
                                          "x": 177,
                                          "y": 315
                                    },
                                    "top_right": {
                                          "x": 240,
                                          "y": 317
                                    },
                                    "bottom_right": {
                                          "x": 239,
                                          "y": 332
                                    },
                                    "bottom_left": {
                                          "x": 177,
                                          "y": 329
                                    },
                                    "width": 62.5,
                                    "height": 14.5
                              },
                              "words": [
                                    {
                                          "text": "EARBUDS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 179,
                                                      "y": 315
                                                },
                                                "top_right": {
                                                      "x": 235,
                                                      "y": 319
                                                },
                                                "bottom_right": {
                                                      "x": 234,
                                                      "y": 332
                                                },
                                                "bottom_left": {
                                                      "x": 177,
                                                      "y": 330
                                                },
                                                "width": 56.5,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "003120507000 F 5.88 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 280,
                                          "y": 306
                                    },
                                    "top_right": {
                                          "x": 390,
                                          "y": 307
                                    },
                                    "bottom_right": {
                                          "x": 390,
                                          "y": 322
                                    },
                                    "bottom_left": {
                                          "x": 280,
                                          "y": 322
                                    },
                                    "width": 110,
                                    "height": 15.5
                              },
                              "words": [
                                    {
                                          "text": "003120507000",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 282,
                                                      "y": 307
                                                },
                                                "top_right": {
                                                      "x": 373,
                                                      "y": 308
                                                },
                                                "bottom_right": {
                                                      "x": 373,
                                                      "y": 323
                                                },
                                                "bottom_left": {
                                                      "x": 280,
                                                      "y": 322
                                                },
                                                "width": 92,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 381,
                                                      "y": 308
                                                },
                                                "top_right": {
                                                      "x": 388,
                                                      "y": 309
                                                },
                                                "bottom_right": {
                                                      "x": 388,
                                                      "y": 322
                                                },
                                                "bottom_left": {
                                                      "x": 381,
                                                      "y": 322
                                                },
                                                "width": 7,
                                                "height": 13.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "SC BCN CHDDR 007874202906 F",
                              "bounds": {
                                    "top_left": {
                                          "x": 176,
                                          "y": 329
                                    },
                                    "top_right": {
                                          "x": 389,
                                          "y": 336
                                    },
                                    "bottom_right": {
                                          "x": 389,
                                          "y": 351
                                    },
                                    "bottom_left": {
                                          "x": 176,
                                          "y": 345
                                    },
                                    "width": 213,
                                    "height": 15.5
                              },
                              "words": [
                                    {
                                          "text": "SC",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 178,
                                                      "y": 329
                                                },
                                                "top_right": {
                                                      "x": 194,
                                                      "y": 330
                                                },
                                                "bottom_right": {
                                                      "x": 193,
                                                      "y": 345
                                                },
                                                "bottom_left": {
                                                      "x": 177,
                                                      "y": 343
                                                },
                                                "width": 16,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "BCN",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 203,
                                                      "y": 331
                                                },
                                                "top_right": {
                                                      "x": 225,
                                                      "y": 332
                                                },
                                                "bottom_right": {
                                                      "x": 224,
                                                      "y": 347
                                                },
                                                "bottom_left": {
                                                      "x": 202,
                                                      "y": 345
                                                },
                                                "width": 22,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "CHDDR",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 234,
                                                      "y": 333
                                                },
                                                "top_right": {
                                                      "x": 273,
                                                      "y": 334
                                                },
                                                "bottom_right": {
                                                      "x": 272,
                                                      "y": 349
                                                },
                                                "bottom_left": {
                                                      "x": 233,
                                                      "y": 347
                                                },
                                                "width": 39,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "007874202906",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 281,
                                                      "y": 335
                                                },
                                                "top_right": {
                                                      "x": 372,
                                                      "y": 337
                                                },
                                                "bottom_right": {
                                                      "x": 372,
                                                      "y": 351
                                                },
                                                "bottom_left": {
                                                      "x": 280,
                                                      "y": 349
                                                },
                                                "width": 91.5,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 380,
                                                      "y": 337
                                                },
                                                "top_right": {
                                                      "x": 387,
                                                      "y": 337
                                                },
                                                "bottom_right": {
                                                      "x": 387,
                                                      "y": 351
                                                },
                                                "bottom_left": {
                                                      "x": 379,
                                                      "y": 351
                                                },
                                                "width": 7.5,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "ABF THINBRST 022451710972 F",
                              "bounds": {
                                    "top_left": {
                                          "x": 177,
                                          "y": 343
                                    },
                                    "top_right": {
                                          "x": 390,
                                          "y": 350
                                    },
                                    "bottom_right": {
                                          "x": 390,
                                          "y": 365
                                    },
                                    "bottom_left": {
                                          "x": 176,
                                          "y": 359
                                    },
                                    "width": 213.5,
                                    "height": 15.5
                              },
                              "words": [
                                    {
                                          "text": "ABF",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 177,
                                                      "y": 343
                                                },
                                                "top_right": {
                                                      "x": 201,
                                                      "y": 345
                                                },
                                                "bottom_right": {
                                                      "x": 201,
                                                      "y": 360
                                                },
                                                "bottom_left": {
                                                      "x": 177,
                                                      "y": 358
                                                },
                                                "width": 24,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "THINBRST",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 211,
                                                      "y": 345
                                                },
                                                "top_right": {
                                                      "x": 274,
                                                      "y": 348
                                                },
                                                "bottom_right": {
                                                      "x": 273,
                                                      "y": 363
                                                },
                                                "bottom_left": {
                                                      "x": 211,
                                                      "y": 360
                                                },
                                                "width": 62.5,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "022451710972",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 281,
                                                      "y": 348
                                                },
                                                "top_right": {
                                                      "x": 373,
                                                      "y": 350
                                                },
                                                "bottom_right": {
                                                      "x": 373,
                                                      "y": 365
                                                },
                                                "bottom_left": {
                                                      "x": 280,
                                                      "y": 363
                                                },
                                                "width": 92.5,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 380,
                                                      "y": 350
                                                },
                                                "top_right": {
                                                      "x": 387,
                                                      "y": 350
                                                },
                                                "bottom_right": {
                                                      "x": 387,
                                                      "y": 365
                                                },
                                                "bottom_left": {
                                                      "x": 379,
                                                      "y": 365
                                                },
                                                "width": 7.5,
                                                "height": 15
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "6.98 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 424,
                                          "y": 336
                                    },
                                    "top_right": {
                                          "x": 475,
                                          "y": 337
                                    },
                                    "bottom_right": {
                                          "x": 475,
                                          "y": 351
                                    },
                                    "bottom_left": {
                                          "x": 424,
                                          "y": 350
                                    },
                                    "width": 51,
                                    "height": 14
                              },
                              "words": [
                                    {
                                          "text": "6.98",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 426,
                                                      "y": 337
                                                },
                                                "top_right": {
                                                      "x": 457,
                                                      "y": 338
                                                },
                                                "bottom_right": {
                                                      "x": 456,
                                                      "y": 350
                                                },
                                                "bottom_left": {
                                                      "x": 426,
                                                      "y": 351
                                                },
                                                "width": 30.5,
                                                "height": 13
                                          }
                                    },
                                    {
                                          "text": "0",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 466,
                                                      "y": 339
                                                },
                                                "top_right": {
                                                      "x": 473,
                                                      "y": 339
                                                },
                                                "bottom_right": {
                                                      "x": 472,
                                                      "y": 350
                                                },
                                                "bottom_left": {
                                                      "x": 465,
                                                      "y": 350
                                                },
                                                "width": 7,
                                                "height": 11
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "HARD/PROV/DC 007874219410 F",
                              "bounds": {
                                    "top_left": {
                                          "x": 177,
                                          "y": 358
                                    },
                                    "top_right": {
                                          "x": 390,
                                          "y": 364
                                    },
                                    "bottom_right": {
                                          "x": 389,
                                          "y": 379
                                    },
                                    "bottom_left": {
                                          "x": 176,
                                          "y": 374
                                    },
                                    "width": 213,
                                    "height": 15.5
                              },
                              "words": [
                                    {
                                          "text": "HARD/PROV/DC",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 177,
                                                      "y": 358
                                                },
                                                "top_right": {
                                                      "x": 272,
                                                      "y": 362
                                                },
                                                "bottom_right": {
                                                      "x": 272,
                                                      "y": 377
                                                },
                                                "bottom_left": {
                                                      "x": 177,
                                                      "y": 373
                                                },
                                                "width": 95,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "007874219410",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 281,
                                                      "y": 362
                                                },
                                                "top_right": {
                                                      "x": 372,
                                                      "y": 365
                                                },
                                                "bottom_right": {
                                                      "x": 372,
                                                      "y": 379
                                                },
                                                "bottom_left": {
                                                      "x": 280,
                                                      "y": 377
                                                },
                                                "width": 91.5,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 379,
                                                      "y": 365
                                                },
                                                "top_right": {
                                                      "x": 387,
                                                      "y": 365
                                                },
                                                "bottom_right": {
                                                      "x": 387,
                                                      "y": 379
                                                },
                                                "bottom_left": {
                                                      "x": 379,
                                                      "y": 379
                                                },
                                                "width": 8,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "9.72 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 424,
                                          "y": 351
                                    },
                                    "top_right": {
                                          "x": 474,
                                          "y": 351
                                    },
                                    "bottom_right": {
                                          "x": 473,
                                          "y": 365
                                    },
                                    "bottom_left": {
                                          "x": 424,
                                          "y": 365
                                    },
                                    "width": 49.5,
                                    "height": 14
                              },
                              "words": [
                                    {
                                          "text": "9.72",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 426,
                                                      "y": 352
                                                },
                                                "top_right": {
                                                      "x": 457,
                                                      "y": 352
                                                },
                                                "bottom_right": {
                                                      "x": 457,
                                                      "y": 365
                                                },
                                                "bottom_left": {
                                                      "x": 427,
                                                      "y": 365
                                                },
                                                "width": 30.5,
                                                "height": 13
                                          }
                                    },
                                    {
                                          "text": "0",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 465,
                                                      "y": 352
                                                },
                                                "top_right": {
                                                      "x": 472,
                                                      "y": 353
                                                },
                                                "bottom_right": {
                                                      "x": 472,
                                                      "y": 365
                                                },
                                                "bottom_left": {
                                                      "x": 465,
                                                      "y": 365
                                                },
                                                "width": 7,
                                                "height": 12.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "DV RSE OIL M 001111101220",
                              "bounds": {
                                    "top_left": {
                                          "x": 175,
                                          "y": 372
                                    },
                                    "top_right": {
                                          "x": 373,
                                          "y": 379
                                    },
                                    "bottom_right": {
                                          "x": 372,
                                          "y": 394
                                    },
                                    "bottom_left": {
                                          "x": 175,
                                          "y": 388
                                    },
                                    "width": 197.5,
                                    "height": 15.5
                              },
                              "words": [
                                    {
                                          "text": "DV",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 178,
                                                      "y": 373
                                                },
                                                "top_right": {
                                                      "x": 193,
                                                      "y": 374
                                                },
                                                "bottom_right": {
                                                      "x": 192,
                                                      "y": 388
                                                },
                                                "bottom_left": {
                                                      "x": 176,
                                                      "y": 387
                                                },
                                                "width": 15.5,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "RSE",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 201,
                                                      "y": 374
                                                },
                                                "top_right": {
                                                      "x": 225,
                                                      "y": 375
                                                },
                                                "bottom_right": {
                                                      "x": 224,
                                                      "y": 390
                                                },
                                                "bottom_left": {
                                                      "x": 200,
                                                      "y": 388
                                                },
                                                "width": 24,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "OIL",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 233,
                                                      "y": 375
                                                },
                                                "top_right": {
                                                      "x": 256,
                                                      "y": 376
                                                },
                                                "bottom_right": {
                                                      "x": 255,
                                                      "y": 391
                                                },
                                                "bottom_left": {
                                                      "x": 232,
                                                      "y": 390
                                                },
                                                "width": 23,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "M",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 265,
                                                      "y": 376
                                                },
                                                "top_right": {
                                                      "x": 272,
                                                      "y": 376
                                                },
                                                "bottom_right": {
                                                      "x": 271,
                                                      "y": 392
                                                },
                                                "bottom_left": {
                                                      "x": 264,
                                                      "y": 391
                                                },
                                                "width": 7,
                                                "height": 15.5
                                          }
                                    },
                                    {
                                          "text": "001111101220",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 280,
                                                      "y": 376
                                                },
                                                "top_right": {
                                                      "x": 372,
                                                      "y": 379
                                                },
                                                "bottom_right": {
                                                      "x": 371,
                                                      "y": 394
                                                },
                                                "bottom_left": {
                                                      "x": 279,
                                                      "y": 392
                                                },
                                                "width": 92,
                                                "height": 15.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "2.68 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 423,
                                          "y": 365
                                    },
                                    "top_right": {
                                          "x": 473,
                                          "y": 367
                                    },
                                    "bottom_right": {
                                          "x": 473,
                                          "y": 381
                                    },
                                    "bottom_left": {
                                          "x": 423,
                                          "y": 379
                                    },
                                    "width": 50,
                                    "height": 14
                              },
                              "words": [
                                    {
                                          "text": "2.68",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 426,
                                                      "y": 366
                                                },
                                                "top_right": {
                                                      "x": 456,
                                                      "y": 367
                                                },
                                                "bottom_right": {
                                                      "x": 456,
                                                      "y": 380
                                                },
                                                "bottom_left": {
                                                      "x": 426,
                                                      "y": 380
                                                },
                                                "width": 30,
                                                "height": 13.5
                                          }
                                    },
                                    {
                                          "text": "0",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 465,
                                                      "y": 368
                                                },
                                                "top_right": {
                                                      "x": 471,
                                                      "y": 368
                                                },
                                                "bottom_right": {
                                                      "x": 471,
                                                      "y": 380
                                                },
                                                "bottom_left": {
                                                      "x": 464,
                                                      "y": 380
                                                },
                                                "width": 6.5,
                                                "height": 12
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "APPLE 3 BAG 084747300184 F",
                              "bounds": {
                                    "top_left": {
                                          "x": 175,
                                          "y": 386
                                    },
                                    "top_right": {
                                          "x": 387,
                                          "y": 393
                                    },
                                    "bottom_right": {
                                          "x": 386,
                                          "y": 408
                                    },
                                    "bottom_left": {
                                          "x": 175,
                                          "y": 401
                                    },
                                    "width": 211.5,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "APPLE",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 177,
                                                      "y": 387
                                                },
                                                "top_right": {
                                                      "x": 216,
                                                      "y": 388
                                                },
                                                "bottom_right": {
                                                      "x": 215,
                                                      "y": 403
                                                },
                                                "bottom_left": {
                                                      "x": 176,
                                                      "y": 402
                                                },
                                                "width": 39,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "3",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 226,
                                                      "y": 389
                                                },
                                                "top_right": {
                                                      "x": 233,
                                                      "y": 389
                                                },
                                                "bottom_right": {
                                                      "x": 232,
                                                      "y": 404
                                                },
                                                "bottom_left": {
                                                      "x": 225,
                                                      "y": 403
                                                },
                                                "width": 7,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "BAG",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 249,
                                                      "y": 390
                                                },
                                                "top_right": {
                                                      "x": 272,
                                                      "y": 391
                                                },
                                                "bottom_right": {
                                                      "x": 271,
                                                      "y": 405
                                                },
                                                "bottom_left": {
                                                      "x": 248,
                                                      "y": 404
                                                },
                                                "width": 23,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "084747300184",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 280,
                                                      "y": 391
                                                },
                                                "top_right": {
                                                      "x": 371,
                                                      "y": 393
                                                },
                                                "bottom_right": {
                                                      "x": 370,
                                                      "y": 407
                                                },
                                                "bottom_left": {
                                                      "x": 279,
                                                      "y": 405
                                                },
                                                "width": 91,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 378,
                                                      "y": 394
                                                },
                                                "top_right": {
                                                      "x": 386,
                                                      "y": 394
                                                },
                                                "bottom_right": {
                                                      "x": 385,
                                                      "y": 407
                                                },
                                                "bottom_left": {
                                                      "x": 377,
                                                      "y": 407
                                                },
                                                "width": 8,
                                                "height": 13
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "5.94 X",
                              "bounds": {
                                    "top_left": {
                                          "x": 421,
                                          "y": 379
                                    },
                                    "top_right": {
                                          "x": 474,
                                          "y": 380
                                    },
                                    "bottom_right": {
                                          "x": 473,
                                          "y": 394
                                    },
                                    "bottom_left": {
                                          "x": 421,
                                          "y": 393
                                    },
                                    "width": 52.5,
                                    "height": 14
                              },
                              "words": [
                                    {
                                          "text": "5.94",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 425,
                                                      "y": 380
                                                },
                                                "top_right": {
                                                      "x": 457,
                                                      "y": 381
                                                },
                                                "bottom_right": {
                                                      "x": 456,
                                                      "y": 393
                                                },
                                                "bottom_left": {
                                                      "x": 425,
                                                      "y": 393
                                                },
                                                "width": 31.5,
                                                "height": 12.5
                                          }
                                    },
                                    {
                                          "text": "X",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 465,
                                                      "y": 381
                                                },
                                                "top_right": {
                                                      "x": 471,
                                                      "y": 381
                                                },
                                                "bottom_right": {
                                                      "x": 471,
                                                      "y": 394
                                                },
                                                "bottom_left": {
                                                      "x": 464,
                                                      "y": 393
                                                },
                                                "width": 6.5,
                                                "height": 12.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "STOK LT SWT 004127102774 F",
                              "bounds": {
                                    "top_left": {
                                          "x": 175,
                                          "y": 400
                                    },
                                    "top_right": {
                                          "x": 386,
                                          "y": 406
                                    },
                                    "bottom_right": {
                                          "x": 386,
                                          "y": 421
                                    },
                                    "bottom_left": {
                                          "x": 174,
                                          "y": 415
                                    },
                                    "width": 211.5,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "STOK",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 176,
                                                      "y": 401
                                                },
                                                "top_right": {
                                                      "x": 208,
                                                      "y": 402
                                                },
                                                "bottom_right": {
                                                      "x": 207,
                                                      "y": 416
                                                },
                                                "bottom_left": {
                                                      "x": 176,
                                                      "y": 415
                                                },
                                                "width": 31.5,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "LT",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 216,
                                                      "y": 402
                                                },
                                                "top_right": {
                                                      "x": 234,
                                                      "y": 403
                                                },
                                                "bottom_right": {
                                                      "x": 233,
                                                      "y": 417
                                                },
                                                "bottom_left": {
                                                      "x": 215,
                                                      "y": 417
                                                },
                                                "width": 18,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "SWT",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 241,
                                                      "y": 403
                                                },
                                                "top_right": {
                                                      "x": 264,
                                                      "y": 404
                                                },
                                                "bottom_right": {
                                                      "x": 264,
                                                      "y": 418
                                                },
                                                "bottom_left": {
                                                      "x": 240,
                                                      "y": 417
                                                },
                                                "width": 23.5,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "004127102774",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 279,
                                                      "y": 404
                                                },
                                                "top_right": {
                                                      "x": 371,
                                                      "y": 406
                                                },
                                                "bottom_right": {
                                                      "x": 371,
                                                      "y": 421
                                                },
                                                "bottom_left": {
                                                      "x": 279,
                                                      "y": 419
                                                },
                                                "width": 92,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 378,
                                                      "y": 406
                                                },
                                                "top_right": {
                                                      "x": 386,
                                                      "y": 406
                                                },
                                                "bottom_right": {
                                                      "x": 386,
                                                      "y": 421
                                                },
                                                "bottom_left": {
                                                      "x": 378,
                                                      "y": 421
                                                },
                                                "width": 8,
                                                "height": 15
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "6.47 N",
                              "bounds": {
                                    "top_left": {
                                          "x": 421,
                                          "y": 393
                                    },
                                    "top_right": {
                                          "x": 474,
                                          "y": 394
                                    },
                                    "bottom_right": {
                                          "x": 474,
                                          "y": 409
                                    },
                                    "bottom_left": {
                                          "x": 421,
                                          "y": 407
                                    },
                                    "width": 53,
                                    "height": 14.5
                              },
                              "words": [
                                    {
                                          "text": "6.47",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 425,
                                                      "y": 394
                                                },
                                                "top_right": {
                                                      "x": 456,
                                                      "y": 395
                                                },
                                                "bottom_right": {
                                                      "x": 456,
                                                      "y": 409
                                                },
                                                "bottom_left": {
                                                      "x": 425,
                                                      "y": 408
                                                },
                                                "width": 31,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "N",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 463,
                                                      "y": 395
                                                },
                                                "top_right": {
                                                      "x": 470,
                                                      "y": 395
                                                },
                                                "bottom_right": {
                                                      "x": 470,
                                                      "y": 409
                                                },
                                                "bottom_left": {
                                                      "x": 463,
                                                      "y": 409
                                                },
                                                "width": 7,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "PEANUT BUTTR 005160025499 F",
                              "bounds": {
                                    "top_left": {
                                          "x": 174,
                                          "y": 414
                                    },
                                    "top_right": {
                                          "x": 386,
                                          "y": 420
                                    },
                                    "bottom_right": {
                                          "x": 386,
                                          "y": 435
                                    },
                                    "bottom_left": {
                                          "x": 174,
                                          "y": 430
                                    },
                                    "width": 212,
                                    "height": 15.5
                              },
                              "words": [
                                    {
                                          "text": "PEANUT",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 176,
                                                      "y": 415
                                                },
                                                "top_right": {
                                                      "x": 226,
                                                      "y": 417
                                                },
                                                "bottom_right": {
                                                      "x": 225,
                                                      "y": 432
                                                },
                                                "bottom_left": {
                                                      "x": 175,
                                                      "y": 429
                                                },
                                                "width": 50,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "BUTTR",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 233,
                                                      "y": 417
                                                },
                                                "top_right": {
                                                      "x": 270,
                                                      "y": 418
                                                },
                                                "bottom_right": {
                                                      "x": 270,
                                                      "y": 433
                                                },
                                                "bottom_left": {
                                                      "x": 232,
                                                      "y": 432
                                                },
                                                "width": 37.5,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "005160025499",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 279,
                                                      "y": 418
                                                },
                                                "top_right": {
                                                      "x": 371,
                                                      "y": 421
                                                },
                                                "bottom_right": {
                                                      "x": 371,
                                                      "y": 434
                                                },
                                                "bottom_left": {
                                                      "x": 278,
                                                      "y": 433
                                                },
                                                "width": 92.5,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "F",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 378,
                                                      "y": 421
                                                },
                                                "top_right": {
                                                      "x": 386,
                                                      "y": 421
                                                },
                                                "bottom_right": {
                                                      "x": 385,
                                                      "y": 434
                                                },
                                                "bottom_left": {
                                                      "x": 378,
                                                      "y": 434
                                                },
                                                "width": 7.5,
                                                "height": 13
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "4.42 T",
                              "bounds": {
                                    "top_left": {
                                          "x": 421,
                                          "y": 407
                                    },
                                    "top_right": {
                                          "x": 472,
                                          "y": 408
                                    },
                                    "bottom_right": {
                                          "x": 472,
                                          "y": 421
                                    },
                                    "bottom_left": {
                                          "x": 421,
                                          "y": 421
                                    },
                                    "width": 51,
                                    "height": 13.5
                              },
                              "words": [
                                    {
                                          "text": "4.42",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 424,
                                                      "y": 408
                                                },
                                                "top_right": {
                                                      "x": 455,
                                                      "y": 409
                                                },
                                                "bottom_right": {
                                                      "x": 454,
                                                      "y": 422
                                                },
                                                "bottom_left": {
                                                      "x": 424,
                                                      "y": 421
                                                },
                                                "width": 30.5,
                                                "height": 13
                                          }
                                    },
                                    {
                                          "text": "T",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 464,
                                                      "y": 409
                                                },
                                                "top_right": {
                                                      "x": 470,
                                                      "y": 409
                                                },
                                                "bottom_right": {
                                                      "x": 470,
                                                      "y": 422
                                                },
                                                "bottom_left": {
                                                      "x": 463,
                                                      "y": 422
                                                },
                                                "width": 6.5,
                                                "height": 13
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "AVO VERDE 2.98 N 061611206143 F",
                              "bounds": {
                                    "top_left": {
                                          "x": 174,
                                          "y": 430
                                    },
                                    "top_right": {
                                          "x": 248,
                                          "y": 431
                                    },
                                    "bottom_right": {
                                          "x": 248,
                                          "y": 446
                                    },
                                    "bottom_left": {
                                          "x": 174,
                                          "y": 444
                                    },
                                    "width": 74,
                                    "height": 14.5
                              },
                              "words": [
                                    {
                                          "text": "AVO",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 176,
                                                      "y": 430
                                                },
                                                "top_right": {
                                                      "x": 199,
                                                      "y": 431
                                                },
                                                "bottom_right": {
                                                      "x": 199,
                                                      "y": 445
                                                },
                                                "bottom_left": {
                                                      "x": 175,
                                                      "y": 445
                                                },
                                                "width": 23.5,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "VERDE",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 208,
                                                      "y": 431
                                                },
                                                "top_right": {
                                                      "x": 248,
                                                      "y": 433
                                                },
                                                "bottom_right": {
                                                      "x": 247,
                                                      "y": 446
                                                },
                                                "bottom_left": {
                                                      "x": 207,
                                                      "y": 445
                                                },
                                                "width": 40,
                                                "height": 13.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "6.44 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 421,
                                          "y": 421
                                    },
                                    "top_right": {
                                          "x": 471,
                                          "y": 422
                                    },
                                    "bottom_right": {
                                          "x": 471,
                                          "y": 436
                                    },
                                    "bottom_left": {
                                          "x": 421,
                                          "y": 435
                                    },
                                    "width": 50,
                                    "height": 14
                              },
                              "words": [
                                    {
                                          "text": "6.44",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 424,
                                                      "y": 422
                                                },
                                                "top_right": {
                                                      "x": 454,
                                                      "y": 422
                                                },
                                                "bottom_right": {
                                                      "x": 454,
                                                      "y": 436
                                                },
                                                "bottom_left": {
                                                      "x": 423,
                                                      "y": 435
                                                },
                                                "width": 30.5,
                                                "height": 13.5
                                          }
                                    },
                                    {
                                          "text": "0",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 462,
                                                      "y": 423
                                                },
                                                "top_right": {
                                                      "x": 469,
                                                      "y": 423
                                                },
                                                "bottom_right": {
                                                      "x": 469,
                                                      "y": 436
                                                },
                                                "bottom_left": {
                                                      "x": 462,
                                                      "y": 436
                                                },
                                                "width": 7,
                                                "height": 13
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "ROLLS 007874219415 F 1.28 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 174,
                                          "y": 443
                                    },
                                    "top_right": {
                                          "x": 217,
                                          "y": 444
                                    },
                                    "bottom_right": {
                                          "x": 217,
                                          "y": 458
                                    },
                                    "bottom_left": {
                                          "x": 174,
                                          "y": 457
                                    },
                                    "width": 43,
                                    "height": 14
                              },
                              "words": [
                                    {
                                          "text": "ROLLS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 175,
                                                      "y": 443
                                                },
                                                "top_right": {
                                                      "x": 215,
                                                      "y": 445
                                                },
                                                "bottom_right": {
                                                      "x": 214,
                                                      "y": 458
                                                },
                                                "bottom_left": {
                                                      "x": 175,
                                                      "y": 457
                                                },
                                                "width": 39.5,
                                                "height": 13.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "BTS DRY BLON 501072452746 6.58 X",
                              "bounds": {
                                    "top_left": {
                                          "x": 175,
                                          "y": 457
                                    },
                                    "top_right": {
                                          "x": 371,
                                          "y": 461
                                    },
                                    "bottom_right": {
                                          "x": 371,
                                          "y": 476
                                    },
                                    "bottom_left": {
                                          "x": 175,
                                          "y": 471
                                    },
                                    "width": 196,
                                    "height": 14.5
                              },
                              "words": [
                                    {
                                          "text": "BTS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 176,
                                                      "y": 457
                                                },
                                                "top_right": {
                                                      "x": 199,
                                                      "y": 458
                                                },
                                                "bottom_right": {
                                                      "x": 198,
                                                      "y": 472
                                                },
                                                "bottom_left": {
                                                      "x": 175,
                                                      "y": 472
                                                },
                                                "width": 23,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "DRY",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 207,
                                                      "y": 458
                                                },
                                                "top_right": {
                                                      "x": 231,
                                                      "y": 458
                                                },
                                                "bottom_right": {
                                                      "x": 230,
                                                      "y": 473
                                                },
                                                "bottom_left": {
                                                      "x": 206,
                                                      "y": 473
                                                },
                                                "width": 24,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "BLON",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 238,
                                                      "y": 459
                                                },
                                                "top_right": {
                                                      "x": 269,
                                                      "y": 459
                                                },
                                                "bottom_right": {
                                                      "x": 269,
                                                      "y": 474
                                                },
                                                "bottom_left": {
                                                      "x": 238,
                                                      "y": 473
                                                },
                                                "width": 31,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "501072452746",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 278,
                                                      "y": 460
                                                },
                                                "top_right": {
                                                      "x": 369,
                                                      "y": 463
                                                },
                                                "bottom_right": {
                                                      "x": 369,
                                                      "y": 476
                                                },
                                                "bottom_left": {
                                                      "x": 277,
                                                      "y": 474
                                                },
                                                "width": 91.5,
                                                "height": 13.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "GALE 000000000003K 32.00 T",
                              "bounds": {
                                    "top_left": {
                                          "x": 174,
                                          "y": 470
                                    },
                                    "top_right": {
                                          "x": 209,
                                          "y": 472
                                    },
                                    "bottom_right": {
                                          "x": 208,
                                          "y": 484
                                    },
                                    "bottom_left": {
                                          "x": 174,
                                          "y": 484
                                    },
                                    "width": 34.5,
                                    "height": 13
                              },
                              "words": [
                                    {
                                          "text": "GALE",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 175,
                                                      "y": 470
                                                },
                                                "top_right": {
                                                      "x": 206,
                                                      "y": 471
                                                },
                                                "bottom_right": {
                                                      "x": 206,
                                                      "y": 485
                                                },
                                                "bottom_left": {
                                                      "x": 175,
                                                      "y": 484
                                                },
                                                "width": 31,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "TR HS FRM 4 002240062190 2.74 X",
                              "bounds": {
                                    "top_left": {
                                          "x": 174,
                                          "y": 484
                                    },
                                    "top_right": {
                                          "x": 262,
                                          "y": 486
                                    },
                                    "bottom_right": {
                                          "x": 262,
                                          "y": 501
                                    },
                                    "bottom_left": {
                                          "x": 173,
                                          "y": 499
                                    },
                                    "width": 88.5,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "TR",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 175,
                                                      "y": 484
                                                },
                                                "top_right": {
                                                      "x": 188,
                                                      "y": 485
                                                },
                                                "bottom_right": {
                                                      "x": 188,
                                                      "y": 500
                                                },
                                                "bottom_left": {
                                                      "x": 175,
                                                      "y": 500
                                                },
                                                "width": 13,
                                                "height": 15.5
                                          }
                                    },
                                    {
                                          "text": "HS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 196,
                                                      "y": 485
                                                },
                                                "top_right": {
                                                      "x": 214,
                                                      "y": 486
                                                },
                                                "bottom_right": {
                                                      "x": 214,
                                                      "y": 501
                                                },
                                                "bottom_left": {
                                                      "x": 196,
                                                      "y": 500
                                                },
                                                "width": 18,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "FRM",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 221,
                                                      "y": 486
                                                },
                                                "top_right": {
                                                      "x": 245,
                                                      "y": 487
                                                },
                                                "bottom_right": {
                                                      "x": 244,
                                                      "y": 501
                                                },
                                                "bottom_left": {
                                                      "x": 221,
                                                      "y": 501
                                                },
                                                "width": 23.5,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "4",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 254,
                                                      "y": 487
                                                },
                                                "top_right": {
                                                      "x": 262,
                                                      "y": 487
                                                },
                                                "bottom_right": {
                                                      "x": 262,
                                                      "y": 501
                                                },
                                                "bottom_left": {
                                                      "x": 253,
                                                      "y": 501
                                                },
                                                "width": 8.5,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "BAGELS 001376402801 F 4.66 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 172,
                                          "y": 498
                                    },
                                    "top_right": {
                                          "x": 223,
                                          "y": 499
                                    },
                                    "bottom_right": {
                                          "x": 223,
                                          "y": 514
                                    },
                                    "bottom_left": {
                                          "x": 171,
                                          "y": 513
                                    },
                                    "width": 51.5,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "BAGELS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 173,
                                                      "y": 499
                                                },
                                                "top_right": {
                                                      "x": 221,
                                                      "y": 501
                                                },
                                                "bottom_right": {
                                                      "x": 220,
                                                      "y": 514
                                                },
                                                "bottom_left": {
                                                      "x": 173,
                                                      "y": 513
                                                },
                                                "width": 47.5,
                                                "height": 13.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "GV SLIDERS 007874201625 2.98 X",
                              "bounds": {
                                    "top_left": {
                                          "x": 170,
                                          "y": 513
                                    },
                                    "top_right": {
                                          "x": 252,
                                          "y": 514
                                    },
                                    "bottom_right": {
                                          "x": 252,
                                          "y": 529
                                    },
                                    "bottom_left": {
                                          "x": 170,
                                          "y": 528
                                    },
                                    "width": 82,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "GV",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 172,
                                                      "y": 514
                                                },
                                                "top_right": {
                                                      "x": 187,
                                                      "y": 514
                                                },
                                                "bottom_right": {
                                                      "x": 187,
                                                      "y": 529
                                                },
                                                "bottom_left": {
                                                      "x": 172,
                                                      "y": 529
                                                },
                                                "width": 15,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "SLIDERS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 197,
                                                      "y": 514
                                                },
                                                "top_right": {
                                                      "x": 252,
                                                      "y": 515
                                                },
                                                "bottom_right": {
                                                      "x": 252,
                                                      "y": 529
                                                },
                                                "bottom_left": {
                                                      "x": 197,
                                                      "y": 529
                                                },
                                                "width": 55,
                                                "height": 14.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "ACCESSORY 007615161216 0.97 X",
                              "bounds": {
                                    "top_left": {
                                          "x": 170,
                                          "y": 526
                                    },
                                    "top_right": {
                                          "x": 245,
                                          "y": 528
                                    },
                                    "bottom_right": {
                                          "x": 245,
                                          "y": 543
                                    },
                                    "bottom_left": {
                                          "x": 170,
                                          "y": 541
                                    },
                                    "width": 75,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "ACCESSORY",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 171,
                                                      "y": 527
                                                },
                                                "top_right": {
                                                      "x": 243,
                                                      "y": 529
                                                },
                                                "bottom_right": {
                                                      "x": 243,
                                                      "y": 542
                                                },
                                                "bottom_left": {
                                                      "x": 171,
                                                      "y": 542
                                                },
                                                "width": 72,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "CHEEZE IT 002410053523 F 4.00 0",
                              "bounds": {
                                    "top_left": {
                                          "x": 169,
                                          "y": 540
                                    },
                                    "top_right": {
                                          "x": 244,
                                          "y": 542
                                    },
                                    "bottom_right": {
                                          "x": 244,
                                          "y": 558
                                    },
                                    "bottom_left": {
                                          "x": 169,
                                          "y": 556
                                    },
                                    "width": 75,
                                    "height": 16
                              },
                              "words": [
                                    {
                                          "text": "CHEEZE",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 170,
                                                      "y": 541
                                                },
                                                "top_right": {
                                                      "x": 219,
                                                      "y": 543
                                                },
                                                "bottom_right": {
                                                      "x": 218,
                                                      "y": 557
                                                },
                                                "bottom_left": {
                                                      "x": 170,
                                                      "y": 557
                                                },
                                                "width": 48.5,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "IT",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 228,
                                                      "y": 543
                                                },
                                                "top_right": {
                                                      "x": 245,
                                                      "y": 544
                                                },
                                                "bottom_right": {
                                                      "x": 243,
                                                      "y": 558
                                                },
                                                "bottom_left": {
                                                      "x": 227,
                                                      "y": 557
                                                },
                                                "width": 16.5,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "WAS 4.54 YOU SAVED 0.54",
                              "bounds": {
                                    "top_left": {
                                          "x": 195,
                                          "y": 555
                                    },
                                    "top_right": {
                                          "x": 384,
                                          "y": 558
                                    },
                                    "bottom_right": {
                                          "x": 384,
                                          "y": 573
                                    },
                                    "bottom_left": {
                                          "x": 194,
                                          "y": 571
                                    },
                                    "width": 189.5,
                                    "height": 15.5
                              },
                              "words": [
                                    {
                                          "text": "WAS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 201,
                                                      "y": 556
                                                },
                                                "top_right": {
                                                      "x": 226,
                                                      "y": 557
                                                },
                                                "bottom_right": {
                                                      "x": 225,
                                                      "y": 572
                                                },
                                                "bottom_left": {
                                                      "x": 200,
                                                      "y": 571
                                                },
                                                "width": 25,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "4.54",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 234,
                                                      "y": 557
                                                },
                                                "top_right": {
                                                      "x": 267,
                                                      "y": 558
                                                },
                                                "bottom_right": {
                                                      "x": 266,
                                                      "y": 573
                                                },
                                                "bottom_left": {
                                                      "x": 234,
                                                      "y": 572
                                                },
                                                "width": 32.5,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "YOU",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 273,
                                                      "y": 558
                                                },
                                                "top_right": {
                                                      "x": 296,
                                                      "y": 559
                                                },
                                                "bottom_right": {
                                                      "x": 295,
                                                      "y": 573
                                                },
                                                "bottom_left": {
                                                      "x": 273,
                                                      "y": 573
                                                },
                                                "width": 22.5,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "SAVED",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 305,
                                                      "y": 559
                                                },
                                                "top_right": {
                                                      "x": 343,
                                                      "y": 560
                                                },
                                                "bottom_right": {
                                                      "x": 343,
                                                      "y": 573
                                                },
                                                "bottom_left": {
                                                      "x": 305,
                                                      "y": 573
                                                },
                                                "width": 38,
                                                "height": 13.5
                                          }
                                    },
                                    {
                                          "text": "0.54",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 352,
                                                      "y": 560
                                                },
                                                "top_right": {
                                                      "x": 383,
                                                      "y": 560
                                                },
                                                "bottom_right": {
                                                      "x": 383,
                                                      "y": 573
                                                },
                                                "bottom_left": {
                                                      "x": 351,
                                                      "y": 573
                                                },
                                                "width": 31.5,
                                                "height": 13
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "RITZ 004400088210 F 2.78 N",
                              "bounds": {
                                    "top_left": {
                                          "x": 166,
                                          "y": 570
                                    },
                                    "top_right": {
                                          "x": 203,
                                          "y": 571
                                    },
                                    "bottom_right": {
                                          "x": 203,
                                          "y": 585
                                    },
                                    "bottom_left": {
                                          "x": 166,
                                          "y": 585
                                    },
                                    "width": 37,
                                    "height": 14.5
                              },
                              "words": [
                                    {
                                          "text": "RITZ",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 168,
                                                      "y": 570
                                                },
                                                "top_right": {
                                                      "x": 203,
                                                      "y": 570
                                                },
                                                "bottom_right": {
                                                      "x": 203,
                                                      "y": 585
                                                },
                                                "bottom_left": {
                                                      "x": 168,
                                                      "y": 585
                                                },
                                                "width": 35,
                                                "height": 15
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "RUFFLES 002840020942 F 2.50 N",
                              "bounds": {
                                    "top_left": {
                                          "x": 167,
                                          "y": 584
                                    },
                                    "top_right": {
                                          "x": 225,
                                          "y": 584
                                    },
                                    "bottom_right": {
                                          "x": 225,
                                          "y": 599
                                    },
                                    "bottom_left": {
                                          "x": 167,
                                          "y": 599
                                    },
                                    "width": 58,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "RUFFLES",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 167,
                                                      "y": 585
                                                },
                                                "top_right": {
                                                      "x": 224,
                                                      "y": 585
                                                },
                                                "bottom_right": {
                                                      "x": 224,
                                                      "y": 599
                                                },
                                                "bottom_left": {
                                                      "x": 167,
                                                      "y": 600
                                                },
                                                "width": 57,
                                                "height": 14.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "GV HNY GRMS 007874207253 F 1.28 N",
                              "bounds": {
                                    "top_left": {
                                          "x": 166,
                                          "y": 599
                                    },
                                    "top_right": {
                                          "x": 258,
                                          "y": 600
                                    },
                                    "bottom_right": {
                                          "x": 257,
                                          "y": 615
                                    },
                                    "bottom_left": {
                                          "x": 166,
                                          "y": 614
                                    },
                                    "width": 91.5,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "GV",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 167,
                                                      "y": 600
                                                },
                                                "top_right": {
                                                      "x": 182,
                                                      "y": 600
                                                },
                                                "bottom_right": {
                                                      "x": 181,
                                                      "y": 615
                                                },
                                                "bottom_left": {
                                                      "x": 166,
                                                      "y": 615
                                                },
                                                "width": 15,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "HNY",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 190,
                                                      "y": 600
                                                },
                                                "top_right": {
                                                      "x": 216,
                                                      "y": 600
                                                },
                                                "bottom_right": {
                                                      "x": 215,
                                                      "y": 615
                                                },
                                                "bottom_left": {
                                                      "x": 189,
                                                      "y": 615
                                                },
                                                "width": 26,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "GRMS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 223,
                                                      "y": 600
                                                },
                                                "top_right": {
                                                      "x": 256,
                                                      "y": 601
                                                },
                                                "bottom_right": {
                                                      "x": 256,
                                                      "y": 616
                                                },
                                                "bottom_left": {
                                                      "x": 223,
                                                      "y": 616
                                                },
                                                "width": 33,
                                                "height": 15.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "SUBTOTAL 139.44",
                              "bounds": {
                                    "top_left": {
                                          "x": 309,
                                          "y": 616
                                    },
                                    "top_right": {
                                          "x": 374,
                                          "y": 617
                                    },
                                    "bottom_right": {
                                          "x": 374,
                                          "y": 631
                                    },
                                    "bottom_left": {
                                          "x": 309,
                                          "y": 630
                                    },
                                    "width": 65,
                                    "height": 14
                              },
                              "words": [
                                    {
                                          "text": "SUBTOTAL",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 311,
                                                      "y": 616
                                                },
                                                "top_right": {
                                                      "x": 372,
                                                      "y": 618
                                                },
                                                "bottom_right": {
                                                      "x": 372,
                                                      "y": 631
                                                },
                                                "bottom_left": {
                                                      "x": 310,
                                                      "y": 630
                                                },
                                                "width": 61.5,
                                                "height": 13.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "TAX 1 7.000 % 4.58",
                              "bounds": {
                                    "top_left": {
                                          "x": 238,
                                          "y": 630
                                    },
                                    "top_right": {
                                          "x": 278,
                                          "y": 631
                                    },
                                    "bottom_right": {
                                          "x": 278,
                                          "y": 644
                                    },
                                    "bottom_left": {
                                          "x": 238,
                                          "y": 644
                                    },
                                    "width": 40,
                                    "height": 13.5
                              },
                              "words": [
                                    {
                                          "text": "TAX",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 239,
                                                      "y": 630
                                                },
                                                "top_right": {
                                                      "x": 263,
                                                      "y": 630
                                                },
                                                "bottom_right": {
                                                      "x": 263,
                                                      "y": 644
                                                },
                                                "bottom_left": {
                                                      "x": 239,
                                                      "y": 643
                                                },
                                                "width": 24,
                                                "height": 13.5
                                          }
                                    },
                                    {
                                          "text": "1",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 272,
                                                      "y": 630
                                                },
                                                "top_right": {
                                                      "x": 277,
                                                      "y": 630
                                                },
                                                "bottom_right": {
                                                      "x": 277,
                                                      "y": 644
                                                },
                                                "bottom_left": {
                                                      "x": 271,
                                                      "y": 644
                                                },
                                                "width": 5.5,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "TOTAL 144.02",
                              "bounds": {
                                    "top_left": {
                                          "x": 333,
                                          "y": 645
                                    },
                                    "top_right": {
                                          "x": 371,
                                          "y": 647
                                    },
                                    "bottom_right": {
                                          "x": 370,
                                          "y": 660
                                    },
                                    "bottom_left": {
                                          "x": 333,
                                          "y": 659
                                    },
                                    "width": 37.5,
                                    "height": 13.5
                              },
                              "words": [
                                    {
                                          "text": "TOTAL",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 335,
                                                      "y": 645
                                                },
                                                "top_right": {
                                                      "x": 370,
                                                      "y": 646
                                                },
                                                "bottom_right": {
                                                      "x": 370,
                                                      "y": 660
                                                },
                                                "bottom_left": {
                                                      "x": 334,
                                                      "y": 658
                                                },
                                                "width": 35.5,
                                                "height": 13.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "CASH TEND 150.02",
                              "bounds": {
                                    "top_left": {
                                          "x": 292,
                                          "y": 660
                                    },
                                    "top_right": {
                                          "x": 375,
                                          "y": 660
                                    },
                                    "bottom_right": {
                                          "x": 375,
                                          "y": 675
                                    },
                                    "bottom_left": {
                                          "x": 292,
                                          "y": 675
                                    },
                                    "width": 83,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "CASH",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 293,
                                                      "y": 660
                                                },
                                                "top_right": {
                                                      "x": 324,
                                                      "y": 661
                                                },
                                                "bottom_right": {
                                                      "x": 323,
                                                      "y": 675
                                                },
                                                "bottom_left": {
                                                      "x": 292,
                                                      "y": 675
                                                },
                                                "width": 31,
                                                "height": 14.5
                                          }
                                    },
                                    {
                                          "text": "TEND",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 342,
                                                      "y": 661
                                                },
                                                "top_right": {
                                                      "x": 373,
                                                      "y": 661
                                                },
                                                "bottom_right": {
                                                      "x": 372,
                                                      "y": 675
                                                },
                                                "bottom_left": {
                                                      "x": 342,
                                                      "y": 675
                                                },
                                                "width": 30.5,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "CHANGE DUE 6.00",
                              "bounds": {
                                    "top_left": {
                                          "x": 289,
                                          "y": 675
                                    },
                                    "top_right": {
                                          "x": 374,
                                          "y": 675
                                    },
                                    "bottom_right": {
                                          "x": 374,
                                          "y": 690
                                    },
                                    "bottom_left": {
                                          "x": 289,
                                          "y": 690
                                    },
                                    "width": 85,
                                    "height": 15
                              },
                              "words": [
                                    {
                                          "text": "CHANGE",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 292,
                                                      "y": 676
                                                },
                                                "top_right": {
                                                      "x": 340,
                                                      "y": 676
                                                },
                                                "bottom_right": {
                                                      "x": 340,
                                                      "y": 690
                                                },
                                                "bottom_left": {
                                                      "x": 292,
                                                      "y": 690
                                                },
                                                "width": 48,
                                                "height": 14
                                          }
                                    },
                                    {
                                          "text": "DUE",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 349,
                                                      "y": 676
                                                },
                                                "top_right": {
                                                      "x": 372,
                                                      "y": 676
                                                },
                                                "bottom_right": {
                                                      "x": 372,
                                                      "y": 690
                                                },
                                                "bottom_left": {
                                                      "x": 349,
                                                      "y": 690
                                                },
                                                "width": 23,
                                                "height": 14
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "# ITEMS SOLD 26",
                              "bounds": {
                                    "top_left": {
                                          "x": 249,
                                          "y": 689
                                    },
                                    "top_right": {
                                          "x": 376,
                                          "y": 690
                                    },
                                    "bottom_right": {
                                          "x": 376,
                                          "y": 706
                                    },
                                    "bottom_left": {
                                          "x": 248,
                                          "y": 705
                                    },
                                    "width": 127.5,
                                    "height": 16
                              },
                              "words": [
                                    {
                                          "text": "#",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 251,
                                                      "y": 690
                                                },
                                                "top_right": {
                                                      "x": 260,
                                                      "y": 690
                                                },
                                                "bottom_right": {
                                                      "x": 259,
                                                      "y": 705
                                                },
                                                "bottom_left": {
                                                      "x": 251,
                                                      "y": 705
                                                },
                                                "width": 8.5,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "ITEMS",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 269,
                                                      "y": 690
                                                },
                                                "top_right": {
                                                      "x": 308,
                                                      "y": 691
                                                },
                                                "bottom_right": {
                                                      "x": 308,
                                                      "y": 706
                                                },
                                                "bottom_left": {
                                                      "x": 268,
                                                      "y": 705
                                                },
                                                "width": 39.5,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "SOLD",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 316,
                                                      "y": 691
                                                },
                                                "top_right": {
                                                      "x": 348,
                                                      "y": 691
                                                },
                                                "bottom_right": {
                                                      "x": 348,
                                                      "y": 706
                                                },
                                                "bottom_left": {
                                                      "x": 316,
                                                      "y": 706
                                                },
                                                "width": 32,
                                                "height": 15
                                          }
                                    },
                                    {
                                          "text": "26",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 357,
                                                      "y": 691
                                                },
                                                "top_right": {
                                                      "x": 372,
                                                      "y": 691
                                                },
                                                "bottom_right": {
                                                      "x": 372,
                                                      "y": 705
                                                },
                                                "bottom_left": {
                                                      "x": 357,
                                                      "y": 706
                                                },
                                                "width": 15,
                                                "height": 14.5
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "TC# 0783 6080 4072 3416 2495 5",
                              "bounds": {
                                    "top_left": {
                                          "x": 192,
                                          "y": 703
                                    },
                                    "top_right": {
                                          "x": 438,
                                          "y": 705
                                    },
                                    "bottom_right": {
                                          "x": 438,
                                          "y": 723
                                    },
                                    "bottom_left": {
                                          "x": 192,
                                          "y": 720
                                    },
                                    "width": 246,
                                    "height": 17.5
                              },
                              "words": [
                                    {
                                          "text": "TC#",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 193,
                                                      "y": 704
                                                },
                                                "top_right": {
                                                      "x": 218,
                                                      "y": 704
                                                },
                                                "bottom_right": {
                                                      "x": 218,
                                                      "y": 720
                                                },
                                                "bottom_left": {
                                                      "x": 194,
                                                      "y": 720
                                                },
                                                "width": 24.5,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "0783",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 225,
                                                      "y": 704
                                                },
                                                "top_right": {
                                                      "x": 259,
                                                      "y": 704
                                                },
                                                "bottom_right": {
                                                      "x": 259,
                                                      "y": 720
                                                },
                                                "bottom_left": {
                                                      "x": 225,
                                                      "y": 720
                                                },
                                                "width": 34,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "6080",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 266,
                                                      "y": 704
                                                },
                                                "top_right": {
                                                      "x": 300,
                                                      "y": 704
                                                },
                                                "bottom_right": {
                                                      "x": 299,
                                                      "y": 721
                                                },
                                                "bottom_left": {
                                                      "x": 266,
                                                      "y": 721
                                                },
                                                "width": 33.5,
                                                "height": 17
                                          }
                                    },
                                    {
                                          "text": "4072",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 307,
                                                      "y": 705
                                                },
                                                "top_right": {
                                                      "x": 341,
                                                      "y": 705
                                                },
                                                "bottom_right": {
                                                      "x": 340,
                                                      "y": 721
                                                },
                                                "bottom_left": {
                                                      "x": 307,
                                                      "y": 721
                                                },
                                                "width": 33.5,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "3416",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 348,
                                                      "y": 705
                                                },
                                                "top_right": {
                                                      "x": 380,
                                                      "y": 705
                                                },
                                                "bottom_right": {
                                                      "x": 379,
                                                      "y": 722
                                                },
                                                "bottom_left": {
                                                      "x": 347,
                                                      "y": 721
                                                },
                                                "width": 32,
                                                "height": 16.5
                                          }
                                    },
                                    {
                                          "text": "2495",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 389,
                                                      "y": 706
                                                },
                                                "top_right": {
                                                      "x": 420,
                                                      "y": 706
                                                },
                                                "bottom_right": {
                                                      "x": 419,
                                                      "y": 723
                                                },
                                                "bottom_left": {
                                                      "x": 388,
                                                      "y": 722
                                                },
                                                "width": 31,
                                                "height": 16.5
                                          }
                                    },
                                    {
                                          "text": "5",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 428,
                                                      "y": 706
                                                },
                                                "top_right": {
                                                      "x": 437,
                                                      "y": 706
                                                },
                                                "bottom_right": {
                                                      "x": 435,
                                                      "y": 723
                                                },
                                                "bottom_left": {
                                                      "x": 427,
                                                      "y": 723
                                                },
                                                "width": 8.5,
                                                "height": 17
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "04/27/19 12:59:46",
                              "bounds": {
                                    "top_left": {
                                          "x": 223,
                                          "y": 762
                                    },
                                    "top_right": {
                                          "x": 291,
                                          "y": 762
                                    },
                                    "bottom_right": {
                                          "x": 291,
                                          "y": 779
                                    },
                                    "bottom_left": {
                                          "x": 223,
                                          "y": 779
                                    },
                                    "width": 68,
                                    "height": 17
                              },
                              "words": [
                                    {
                                          "text": "04/27/19",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 223,
                                                      "y": 763
                                                },
                                                "top_right": {
                                                      "x": 290,
                                                      "y": 764
                                                },
                                                "bottom_right": {
                                                      "x": 289,
                                                      "y": 779
                                                },
                                                "bottom_left": {
                                                      "x": 223,
                                                      "y": 780
                                                },
                                                "width": 66.5,
                                                "height": 16
                                          }
                                    }
                              ]
                        },
                        {
                              "text": "Scan with Walmart app to save receipts",
                              "bounds": {
                                    "top_left": {
                                          "x": 154,
                                          "y": 779
                                    },
                                    "top_right": {
                                          "x": 469,
                                          "y": 782
                                    },
                                    "bottom_right": {
                                          "x": 469,
                                          "y": 801
                                    },
                                    "bottom_left": {
                                          "x": 154,
                                          "y": 796
                                    },
                                    "width": 315,
                                    "height": 18
                              },
                              "words": [
                                    {
                                          "text": "Scan",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 155,
                                                      "y": 780
                                                },
                                                "top_right": {
                                                      "x": 188,
                                                      "y": 779
                                                },
                                                "bottom_right": {
                                                      "x": 188,
                                                      "y": 797
                                                },
                                                "bottom_left": {
                                                      "x": 155,
                                                      "y": 797
                                                },
                                                "width": 33,
                                                "height": 17.5
                                          }
                                    },
                                    {
                                          "text": "with",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 196,
                                                      "y": 779
                                                },
                                                "top_right": {
                                                      "x": 230,
                                                      "y": 779
                                                },
                                                "bottom_right": {
                                                      "x": 230,
                                                      "y": 796
                                                },
                                                "bottom_left": {
                                                      "x": 196,
                                                      "y": 796
                                                },
                                                "width": 34,
                                                "height": 17
                                          }
                                    },
                                    {
                                          "text": "Walmart",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 238,
                                                      "y": 779
                                                },
                                                "top_right": {
                                                      "x": 298,
                                                      "y": 780
                                                },
                                                "bottom_right": {
                                                      "x": 298,
                                                      "y": 796
                                                },
                                                "bottom_left": {
                                                      "x": 237,
                                                      "y": 796
                                                },
                                                "width": 60.5,
                                                "height": 16.5
                                          }
                                    },
                                    {
                                          "text": "app",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 305,
                                                      "y": 780
                                                },
                                                "top_right": {
                                                      "x": 329,
                                                      "y": 780
                                                },
                                                "bottom_right": {
                                                      "x": 329,
                                                      "y": 797
                                                },
                                                "bottom_left": {
                                                      "x": 305,
                                                      "y": 796
                                                },
                                                "width": 24,
                                                "height": 16.5
                                          }
                                    },
                                    {
                                          "text": "to",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 338,
                                                      "y": 781
                                                },
                                                "top_right": {
                                                      "x": 354,
                                                      "y": 781
                                                },
                                                "bottom_right": {
                                                      "x": 353,
                                                      "y": 797
                                                },
                                                "bottom_left": {
                                                      "x": 338,
                                                      "y": 797
                                                },
                                                "width": 15.5,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "save",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 363,
                                                      "y": 781
                                                },
                                                "top_right": {
                                                      "x": 394,
                                                      "y": 782
                                                },
                                                "bottom_right": {
                                                      "x": 394,
                                                      "y": 798
                                                },
                                                "bottom_left": {
                                                      "x": 362,
                                                      "y": 797
                                                },
                                                "width": 31.5,
                                                "height": 16
                                          }
                                    },
                                    {
                                          "text": "receipts",
                                          "bounds": {
                                                "top_left": {
                                                      "x": 402,
                                                      "y": 783
                                                },
                                                "top_right": {
                                                      "x": 469,
                                                      "y": 786
                                                },
                                                "bottom_right": {
                                                      "x": 469,
                                                      "y": 801
                                                },
                                                "bottom_left": {
                                                      "x": 402,
                                                      "y": 798
                                                },
                                                "width": 67,
                                                "height": 15
                                          }
                                    }
                              ]
                        }
                  ]
            }
      ],
      "_usage": {
            "input_tokens": 33,
            "output_tokens": 11334,
            "inference_time_tokens": 3619,
            "total_tokens": 14986
      }
}
    ```
    </ResponseExample>
    
    